/*
 * File: app/view/vendors/ListContainer.js
 *
 * This file was generated by Sencha Architect version 3.0.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.3.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.3.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('RMdatalink.view.vendors.ListContainer', {
    extend: 'Ext.Panel',
    alias: 'widget.vendorslistcontainer',

    requires: [
        'RMdatalink.view.common.searchView',
        'Ext.Panel',
        'Ext.XTemplate',
        'Ext.dataview.List',
        'Ext.dataview.DataView'
    ],

    config: {
        layout: 'vbox',
        scrollable: false,
        items: [
            {
                xtype: 'panel',
                height: '32px',
                style: 'margin-top:5px;',
                layout: 'fit',
                scrollable: false,
                items: [
                    {
                        xtype: 'searchView',
                        itemId: 'vendorSeachViewItemID'
                    }
                ]
            },
            {
                xtype: 'panel',
                flex: 15,
                layout: 'hbox',
                scrollable: false,
                items: [
                    {
                        xtype: 'panel',
                        width: '99%',
                        layout: 'vbox',
                        scrollable: false,
                        items: [
                            {
                                xtype: 'dataview',
                                actionSorting: 'sortingStore',
                                flex: 1,
                                cls: 'x-rm-list-header',
                                itemId: 'vendorListHeader',
                                scrollable: false,
                                itemTpl: [
                                    '<div>Data View Item {string}</div>'
                                ]
                            },
                            {
                                xtype: 'list',
                                action: 'setScrollBarVisible',
                                flex: 15,
                                cls: 'x-rm-list',
                                itemId: 'vendorList',
                                mode: 'MULTI',
                                itemTpl: [
                                    '<div>List Item {string}</div>'
                                ],
                                itemHeight: 32
                            }
                        ]
                    },
                    {
                        xtype: 'panel',
                        flex: 1
                    }
                ]
            },
            {
                xtype: 'panel',
                flex: 1,
                layout: 'fit',
                items: [
                    {
                        xtype: 'dataview',
                        cls: 'x-rm-list-totals',
                        itemId: 'vendorTotalsList',
                        width: '90%',
                        scrollable: false
                    }
                ]
            }
        ],
        listeners: [
            {
                fn: 'onVendorListRefresh',
                event: 'refresh',
                delegate: '#vendorList'
            },
            {
                fn: 'onVendorListItemTap',
                event: 'itemtap',
                delegate: '#vendorList'
            }
        ]
    },

    onVendorListRefresh: function(dataview, eOpts) {
        var totalsList = dataview.parent.parent.parent.down('#vendorTotalsList');
        totalsList.refresh();

    },

    onVendorListItemTap: function(dataview, index, target, record, e, eOpts) {
        /*MOVE THIS HANDLER TO CONTROLLER*/

        var attrToSearch = RMdatalink.util.globalConfig.getListAttrForDelHandling();
        var targetEl = e.target;

        if( RMdatalink.util.globalConfig.isAttributePresentInTarget( attrToSearch,targetEl )  ){

            var attrVak = targetEl.getAttribute(attrToSearch);
            var nameAttr = RMdatalink.util.globalConfig.getManager_LastNameDelegateClassForTap();
            var storeAttr = RMdatalink.util.globalConfig.getStore_nameDelegateClassForTap();
        //     var place = RMdatalink.util.globalConfig.getUrlForRetailerCard();

            var varibleToSet = setVariable();
            var vendorsMainContentPanel = Ext.ComponentQuery.query('#vendorsMainContentPanel')[0];

            switch (attrVak){

                case nameAttr:
        //                         RMdatalink.util.globalConfig.setDataToShowInSettingWindow(varibleToSet);

        //                         Ext.ComponentQuery.query('#retailerDetailsMainTabPanel')[0].setActiveItem('#RDManagerTab');
        //                         RMdatalink.app.getController('UINav').onPanelAddretailertapped(vendorsMainContentPanel);
        //                         Ext.ComponentQuery.query('#CmpContactTab')[0].setActiveItem(0);
        //                         break;

                case storeAttr:
                         setMask() ;
                         showRtDtl();
                    break;
                case "last_data_update":
                                RMdatalink.app.getController('VendorStatsController').showCalenderForDataupdated(target,record) ;

                    break;
                case "last_inventory_update":
                                RMdatalink.app.getController('VendorStatsController').showCalenderForInventoryupdated(target,record) ;


                    break;

                default:console.log('DONT FIRE ANY THING');
            }
        }


        function setVariable(){

            return {

                placeClicked:  attrVak,
                record:record,
                index:index
            };
        }

        function setMask(){
            Ext.Viewport.setMasked({
                            xtype: 'loadmask'
                        });
        }

        function showRtDtl(){

            Ext.Function.defer( gotoRtDtl, 100, this);
        }

        function gotoRtDtl(){

                                RMdatalink.util.globalConfig.setDataToShowInSettingWindow(varibleToSet);
                                Ext.ComponentQuery.query('#retailerDetailsMainTabPanel')[0].setActiveItem('#RDStoresTab');
                                RMdatalink.app.getController('UINav').onPanelAddretailertapped(vendorsMainContentPanel);
                                Ext.ComponentQuery.query('#CmpContactTab')[0].setActiveItem(0);

        }
    }

});