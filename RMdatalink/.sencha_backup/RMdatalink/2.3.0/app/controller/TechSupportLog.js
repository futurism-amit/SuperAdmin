/*
 * File: app/controller/TechSupportLog.js
 *
 * This file was generated by Sencha Architect version 3.0.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.3.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.3.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('RMdatalink.controller.TechSupportLog', {
    extend: 'Ext.app.Controller',

    config: {
        timeHr: 0,
        timeMin: 0,
        timeSec: 0,
        clock: 0,
        isTimerStarted: false,
        techSupportWindow: {
            
        },
        browseTechSupportBtnWindow: {
            
        },
        detailScreenTechLog: null,
        techLogRecordToUpdate: {
            
        },
        browseLatestScreenTechLog: null,
        currentSelectedRecord: null,
        requestFromSpecificCompany: false,

        control: {
            "button[itemId=endBtnTechSupport]": {
                tap: 'onButtonEndTechSupportTap'
            },
            "button[itemId=cancelBtnTechSupport]": {
                tap: 'onCancelTechSupportBtnTap'
            },
            "button[itemId=RMTechSupportLog]": {
                tap: 'onRMTechSupportLogButtonTap'
            },
            "button[itemId=saveTechSupportBtn]": {
                tap: 'onsaveTechSupportButtonTap'
            },
            "button[itemId=RDTechSupportAddBtn]": {
                tap: 'onRDTechSupportAddButtonTap'
            },
            "button[itemId=RDTechSupportSaveBtn]": {
                tap: 'onRDTechSupportSaveBtnTap'
            },
            "button[itemId=techSupportLatestLogsSaveBtn]": {
                tap: 'ontechSupportLatestLogsSaveBtnTap'
            },
            "button[itemId=discardTechSupportBtn]": {
                tap: 'ondiscardTechSupportBtnTap'
            }
        }
    },

    onButtonEndTechSupportTap: function(button, e, eOpts) {


        switch(button.getText()){

            case "End":
                  this.setIsTimerStarted(false);

                //  Ext.ComponentQuery.query('#RMTechSupportLog')[0].setText('Start Tech Support');

                  button.setText("Start");
                break;

            case "Start":

                  this.setIsTimerStarted(true);

                 // Ext.ComponentQuery.query('#RMTechSupportLog')[0].setText('Continue Tech Support');

                     button.setText("End");
                break;
        }



    },

    onCancelTechSupportBtnTap: function(button, e, eOpts) {
          this.setIsTimerStarted(false);

          this.resetTimer() ;

          this.setTimerFields() ;

         // Ext.ComponentQuery.query('#RMTechSupportLog')[0].setText('Start Tech Support');

            Ext.ComponentQuery.query('#endBtnTechSupport')[0].setText("Start");
    },

    onRMTechSupportLogButtonTap: function(button, e, eOpts) {

        switch(button.getText()){

            case "Start Tech Support":
                this.config.requestFromSpecificCompany = false ;

                RMdatalink.app.getController('TechSupportLog').config.tempCompanyId =  "";
                RMdatalink.app.getController('TechSupportLog').config.tempCompany_logo ="";
                        if(Ext.getCmp("techSupportTimerWindow"))
                        {

                            ///   Ext.getCmp("techSupportTimerWindow").destroy();

                        }else{

                            RMdatalink.app.getController('TechSupportLog').config.techSupportWindow = Ext.widget('techSupportTimerWindow');
                        }


                        var popup =  RMdatalink.app.getController('TechSupportLog').config.techSupportWindow ;
                        popup.showBy(button);

                        RMdatalink.app.getController('TechSupportLog').requestTimer() ;


                        Ext.ComponentQuery.query('#techSupportCompanyNameText')[0].setValue();



                button.setStyle('background-color:rgba(163, 30, 30, 0.91);');


                button.setText('Continue Tech Support');
                 Ext.ComponentQuery.query('#endBtnTechSupport')[0].setText("End");
                Ext.ComponentQuery.query('#techSupportCompanyNameText')[0].setDisabled(false);

                break;
            case "Continue Tech Support":

                // button.setText('Start Tech Support');
               // Ext.ComponentQuery.query('#RMTechSupportLog')[0].setStyle('background-color:transparent;');
                 var popup =  RMdatalink.app.getController('TechSupportLog').config.techSupportWindow ;
                 popup.showBy(button);

                break;
        }




    },

    onsaveTechSupportButtonTap: function(button, e, eOpts) {

        this.saveTechSupportLogs() ;


    },

    onRDTechSupportAddButtonTap: function(button, e, eOpts) {

        var globalTechButton =  Ext.ComponentQuery.query('#RMTechSupportLog')[0] ;


        switch(globalTechButton.getText()){

            case "Start Tech Support":

                            this.config.requestFromSpecificCompany = true ;



                            if(Ext.getCmp("techSupportTimerWindow"))
                            {

                             ///   Ext.getCmp("techSupportTimerWindow").destroy();

                            }else{

                               RMdatalink.app.getController('TechSupportLog').config.techSupportWindow = Ext.widget('techSupportTimerWindow');
                            }


                            var popup =  RMdatalink.app.getController('TechSupportLog').config.techSupportWindow ;
                            popup.showBy(button);

                             Ext.ComponentQuery.query('#RMTechSupportLog')[0].setStyle('background-color:rgba(163, 30, 30, 0.91);');
                             Ext.ComponentQuery.query('#RMTechSupportLog')[0].setText('Continue Tech Support') ;


                             Ext.ComponentQuery.query('#endBtnTechSupport')[0].setText("End");
                            RMdatalink.app.getController('TechSupportLog').requestTimer() ;


                            Ext.ComponentQuery.query('#techSupportCompanyNameText')[0].setValue(Ext.ComponentQuery.query('#RDStoreName')[0].getValue());

                            Ext.ComponentQuery.query('#techSupportCompanyNameText')[0].setDisabled(true);

                              // Ext.Msg.alert('Alert.', 'Development is in progress.', Ext.emptyFn);


                            var isRetailerDetailsView = RMdatalink.app.getController('UINav').isRetailerDetailsView;
                                var selectedUserRecord = RMdatalink.util.globalConfig.getDataToShowInSettingWindow() ;

                            console.log(selectedUserRecord) ;

                                if( !( Object.keys(selectedUserRecord).length  )   ){
                                    // USER CLICKED ON ADD NEW RETAILER BTN

                                    RMdatalink.app.getController('TechSupportLog').config.tempCompanyId =  "";
                                }
                                else{
                                    RMdatalink.app.getController('TechSupportLog').config.tempCompanyId =  "" ; // RMdatalink.app.getController('TechSupportLog').config.currentSelectedRecord.raw._id ;
                                }



                            console.log(   RMdatalink.app.getController('TechSupportLog').config.tempCompanyId) ;

                break ;
               case "Continue Tech Support":


              //  Ext.ComponentQuery.query('#RMTechSupportLog')[0].setStyle('background-color:transparent;');
                // button.setText('Start Tech Support');
                 var popup =  RMdatalink.app.getController('TechSupportLog').config.techSupportWindow ;


                if(!this.config.requestFromSpecificCompany){

                    popup.showBy(globalTechButton);
                    Ext.Msg.alert('Alert.', 'Technical Log is already running.', Ext.emptyFn);

                }else{

                    popup.showBy(button);
                }

                break;
        }
    },

    onRDTechSupportSaveBtnTap: function(button, e, eOpts) {





        Ext.ComponentQuery.query('#rtVdrResizableTLogProbFld')[0].setDisabled(true);

        Ext.ComponentQuery.query('#rtVdrResizableTLogSolnFld')[0].setDisabled(true);

        Ext.ComponentQuery.query('#RDTechSupportLogsStatusSelectFld')[0].setDisabled(true);

        var problem = Ext.ComponentQuery.query('#rtVdrResizableTLogProbFld')[0].getValue();

        var solution = Ext.ComponentQuery.query('#rtVdrResizableTLogSolnFld')[0].getValue();



        var status  = Ext.ComponentQuery.query('#RDTechSupportLogsStatusSelectFld')[0].getValue();

        var statusType = "";
        switch(status){
            case "1":
                statusType =  "Pending";
            break;
            case "2":
                statusType =  "In Progress";
            break;
            case "3":
                statusType =  "Completed";
            break;


        }
        /////////////////////////////////////////////////////
        /////////////////////////



        var globalTechLogStore  = Ext.getStore('TechSupportLogsStore') ;
        var techLogStore = Ext.getStore('CompanySpecificTechSupportStore');


        if (this.config.detailScreenTechLog ) {

            var updatedRecord =  this.config.detailScreenTechLog.data;



            updatedRecord.problem = problem;
            updatedRecord.solution = solution;
            updatedRecord.status = statusType;
            updatedRecord.status_id = status ;


            this.config.isStoreUpdated = true;

            this.config.detailScreenTechLog.set(updatedRecord);

            this.config.detailScreenTechLog.dirty = true;
            console.log(this.config.detailScreenTechLog)     ;
            this.config.techLogRecordToUpdate =  this.config.detailScreenTechLog;
            techLogStore.sync();


            Ext.Msg.alert('Success.', 'Record Updated Successfully.', Ext.emptyFn);
            this.config.detailScreenTechLog = null;

            var list = Ext.ComponentQuery.query('#RDCRMTab')[0].down('#mainList');

            list.deselectAll();

        }
        /////////////////////////////////////////////////////
        ////////////////////////////


        Ext.ComponentQuery.query('#rtVdrResizableTLogProbFld')[0].setValue('');

        Ext.ComponentQuery.query('#rtVdrResizableTLogSolnFld')[0].setValue('');


        Ext.ComponentQuery.query('#RDTechSupportLogsStatusSelectFld')[0].setValue(null);








        /*
        var techLogStore  = Ext.getStore('TechSupportLogsStore') ;

            var tempTechStr = Ext.getStore('TempTechSupportLogStore') ;

        if(this.config.detailScreenTechLog){

            var updatedRecord = this.config.detailScreenTechLog.data ;

            var problem = Ext.ComponentQuery.query('#RDNotepadNoteProblem')[0].getValue();

            var solution = Ext.ComponentQuery.query('#RDNotepadNoteSolution')[0].getValue();

            updatedRecord.problem = problem ;
            updatedRecord.solution = solution ;

                    this.config.detailScreenTechLog.set(updatedRecord);
                    this.config.detailScreenTechLog.dirty= true;

            try{

               var techLogRecord =  techLogStore.findRecord('id',this.config.detailScreenTechLog.get('id'));


                console.log(techLogRecord) ;

                var TEST = techLogRecord.data ;
                    TEST.problem = problem ;
                    TEST.solution = solution ;


                this.config.isStoreUpdated = true ;
                techLogRecord.set(TEST);
                techLogRecord.dirty= true;

          //     techLogRecord.set('problem',problem);
             //  techLogRecord.set('solution',solution );

                console.log(techLogRecord) ;

                 this.config.techLogRecordToUpdate = techLogRecord ;
                techLogStore.sync();


           // RMdatalink.util.DataLoader.onRetailerMasterStoreUpdate(techLogStore,techLogRecord,'','','','','');

             Ext.Msg.alert('Success.', 'Record Updated Successfully.', Ext.emptyFn);



            this.config.detailScreenTechLog = null;
            Ext.ComponentQuery.query('#RDNotepadNoteProblem')[0].setValue('');

             Ext.ComponentQuery.query('#RDNotepadNoteSolution')[0].setValue('');

             var list = Ext.ComponentQuery.query('#RDCRMTab')[0].down('#mainList');

             list.deselectAll() ;

            Ext.ComponentQuery.query('#RDNotepadNoteProblem')[0].setDisabled(true);

        Ext.ComponentQuery.query('#RDNotepadNoteSolution')[0].setDisabled(true);

            }catch(ex){

                console.error(ex) ;
            }
        }

        */

    },

    ontechSupportLatestLogsSaveBtnTap: function(button, e, eOpts) {
        Ext.ComponentQuery.query('#browseLatLogResizableProbFld')[0].setDisabled(true);

        Ext.ComponentQuery.query('#browseLatLogResizableSolFld')[0].setDisabled(true);
        Ext.ComponentQuery.query('#borwseLatestLogStatusSelectFld')[0].setDisabled(true);

        var problem = Ext.ComponentQuery.query('#browseLatLogResizableProbFld')[0].getValue();

        var solution =Ext.ComponentQuery.query('#browseLatLogResizableSolFld')[0].getValue();


        var status  = Ext.ComponentQuery.query('#borwseLatestLogStatusSelectFld')[0].getValue();

        var statusType = "";
        switch(status){
            case "1":
                statusType =  "Pending";
            break;
            case "2":
                statusType =  "In Progress";
            break;
            case "3":
                statusType =  "Completed";
            break;


        }

        //////////////////////////////////////////////////////////////////////////////


            var techLogStore  = Ext.getStore('TechSupportLogsStore') ;


        if(this.config.browseLatestScreenTechLog){

            var updatedRecord = this.config.browseLatestScreenTechLog.data ;



            updatedRecord.problem = problem ;
            updatedRecord.solution = solution ;
            updatedRecord.status = statusType;
            updatedRecord.status_id = status ;

                      this.config.isStoreUpdated = true ;
                    this.config.browseLatestScreenTechLog.set(updatedRecord);
                    this.config.browseLatestScreenTechLog.dirty= true;
        console.log(   this.config.browseLatestScreenTechLog) ;
                    this.config.techLogRecordToUpdate =    this.config.browseLatestScreenTechLog ;
                    techLogStore.sync();


            Ext.Msg.alert('Success.', 'Record Updated Successfully.', Ext.emptyFn);
                this.config.browseLatestScreenTechLog = null;

                var list = Ext.ComponentQuery.query('#browseLatestLogTab')[0].down('#mainList');

                   list.deselectAll() ;

        }

        /////////////////////////////////////////////////////////////////////////////////


        Ext.ComponentQuery.query('#browseLatLogResizableSolFld')[0].setValue('');

        Ext.ComponentQuery.query('#browseLatLogResizableProbFld')[0].setValue('');

        Ext.ComponentQuery.query('#borwseLatestLogStatusSelectFld')[0].setValue(null);
    },

    ondiscardTechSupportBtnTap: function(button, e, eOpts) {
         this.endTimer() ;

         Ext.ComponentQuery.query('#RMTechSupportLog')[0].setText("Start Tech Support");
        Ext.ComponentQuery.query('#RMTechSupportLog')[0].setStyle('background-color:transparent;');
            var popup =  RMdatalink.app.getController('TechSupportLog').config.techSupportWindow ;
         popup.hide();
         //Ext.Msg.alert('Success.', 'Record Added Successfully.', Ext.emptyFn);



         // RMdatalink.app.getController('TechSupportLog').refreshTempTechLogs();


         Ext.ComponentQuery.query('#problemTechSupportTxtArea')[0].setValue("");

         Ext.ComponentQuery.query('#solutionTechSupportTxtArea')[0].setValue("");

    },

    startTimer: function() {


          //this.setIsTimerStarted(true);

          this.resetTimer() ;

         // this.setTimerFields() ;

          var _this= this;

          Ext.Function.defer(_this.onInterval, 1000, _this);


    },

    onInterval: function() {


        if( this.getIsTimerStarted()){
                    this.setClock(this.getClock() + 1);
                    var seconds = this.getClock() ;// 1000;
                    var minutes = Math.floor(seconds / 60);
                    var hours = Math.floor(minutes / 60);
                    seconds = Math.floor(seconds % 60);


                    this.setTimeHr(hours);
                    this.setTimeMin(minutes);
                    this.setTimeSec(seconds);

                    this.setTimerFields() ;

                    var _this = this ;

                    Ext.Function.defer(_this.onInterval, 1000, _this);
        }else{

                    var _this = this ;

                    Ext.Function.defer(_this.onInterval, 1000, _this);

        }
    },

    endTimer: function() {
         this.setIsTimerStarted(false);
    },

    cancelTimer: function() {
         this.setIsTimerStarted(false);
          this.resetTimer() ;

    },

    resetTimer: function() {
                this.setTimeHr(0);
                this.setTimeMin(0);
                this.setTimeSec(0);
                this.setClock(0);


    },

    setTimerFields: function() {




        Ext.ComponentQuery.query('#hrTechSupportfield')[0].setValue( this.getTimeHr()) ;
        Ext.ComponentQuery.query('#minTechSupportfield')[0].setValue(this.getTimeMin()) ;
        Ext.ComponentQuery.query('#secTechSupportfield')[0].setValue(this.getTimeSec()) ;



    },

    requestTimer: function() {


          this.setIsTimerStarted(true);

          this.resetTimer() ;

          this.setTimerFields() ;

          var today = js_yyyy_mm_dd_hh_mm_ss();

          Ext.ComponentQuery.query('#timeStartTechSupportTxtFld')[0].setValue(today) ;




        function js_yyyy_mm_dd_hh_mm_ss () {
          now = new Date();
          year = "" + now.getFullYear();
          month = "" + (now.getMonth() + 1); if (month.length == 1) { month = "0" + month; }
          day = "" + now.getDate(); if (day.length == 1) { day = "0" + day; }
          hour = "" + now.getHours(); if (hour.length == 1) { hour = "0" + hour; }
          minute = "" + now.getMinutes(); if (minute.length == 1) { minute = "0" + minute; }
          second = "" + now.getSeconds(); if (second.length == 1) { second = "0" + second; }
          return  month + "-" + day + "-" + year + " " + hour + ":" + minute + ":" + second;
        }


    },

    saveTechSupportLogs: function() {

        this.endTimer() ;
        var _this = this ;
        /*if(this.config.requestFromSpecificCompany){
            var TechSupportLogsStore = Ext.getStore('CompanySpecificTechSupportStore');

        }else
        {
            var TechSupportLogsStore = Ext.getStore('TechSupportLogsStore');
        }
        */
        var TechSupportLogsStore = Ext.getStore('TechSupportLogsStore');

        var product_name ="";
        var product_id ="" ;

        getProductInfo() ;


        function getProductInfo(){

            if(Ext.ComponentQuery.query('#datalinkProductTechSupportRadioFld')[0].getChecked()){

                  product_name = "Datalink" ;
                  product_id  = "1" ;
                  return ;

            }
            if(Ext.ComponentQuery.query('#ecatalogProductTechSupportRadioFld')[0].getChecked()){

                  product_name = "ECatalog" ;
                  product_id  = "2" ;
                  return ;

            }
            if(Ext.ComponentQuery.query('#smartCartProductTechSupportRadioFld')[0].getChecked()){

                  product_name = "SMART Cart" ;
                  product_id  = "3" ;
                  return ;

            }
            if(Ext.ComponentQuery.query('#rmplcProductTechSupportRadioFld')[0].getChecked()){

                  product_name = "RM PLC" ;
                  product_id  = "4" ;
                  return ;

            }
            if(Ext.ComponentQuery.query('#naProductTechSupportRadioFld')[0].getChecked()){

                  product_name = "NA" ;
                  product_id  = "5" ;
                  return ;

            }
        }

        var crmUser = RMdatalink.app.getController('LoginHandler').config.userDetails.userName ;
        var data = {
                        "company": Ext.ComponentQuery.query('#techSupportCompanyNameText')[0].getValue(),
                        "company_id":RMdatalink.app.getController('TechSupportLog').config.tempCompanyId ,
                        "company_logo":RMdatalink.app.getController('TechSupportLog').config.tempCompany_logo ,
                        "vendor_id":"",
                        "crm_user": crmUser ,
                        "crm_user_id":"",
                        "time_start": Ext.ComponentQuery.query('#timeStartTechSupportTxtFld')[0].getValue(),
                        "total_time":{
                            "hours":Ext.ComponentQuery.query('#hrTechSupportfield')[0].getValue(),
                            "minutes":Ext.ComponentQuery.query('#minTechSupportfield')[0].getValue(),
                            "seconds":Ext.ComponentQuery.query('#secTechSupportfield')[0].getValue()
                        },
                        "product_name":product_name,
                        "product_id":product_id,
                        "problem":Ext.ComponentQuery.query('#problemTechSupportTxtArea')[0].getValue(),
                        "solution":Ext.ComponentQuery.query('#solutionTechSupportTxtArea')[0].getValue(),
                        "status":"Pending",
                        "status_id":"1"
                    } ;


        //TechSupportLogsStore.add(data) ;
        //TechSupportLogsStore.sync() ;


        function successCallBack(){
            console.log(arguments);

             var isVdr = Ext.ComponentQuery.query('#searchForVendorRadioFld')[0].isChecked() ;
            RMdatalink.app.getController('RecentActivityController').onTechSupportLog(data.time_start , data.company ,data.problem ,isVdr ? "vendor":"retailer");



        if(_this.config.requestFromSpecificCompany){

            RMdatalink.app.getController('TechSupportLog').loadVendorRetailerSpecificStore(data.company,"NotDefined" );


        }else
        {

            RMdatalink.app.getController('PaginationController').setCurrentActiveStoreId('TechSupportLogsStore') ;
            RMdatalink.app.getController('PaginationController').loadStore(1,RMdatalink.util.DataLoader.getPageSize(),false);


        }







        Ext.ComponentQuery.query('#RMTechSupportLog')[0].setStyle('background-color:transparent;');
         Ext.ComponentQuery.query('#RMTechSupportLog')[0].setText("Start Tech Support");

            var popup =  RMdatalink.app.getController('TechSupportLog').config.techSupportWindow ;
         popup.hide();
         //Ext.Msg.alert('Success.', 'Record Added Successfully.', Ext.emptyFn);



         // RMdatalink.app.getController('TechSupportLog').refreshTempTechLogs();


         Ext.ComponentQuery.query('#problemTechSupportTxtArea')[0].setValue("");

         Ext.ComponentQuery.query('#solutionTechSupportTxtArea')[0].setValue("");


        }


        function errorCallBack(){
            Ext.Msg.alert('Error.', 'Error In Adding TechSupportLog.', Ext.emptyFn);
              Ext.Viewport.setMasked(false);
            console.log(arguments);
        }
         console.log(data);
         RMdatalink.util.DataLoader.sendNewRecordForRetailerToServer(data,TechSupportLogsStore,successCallBack,errorCallBack) ;

          Ext.Viewport.setMasked({
                            xtype: 'loadmask'
                        });








    },

    refreshTempTechLogs: function() {

            var isRetailerDetailsView = RMdatalink.app.getController('UINav').isRetailerDetailsView;
            var selectedUserRecord = RMdatalink.util.globalConfig.getDataToShowInSettingWindow() ;


            if( !( Object.keys(selectedUserRecord).length  )   ){
                // USER CLICKED ON ADD NEW RETAILER BTN

                   var id = "ZQA123456XXXXXXQQQQQ";
            }
            else{
             //   var id = selectedUserRecord.record.data._id ;

                var id =   RMdatalink.app.getController('TechSupportLog').config.currentSelectedRecord.raw._id ;
            }


        console.log(id);

        var TechSupportLogsStore = Ext.getStore('TechSupportLogsStore');

        TechSupportLogsStore.clearFilter();

        TechSupportLogsStore.filter(function(record){
           console.log(record.data.company_id);
            if(record.data.company_id == id){
                return true ;
            }else{
                return false ;
            }
        });
        /*
        try{
        var TechSupportLogsStore = Ext.getStore('TechSupportLogsStore') ;

        var TempTechSupportLogStore = Ext.getStore("TempTechSupportLogStore");


            var isRetailerDetailsView = RMdatalink.app.getController('UINav').isRetailerDetailsView;
            var selectedUserRecord = RMdatalink.util.globalConfig.getDataToShowInSettingWindow() ;


            if( !( Object.keys(selectedUserRecord).length  )   ){
                // USER CLICKED ON ADD NEW RETAILER BTN

                   var id = "ZQA123456XXXXXXQQQQQ";
            }
            else{
             //   var id = selectedUserRecord.record.data._id ;

                var id = selectedUserRecord.record.data.vendor_name ;
            }

         var logs = getArrayData(TechSupportLogsStore);

         var data = new Array();
        for(var i=0;i <logs.length; i++){

          if(logs[i].company_id == id ){
         //if(logs[i].company == id ){
                data.push(logs[i]) ;

            }
        }


        TempTechSupportLogStore.removeAll();
        TempTechSupportLogStore.sync();


        TempTechSupportLogStore.setData(data);
        TempTechSupportLogStore.sync() ;


        function getArrayData(store){
                var data = new Array();
                data = store.getData().items;

                var dataToReturn = new Array();

                for(var i=0; i < data.length ; i++){

                    dataToReturn.push(data[i].raw);
                }

                return dataToReturn ;
        }

        }  catch(ex){

                console.error(ex);
            }

            */
    },

    onTechSupportLogSelect: function(args) {
        console.log(args);

        var record = args[1] ;


        this.config.detailScreenTechLog = record ;

        Ext.ComponentQuery.query('#rtVdrResizableTLogProbFld')[0].setDisabled(false);

        Ext.ComponentQuery.query('#rtVdrResizableTLogSolnFld')[0].setDisabled(false);



        Ext.ComponentQuery.query('#RDTechSupportLogsStatusSelectFld')[0].setDisabled(false);
        if(record.data.status_id){
            Ext.ComponentQuery.query('#RDTechSupportLogsStatusSelectFld')[0].setValue(record.data.status_id);
        }else{
               Ext.ComponentQuery.query('#RDTechSupportLogsStatusSelectFld')[0].setValue(null);
        }


        Ext.ComponentQuery.query('#rtVdrResizableTLogProbFld')[0].setValue(record.data.problem);

        Ext.ComponentQuery.query('#rtVdrResizableTLogSolnFld')[0].setValue(record.data.solution);
    },

    latestLogListSelect: function(args) {
        console.log(args);

        var record = args[1] ;


        this.config.browseLatestScreenTechLog = record ;




        Ext.ComponentQuery.query('#browseLatLogResizableProbFld')[0].setDisabled(false);

        Ext.ComponentQuery.query('#browseLatLogResizableSolFld')[0].setDisabled(false);

        Ext.ComponentQuery.query('#borwseLatestLogStatusSelectFld')[0].setDisabled(false);
        if(record.data.status_id){
            Ext.ComponentQuery.query('#borwseLatestLogStatusSelectFld')[0].setValue(record.data.status_id);
        }else{
               Ext.ComponentQuery.query('#borwseLatestLogStatusSelectFld')[0].setValue(null);
        }
        Ext.ComponentQuery.query('#browseLatLogResizableProbFld')[0].setValue(record.data.problem);

        Ext.ComponentQuery.query('#browseLatLogResizableSolFld')[0].setValue(record.data.solution);


    },

    loadVendorRetailerSpecificStore: function(company_name, company_id) {



        var companySpecStore = Ext.getStore('CompanySpecificTechSupportStore');

        var paramTopass = {
            collection : dbEnv + "rdl_tech_support_logs",
            pageNo:1,
            pageSize:100,
            sortBy:{},
            query:{company : company_name },
            fields:{}

        };

         RMdatalink.iwa.rdl.queryDB(paramTopass,success,error) ;

        function success(response){
         Ext.Viewport.setMasked(false);
            console.log(response);

            var data = response.items;
            companySpecStore.removeAll() ;
            companySpecStore.sync() ;

            companySpecStore.setData(data) ;
            companySpecStore.sync() ;

        }

        function error(response ){

            console.error(response);
        }



    }

});