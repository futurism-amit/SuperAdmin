/*
 * File: app/controller/discount/DiscountTabHandler.js
 *
 * This file was generated by Sencha Architect version 3.0.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.3.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.3.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('RMdatalink.controller.discount.DiscountTabHandler', {
    extend: 'Ext.app.Controller',

    config: {
        isAddingNewDiscount: true,
        selectedProduct: {
            
        },
        divisionSelection: 1,

        control: {
            "button[itemId=discountCreateNewClear]": {
                tap: 'onButtonCreateNewDiscountTap'
            },
            "button[itemId=discountCreateNewUpdateBtn]": {
                tap: 'onAddUpdateDiscountButtonTap'
            },
            "button[itemId= discountCreateNewDCancelBtn]": {
                tap: 'onCancelNewDiscountButtonTap'
            },
            "textfield[actionChange=textChange]": {
                keyup: 'onTextfieldDiscountCreateNewChange'
            }
        }
    },

    onButtonCreateNewDiscountTap: function(button, e, eOpts) {
        this.setIsAddingNewDiscount(true);
        this.clearAddNewDiscountForm();

    },

    onAddUpdateDiscountButtonTap: function(button, e, eOpts) {
        this.addUpdateDiscount();
    },

    onCancelNewDiscountButtonTap: function(button, e, eOpts) {
        this.setIsAddingNewDiscount(true);
        this.clearAddNewDiscountForm();
    },

    onTextfieldDiscountCreateNewChange: function(textfield, e, eOpts) {
        // var value = textfield.getValue();
        // var len = value.length;
        // var charCode = (e.event.keyCode);
        // // console.log(textfield);
        // // console.log(textfield.getComponent().getStartValue());



        // // *****  SET ONLY NUMERIC VALUE IN TEXT FIELD  ******  charCode !== 8 BACKSPACE
        // if ( ! ((charCode > 47 && charCode < 58) || (charCode > 95 && charCode < 106)) && charCode !== 8  )
        // {
        //     textfield.setValue(textfield.getComponent().getStartValue());

        // }
        // if(charCode === 8)
        // {
        //     textfield.setValue(value);
        //     textfield.getComponent().setStartValue(value);
        // }








    },

    onDiscountListSelect: function(record, parent) {
        this.removeRDformErrorPanelCls();

        this.setIsAddingNewDiscount(false);
        this.setSelectedProduct(parent);

        console.log(record);
        console.log(parent.getItemId());



        function setValue(itemId,value){

           Ext.ComponentQuery.query('#'+itemId)[0].setValue(value) ;
        }





         setValue('discountCreateNewDCodeTextField', record.data.code );
         setValue('discountCreateNewDCountTextField', record.data.used);
         setValue('discountCreateNewDStartDateTextField', record.data.startDate);
         setValue('discountCreateNewDEndDateTextField', record.data.endDate);

         setValue('discountCreateNewDinDollorsTextField', record.data.extraConditions.usdTakenOffPerMonth);
         setValue('discountCreateNewDinPercentTextField', record.data.extraConditions.percentDiscountTakenOffPerMonth);


          setValue('discountCreateNewDValidMonthsTextField', record.data.subscriptionValidity.months) ;
          setValue('discountCreateNewDValidDaysTextField', record.data.subscriptionValidity.days);



    },

    addUpdateDiscount: function() {

        if(! this.validateCreateNewDiscount() ){
            console.log("VALIDATION FAILED");
            return ;
        }




        if(this.getIsAddingNewDiscount()){
            var discountsTabPanel = Ext.ComponentQuery.query('#discountsTabPanel')[0];
            this.setSelectedProduct(discountsTabPanel.getActiveItem());
        }

        var discountsMasterStore = Ext.getStore('discountsMasterStore');
        var list = this.getSelectedProduct().down('#discountList');;

        var store = list.getStore();



        var curentSelectedProduct = "datalink";

        switch(this.getSelectedProduct().getItemId()){
            case "discountsDataLinkTab":
                curentSelectedProduct = "datalink";

                break;
            case "discountsEcatlogTab":
                curentSelectedProduct = "ecatalog";
                break;
            case "discountsSmartCartTab":
                curentSelectedProduct = "smartcart";
                break;
            case "discountsRMPLCTab":
                curentSelectedProduct = "rmplc";
                break;
            case "discountsIrugzTab":
                curentSelectedProduct = "irugz";
                break;

        }



        function getValue(itemId){

            return Ext.ComponentQuery.query('#'+itemId)[0].getValue() ;
        }


        var code = getValue('discountCreateNewDCodeTextField');
        var used = getValue('discountCreateNewDCountTextField');
        var startDate = getValue('discountCreateNewDStartDateTextField');
        var endDate = getValue('discountCreateNewDEndDateTextField');
        var extraConditions = {
            "usdTakenOffPerMonth":  getValue('discountCreateNewDinDollorsTextField') ,
            "percentDiscountTakenOffPerMonth": getValue('discountCreateNewDinPercentTextField')

        };

        var subscriptionValidity ={
            "months":  getValue('discountCreateNewDValidMonthsTextField') ,
            "days": getValue('discountCreateNewDValidDaysTextField')

        };





        if(this.getIsAddingNewDiscount()){



            var newRecord = {
                "code":code,
                "status":"Active",
                "used":used,
                "startDate":startDate,
                "endDate":endDate,
                "comment":"Add Comment Here",
                "subscriptionValidity":subscriptionValidity,
                "extraConditions":extraConditions,
                "id": 100
            };
            if(store)
            {
                store.add(newRecord);
                store.sync();
            }else{

                list.setData([newRecord]);
                store = list.getStore();
            }


        }else{


            var record = list.getSelection()[0] ;

            record.set('code',code);
            record.set('used',used);
            record.set('startDate',startDate);
            record.set('endDate',endDate);
            record.set('extraConditions',extraConditions);
            record.set('subscriptionValidity',subscriptionValidity);

            store.sync();

        }





        var discountRecord = discountsMasterStore.findRecord(curentSelectedProduct,{});
        var records = [] ;
        for(var i=0; i < store.getData().all.length; i++){
            records.push(store.getData().all[i].data);
        }
        discountRecord.set(curentSelectedProduct,records);

        this.clearAddNewDiscountForm();


        if(this.getIsAddingNewDiscount()){

            Ext.Msg.alert('Success.', 'Create New Record Successfully.', Ext.emptyFn);
        }
        else
        {
            list.deselect(record,true);
            Ext.Msg.alert('Success.', 'Update Record Successfully.', Ext.emptyFn);
        }


        this.setIsAddingNewDiscount(true);







    },

    clearAddNewDiscountForm: function() {
        this.removeRDformErrorPanelCls();

        setValue('discountCreateNewDCodeTextField', '' );
        setValue('discountCreateNewDCountTextField', '');
        setValue('discountCreateNewDStartDateTextField','');
        setValue('discountCreateNewDEndDateTextField', '');

        setValue('discountCreateNewDinDollorsTextField','');
        setValue('discountCreateNewDinPercentTextField', '');


        setValue('discountCreateNewDValidMonthsTextField', '') ;
        setValue('discountCreateNewDValidDaysTextField', '');


        function setValue(itemId,value){

            Ext.ComponentQuery.query('#'+itemId)[0].setValue(value) ;
        }




    },

    validateCreateNewDiscount: function() {
        this.removeRDformErrorPanelCls();

        var validationResult = true ;

            if(Ext.ComponentQuery.query('#discountCreateNewDCodeTextField')[0].getValue() === null || Ext.ComponentQuery.query('#discountCreateNewDCodeTextField')[0].getValue() === ''){
                Ext.ComponentQuery.query('#discountCreateNewDCodeTextField')[0].replaceCls( 'x-rm-rdformpanel' , 'x-rm-rdformErrorPanel');
                validationResult = false ;
            }


            if(Ext.ComponentQuery.query('#discountCreateNewDCountTextField')[0].getValue() === null || Ext.ComponentQuery.query('#discountCreateNewDCountTextField')[0].getValue() === ''){
                Ext.ComponentQuery.query('#discountCreateNewDCountTextField')[0].replaceCls( 'x-rm-rdformpanel' , 'x-rm-rdformErrorPanel');
                validationResult = false ;
            }

            if(Ext.ComponentQuery.query('#discountCreateNewDStartDateTextField')[0].getValue() === null || Ext.ComponentQuery.query('#discountCreateNewDStartDateTextField')[0].getValue() === ''){
                Ext.ComponentQuery.query('#discountCreateNewDStartDateTextField')[0].replaceCls( 'x-rm-rdformpanel' , 'x-rm-rdformErrorPanel');
                validationResult = false ;
            }

            if(Ext.ComponentQuery.query('#discountCreateNewDEndDateTextField')[0].getValue() === null || Ext.ComponentQuery.query('#discountCreateNewDEndDateTextField')[0].getValue() === ''){
               Ext.ComponentQuery.query('#discountCreateNewDEndDateTextField')[0].replaceCls( 'x-rm-rdformpanel' , 'x-rm-rdformErrorPanel');
                validationResult = false ;
            }

            if( !Ext.ComponentQuery.query('#discountCreateNewDinDollorsTextField')[0].isDisabled() && ( Ext.ComponentQuery.query('#discountCreateNewDinDollorsTextField')[0].getValue() === null || Ext.ComponentQuery.query('#discountCreateNewDinDollorsTextField')[0].getValue() === '')){
             Ext.ComponentQuery.query('#discountCreateNewDinDollorsTextField')[0].replaceCls( 'x-rm-rdformpanel' , 'x-rm-rdformErrorPanel');
                validationResult = false ;
            }


            if( !Ext.ComponentQuery.query('#discountCreateNewDinPercentTextField')[0].isDisabled() && ( Ext.ComponentQuery.query('#discountCreateNewDinPercentTextField')[0].getValue() === null || Ext.ComponentQuery.query('#discountCreateNewDinPercentTextField')[0].getValue() === '')){
                Ext.ComponentQuery.query('#discountCreateNewDinPercentTextField')[0].replaceCls( 'x-rm-rdformpanel' , 'x-rm-rdformErrorPanel');
                validationResult = false ;
            }


            if(Ext.ComponentQuery.query('#discountCreateNewDValidMonthsTextField')[0].getValue() === null || Ext.ComponentQuery.query('#discountCreateNewDValidMonthsTextField')[0].getValue() === ''){
               Ext.ComponentQuery.query('#discountCreateNewDValidMonthsTextField')[0].replaceCls( 'x-rm-rdformpanel' , 'x-rm-rdformErrorPanel');
                validationResult = false ;
            }

            if(Ext.ComponentQuery.query('#discountCreateNewDValidDaysTextField')[0].getValue() === null || Ext.ComponentQuery.query('#discountCreateNewDValidDaysTextField')[0].getValue() === ''){
               Ext.ComponentQuery.query('#discountCreateNewDValidDaysTextField')[0].replaceCls( 'x-rm-rdformpanel' , 'x-rm-rdformErrorPanel');
                validationResult = false ;
            }

            return validationResult ;


    },

    onRadioBtnSelectionEnabledisable: function(radioButton) {
        var id = radioButton.getAttribute('id') ;

        switch(id) {

            case 'usd':

                Ext.ComponentQuery.query("#discountCreateNewDinDollorsTextField")[0].setDisabled(false);
                Ext.ComponentQuery.query("#discountCreateNewDinPercentTextField")[0].setDisabled(true);
                Ext.ComponentQuery.query("#discountCreateNewDinPercentTextField")[0].reset();

                break;

            case 'discount':

                Ext.ComponentQuery.query("#discountCreateNewDinPercentTextField")[0].setDisabled(false);
                Ext.ComponentQuery.query("#discountCreateNewDinDollorsTextField")[0].setDisabled(true);
                Ext.ComponentQuery.query("#discountCreateNewDinDollorsTextField")[0].reset();

                break;

            case 'inHouse':

              this.setDivisionSelection(1);

                break;

            case 'outSide':

             this.setDivisionSelection(2);

                break;

        }

    },

    removeRDformErrorPanelCls: function() {
        Ext.ComponentQuery.query('#discountCreateNewDCodeTextField')[0].removeCls( 'x-rm-rdformErrorPanel' );
        Ext.ComponentQuery.query('#discountCreateNewDCountTextField')[0].removeCls( 'x-rm-rdformErrorPanel');

        Ext.ComponentQuery.query('#discountCreateNewDStartDateTextField')[0].removeCls( 'x-rm-rdformErrorPanel');
        Ext.ComponentQuery.query('#discountCreateNewDEndDateTextField')[0].removeCls( 'x-rm-rdformErrorPanel' );
        Ext.ComponentQuery.query('#discountCreateNewDinDollorsTextField')[0].removeCls( 'x-rm-rdformErrorPanel' );
        Ext.ComponentQuery.query('#discountCreateNewDinPercentTextField')[0].removeCls( 'x-rm-rdformErrorPanel' );

        Ext.ComponentQuery.query('#discountCreateNewDValidMonthsTextField')[0].removeCls( 'x-rm-rdformErrorPanel' );
        Ext.ComponentQuery.query('#discountCreateNewDValidDaysTextField')[0].removeCls( 'x-rm-rdformErrorPanel' );



        Ext.ComponentQuery.query('#discountCreateNewDCodeTextField')[0].addCls(  'x-rm-rdformpanel');
        Ext.ComponentQuery.query('#discountCreateNewDCountTextField')[0].addCls( 'x-rm-rdformpanel');

        Ext.ComponentQuery.query('#discountCreateNewDStartDateTextField')[0].addCls(  'x-rm-rdformpanel');
        Ext.ComponentQuery.query('#discountCreateNewDEndDateTextField')[0].addCls(  'x-rm-rdformpanel');
        Ext.ComponentQuery.query('#discountCreateNewDinDollorsTextField')[0].addCls(  'x-rm-rdformpanel');
        Ext.ComponentQuery.query('#discountCreateNewDinPercentTextField')[0].addCls(  'x-rm-rdformpanel');

        Ext.ComponentQuery.query('#discountCreateNewDValidMonthsTextField')[0].addCls( 'x-rm-rdformpanel');
        Ext.ComponentQuery.query('#discountCreateNewDValidDaysTextField')[0].addCls('x-rm-rdformpanel');
    }

});