{
    "type": "Ext.app.Controller",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "designer|userClassName": "VendorStatsController",
        "vendorStats": [
            "null"
        ]
    },
    "configAlternates": {
        "vendorStats": "object"
    },
    "designerId": "597e6d0a-ef89-4613-95b7-211e785666a4",
    "customConfigs": [
        {
            "group": "(Custom Properties)",
            "name": "vendorStats",
            "type": "string"
        }
    ],
    "cn": [
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "loadVendorStats",
                "implHandler": [
                    "    var _this =this ;\r",
                    "    var vendorMasterStr = Ext.getStore('vendors.Master')  ;\r",
                    "\r",
                    "    for(var i=0; i < vendorMasterStr.getData().all.length ; i++){\r",
                    "\r",
                    "         var record =   vendorMasterStr.getAt(i);\r",
                    "\r",
                    "\r",
                    "                            if(record){\r",
                    "\r",
                    "                                //console.error(record) ;\r",
                    "                                  record.set('collections',\"\") ;\r",
                    "                                  record.set('SKU',\"\") ;\r",
                    "                                  record.set('design',\"\") ;\r",
                    "\r",
                    "                                    record.dirty= true;\r",
                    "\r",
                    "                            }\r",
                    "    }\r",
                    "\r",
                    "    RMdatalink.iwa.rdl.getVendorStats('', function(res)\r",
                    "                {\r",
                    "                     Ext.Viewport.setMasked(false);\r",
                    "                    console.log('result:');\r",
                    "                    console.log(res);\r",
                    "\r",
                    "                      _this.config.vendorStats = res ;\r",
                    "\r",
                    "\r",
                    "                       var vendorData = vendorMasterStr.getData().all ;\r",
                    "\r",
                    "                        for(var i =0 ; i< res.length ; i++){\r",
                    "\r",
                    "                          var recordIndex =   vendorMasterStr.findExact(\"vendor_name\",res[i].vendor);\r",
                    "\r",
                    "                          var record =   vendorMasterStr.getAt(recordIndex);\r",
                    "\r",
                    "\r",
                    "                            if(record){\r",
                    "\r",
                    "                                //console.error(record) ;\r",
                    "                                  record.set('collections',res[i].collections) ;\r",
                    "                                  record.set('SKU',res[i].skus) ;\r",
                    "                                  record.set('design',res[i].designs) ;\r",
                    "\r",
                    "                                    record.dirty= true;\r",
                    "\r",
                    "                            }\r",
                    "                            }\r",
                    "\r",
                    "                    vendorMasterStr.sync() ;\r",
                    "\r",
                    "                    var tempArray = new Array();\r",
                    "                    tempArray = getArrayDataFromStore(Ext.getStore('vendors.Master'));\r",
                    "\r",
                    "                    var tempVendorStore = Ext.getStore('vendorTempRecordStore') ;\r",
                    "\r",
                    "                    tempVendorStore.removeAll();\r",
                    "                    tempVendorStore.sync();\r",
                    "\r",
                    "                    tempVendorStore.setData(tempArray);\r",
                    "                    tempVendorStore.sync();\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "                },\r",
                    "                function(err)\r",
                    "                {\r",
                    "                    console.log('error:');\r",
                    "                    console.log(err);\r",
                    "                });\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "function getArrayDataFromStore(store){\r",
                    "\r",
                    "    var data = new Array();\r",
                    "    data = store.getData().all;\r",
                    "\r",
                    "    var dataToReturn = new Array();\r",
                    "\r",
                    "    for(var i=0; i < data.length ; i++){\r",
                    "\r",
                    "        dataToReturn.push(data[i].data);\r",
                    "    }\r",
                    "\r",
                    "    return dataToReturn ;\r",
                    " }\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    ""
                ]
            },
            "designerId": "7c71a61f-36f8-4cb5-97a7-6745ecf478a5"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "component",
                    "record"
                ],
                "fn": "showCalenderForDataupdated",
                "implHandler": [
                    "\r",
                    "       function fn(newDate){\r",
                    "\r",
                    "\r",
                    "            var date = Ext.Date.format(newDate, \"m/d/Y\");\r",
                    "            RMdatalink.util.Calendar.hideCalendar();\r",
                    "            updateDataUpdated(date);\r",
                    "        }\r",
                    "\r",
                    "        RMdatalink.util.Calendar.showCalendar(fn,component);\r",
                    "\r",
                    "\r",
                    "\r",
                    "        function updateDataUpdated(date){\r",
                    "\r",
                    "            var dataToupdate = {\r",
                    "\r",
                    "                last_data_update:date\r",
                    "\r",
                    "            } ;\r",
                    "\r",
                    "             var vendorStore = Ext.getStore('vendors.Master') ;\r",
                    "             RMdatalink.iwa.rdl.doUpdateCollection(vendorStore, dataToupdate , record.get('_id'), suc, err);\r",
                    "\r",
                    "            record.set(\"last_data_update\",date) ;\r",
                    "\r",
                    "            function suc(){\r",
                    "\r",
                    "            }\r",
                    "            function err(){\r",
                    "\r",
                    "                 Ext.Msg.alert(\"Alert\",\"Vendor last data updated date updation failed, for vendor \"+record.get(\"vendor_name\"),Ext.emptyFn);\r",
                    "\r",
                    "            }\r",
                    "\r",
                    "        }"
                ]
            },
            "designerId": "544123d3-7c0c-46ef-ac41-13047a6d291c"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "component",
                    "record"
                ],
                "fn": "showCalenderForInventoryupdated",
                "implHandler": [
                    "\r",
                    "       function fn(newDate){\r",
                    "\r",
                    "\r",
                    "            var date = Ext.Date.format(newDate, \"m/d/Y\");\r",
                    "            RMdatalink.util.Calendar.hideCalendar();\r",
                    "            updateInventoryUpdated(date);\r",
                    "\r",
                    "        }\r",
                    "\r",
                    "        RMdatalink.util.Calendar.showCalendar(fn,component);\r",
                    "\r",
                    "\r",
                    "\r",
                    "        function updateInventoryUpdated(date){\r",
                    "\r",
                    "            var dataToupdate = {\r",
                    "\r",
                    "                last_inventory_update:date\r",
                    "\r",
                    "            } ;\r",
                    "\r",
                    "             var vendorStore = Ext.getStore('vendors.Master') ;\r",
                    "             RMdatalink.iwa.rdl.doUpdateCollection(vendorStore, dataToupdate , record.get('_id'), suc, err);\r",
                    "\r",
                    "            record.set(\"last_inventory_update\",date) ;\r",
                    "\r",
                    "            function suc(){\r",
                    "\r",
                    "            }\r",
                    "            function err(){\r",
                    "\r",
                    "                Ext.Msg.alert(\"Alert\",\"Vendor last inventory updated date updation failed, for vendor \"+record.get(\"vendor_name\"),Ext.emptyFn);\r",
                    "\r",
                    "            }\r",
                    "\r",
                    "        }"
                ]
            },
            "designerId": "d30f5cfb-2e6f-4363-a9a3-72a8f28bab31"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "inputFld",
                    "record_key"
                ],
                "fn": "updateVendorFlds",
                "implHandler": [
                    "\r",
                    "console.log(inputFld.attributes['data-id'].value) ;\r",
                    "\r",
                    "var _id = inputFld.attributes['data-id'].value ;\r",
                    "var value = inputFld.value ;\r",
                    "\r",
                    "value = value.replace(\",\",\"\");\r",
                    "var rmProBillingStore = Ext.getStore('vendors.Master') ;\r",
                    "var recIndex = rmProBillingStore.findExact('_id',_id) ;\r",
                    "\r",
                    "if(recIndex == -1){\r",
                    "    return ;\r",
                    "}\r",
                    "\r",
                    "\r",
                    "var record = rmProBillingStore.getAt(recIndex) ;\r",
                    "\r",
                    "record.set(record_key,value) ;\r",
                    "\r",
                    "\r",
                    "\r",
                    "updateVendor();\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "        function updateVendor(){\r",
                    "\r",
                    "            var dataToupdate = {\r",
                    "\r",
                    "\r",
                    "\r",
                    "            } ;\r",
                    "\r",
                    "            dataToupdate[record_key] = value ;\r",
                    "\r",
                    "\r",
                    "             var vendorStore = Ext.getStore('vendors.Master') ;\r",
                    "             RMdatalink.iwa.rdl.doUpdateCollection(vendorStore, dataToupdate , record.get('_id'), suc, err);\r",
                    "\r",
                    "\r",
                    "            function suc(){\r",
                    "\r",
                    "            }\r",
                    "            function err(){\r",
                    "\r",
                    "                Ext.Msg.alert(\"Alert\",\"Vendor last inventory updated date updation failed, for vendor \"+record.get(\"vendor_name\"),Ext.emptyFn);\r",
                    "\r",
                    "            }\r",
                    "\r",
                    "        }"
                ]
            },
            "designerId": "fa8c8e9c-3e38-48b9-baea-9896fa88f636"
        }
    ]
}