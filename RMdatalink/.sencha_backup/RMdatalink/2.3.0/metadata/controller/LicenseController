{
    "type": "Ext.app.Controller",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "designer|userClassName": "LicenseController",
        "isAutoFill": true
    },
    "configAlternates": {
        "isMannualChange": "boolean",
        "isAutoFill": "boolean"
    },
    "designerId": "71d177bc-abe9-4fe2-9374-f911086d2e03",
    "customConfigs": [
        {
            "group": "(Custom Properties)",
            "name": "isAutoFill",
            "type": "string"
        }
    ],
    "cn": [
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "selectModulesOnLicense",
                "implHandler": [
                    "/*\r",
                    "var selectedStr = Ext.getStore('printInvoice.subscribedModulesStore') ;\r",
                    "var rmproModuleStr = Ext.getStore('products.RMProStore') ;\r",
                    "var licenseModuleList = Ext.ComponentQuery.query('#licenseScreenModuleList')[0].down('#mainList') ;\r",
                    "var licenseModuleStr  = Ext.getStore('License.ProductsStore') ;\r",
                    "\r",
                    "licenseModuleList.setDisableSelection(false);\r",
                    "\r",
                    "licenseModuleStr.removeAll() ;\r",
                    "\r",
                    "licenseModuleStr.setData(getArrayDataFromStore(rmproModuleStr)) ;\r",
                    "\r",
                    "licenseModuleStr.sync() ;\r",
                    "var recToSelect = getArrayDataFromStore(selectedStr);\r",
                    "\r",
                    "var licenseHsStr = Ext.getStore('LicenseHistoryStore') ;\r",
                    "var invoiceHsStr = Ext.getStore('InvoiceHistoryStore') ; ;\r",
                    "\r",
                    "licenseHsStr.removeAll();\r",
                    "licenseHsStr.setData(getArrayDataFromStore(invoiceHsStr));\r",
                    "\r",
                    "licenseModuleList.deselectAll() ;\r",
                    "\r",
                    "\r",
                    "for( var i=0; i < licenseModuleStr.getData().all.length ; i++ ){\r",
                    "\r",
                    "\r",
                    "    var tRec = licenseModuleStr.getAt(i) ;\r",
                    "    if(tRec){\r",
                    "        tRec.set('quantity',0) ;\r",
                    "        tRec.set('subscription_length',\"\") ;\r",
                    "\r",
                    "    }\r",
                    "}\r",
                    "\r",
                    "\r",
                    "////////////////////////\r",
                    "var invoiceController = RMdatalink.app.getController('InvoiceController') ;\r",
                    "\r",
                    "var dataToUpdate = {\r",
                    "\r",
                    "    product_billng : invoiceController.config.product_billing_rec  ///n\r",
                    "};\r",
                    "\r",
                    "var product_rmpro = dataToUpdate.product_billng.product_rmpro ;\r",
                    "\r",
                    "var subscription_length = product_rmpro.payment_period ;\r",
                    "\r",
                    "subscription_length = parseInt(subscription_length) ;\r",
                    "\r",
                    "if(subscription_length >= 12){\r",
                    "\r",
                    "    subscription_length = subscription_length /12 ;\r",
                    "    subscription_length = subscription_length + \"Year (s)\" ;\r",
                    "}else{\r",
                    "\r",
                    "    subscription_length = subscription_length + \"Month (s)\" ;\r",
                    "}\r",
                    "////////////////////////////////\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "for( var i=0; i < recToSelect.length ; i++ ){\r",
                    "\r",
                    "    var recIndex = licenseModuleStr.findExact('_id',recToSelect[i]._id);\r",
                    "    var tRec = licenseModuleStr.getAt(recIndex) ;\r",
                    "    if(tRec){\r",
                    "        tRec.set('quantity',recToSelect[i].quantity) ; //subscription_length\r",
                    "         tRec.set('remark_val',recToSelect[i].remark_val) ;\r",
                    "          tRec.set('subscription_length',subscription_length) ;\r",
                    "\r",
                    "        licenseModuleList.select(tRec,true,true);\r",
                    "    }\r",
                    "}\r",
                    "\r",
                    "\r",
                    "// this.setLicenseFlds() ;\r",
                    "\r",
                    "function getArrayDataFromStore(store){\r",
                    "    var data = new Array();\r",
                    "    data = store.getData().items;\r",
                    "\r",
                    "    var dataToReturn = new Array();\r",
                    "\r",
                    "    for(var i=0; i < data.length ; i++){\r",
                    "\r",
                    "        dataToReturn.push(data[i].data);\r",
                    "    }\r",
                    "\r",
                    "    return dataToReturn ;\r",
                    "}\r",
                    "\r",
                    "\r",
                    "licenseModuleList.setDisableSelection(true);\r",
                    "*/\r",
                    "var licHsLst = Ext.ComponentQuery.query('#licenseHistoryListPanel')[0].down('#mainList');\r",
                    "\r",
                    "var licHsStr = licHsLst.getStore() ;\r",
                    "var maxLn = licHsStr.getData().all.length -1 ;\r",
                    "\r",
                    "licHsLst.select(maxLn);\r",
                    ""
                ]
            },
            "designerId": "ed3beb25-222c-43b2-b79e-c8499ef1380c"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "licRec"
                ],
                "fn": "setLicenseFlds",
                "implHandler": [
                    "\r",
                    "\r",
                    "var invoiceController = RMdatalink.app.getController('InvoiceController') ;\r",
                    "var rmProInvoicePanel = Ext.ComponentQuery.query('#LicenseScreen')[0] ;\r",
                    "var rtRecord = invoiceController.config.selectedRetailer ;\r",
                    "var accNo = rtRecord.data.account_no ;\r",
                    "var dataToUpdate = {\r",
                    "\r",
                    "    product_billng : invoiceController.config.product_billing_rec  ///n\r",
                    "};\r",
                    "\r",
                    "var product_rmpro = dataToUpdate.product_billng.product_rmpro ;\r",
                    "\r",
                    "\r",
                    " rmProInvoicePanel.down('#licenseScreenAcctNoFld').setValue(accNo) ;\r",
                    " rmProInvoicePanel.down('#licenseScreenPayPrdFld').setValue(licRec.data.payment_period) ;\r",
                    "\r",
                    "if(licRec.data.payment_period_start)\r",
                    "{\r",
                    "  rmProInvoicePanel.down('#licenseScreenFromFld').setValue(licRec.data.payment_period_start) ;\r",
                    "}else{\r",
                    "    rmProInvoicePanel.down('#licenseScreenFromFld').setValue(licRec.data.due_date) ;\r",
                    "}\r",
                    " rmProInvoicePanel.down('#licenseScreenToFld').setValue(licRec.data.payment_period_end) ;\r",
                    "\r",
                    " rmProInvoicePanel.down('#licenseScreenInvoiceNoFld').setValue(licRec.data.invoice_number) ;\r",
                    " rmProInvoicePanel.down('#licenseScreenPaidAmtFld').setValue(formatNum(licRec.data.ammount_paying)) ;\r",
                    "\r",
                    " rmProInvoicePanel.down('#liscenseScreenStoreTitleFldSet').setTitle(rtRecord.data.store_name) ;\r",
                    "\r",
                    " rmProInvoicePanel.down('#liscenseScreenForm1').setDisabled(true) ;\r",
                    "\r",
                    "var diff = this.getDiffDays(licRec.data.due_date,licRec.data.payment_period_end) ;\r",
                    "\r",
                    " rmProInvoicePanel.down('#licenseScreenPrdDaysFld').setValue(\"0\") ;\r",
                    "/*\r",
                    "due_date\r",
                    "\r",
                    "\r",
                    "licenseScreenAcctNoFld\r",
                    "licenseScreenPayPrdFld\r",
                    "\r",
                    "licenseScreenFromFld\r",
                    "licenseScreenToFld\r",
                    "\r",
                    "licenseScreenInvoiceNoFld\r",
                    "licenseScreenPaidAmtFld\r",
                    "licenseScreenNoteFld\r",
                    "*/"
                ]
            },
            "designerId": "d982763b-4f37-468f-a9ec-f6d583caddee"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "list",
                    "record",
                    "eOpts"
                ],
                "fn": "onHistoryLicSelect",
                "implHandler": [
                    "\r",
                    "\r",
                    "this.config.isAutoFill = true ;\r",
                    "\r",
                    "console.log(record);\r",
                    "\r",
                    "var LicenseScreen = Ext.ComponentQuery.query('#LicenseScreen')[0] ;\r",
                    "\r",
                    "\r",
                    "// var html = \"Manually created by \" + record.data.created_by + \" on \" + record.data.created_date_stamp ;\r",
                    "\r",
                    "var html = \"Auto created on \" + record.data.created_date_stamp ;\r",
                    "\r",
                    "LicenseScreen.down('#licenseTimeStampLbl').setHtml(html) ;\r",
                    "var rmproModuleStr = Ext.getStore('products.RMProStore') ;\r",
                    "var licenseModuleList = Ext.ComponentQuery.query('#licenseScreenModuleList')[0].down('#mainList') ;\r",
                    "var licenseModuleStr  = Ext.getStore('License.ProductsStore') ;\r",
                    "\r",
                    "licenseModuleList.setDisableSelection(false);\r",
                    "\r",
                    "this.setLicenseFlds(record);\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "licenseModuleStr.removeAll() ;\r",
                    "\r",
                    "licenseModuleStr.setData(getArrayDataFromStore(rmproModuleStr)) ;\r",
                    "\r",
                    "licenseModuleStr.sync() ;\r",
                    "var recToSelect = record.data.product_modules;\r",
                    "\r",
                    "\r",
                    "licenseModuleList.deselectAll() ;\r",
                    "\r",
                    "\r",
                    "for( var i=0; i < licenseModuleStr.getData().all.length ; i++ ){\r",
                    "\r",
                    "\r",
                    "    var tRec = licenseModuleStr.getAt(i) ;\r",
                    "    if(tRec){\r",
                    "        tRec.set('quantity',0) ;\r",
                    "        tRec.set('subscription_length',\"\") ;\r",
                    "\r",
                    "    }\r",
                    "}\r",
                    "\r",
                    "\r",
                    "var invoiceController = RMdatalink.app.getController('InvoiceController') ;\r",
                    "\r",
                    "\r",
                    "var product_rmpro = record.data ;\r",
                    "\r",
                    "var subscription_length = product_rmpro.payment_period ;\r",
                    "\r",
                    "subscription_length = parseInt(subscription_length) ;\r",
                    "\r",
                    "if(subscription_length >= 12){\r",
                    "\r",
                    "    subscription_length = subscription_length /12 ;\r",
                    "    subscription_length = subscription_length + \"Year (s)\" ;\r",
                    "}else{\r",
                    "\r",
                    "    subscription_length = subscription_length + \"Month (s)\" ;\r",
                    "}\r",
                    "////////////////////////////////\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "for( var i=0; i < recToSelect.length ; i++ ){\r",
                    "\r",
                    "    var recIndex = licenseModuleStr.findExact('_id',recToSelect[i].module_id);\r",
                    "    var tRec = licenseModuleStr.getAt(recIndex) ;\r",
                    "    if(tRec){\r",
                    "        tRec.set('quantity',recToSelect[i].quantity) ; //subscription_length\r",
                    "         tRec.set('remark_val',recToSelect[i].remark_val) ;\r",
                    "          tRec.set('subscription_length',subscription_length) ;\r",
                    "\r",
                    "        licenseModuleList.select(tRec,true,true);\r",
                    "    }\r",
                    "}\r",
                    "\r",
                    "\r",
                    "// this.setLicenseFlds() ;\r",
                    "\r",
                    "function getArrayDataFromStore(store){\r",
                    "    var data = new Array();\r",
                    "    data = store.getData().items;\r",
                    "\r",
                    "    var dataToReturn = new Array();\r",
                    "\r",
                    "    for(var i=0; i < data.length ; i++){\r",
                    "\r",
                    "        dataToReturn.push(data[i].data);\r",
                    "    }\r",
                    "\r",
                    "    return dataToReturn ;\r",
                    "}\r",
                    "\r",
                    "\r",
                    "licenseModuleList.setDisableSelection(true);\r",
                    "\r",
                    "this.config.isAutoFill = false ;"
                ]
            },
            "designerId": "6b436ea1-72ea-443b-9ce4-8004550be8d3"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "status"
                ],
                "fn": "enableDisableFlds",
                "implHandler": [
                    "\r",
                    "var LicenseScreen = Ext.ComponentQuery.query('#LicenseScreen')[0] ;\r",
                    "\r",
                    "LicenseScreen.down('#licenseScreenFromFld').setDisabled(status);\r",
                    "LicenseScreen.down('#licenseScreenPayPrdFld').setDisabled(status);\r",
                    "LicenseScreen.down('#licenseScreenNoteFld').setDisabled(status);\r",
                    "LicenseScreen.down('#licenseScreenPrdDaysFld').setDisabled(status);\r",
                    "\r",
                    "LicenseScreen.down('#licSaveBtn').setHidden(status);\r",
                    "LicenseScreen.down('#licCancelBtn').setHidden(status);\r",
                    "LicenseScreen.down('#licEditSubBtn').setHidden(!status);\r",
                    "\r",
                    "\r",
                    "var licenseModuleList = Ext.ComponentQuery.query('#licenseScreenModuleList')[0].down('#mainList') ;\r",
                    "\r",
                    "licenseModuleList.setDisableSelection(status);\r",
                    "\r",
                    "var selectFlds = document.getElementsByClassName('licEdtFld');\r",
                    "\r",
                    "for( var i = 0 ; i< selectFlds.length ; i++ ){\r",
                    "\r",
                    "    selectFlds[i].disabled = status  ;\r",
                    "\r",
                    "\r",
                    "}\r",
                    "\r",
                    ""
                ]
            },
            "designerId": "4fd9ee07-ff8f-47e5-8676-a8992ac24071"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button[itemId=licEditSubBtn]",
                "designer|targetType": "Ext.Button",
                "fn": "onlicEditSubBtnButtonTap",
                "implHandler": [
                    "\r",
                    "this.enableDisableFlds(false);"
                ],
                "name": "tap"
            },
            "designerId": "ff2f46cc-a18e-4b37-9b0f-b24cf585d719"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button[itemId=licCancelBtn]",
                "designer|targetType": "Ext.Button",
                "fn": "onlicCancelBtnTap",
                "implHandler": [
                    "var lcHsList = Ext.ComponentQuery.query('#licenseHistoryListPanel')[0].down('#mainList');\r",
                    "\r",
                    "var selections = lcHsList.getSelection() ;\r",
                    "\r",
                    "if(selections.length > 0){\r",
                    "\r",
                    "    this.onHistoryLicSelect(lcHsList , selections[0],null );\r",
                    "    this.enableDisableFlds(true);\r",
                    "}\r",
                    "\r",
                    "\r",
                    "\r",
                    ""
                ],
                "name": "tap"
            },
            "designerId": "d315bf97-1485-4f28-b53d-3bd54edded54"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button[itemId=licSaveBtn]",
                "designer|targetType": "Ext.Button",
                "fn": "onlicSaveBtnTap",
                "implHandler": [
                    "var lcHsList = Ext.ComponentQuery.query('#licenseHistoryListPanel')[0].down('#mainList');\r",
                    "\r",
                    "var selections = lcHsList.getSelection() ;\r",
                    "\r",
                    " this.enableDisableFlds(true);"
                ],
                "name": "tap"
            },
            "designerId": "1306e3e7-3676-4595-827e-ccf7973a2ac1"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "selectfield[itemId=licenseScreenPayPrdFld]",
                "designer|targetType": "Ext.field.Select",
                "fn": "onlicenseScreenPayPrdFldChange",
                "implHandler": [
                    "var LicenseScreen = Ext.ComponentQuery.query('#LicenseScreen')[0] ;\r",
                    "\r",
                    "if(this.config.isAutoFill){\r",
                    "   if(newValue && newValue != 0)\r",
                    "   {\r",
                    "        LicenseScreen.down('#licenseScreenPrdDaysFld').setHidden(true);\r",
                    "   }\r",
                    "    else if( newValue ){\r",
                    "        LicenseScreen.down('#licenseScreenPrdDaysFld').setHidden(false);\r",
                    "    }\r",
                    "    return ;\r",
                    "}\r",
                    "\r",
                    "if(newValue == 0){\r",
                    "\r",
                    "      LicenseScreen.down('#licenseScreenPrdDaysFld').setHidden(false);\r",
                    "    var from =  LicenseScreen.down('#licenseScreenFromFld').getValue() ;\r",
                    "    var prd =  LicenseScreen.down('#licenseScreenPrdDaysFld').getValue() ;\r",
                    "     if(isNaN(prd)){\r",
                    "                           return ;\r",
                    "     }\r",
                    "prd = parseInt(prd) ;\r",
                    "     var tempEndDate = new Date(from) ;\r",
                    "\r",
                    "\r",
                    "    tempEndDate.setDate(tempEndDate.getDate() + prd ) ;\r",
                    "\r",
                    "   var to = (tempEndDate.getMonth() + 1 ) + \"/\"+ (tempEndDate.getDate())+\"/\" + tempEndDate.getFullYear() ;\r",
                    "\r",
                    "\r",
                    "\r",
                    "    LicenseScreen.down('#licenseScreenToFld').setValue(to) ;\r",
                    "\r",
                    "\r",
                    "}\r",
                    "else{\r",
                    "\r",
                    "\r",
                    "      LicenseScreen.down('#licenseScreenPrdDaysFld').setHidden(true);\r",
                    "\r",
                    "    var from =  LicenseScreen.down('#licenseScreenFromFld').getValue() ;\r",
                    "    var prd = newValue ;\r",
                    "\r",
                    "     var tempEndDate = new Date(from) ;\r",
                    "\r",
                    "\r",
                    "    tempEndDate.setMonth(tempEndDate.getMonth() + prd) ;\r",
                    "\r",
                    "   var to = (tempEndDate.getMonth() + 1 ) + \"/\"+ (tempEndDate.getDate())+\"/\" + tempEndDate.getFullYear() ;\r",
                    "\r",
                    "\r",
                    "\r",
                    "    LicenseScreen.down('#licenseScreenToFld').setValue(to) ;\r",
                    "}"
                ],
                "name": "change"
            },
            "designerId": "011e9d61-2601-43fc-bd6f-3fb2b7ecb6c7"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "textfield[itemId=licenseScreenFromFld]",
                "designer|targetType": "Ext.field.Text",
                "fn": "onlicenseScreenFromFldChange",
                "implHandler": [
                    "    if(this.config.isAutoFill){\r",
                    "        return ;\r",
                    "    }\r",
                    "\r",
                    "    var LicenseScreen = Ext.ComponentQuery.query('#LicenseScreen')[0] ;\r",
                    "\r",
                    "    var from = newValue ;\r",
                    "    var prd = LicenseScreen.down('#licenseScreenPayPrdFld').getValue() ;\r",
                    "\r",
                    "\r",
                    "if(prd == 0){\r",
                    "\r",
                    "\r",
                    "     prd =  LicenseScreen.down('#licenseScreenPrdDaysFld').getValue() ;\r",
                    "     if(isNaN(prd)){\r",
                    "                           return ;\r",
                    "     }\r",
                    "    prd = parseInt(prd) ;\r",
                    "     var tempEndDate = new Date(from) ;\r",
                    "\r",
                    "\r",
                    "    tempEndDate.setDate(tempEndDate.getDate() + prd ) ;\r",
                    "\r",
                    "    console.error(from + \" end \" + tempEndDate  );\r",
                    "\r",
                    "   var to = (tempEndDate.getMonth() + 1 ) + \"/\"+ (tempEndDate.getDate())+\"/\" + tempEndDate.getFullYear() ;\r",
                    "\r",
                    "\r",
                    "\r",
                    "    LicenseScreen.down('#licenseScreenToFld').setValue(to) ;\r",
                    "\r",
                    "\r",
                    "}\r",
                    "else{\r",
                    "\r",
                    "     var tempEndDate = new Date(from) ;\r",
                    "\r",
                    "\r",
                    "    tempEndDate.setMonth(tempEndDate.getMonth() + prd) ;\r",
                    "\r",
                    "   var to = (tempEndDate.getMonth() + 1 ) + \"/\"+ (tempEndDate.getDate())+\"/\" + tempEndDate.getFullYear() ;\r",
                    "\r",
                    "\r",
                    "\r",
                    "    LicenseScreen.down('#licenseScreenToFld').setValue(to) ;\r",
                    "}"
                ],
                "name": "change"
            },
            "designerId": "967bc1cc-4927-4c49-858f-da04da5c130b"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "textfield[itemId=licenseScreenPrdDaysFld]",
                "designer|targetType": "Ext.field.Text",
                "fn": "onlicenseScreenPrdDaysFldChange",
                "implHandler": [
                    "    if(this.config.isAutoFill){\r",
                    "        return ;\r",
                    "    }\r",
                    "\r",
                    "    var LicenseScreen = Ext.ComponentQuery.query('#LicenseScreen')[0] ;\r",
                    "\r",
                    "    var from = LicenseScreen.down('#licenseScreenFromFld').getValue() ;\r",
                    "    var prd = LicenseScreen.down('#licenseScreenPayPrdFld').getValue() ;\r",
                    "\r",
                    "\r",
                    "if(prd == 0){\r",
                    "\r",
                    "\r",
                    "     prd =  newValue ;\r",
                    "     if(isNaN(prd)){\r",
                    "                           return ;\r",
                    "     }\r",
                    "\r",
                    "     prd = parseInt(prd) ;\r",
                    "\r",
                    "     var tempEndDate = new Date(from) ;\r",
                    "\r",
                    "\r",
                    "    tempEndDate.setDate(tempEndDate.getDate() + prd ) ;\r",
                    "\r",
                    "\r",
                    "\r",
                    "   var to = (tempEndDate.getMonth() + 1 ) + \"/\"+ (tempEndDate.getDate())+\"/\" + tempEndDate.getFullYear() ;\r",
                    "\r",
                    "\r",
                    "\r",
                    "    LicenseScreen.down('#licenseScreenToFld').setValue(to) ;\r",
                    "\r",
                    "\r",
                    "}\r",
                    ""
                ],
                "name": "change"
            },
            "designerId": "c72da46b-dcb0-4db7-9042-4222c940cde2"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "dd1",
                    "dd2"
                ],
                "fn": "getDiffDays",
                "implHandler": [
                    "var oneDay = 24*60*60*1000; // hours*minutes*seconds*milliseconds\r",
                    "var firstDate = new Date(dd1);\r",
                    "var secondDate = new Date(dd2);\r",
                    "\r",
                    "var diffDays = Math.round(Math.abs((firstDate.getTime() - secondDate.getTime())/(oneDay)));\r",
                    "\r",
                    "return diffDays ;"
                ]
            },
            "designerId": "2cd51861-69f0-4334-9c95-5981f1968ba7"
        }
    ]
}