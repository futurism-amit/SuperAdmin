{
    "type": "Ext.app.Controller",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "designer|userClassName": "DeleteRecords"
    },
    "designerId": "a46ab583-31cd-43df-b05b-81ab8c56ba85",
    "cn": [
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "deleteRetailers",
                "implHandler": [
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "var retailers = Ext.ComponentQuery.query('#allRetailerTab')[0].down('#retailerList').getSelection();\r",
                    "var that = this ;\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "var masterStore = Ext.getStore('retailersMaster');\r",
                    "if(retailers.length == 0 ){\r",
                    "    Ext.Msg.alert(\"Alert\",\"Select at least one record to delete\",Ext.emptyFn);\r",
                    "    return ;\r",
                    "}\r",
                    "\r",
                    "\r",
                    "Ext.Msg.confirm(\"Confirm\",\"Are you sure you want to delete records.\",onMessageAns ,this);\r",
                    "\r",
                    "\r",
                    "function onMessageAns(action,opt,confirmBox){\r",
                    "\r",
                    "\r",
                    "    if(action == \"yes\"){\r",
                    "\r",
                    "\r",
                    "         Ext.Viewport.setMasked({\r",
                    "                                    xtype: 'loadmask'\r",
                    "                                });\r",
                    "\r",
                    "        deleteVendors() ;\r",
                    "\r",
                    "    }else{\r",
                    "\r",
                    "\r",
                    "        return ;\r",
                    "    }\r",
                    "\r",
                    "\r",
                    "}\r",
                    "\r",
                    "\r",
                    "var index = 0 ;\r",
                    "function deleteVendors(){\r",
                    "\r",
                    "\r",
                    "    if(index < retailers.length )\r",
                    "    {\r",
                    "    var dataToUpdate = {\r",
                    "\r",
                    "        delete_status:true\r",
                    "    };\r",
                    "      RMdatalink.iwa.rdl.doUpdateCollection(masterStore, dataToUpdate ,retailers[index].data._id , success, error );\r",
                    "\r",
                    "    }else{\r",
                    "\r",
                    "        RMdatalink.app.getController('PaginationController').loadDependentStoresonMaster('retailersMaster');\r",
                    "\r",
                    "\r",
                    "        Ext.Viewport.setMasked(false);\r",
                    "\r",
                    "        console.log(\"Records Deleted Successfully.\");\r",
                    "    }\r",
                    "\r",
                    "}\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "function success(){\r",
                    "\r",
                    "   // masterStore.remove( retailers[index] ) ;\r",
                    "\r",
                    "    updateRespectiveRetailer(retailers[index].get('_id'));\r",
                    "\r",
                    "    index ++;\r",
                    "    deleteVendors() ;\r",
                    "}\r",
                    "\r",
                    "function error(){\r",
                    "\r",
                    "     index ++;\r",
                    "    deleteVendors() ;\r",
                    "\r",
                    "}\r",
                    "\r",
                    "\r",
                    "function updateRespectiveRetailer(_id){\r",
                    "\r",
                    "    var tempStore = null;\r",
                    "    var recIn = -1;\r",
                    "    var tRec = null;\r",
                    "    tempStore = Ext.getStore('retailerUsers') ;\r",
                    "\r",
                    "    recIn = tempStore.findExact('_id',_id) ;\r",
                    "\r",
                    "    if(recIn != -1){\r",
                    "\r",
                    "        tRec = tempStore.getAt(recIn) ;\r",
                    "        tempStore.remove(tRec) ;\r",
                    "    }\r",
                    "\r",
                    "        tempStore = Ext.getStore('retailerPending') ;\r",
                    "\r",
                    "    recIn = tempStore.findExact('_id',_id) ;\r",
                    "\r",
                    "    if(recIn != -1){\r",
                    "\r",
                    "        tRec = tempStore.getAt(recIn) ;\r",
                    "        tempStore.remove(tRec) ;\r",
                    "    }\r",
                    "\r",
                    "\r",
                    "        tempStore = Ext.getStore('retailerHotProspects') ;\r",
                    "\r",
                    "    recIn = tempStore.findExact('_id',_id) ;\r",
                    "\r",
                    "    if(recIn != -1){\r",
                    "\r",
                    "       tRec = tempStore.getAt(recIn) ;\r",
                    "        tempStore.remove(tRec) ;\r",
                    "    }\r",
                    "\r",
                    "\r",
                    "        tempStore = Ext.getStore('retailerProspects') ;\r",
                    "\r",
                    "    recIn = tempStore.findExact('_id',_id) ;\r",
                    "\r",
                    "    if(recIn != -1){\r",
                    "\r",
                    "        tRec = tempStore.getAt(recIn) ;\r",
                    "        tempStore.remove(tRec) ;\r",
                    "    }\r",
                    "\r",
                    "\r",
                    "        tempStore = Ext.getStore('retailerInactive') ;\r",
                    "\r",
                    "    recIn = tempStore.findExact('_id',_id) ;\r",
                    "\r",
                    "    if(recIn != -1){\r",
                    "\r",
                    "        tRec = tempStore.getAt(recIn) ;\r",
                    "        tempStore.remove(tRec) ;\r",
                    "    }\r",
                    "\r",
                    "\r",
                    "        tempStore = Ext.getStore('retailersMaster') ;\r",
                    "\r",
                    "    recIn = tempStore.findExact('_id',_id) ;\r",
                    "\r",
                    "    if(recIn != -1){\r",
                    "\r",
                    "        tRec = tempStore.getAt(recIn) ;\r",
                    "        tempStore.remove(tRec) ;\r",
                    "    }\r",
                    "\r",
                    "\r",
                    "\r",
                    "}"
                ]
            },
            "designerId": "6e3f3d14-6d94-42c4-a3e9-1c2d5348c1bf"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "deleteVendors",
                "implHandler": [
                    "var vendors = Ext.ComponentQuery.query('#allVendorTab')[0].down('#vendorList').getSelection();\r",
                    "var that = this ;\r",
                    "\r",
                    "\r",
                    "\r",
                    "var masterStore = Ext.getStore('vendors.Master');\r",
                    "if(vendors.length == 0 ){\r",
                    "    Ext.Msg.alert(\"Alert\",\"Select at least one record to delete\",Ext.emptyFn);\r",
                    "    return ;\r",
                    "}\r",
                    "\r",
                    "\r",
                    "Ext.Msg.confirm(\"Confirm\",\"Are you sure you want to delete records.\",onMessageAns ,this);\r",
                    "\r",
                    "\r",
                    "function onMessageAns(action,opt,confirmBox){\r",
                    "\r",
                    "\r",
                    "    if(action == \"yes\"){\r",
                    "\r",
                    "\r",
                    "         Ext.Viewport.setMasked({\r",
                    "                                    xtype: 'loadmask'\r",
                    "                                });\r",
                    "\r",
                    "\r",
                    "        deleteVendors() ;\r",
                    "\r",
                    "    }else{\r",
                    "\r",
                    "\r",
                    "        return ;\r",
                    "    }\r",
                    "\r",
                    "\r",
                    "}\r",
                    "\r",
                    "\r",
                    "var index = 0 ;\r",
                    "function deleteVendors(){\r",
                    "\r",
                    "\r",
                    "    if(index < vendors.length )\r",
                    "    {\r",
                    "    var dataToUpdate = {\r",
                    "\r",
                    "        delete_status:true\r",
                    "    };\r",
                    "      RMdatalink.iwa.rdl.doUpdateCollection(masterStore, dataToUpdate ,vendors[index].data._id , success, error );\r",
                    "\r",
                    "    }else{\r",
                    "\r",
                    "        Ext.Viewport.setMasked(false);\r",
                    "\r",
                    "        console.log(\"Records Deleted Successfully.\");\r",
                    "    }\r",
                    "\r",
                    "}\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "function success(){\r",
                    "\r",
                    "    masterStore.remove( vendors[index] ) ;\r",
                    "\r",
                    "    index ++;\r",
                    "    deleteVendors() ;\r",
                    "}\r",
                    "\r",
                    "function error(){\r",
                    "\r",
                    "     index ++;\r",
                    "    deleteVendors() ;\r",
                    "\r",
                    "}"
                ]
            },
            "designerId": "211b256e-9826-421e-8f50-dd9a927583e5"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "deleteRMPRO",
                "implHandler": [
                    "\r",
                    "var rmProCntrlr = RMdatalink.app.getController('RMProController') ;\r",
                    "\r",
                    "var vendors =   [] ;// Ext.ComponentQuery.query('#rmProMainListContainer')[0].down('#mainList').getSelection();\r",
                    "\r",
                    "if(rmProCntrlr.config.rmProSelectedRecord){\r",
                    "\r",
                    "    vendors.push(rmProCntrlr.config.rmProSelectedRecord) ;\r",
                    "}\r",
                    "var that = this ;\r",
                    "\r",
                    "\r",
                    "console.log(vendors) ;\r",
                    "\r",
                    "\r",
                    "var masterStore = Ext.getStore('products.RMProStore');\r",
                    "if(vendors.length == 0 ){\r",
                    "    Ext.Msg.alert(\"Alert\",\"Select at least one record to delete\",Ext.emptyFn);\r",
                    "    return ;\r",
                    "}\r",
                    "\r",
                    "\r",
                    "Ext.Msg.confirm(\"Confirm\",\"Are you sure you want to delete records.\",onMessageAns ,this);\r",
                    "\r",
                    "\r",
                    "function onMessageAns(action,opt,confirmBox){\r",
                    "\r",
                    "\r",
                    "    if(action == \"yes\"){\r",
                    "\r",
                    "\r",
                    "         Ext.Viewport.setMasked({\r",
                    "                                    xtype: 'loadmask'\r",
                    "                                });\r",
                    "\r",
                    "\r",
                    "        deleteVendors() ;\r",
                    "\r",
                    "    }else{\r",
                    "\r",
                    "\r",
                    "        return ;\r",
                    "    }\r",
                    "\r",
                    "\r",
                    "}\r",
                    "\r",
                    "\r",
                    "var index = 0 ;\r",
                    "function deleteVendors(){\r",
                    "\r",
                    "\r",
                    "    if(index < vendors.length )\r",
                    "    {\r",
                    "    var dataToUpdate = {\r",
                    "\r",
                    "        delete_status:true\r",
                    "    };\r",
                    "      RMdatalink.iwa.rdl.doUpdateCollection(masterStore, dataToUpdate ,vendors[index].data._id , success, error );\r",
                    "\r",
                    "    }else{\r",
                    "\r",
                    "        Ext.Viewport.setMasked(false);\r",
                    "\r",
                    "\r",
                    "        RMdatalink.app.getController('BillingDetailsController').updateRMProPricing() ;\r",
                    "        console.log(\"Records Deleted Successfully.\");\r",
                    "    }\r",
                    "\r",
                    "}\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "function success(){\r",
                    "\r",
                    "    masterStore.remove( vendors[index] ) ;\r",
                    "    resetRMPROFields() ;\r",
                    "    index ++;\r",
                    "    deleteVendors() ;\r",
                    "}\r",
                    "\r",
                    "function error(){\r",
                    "\r",
                    "     index ++;\r",
                    "    deleteVendors() ;\r",
                    "\r",
                    "}\r",
                    "\r",
                    "function resetRMPROFields(){\r",
                    "\r",
                    "    RMdatalink.app.getController('RMProController').resetRMPROFlds() ;\r",
                    "\r",
                    "}"
                ]
            },
            "designerId": "1ea269c1-8a68-438b-86a4-0f5e7727798a"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "deleteDatalink",
                "implHandler": [
                    "\r",
                    "var rmProCntrlr = RMdatalink.app.getController('DatalinkController') ;\r",
                    "\r",
                    "var vendors =   [] ;// Ext.ComponentQuery.query('#rmProMainListContainer')[0].down('#mainList').getSelection();\r",
                    "\r",
                    "if(rmProCntrlr.config.rmProSelectedRecord){\r",
                    "\r",
                    "    vendors.push(rmProCntrlr.config.rmProSelectedRecord) ;\r",
                    "}\r",
                    "var that = this ;\r",
                    "\r",
                    "\r",
                    "console.log(vendors) ;\r",
                    "\r",
                    "\r",
                    "var masterStore = Ext.getStore('products.DatalinkMain');\r",
                    "if(vendors.length == 0 ){\r",
                    "    Ext.Msg.alert(\"Alert\",\"Select at least one record to delete\",Ext.emptyFn);\r",
                    "    return ;\r",
                    "}\r",
                    "\r",
                    "\r",
                    "Ext.Msg.confirm(\"Confirm\",\"Are you sure you want to delete records.\",onMessageAns ,this);\r",
                    "\r",
                    "\r",
                    "function onMessageAns(action,opt,confirmBox){\r",
                    "\r",
                    "\r",
                    "    if(action == \"yes\"){\r",
                    "\r",
                    "\r",
                    "         Ext.Viewport.setMasked({\r",
                    "                                    xtype: 'loadmask'\r",
                    "                                });\r",
                    "\r",
                    "\r",
                    "        deleteVendors() ;\r",
                    "\r",
                    "    }else{\r",
                    "\r",
                    "\r",
                    "        return ;\r",
                    "    }\r",
                    "\r",
                    "\r",
                    "}\r",
                    "\r",
                    "\r",
                    "var index = 0 ;\r",
                    "function deleteVendors(){\r",
                    "\r",
                    "\r",
                    "    if(index < vendors.length )\r",
                    "    {\r",
                    "    var dataToUpdate = {\r",
                    "\r",
                    "        delete_status:true\r",
                    "    };\r",
                    "      RMdatalink.iwa.rdl.doUpdateCollection(masterStore, dataToUpdate ,vendors[index].data._id , success, error );\r",
                    "\r",
                    "    }else{\r",
                    "\r",
                    "        Ext.Viewport.setMasked(false);\r",
                    "\r",
                    "\r",
                    "      //  RMdatalink.app.getController('BillingDetailsController').updateRMProPricing() ;\r",
                    "        console.log(\"Records Deleted Successfully.\");\r",
                    "    }\r",
                    "\r",
                    "}\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "function success(){\r",
                    "\r",
                    "    masterStore.remove( vendors[index] ) ;\r",
                    "    resetRMPROFields() ;\r",
                    "    index ++;\r",
                    "    deleteVendors() ;\r",
                    "}\r",
                    "\r",
                    "function error(){\r",
                    "\r",
                    "     index ++;\r",
                    "    deleteVendors() ;\r",
                    "\r",
                    "}\r",
                    "\r",
                    "function resetRMPROFields(){\r",
                    "\r",
                    "    RMdatalink.app.getController('DatalinkController').resetRMPROFlds() ;\r",
                    "\r",
                    "}"
                ]
            },
            "designerId": "0b03b2a7-e059-41f7-bf4e-a9ba7bc1591a"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "deleteecom",
                "implHandler": [
                    "\r",
                    "var rmProCntrlr = RMdatalink.app.getController('ecomController') ;\r",
                    "\r",
                    "var vendors =   [] ;// Ext.ComponentQuery.query('#rmProMainListContainer')[0].down('#mainList').getSelection();\r",
                    "\r",
                    "if(rmProCntrlr.config.rmProSelectedRecord){\r",
                    "\r",
                    "    vendors.push(rmProCntrlr.config.rmProSelectedRecord) ;\r",
                    "}\r",
                    "var that = this ;\r",
                    "\r",
                    "\r",
                    "console.log(vendors) ;\r",
                    "\r",
                    "\r",
                    "var masterStore = Ext.getStore('products.ecomMain');\r",
                    "if(vendors.length == 0 ){\r",
                    "    Ext.Msg.alert(\"Alert\",\"Select at least one record to delete\",Ext.emptyFn);\r",
                    "    return ;\r",
                    "}\r",
                    "\r",
                    "\r",
                    "Ext.Msg.confirm(\"Confirm\",\"Are you sure you want to delete records.\",onMessageAns ,this);\r",
                    "\r",
                    "\r",
                    "function onMessageAns(action,opt,confirmBox){\r",
                    "\r",
                    "\r",
                    "    if(action == \"yes\"){\r",
                    "\r",
                    "\r",
                    "         Ext.Viewport.setMasked({\r",
                    "                                    xtype: 'loadmask'\r",
                    "                                });\r",
                    "\r",
                    "\r",
                    "        deleteVendors() ;\r",
                    "\r",
                    "    }else{\r",
                    "\r",
                    "\r",
                    "        return ;\r",
                    "    }\r",
                    "\r",
                    "\r",
                    "}\r",
                    "\r",
                    "\r",
                    "var index = 0 ;\r",
                    "function deleteVendors(){\r",
                    "\r",
                    "\r",
                    "    if(index < vendors.length )\r",
                    "    {\r",
                    "    var dataToUpdate = {\r",
                    "\r",
                    "        delete_status:true\r",
                    "    };\r",
                    "      RMdatalink.iwa.rdl.doUpdateCollection(masterStore, dataToUpdate ,vendors[index].data._id , success, error );\r",
                    "\r",
                    "    }else{\r",
                    "\r",
                    "        Ext.Viewport.setMasked(false);\r",
                    "\r",
                    "\r",
                    "        RMdatalink.app.getController('BillingDetailsController').updateRMProPricing() ;\r",
                    "        console.log(\"Records Deleted Successfully.\");\r",
                    "    }\r",
                    "\r",
                    "}\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "function success(){\r",
                    "\r",
                    "    masterStore.remove( vendors[index] ) ;\r",
                    "    resetRMPROFields() ;\r",
                    "    index ++;\r",
                    "    deleteVendors() ;\r",
                    "}\r",
                    "\r",
                    "function error(){\r",
                    "\r",
                    "     index ++;\r",
                    "    deleteVendors() ;\r",
                    "\r",
                    "}\r",
                    "\r",
                    "function resetRMPROFields(){\r",
                    "\r",
                    "    RMdatalink.app.getController('ecomController').resetRMPROFlds() ;\r",
                    "\r",
                    "}"
                ]
            },
            "designerId": "e25c7cf1-0488-4d34-8b1a-f82af2d75cda"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "deleteInhoue",
                "implHandler": [
                    "var vendors = Ext.ComponentQuery.query('#inhouseTabPanel')[0].getActiveItem().down('#inhouseList').getSelection();\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "var that = this ;\r",
                    "\r",
                    "\r",
                    "\r",
                    "var masterStore = Ext.getStore('inhouseMasterStore');\r",
                    "if(vendors.length == 0 ){\r",
                    "    Ext.Msg.alert(\"Alert\",\"Select at least one record to delete\",Ext.emptyFn);\r",
                    "    return ;\r",
                    "}\r",
                    "\r",
                    "\r",
                    "Ext.Msg.confirm(\"Confirm\",\"Are you sure you want to delete records.\",onMessageAns ,this);\r",
                    "\r",
                    "\r",
                    "function onMessageAns(action,opt,confirmBox){\r",
                    "\r",
                    "\r",
                    "    if(action == \"yes\"){\r",
                    "\r",
                    "\r",
                    "         Ext.Viewport.setMasked({\r",
                    "                                    xtype: 'loadmask'\r",
                    "                                });\r",
                    "\r",
                    "\r",
                    "        deleteVendors() ;\r",
                    "\r",
                    "    }else{\r",
                    "\r",
                    "\r",
                    "        return ;\r",
                    "    }\r",
                    "\r",
                    "\r",
                    "}\r",
                    "\r",
                    "\r",
                    "var index = 0 ;\r",
                    " var rec = null ;\r",
                    "function deleteVendors(){\r",
                    "\r",
                    "\r",
                    "    if(index < vendors.length )\r",
                    "    {\r",
                    "    var dataToUpdate = {\r",
                    "\r",
                    "        delete_status:true\r",
                    "    };\r",
                    "\r",
                    "\r",
                    "        var id=  Ext.ComponentQuery.query('#inhouseTabPanel')[0].getActiveItem().down('#inhouseList').getSelection()[0].data.id;\r",
                    "\r",
                    "        var recI =  masterStore.find(\"id\",id) ;\r",
                    "\r",
                    "       rec = masterStore.getAt(recI);\r",
                    "\r",
                    "        var _id = rec.raw._id ;\r",
                    "      RMdatalink.iwa.rdl.doUpdateCollection(masterStore, dataToUpdate ,_id , success, error );\r",
                    "\r",
                    "    }else{\r",
                    "\r",
                    "        Ext.Viewport.setMasked(false);\r",
                    "\r",
                    "\r",
                    "            RMdatalink.app.getController('RetailerDeatilsDataSet').setInhouseData();\r",
                    "\r",
                    "        console.log(\"Records Deleted Successfully.\");\r",
                    "    }\r",
                    "\r",
                    "}\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "function success(){\r",
                    "\r",
                    "    masterStore.remove( rec ) ;\r",
                    "\r",
                    "    index ++;\r",
                    "    deleteVendors() ;\r",
                    "}\r",
                    "\r",
                    "function error(){\r",
                    "\r",
                    "     index ++;\r",
                    "    deleteVendors() ;\r",
                    "\r",
                    "}"
                ]
            },
            "designerId": "a80132ef-d52e-41f6-8fff-24c9c77930b3"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "deleteTechSupportLogs",
                "implHandler": [
                    "var vendors = Ext.ComponentQuery.query('#browseLatestLogTab')[0].down('#mainList').getSelection();\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "var that = this ;\r",
                    "\r",
                    "\r",
                    "\r",
                    "var masterStore = Ext.getStore('TechSupportLogsStore');\r",
                    "if(vendors.length == 0 ){\r",
                    "    Ext.Msg.alert(\"Alert\",\"Select at least one record to delete\",Ext.emptyFn);\r",
                    "    return ;\r",
                    "}\r",
                    "\r",
                    "\r",
                    "Ext.Msg.confirm(\"Confirm\",\"Are you sure you want to delete records.\",onMessageAns ,this);\r",
                    "\r",
                    "\r",
                    "function onMessageAns(action,opt,confirmBox){\r",
                    "\r",
                    "\r",
                    "    if(action == \"yes\"){\r",
                    "\r",
                    "\r",
                    "         Ext.Viewport.setMasked({\r",
                    "                                    xtype: 'loadmask'\r",
                    "                                });\r",
                    "\r",
                    "\r",
                    "        deleteVendors() ;\r",
                    "\r",
                    "    }else{\r",
                    "\r",
                    "\r",
                    "        return ;\r",
                    "    }\r",
                    "\r",
                    "\r",
                    "}\r",
                    "\r",
                    "\r",
                    "var index = 0 ;\r",
                    "\r",
                    "function deleteVendors(){\r",
                    "\r",
                    "\r",
                    "    if(index < vendors.length )\r",
                    "    {\r",
                    "    var dataToUpdate = {\r",
                    "\r",
                    "        delete_status:true\r",
                    "    };\r",
                    "\r",
                    "\r",
                    "        var _id = vendors[index].raw._id ;\r",
                    "\r",
                    "\r",
                    "\r",
                    "      RMdatalink.iwa.rdl.doUpdateCollection(masterStore, dataToUpdate ,_id , success, error );\r",
                    "\r",
                    "    }else{\r",
                    "\r",
                    "        Ext.Viewport.setMasked(false);\r",
                    "\r",
                    "\r",
                    "            RMdatalink.app.getController('RetailerDeatilsDataSet').setInhouseData();\r",
                    "\r",
                    "        console.log(\"Records Deleted Successfully.\");\r",
                    "    }\r",
                    "\r",
                    "}\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "function success(){\r",
                    "\r",
                    "    masterStore.remove( vendors[index] ) ;\r",
                    "    resetTechSupportLogView() ;\r",
                    "    index ++;\r",
                    "    deleteVendors() ;\r",
                    "}\r",
                    "\r",
                    "function error(){\r",
                    "\r",
                    "     index ++;\r",
                    "    deleteVendors() ;\r",
                    "\r",
                    "}\r",
                    "\r",
                    "function resetTechSupportLogView(){\r",
                    "\r",
                    "        Ext.ComponentQuery.query('#latestLogsProblem')[0].setValue('');\r",
                    "\r",
                    "        Ext.ComponentQuery.query('#latestLogsSolution')[0].setValue('');\r",
                    "\r",
                    "        Ext.ComponentQuery.query('#borwseLatestLogStatusSelectFld')[0].setValue(null);\r",
                    "}"
                ]
            },
            "designerId": "46d1984e-8701-4621-87c3-28a8ccdcd92f"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "deleteUserRoles",
                "implHandler": [
                    "/*\r",
                    "\r",
                    "\r",
                    "deleteUserRoleSelectFld\r",
                    "deleteUserRolePlcaeHolderSelectFld\r",
                    "*/\r",
                    "\r",
                    "var roleToDelete = Ext.ComponentQuery.query('#deleteUserRoleSelectFld')[0].getValue() ;\r",
                    "var placeHolderRole = Ext.ComponentQuery.query('#deleteUserRolePlcaeHolderSelectFld')[0].getValue() ;\r",
                    "\r",
                    "if(! roleToDelete || ! placeHolderRole){\r",
                    "\r",
                    "    return;\r",
                    "}\r",
                    "\r",
                    "\r",
                    "var recordToDelete ;\r",
                    "\r",
                    "var that = this ;\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "var masterStore = Ext.getStore('PermisstionsStore');\r",
                    "\r",
                    "var recIndex = masterStore.findExact(\"user_role\",roleToDelete);\r",
                    "\r",
                    "if(recIndex == -1 ){\r",
                    "\r",
                    "    return ;\r",
                    "}\r",
                    "\r",
                    "recordToDelete = masterStore.getAt(recIndex);\r",
                    "\r",
                    "\r",
                    "Ext.Msg.confirm(\"Confirm\",\"Are you sure you want to delete records.\",onMessageAns ,this);\r",
                    "\r",
                    "\r",
                    "function onMessageAns(action,opt,confirmBox){\r",
                    "\r",
                    "\r",
                    "    if(action == \"yes\"){\r",
                    "\r",
                    "\r",
                    "         Ext.Viewport.setMasked({\r",
                    "                                    xtype: 'loadmask'\r",
                    "                                });\r",
                    "\r",
                    "\r",
                    "        deleteVendors() ;\r",
                    "\r",
                    "    }else{\r",
                    "\r",
                    "\r",
                    "        return ;\r",
                    "    }\r",
                    "\r",
                    "\r",
                    "}\r",
                    "\r",
                    "\r",
                    "function deleteVendors(){\r",
                    "\r",
                    "\r",
                    "    var dataToUpdate = {\r",
                    "\r",
                    "        delete_status:true\r",
                    "    };\r",
                    "      RMdatalink.iwa.rdl.doUpdateCollection(masterStore, dataToUpdate ,recordToDelete.raw._id , success, error );\r",
                    "\r",
                    "\r",
                    "\r",
                    "}\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "function success(){\r",
                    "\r",
                    "    masterStore.remove( recordToDelete ) ;\r",
                    "   applyPlaceHolderRole() ;\r",
                    "\r",
                    "}\r",
                    "\r",
                    "function error(){\r",
                    "\r",
                    "Ext.Viewport.setMasked(false);\r",
                    "}\r",
                    "\r",
                    "\r",
                    "var inhouseRec ;\r",
                    "\r",
                    "\r",
                    "function applyPlaceHolderRole(){\r",
                    "\r",
                    "    var searchQuery = {\r",
                    "\r",
                    "        user_role:roleToDelete\r",
                    "    };\r",
                    "\r",
                    "    var changedRole = {\r",
                    "        \"user_role\": placeHolderRole\r",
                    "    };\r",
                    "\r",
                    "    var inhouseMasterStore = Ext.getStore('inhouseMasterStore') ;\r",
                    "\r",
                    "    inhouseRec = inhouseMasterStore.findRecord(\"user_role\",roleToDelete);\r",
                    "\r",
                    "     if(inhouseRec)\r",
                    "     {\r",
                    "         RMdatalink.iwa.rdl.doUpdateCollection(inhouseMasterStore, changedRole ,inhouseRec.raw._id  ,onUserUpdateSuccess , onUserUpdateFails );\r",
                    "     }else{\r",
                    "\r",
                    "          RMdatalink.app.getController('RetailerDeatilsDataSet').setInhouseData();\r",
                    "         Ext.Viewport.setMasked(false);\r",
                    "     }\r",
                    "\r",
                    "}\r",
                    "\r",
                    "\r",
                    "function onUserUpdateSuccess(){\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "        inhouseRec.set(\"user_role\",placeHolderRole);\r",
                    "        inhouseRec.dirty = true ;\r",
                    "\r",
                    "    applyPlaceHolderRole() ;\r",
                    "\r",
                    "\r",
                    "}\r",
                    "\r",
                    "\r",
                    "function onUserUpdateFails(){\r",
                    "\r",
                    "    Ext.Viewport.setMasked(false);\r",
                    "}\r",
                    "\r",
                    ""
                ]
            },
            "designerId": "4e526403-7ea5-43c3-aca5-e123dd8aebb0"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button[itemId=deleteUserRoleCacelBtn]",
                "designer|targetType": "Ext.Button",
                "fn": "deleteUserRoleCacelBtnTap",
                "implHandler": [
                    "Ext.ComponentQuery.query(\"#DeleteUserRoleScreen\")[0].hide();\r",
                    "\r",
                    "Ext.ComponentQuery.query(\"#DeleteUserRoleScreen\")[0].destroy() ;"
                ],
                "name": "tap"
            },
            "designerId": "eb6b4bdc-3dda-46b7-a907-d6244a19dbc3"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button[itemId=permissionSelectorDeleteRoleBtn]",
                "designer|targetType": "Ext.Button",
                "fn": "onpermissionSelectorDeleteRoleBtnTap",
                "implHandler": [
                    "\r",
                    "\r",
                    "getDeleteUserRoleScreen().show();\r",
                    "\r",
                    "function getDeleteUserRoleScreen(){\r",
                    "\r",
                    "    if(Ext.ComponentQuery.query(\"#DeleteUserRoleScreen\")[0])\r",
                    "    {\r",
                    "\r",
                    "     return Ext.ComponentQuery.query(\"#DeleteUserRoleScreen\")[0];\r",
                    "\r",
                    "    }else{\r",
                    "\r",
                    "     return Ext.widget('DeleteUserRoleScreen');\r",
                    "    }\r",
                    "\r",
                    "}"
                ],
                "name": "tap"
            },
            "designerId": "f471c1ee-0d7d-46c7-b791-0a316986a396"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button[itemId=deleteUserRoleDeleteBtn]",
                "designer|targetType": "Ext.Button",
                "fn": "ondeleteUserRoleDeleteBtnTap",
                "implHandler": [
                    "this.deleteUserRoles() ;"
                ],
                "name": "tap"
            },
            "designerId": "a141bbea-e221-430a-97fd-2d264b6f9f51"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "deleteInvoiceFromHistory",
                "implHandler": [
                    "var vendors = Ext.ComponentQuery.query('#billingDtHistoryListPanel')[0].down('#mainList').getSelection();\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "var that = this ;\r",
                    "\r",
                    "\r",
                    "\r",
                    "var masterStore = Ext.getStore('InvoiceHistoryStore');\r",
                    "if(vendors.length == 0 ){\r",
                    "    Ext.Msg.alert(\"Alert\",\"Select at least one record to delete\",Ext.emptyFn);\r",
                    "    return ;\r",
                    "}\r",
                    "\r",
                    "\r",
                    "var isPayments = Ext.getStore('InvoicePaymentsStore').getData().all.length > 0 ;\r",
                    "\r",
                    "// if(vendors[0].data.payments && vendors[0].data.payments.length !=  0){\r",
                    "if(isPayments){\r",
                    "\r",
                    "    Ext.Msg.alert(\"Alert\",\"Can not delete paid invoice, Delete payments and try again.\",Ext.emptyFn);\r",
                    "    return ;\r",
                    "}\r",
                    "\r",
                    "\r",
                    "Ext.Msg.confirm(\"Confirm\",\"Are you sure you want to delete records.\",onMessageAns ,this);\r",
                    "\r",
                    "\r",
                    "function onMessageAns(action,opt,confirmBox){\r",
                    "\r",
                    "\r",
                    "    if(action == \"yes\"){\r",
                    "\r",
                    "\r",
                    "         Ext.Viewport.setMasked({\r",
                    "                                    xtype: 'loadmask'\r",
                    "                                });\r",
                    "\r",
                    "\r",
                    "        deleteVendors() ;\r",
                    "\r",
                    "    }else{\r",
                    "\r",
                    "\r",
                    "        return ;\r",
                    "    }\r",
                    "\r",
                    "\r",
                    "}\r",
                    "\r",
                    "\r",
                    "var index = 0 ;\r",
                    " var rec = null ;\r",
                    "function deleteVendors(){\r",
                    "\r",
                    "\r",
                    "    if(index < vendors.length )\r",
                    "    {\r",
                    "    var dataToUpdate = {\r",
                    "\r",
                    "        delete_status:true\r",
                    "    };\r",
                    "\r",
                    "\r",
                    "\r",
                    "      rec = vendors[index];\r",
                    "\r",
                    "        if(!rec.raw){\r",
                    "\r",
                    "             Ext.Viewport.setMasked(false);\r",
                    "             return ;\r",
                    "        }\r",
                    "\r",
                    "      var _id = rec.raw._id ;\r",
                    "      RMdatalink.iwa.rdl.doUpdateCollection(masterStore, dataToUpdate ,_id , success, error );\r",
                    "\r",
                    "    }else{\r",
                    "\r",
                    "        Ext.Viewport.setMasked(false);\r",
                    "\r",
                    "       // Ext.ComponentQuery.query('#billingDtlsViewCurrentSubBtn')[0].fireEvent('tap');\r",
                    "    }\r",
                    "\r",
                    "}\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "function success(){\r",
                    "\r",
                    "    RMdatalink.app.getController('InvoiceHistoryController').setUpPrevInvoice(rec.data);\r",
                    "\r",
                    "    masterStore.remove( rec ) ;\r",
                    "\r",
                    "    index ++;\r",
                    "    deleteVendors() ;\r",
                    "}\r",
                    "\r",
                    "function error(){\r",
                    "\r",
                    "     index ++;\r",
                    "    deleteVendors() ;\r",
                    "\r",
                    "}"
                ]
            },
            "designerId": "76243db1-a8a0-43c8-8ef7-6e860287d0f8"
        }
    ]
}