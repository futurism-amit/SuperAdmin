{
    "type": "Ext.app.Controller",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "browseLatestScreenTechLog": [
            "null"
        ],
        "browseTechSupportBtnWindow": [
            "{}"
        ],
        "clock": 0,
        "currentSelectedRecord": [
            "null"
        ],
        "designer|userClassName": "TechSupportLog",
        "detailScreenTechLog": [
            "null"
        ],
        "isTimerStarted": false,
        "requestFromSpecificCompany": false,
        "techLogRecordToUpdate": [
            "{}"
        ],
        "techSupportWindow": [
            "{}"
        ],
        "tempCompanyId": null,
        "timeHr": 0,
        "timeMin": 0,
        "timeSec": 0
    },
    "configAlternates": {
        "timeHr": "number",
        "timeMin": "number",
        "timeSec": "number",
        "clock": "number",
        "isTimerStarted": "boolean",
        "techSupportWindow": "object",
        "browseTechSupportBtnWindow": "object",
        "detailScreenTechLog": "object",
        "isStoreUpdated": "boolean",
        "techLogRecordToUpdate": "object",
        "browseLatestScreenTechLog": "object",
        "currentSelectedRecord": "object",
        "requestFromSpecificCompany": "boolean"
    },
    "designerId": "b6aa7374-ed83-4a35-a699-c191d842ce50",
    "customConfigs": [
        {
            "group": "(Custom Properties)",
            "name": "timeHr",
            "type": "string"
        },
        {
            "group": "(Custom Properties)",
            "name": "timeMin",
            "type": "string"
        },
        {
            "group": "(Custom Properties)",
            "name": "timeSec",
            "type": "string"
        },
        {
            "group": "(Custom Properties)",
            "name": "clock",
            "type": "string"
        },
        {
            "group": "(Custom Properties)",
            "name": "isTimerStarted",
            "type": "string"
        },
        {
            "group": "(Custom Properties)",
            "name": "techSupportWindow",
            "type": "string"
        },
        {
            "group": "(Custom Properties)",
            "name": "tempCompanyId",
            "type": "string"
        },
        {
            "group": "(Custom Properties)",
            "name": "tempCompany_logo",
            "type": "string"
        },
        {
            "group": "(Custom Properties)",
            "name": "browseTechSupportBtnWindow",
            "type": "string"
        },
        {
            "group": "(Custom Properties)",
            "name": "detailScreenTechLog",
            "type": "string"
        },
        {
            "group": "(Custom Properties)",
            "name": "isStoreUpdated",
            "type": "string"
        },
        {
            "group": "(Custom Properties)",
            "name": "techLogRecordToUpdate",
            "type": "string"
        },
        {
            "group": "(Custom Properties)",
            "name": "browseLatestScreenTechLog",
            "type": "string"
        },
        {
            "group": "(Custom Properties)",
            "name": "currentSelectedRecord",
            "type": "string"
        },
        {
            "group": "(Custom Properties)",
            "name": "requestFromSpecificCompany",
            "type": "string"
        }
    ],
    "cn": [
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "startTimer",
                "implHandler": [
                    "\r",
                    "\r",
                    "  //this.setIsTimerStarted(true);\r",
                    "\r",
                    "  this.resetTimer() ;\r",
                    "\r",
                    " // this.setTimerFields() ;\r",
                    "\r",
                    "  var _this= this;\r",
                    "\r",
                    "  Ext.Function.defer(_this.onInterval, 1000, _this);\r",
                    "\r",
                    ""
                ]
            },
            "designerId": "9c7ec3bc-9475-443c-90b8-ae954ac300a6"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "onInterval",
                "implHandler": [
                    "\r",
                    "\r",
                    "if( this.getIsTimerStarted()){\r",
                    "            this.setClock(this.getClock() + 1);\r",
                    "            var seconds = this.getClock() ;// 1000;\r",
                    "            var minutes = Math.floor(seconds / 60);\r",
                    "            var hours = Math.floor(minutes / 60);\r",
                    "            seconds = Math.floor(seconds % 60);\r",
                    "\r",
                    "\r",
                    "            this.setTimeHr(hours);\r",
                    "            this.setTimeMin(minutes);\r",
                    "            this.setTimeSec(seconds);\r",
                    "\r",
                    "            this.setTimerFields() ;\r",
                    "\r",
                    "            var _this = this ;\r",
                    "\r",
                    "            Ext.Function.defer(_this.onInterval, 1000, _this);\r",
                    "}else{\r",
                    "\r",
                    "            var _this = this ;\r",
                    "\r",
                    "            Ext.Function.defer(_this.onInterval, 1000, _this);\r",
                    "\r",
                    "}"
                ]
            },
            "designerId": "5b2ec7a1-49ad-4f01-a9c0-71addc4cc1b5"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "endTimer",
                "implHandler": [
                    " this.setIsTimerStarted(false);"
                ]
            },
            "designerId": "03473611-53de-479e-9fb5-c132bf24b811"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "cancelTimer",
                "implHandler": [
                    " this.setIsTimerStarted(false);\r",
                    "  this.resetTimer() ;\r",
                    ""
                ]
            },
            "designerId": "2c2e6a3a-2923-409b-81f6-ccc7748a3e85"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "resetTimer",
                "implHandler": [
                    "        this.setTimeHr(0);\r",
                    "        this.setTimeMin(0);\r",
                    "        this.setTimeSec(0);\r",
                    "        this.setClock(0);\r",
                    "\r",
                    ""
                ]
            },
            "designerId": "e4849368-9ac4-4551-940b-6a55cad13689"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "setTimerFields",
                "implHandler": [
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "Ext.ComponentQuery.query('#hrTechSupportfield')[0].setValue( this.getTimeHr()) ;\r",
                    "Ext.ComponentQuery.query('#minTechSupportfield')[0].setValue(this.getTimeMin()) ;\r",
                    "Ext.ComponentQuery.query('#secTechSupportfield')[0].setValue(this.getTimeSec()) ;\r",
                    "\r",
                    "\r",
                    ""
                ]
            },
            "designerId": "5307742c-389e-4b3a-bfa2-571ffb5777ff"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "requestTimer",
                "implHandler": [
                    "\r",
                    "\r",
                    "  this.setIsTimerStarted(true);\r",
                    "\r",
                    "  this.resetTimer() ;\r",
                    "\r",
                    "  this.setTimerFields() ;\r",
                    "\r",
                    "  var today = js_yyyy_mm_dd_hh_mm_ss();\r",
                    "\r",
                    "  Ext.ComponentQuery.query('#timeStartTechSupportTxtFld')[0].setValue(today) ;\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "function js_yyyy_mm_dd_hh_mm_ss () {\r",
                    "  now = new Date();\r",
                    "  year = \"\" + now.getFullYear();\r",
                    "  month = \"\" + (now.getMonth() + 1); if (month.length == 1) { month = \"0\" + month; }\r",
                    "  day = \"\" + now.getDate(); if (day.length == 1) { day = \"0\" + day; }\r",
                    "  hour = \"\" + now.getHours(); if (hour.length == 1) { hour = \"0\" + hour; }\r",
                    "  minute = \"\" + now.getMinutes(); if (minute.length == 1) { minute = \"0\" + minute; }\r",
                    "  second = \"\" + now.getSeconds(); if (second.length == 1) { second = \"0\" + second; }\r",
                    "  return  month + \"-\" + day + \"-\" + year + \" \" + hour + \":\" + minute + \":\" + second;\r",
                    "}\r",
                    "\r",
                    "  "
                ]
            },
            "designerId": "f6522914-18a3-40e8-b4a1-bd565a4e5666"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button[itemId=endBtnTechSupport]",
                "designer|targetType": "Ext.Button",
                "fn": "onButtonEndTechSupportTap",
                "implHandler": [
                    "\r",
                    "\r",
                    "switch(button.getText()){\r",
                    "\r",
                    "    case \"End\":\r",
                    "          this.setIsTimerStarted(false);\r",
                    "\r",
                    "        //  Ext.ComponentQuery.query('#RMTechSupportLog')[0].setText('Start Tech Support');\r",
                    "\r",
                    "          button.setText(\"Start\");\r",
                    "        break;\r",
                    "\r",
                    "    case \"Start\":\r",
                    "\r",
                    "          this.setIsTimerStarted(true);\r",
                    "\r",
                    "         // Ext.ComponentQuery.query('#RMTechSupportLog')[0].setText('Continue Tech Support');\r",
                    "\r",
                    "             button.setText(\"End\");\r",
                    "        break;\r",
                    "}\r",
                    "\r",
                    "\r",
                    ""
                ],
                "name": "tap"
            },
            "designerId": "72336b00-5107-430c-95d3-cf86208da4c2"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button[itemId=cancelBtnTechSupport]",
                "designer|targetType": "Ext.Button",
                "fn": "onCancelTechSupportBtnTap",
                "implHandler": [
                    "  this.setIsTimerStarted(false);\r",
                    "\r",
                    "  this.resetTimer() ;\r",
                    "\r",
                    "  this.setTimerFields() ;\r",
                    "\r",
                    " // Ext.ComponentQuery.query('#RMTechSupportLog')[0].setText('Start Tech Support');\r",
                    "\r",
                    "    Ext.ComponentQuery.query('#endBtnTechSupport')[0].setText(\"Start\");"
                ],
                "name": "tap"
            },
            "designerId": "e2639139-1a34-46ce-b9fa-ea56cd4dc1e2"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "saveTechSupportLogs",
                "implHandler": [
                    "\r",
                    "this.endTimer() ;\r",
                    "var _this = this ;\r",
                    "/*if(this.config.requestFromSpecificCompany){\r",
                    "    var TechSupportLogsStore = Ext.getStore('CompanySpecificTechSupportStore');\r",
                    "\r",
                    "}else\r",
                    "{\r",
                    "    var TechSupportLogsStore = Ext.getStore('TechSupportLogsStore');\r",
                    "}\r",
                    "*/\r",
                    "var TechSupportLogsStore = Ext.getStore('TechSupportLogsStore');\r",
                    "\r",
                    "var product_name =\"\";\r",
                    "var product_id =\"\" ;\r",
                    "\r",
                    "getProductInfo() ;\r",
                    "\r",
                    "\r",
                    "function getProductInfo(){\r",
                    "\r",
                    "    if(Ext.ComponentQuery.query('#datalinkProductTechSupportRadioFld')[0].getChecked()){\r",
                    "\r",
                    "          product_name = \"Datalink\" ;\r",
                    "          product_id  = \"1\" ;\r",
                    "          return ;\r",
                    "\r",
                    "    }\r",
                    "    if(Ext.ComponentQuery.query('#ecatalogProductTechSupportRadioFld')[0].getChecked()){\r",
                    "\r",
                    "          product_name = \"ECatalog\" ;\r",
                    "          product_id  = \"2\" ;\r",
                    "          return ;\r",
                    "\r",
                    "    }\r",
                    "    if(Ext.ComponentQuery.query('#smartCartProductTechSupportRadioFld')[0].getChecked()){\r",
                    "\r",
                    "          product_name = \"SMART Cart\" ;\r",
                    "          product_id  = \"3\" ;\r",
                    "          return ;\r",
                    "\r",
                    "    }\r",
                    "    if(Ext.ComponentQuery.query('#rmplcProductTechSupportRadioFld')[0].getChecked()){\r",
                    "\r",
                    "          product_name = \"RM PLC\" ;\r",
                    "          product_id  = \"4\" ;\r",
                    "          return ;\r",
                    "\r",
                    "    }\r",
                    "    if(Ext.ComponentQuery.query('#naProductTechSupportRadioFld')[0].getChecked()){\r",
                    "\r",
                    "          product_name = \"NA\" ;\r",
                    "          product_id  = \"5\" ;\r",
                    "          return ;\r",
                    "\r",
                    "    }\r",
                    "}\r",
                    "\r",
                    "var crmUser = RMdatalink.app.getController('LoginHandler').config.userDetails.userName ;\r",
                    "var data = {\r",
                    "                \"company\": Ext.ComponentQuery.query('#techSupportCompanyNameText')[0].getValue(),\r",
                    "                \"company_id\":RMdatalink.app.getController('TechSupportLog').config.tempCompanyId ,\r",
                    "                \"company_logo\":RMdatalink.app.getController('TechSupportLog').config.tempCompany_logo ,\r",
                    "                \"vendor_id\":\"\",\r",
                    "                \"crm_user\": crmUser ,\r",
                    "                \"crm_user_id\":\"\",\r",
                    "                \"time_start\": Ext.ComponentQuery.query('#timeStartTechSupportTxtFld')[0].getValue(),\r",
                    "                \"total_time\":{\r",
                    "                    \"hours\":Ext.ComponentQuery.query('#hrTechSupportfield')[0].getValue(),\r",
                    "                    \"minutes\":Ext.ComponentQuery.query('#minTechSupportfield')[0].getValue(),\r",
                    "                    \"seconds\":Ext.ComponentQuery.query('#secTechSupportfield')[0].getValue()\r",
                    "                },\r",
                    "                \"product_name\":product_name,\r",
                    "                \"product_id\":product_id,\r",
                    "                \"problem\":Ext.ComponentQuery.query('#problemTechSupportTxtArea')[0].getValue(),\r",
                    "                \"solution\":Ext.ComponentQuery.query('#solutionTechSupportTxtArea')[0].getValue(),\r",
                    "                \"status\":\"Pending\",\r",
                    "                \"status_id\":\"1\"\r",
                    "            } ;\r",
                    "\r",
                    "\r",
                    "//TechSupportLogsStore.add(data) ;\r",
                    "//TechSupportLogsStore.sync() ;\r",
                    "\r",
                    "\r",
                    "function successCallBack(){\r",
                    "    console.log(arguments);\r",
                    "\r",
                    "     var isVdr = Ext.ComponentQuery.query('#searchForVendorRadioFld')[0].isChecked() ;\r",
                    "    RMdatalink.app.getController('RecentActivityController').onTechSupportLog(data.time_start , data.company ,data.problem ,isVdr ? \"vendor\":\"retailer\");\r",
                    "\r",
                    "\r",
                    "\r",
                    "if(_this.config.requestFromSpecificCompany){\r",
                    "\r",
                    "    RMdatalink.app.getController('TechSupportLog').loadVendorRetailerSpecificStore(data.company,\"NotDefined\" );\r",
                    "\r",
                    "\r",
                    "}else\r",
                    "{\r",
                    "\r",
                    "    RMdatalink.app.getController('PaginationController').setCurrentActiveStoreId('TechSupportLogsStore') ;\r",
                    "    RMdatalink.app.getController('PaginationController').loadStore(1,RMdatalink.util.DataLoader.getPageSize(),false);\r",
                    "\r",
                    "\r",
                    "}\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "Ext.ComponentQuery.query('#RMTechSupportLog')[0].setStyle('background-color:transparent;');\r",
                    " Ext.ComponentQuery.query('#RMTechSupportLog')[0].setText(\"Start Tech Support\");\r",
                    "\r",
                    "    var popup =  RMdatalink.app.getController('TechSupportLog').config.techSupportWindow ;\r",
                    " popup.hide();\r",
                    " //Ext.Msg.alert('Success.', 'Record Added Successfully.', Ext.emptyFn);\r",
                    "\r",
                    "\r",
                    "\r",
                    " // RMdatalink.app.getController('TechSupportLog').refreshTempTechLogs();\r",
                    "\r",
                    "\r",
                    " Ext.ComponentQuery.query('#problemTechSupportTxtArea')[0].setValue(\"\");\r",
                    "\r",
                    " Ext.ComponentQuery.query('#solutionTechSupportTxtArea')[0].setValue(\"\");\r",
                    "\r",
                    "\r",
                    "}\r",
                    "\r",
                    "\r",
                    "function errorCallBack(){\r",
                    "    Ext.Msg.alert('Error.', 'Error In Adding TechSupportLog.', Ext.emptyFn);\r",
                    "      Ext.Viewport.setMasked(false);\r",
                    "    console.log(arguments);\r",
                    "}\r",
                    " console.log(data);\r",
                    " RMdatalink.util.DataLoader.sendNewRecordForRetailerToServer(data,TechSupportLogsStore,successCallBack,errorCallBack) ;\r",
                    "\r",
                    "  Ext.Viewport.setMasked({\r",
                    "                    xtype: 'loadmask'\r",
                    "                });\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    ""
                ]
            },
            "designerId": "3b37b181-2131-40b8-8aac-d8b4586ce291"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button[itemId=RMTechSupportLog]",
                "designer|targetType": "Ext.Button",
                "fn": "onRMTechSupportLogButtonTap",
                "implHandler": [
                    "\r",
                    "switch(button.getText()){\r",
                    "\r",
                    "    case \"Start Tech Support\":\r",
                    "        this.config.requestFromSpecificCompany = false ;\r",
                    "\r",
                    "        RMdatalink.app.getController('TechSupportLog').config.tempCompanyId =  \"\";\r",
                    "        RMdatalink.app.getController('TechSupportLog').config.tempCompany_logo =\"\";\r",
                    "                if(Ext.getCmp(\"techSupportTimerWindow\"))\r",
                    "                {\r",
                    "\r",
                    "                    ///   Ext.getCmp(\"techSupportTimerWindow\").destroy();\r",
                    "\r",
                    "                }else{\r",
                    "\r",
                    "                    RMdatalink.app.getController('TechSupportLog').config.techSupportWindow = Ext.widget('techSupportTimerWindow');\r",
                    "                }\r",
                    "\r",
                    "\r",
                    "                var popup =  RMdatalink.app.getController('TechSupportLog').config.techSupportWindow ;\r",
                    "                popup.showBy(button);\r",
                    "\r",
                    "                RMdatalink.app.getController('TechSupportLog').requestTimer() ;\r",
                    "\r",
                    "\r",
                    "                Ext.ComponentQuery.query('#techSupportCompanyNameText')[0].setValue();\r",
                    "\r",
                    "\r",
                    "\r",
                    "        button.setStyle('background-color:rgba(163, 30, 30, 0.91);');\r",
                    "\r",
                    "\r",
                    "        button.setText('Continue Tech Support');\r",
                    "         Ext.ComponentQuery.query('#endBtnTechSupport')[0].setText(\"End\");\r",
                    "        Ext.ComponentQuery.query('#techSupportCompanyNameText')[0].setDisabled(false);\r",
                    "\r",
                    "        break;\r",
                    "    case \"Continue Tech Support\":\r",
                    "\r",
                    "        // button.setText('Start Tech Support');\r",
                    "       // Ext.ComponentQuery.query('#RMTechSupportLog')[0].setStyle('background-color:transparent;');\r",
                    "         var popup =  RMdatalink.app.getController('TechSupportLog').config.techSupportWindow ;\r",
                    "         popup.showBy(button);\r",
                    "\r",
                    "        break;\r",
                    "}\r",
                    "\r",
                    "\r",
                    "\r",
                    ""
                ],
                "name": "tap"
            },
            "designerId": "4f630b16-638b-4588-9348-624e4a53a54b"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button[itemId=saveTechSupportBtn]",
                "designer|targetType": "Ext.Button",
                "fn": "onsaveTechSupportButtonTap",
                "implHandler": [
                    "\r",
                    "this.saveTechSupportLogs() ;\r",
                    "\r",
                    ""
                ],
                "name": "tap"
            },
            "designerId": "47b3e590-a655-4b5b-b884-04ec3263b5f3"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "refreshTempTechLogs",
                "implHandler": [
                    "\r",
                    "    var isRetailerDetailsView = RMdatalink.app.getController('UINav').isRetailerDetailsView;\r",
                    "    var selectedUserRecord = RMdatalink.util.globalConfig.getDataToShowInSettingWindow() ;\r",
                    "\r",
                    "\r",
                    "    if( !( Object.keys(selectedUserRecord).length  )   ){\r",
                    "        // USER CLICKED ON ADD NEW RETAILER BTN\r",
                    "\r",
                    "           var id = \"ZQA123456XXXXXXQQQQQ\";\r",
                    "    }\r",
                    "    else{\r",
                    "     //   var id = selectedUserRecord.record.data._id ;\r",
                    "\r",
                    "        var id =   RMdatalink.app.getController('TechSupportLog').config.currentSelectedRecord.raw._id ;\r",
                    "    }\r",
                    "\r",
                    "\r",
                    "console.log(id);\r",
                    "\r",
                    "var TechSupportLogsStore = Ext.getStore('TechSupportLogsStore');\r",
                    "\r",
                    "TechSupportLogsStore.clearFilter();\r",
                    "\r",
                    "TechSupportLogsStore.filter(function(record){\r",
                    "   console.log(record.data.company_id);\r",
                    "    if(record.data.company_id == id){\r",
                    "        return true ;\r",
                    "    }else{\r",
                    "        return false ;\r",
                    "    }\r",
                    "});\r",
                    "/*\r",
                    "try{\r",
                    "var TechSupportLogsStore = Ext.getStore('TechSupportLogsStore') ;\r",
                    "\r",
                    "var TempTechSupportLogStore = Ext.getStore(\"TempTechSupportLogStore\");\r",
                    "\r",
                    "\r",
                    "    var isRetailerDetailsView = RMdatalink.app.getController('UINav').isRetailerDetailsView;\r",
                    "    var selectedUserRecord = RMdatalink.util.globalConfig.getDataToShowInSettingWindow() ;\r",
                    "\r",
                    "\r",
                    "    if( !( Object.keys(selectedUserRecord).length  )   ){\r",
                    "        // USER CLICKED ON ADD NEW RETAILER BTN\r",
                    "\r",
                    "           var id = \"ZQA123456XXXXXXQQQQQ\";\r",
                    "    }\r",
                    "    else{\r",
                    "     //   var id = selectedUserRecord.record.data._id ;\r",
                    "\r",
                    "        var id = selectedUserRecord.record.data.vendor_name ;\r",
                    "    }\r",
                    "\r",
                    " var logs = getArrayData(TechSupportLogsStore);\r",
                    "\r",
                    " var data = new Array();\r",
                    "for(var i=0;i <logs.length; i++){\r",
                    "\r",
                    "  if(logs[i].company_id == id ){\r",
                    " //if(logs[i].company == id ){\r",
                    "        data.push(logs[i]) ;\r",
                    "\r",
                    "    }\r",
                    "}\r",
                    "\r",
                    "\r",
                    "TempTechSupportLogStore.removeAll();\r",
                    "TempTechSupportLogStore.sync();\r",
                    "\r",
                    "\r",
                    "TempTechSupportLogStore.setData(data);\r",
                    "TempTechSupportLogStore.sync() ;\r",
                    "\r",
                    "\r",
                    "function getArrayData(store){\r",
                    "        var data = new Array();\r",
                    "        data = store.getData().items;\r",
                    "\r",
                    "        var dataToReturn = new Array();\r",
                    "\r",
                    "        for(var i=0; i < data.length ; i++){\r",
                    "\r",
                    "            dataToReturn.push(data[i].raw);\r",
                    "        }\r",
                    "\r",
                    "        return dataToReturn ;\r",
                    "}\r",
                    "\r",
                    "}  catch(ex){\r",
                    "\r",
                    "        console.error(ex);\r",
                    "    }\r",
                    "\r",
                    "    */"
                ]
            },
            "designerId": "c7bfc1e3-3348-4a3e-a318-ae0eab916e18"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "args"
                ],
                "fn": "onTechSupportLogSelect",
                "implHandler": [
                    "console.log(args);\r",
                    "\r",
                    "var record = args[1] ;\r",
                    "\r",
                    "\r",
                    "this.config.detailScreenTechLog = record ;\r",
                    "\r",
                    "Ext.ComponentQuery.query('#rtVdrResizableTLogProbFld')[0].setDisabled(false);\r",
                    "\r",
                    "Ext.ComponentQuery.query('#rtVdrResizableTLogSolnFld')[0].setDisabled(false);\r",
                    "\r",
                    "\r",
                    "\r",
                    "Ext.ComponentQuery.query('#RDTechSupportLogsStatusSelectFld')[0].setDisabled(false);\r",
                    "if(record.data.status_id){\r",
                    "    Ext.ComponentQuery.query('#RDTechSupportLogsStatusSelectFld')[0].setValue(record.data.status_id);\r",
                    "}else{\r",
                    "       Ext.ComponentQuery.query('#RDTechSupportLogsStatusSelectFld')[0].setValue(null);\r",
                    "}\r",
                    "\r",
                    "\r",
                    "Ext.ComponentQuery.query('#rtVdrResizableTLogProbFld')[0].setValue(record.data.problem);\r",
                    "\r",
                    "Ext.ComponentQuery.query('#rtVdrResizableTLogSolnFld')[0].setValue(record.data.solution);"
                ]
            },
            "designerId": "e477be9c-09a6-4f91-b1e4-b4b56f66471b"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "args"
                ],
                "fn": "latestLogListSelect",
                "implHandler": [
                    "console.log(args);\r",
                    "\r",
                    "var record = args[1] ;\r",
                    "\r",
                    "\r",
                    "this.config.browseLatestScreenTechLog = record ;\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "Ext.ComponentQuery.query('#browseLatLogResizableProbFld')[0].setDisabled(false);\r",
                    "\r",
                    "Ext.ComponentQuery.query('#browseLatLogResizableSolFld')[0].setDisabled(false);\r",
                    "\r",
                    "Ext.ComponentQuery.query('#borwseLatestLogStatusSelectFld')[0].setDisabled(false);\r",
                    "if(record.data.status_id){\r",
                    "    Ext.ComponentQuery.query('#borwseLatestLogStatusSelectFld')[0].setValue(record.data.status_id);\r",
                    "}else{\r",
                    "       Ext.ComponentQuery.query('#borwseLatestLogStatusSelectFld')[0].setValue(null);\r",
                    "}\r",
                    "Ext.ComponentQuery.query('#browseLatLogResizableProbFld')[0].setValue(record.data.problem);\r",
                    "\r",
                    "Ext.ComponentQuery.query('#browseLatLogResizableSolFld')[0].setValue(record.data.solution);\r",
                    "\r",
                    ""
                ]
            },
            "designerId": "3302c4b5-d90c-40da-8462-aae468958a1a"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button[itemId=RDTechSupportAddBtn]",
                "designer|targetType": "Ext.Button",
                "fn": "onRDTechSupportAddButtonTap",
                "implHandler": [
                    "\r",
                    "var globalTechButton =  Ext.ComponentQuery.query('#RMTechSupportLog')[0] ;\r",
                    "\r",
                    "\r",
                    "switch(globalTechButton.getText()){\r",
                    "\r",
                    "    case \"Start Tech Support\":\r",
                    "\r",
                    "                    this.config.requestFromSpecificCompany = true ;\r",
                    "\r",
                    "\r",
                    "\r",
                    "                    if(Ext.getCmp(\"techSupportTimerWindow\"))\r",
                    "                    {\r",
                    "\r",
                    "                     ///   Ext.getCmp(\"techSupportTimerWindow\").destroy();\r",
                    "\r",
                    "                    }else{\r",
                    "\r",
                    "                       RMdatalink.app.getController('TechSupportLog').config.techSupportWindow = Ext.widget('techSupportTimerWindow');\r",
                    "                    }\r",
                    "\r",
                    "\r",
                    "                    var popup =  RMdatalink.app.getController('TechSupportLog').config.techSupportWindow ;\r",
                    "                    popup.showBy(button);\r",
                    "\r",
                    "                     Ext.ComponentQuery.query('#RMTechSupportLog')[0].setStyle('background-color:rgba(163, 30, 30, 0.91);');\r",
                    "                     Ext.ComponentQuery.query('#RMTechSupportLog')[0].setText('Continue Tech Support') ;\r",
                    "\r",
                    "\r",
                    "                     Ext.ComponentQuery.query('#endBtnTechSupport')[0].setText(\"End\");\r",
                    "                    RMdatalink.app.getController('TechSupportLog').requestTimer() ;\r",
                    "\r",
                    "\r",
                    "                    Ext.ComponentQuery.query('#techSupportCompanyNameText')[0].setValue(Ext.ComponentQuery.query('#RDStoreName')[0].getValue());\r",
                    "\r",
                    "                    Ext.ComponentQuery.query('#techSupportCompanyNameText')[0].setDisabled(true);\r",
                    "\r",
                    "                      // Ext.Msg.alert('Alert.', 'Development is in progress.', Ext.emptyFn);\r",
                    "\r",
                    "\r",
                    "                    var isRetailerDetailsView = RMdatalink.app.getController('UINav').isRetailerDetailsView;\r",
                    "                        var selectedUserRecord = RMdatalink.util.globalConfig.getDataToShowInSettingWindow() ;\r",
                    "\r",
                    "                    console.log(selectedUserRecord) ;\r",
                    "\r",
                    "                        if( !( Object.keys(selectedUserRecord).length  )   ){\r",
                    "                            // USER CLICKED ON ADD NEW RETAILER BTN\r",
                    "\r",
                    "                            RMdatalink.app.getController('TechSupportLog').config.tempCompanyId =  \"\";\r",
                    "                        }\r",
                    "                        else{\r",
                    "                            RMdatalink.app.getController('TechSupportLog').config.tempCompanyId =  \"\" ; // RMdatalink.app.getController('TechSupportLog').config.currentSelectedRecord.raw._id ;\r",
                    "                        }\r",
                    "\r",
                    "\r",
                    "\r",
                    "                    console.log(   RMdatalink.app.getController('TechSupportLog').config.tempCompanyId) ;\r",
                    "\r",
                    "        break ;\r",
                    "       case \"Continue Tech Support\":\r",
                    "\r",
                    "\r",
                    "      //  Ext.ComponentQuery.query('#RMTechSupportLog')[0].setStyle('background-color:transparent;');\r",
                    "        // button.setText('Start Tech Support');\r",
                    "         var popup =  RMdatalink.app.getController('TechSupportLog').config.techSupportWindow ;\r",
                    "\r",
                    "\r",
                    "        if(!this.config.requestFromSpecificCompany){\r",
                    "\r",
                    "            popup.showBy(globalTechButton);\r",
                    "            Ext.Msg.alert('Alert.', 'Technical Log is already running.', Ext.emptyFn);\r",
                    "\r",
                    "        }else{\r",
                    "\r",
                    "            popup.showBy(button);\r",
                    "        }\r",
                    "\r",
                    "        break;\r",
                    "}"
                ],
                "name": "tap"
            },
            "designerId": "280235c9-e5d6-46a3-a851-cfe021c140f1"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button[itemId=RDTechSupportSaveBtn]",
                "designer|targetType": "Ext.Button",
                "fn": "onRDTechSupportSaveBtnTap",
                "implHandler": [
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "Ext.ComponentQuery.query('#rtVdrResizableTLogProbFld')[0].setDisabled(true);\r",
                    "\r",
                    "Ext.ComponentQuery.query('#rtVdrResizableTLogSolnFld')[0].setDisabled(true);\r",
                    "\r",
                    "Ext.ComponentQuery.query('#RDTechSupportLogsStatusSelectFld')[0].setDisabled(true);\r",
                    "\r",
                    "var problem = Ext.ComponentQuery.query('#rtVdrResizableTLogProbFld')[0].getValue();\r",
                    "\r",
                    "var solution = Ext.ComponentQuery.query('#rtVdrResizableTLogSolnFld')[0].getValue();\r",
                    "\r",
                    "\r",
                    "\r",
                    "var status  = Ext.ComponentQuery.query('#RDTechSupportLogsStatusSelectFld')[0].getValue();\r",
                    "\r",
                    "var statusType = \"\";\r",
                    "switch(status){\r",
                    "    case \"1\":\r",
                    "        statusType =  \"Pending\";\r",
                    "    break;\r",
                    "    case \"2\":\r",
                    "        statusType =  \"In Progress\";\r",
                    "    break;\r",
                    "    case \"3\":\r",
                    "        statusType =  \"Completed\";\r",
                    "    break;\r",
                    "\r",
                    "\r",
                    "}\r",
                    "/////////////////////////////////////////////////////\r",
                    "/////////////////////////\r",
                    "\r",
                    "\r",
                    "\r",
                    "var globalTechLogStore  = Ext.getStore('TechSupportLogsStore') ;\r",
                    "var techLogStore = Ext.getStore('CompanySpecificTechSupportStore');\r",
                    "\r",
                    "\r",
                    "if (this.config.detailScreenTechLog ) {\r",
                    "\r",
                    "    var updatedRecord =  this.config.detailScreenTechLog.data;\r",
                    "\r",
                    "\r",
                    "\r",
                    "    updatedRecord.problem = problem;\r",
                    "    updatedRecord.solution = solution;\r",
                    "    updatedRecord.status = statusType;\r",
                    "    updatedRecord.status_id = status ;\r",
                    "\r",
                    "\r",
                    "    this.config.isStoreUpdated = true;\r",
                    "\r",
                    "    this.config.detailScreenTechLog.set(updatedRecord);\r",
                    "\r",
                    "    this.config.detailScreenTechLog.dirty = true;\r",
                    "    console.log(this.config.detailScreenTechLog)     ;\r",
                    "    this.config.techLogRecordToUpdate =  this.config.detailScreenTechLog;\r",
                    "    techLogStore.sync();\r",
                    "\r",
                    "\r",
                    "    Ext.Msg.alert('Success.', 'Record Updated Successfully.', Ext.emptyFn);\r",
                    "    this.config.detailScreenTechLog = null;\r",
                    "\r",
                    "    var list = Ext.ComponentQuery.query('#RDCRMTab')[0].down('#mainList');\r",
                    "\r",
                    "    list.deselectAll();\r",
                    "\r",
                    "}\r",
                    "/////////////////////////////////////////////////////\r",
                    "////////////////////////////\r",
                    "\r",
                    "\r",
                    "Ext.ComponentQuery.query('#rtVdrResizableTLogProbFld')[0].setValue('');\r",
                    "\r",
                    "Ext.ComponentQuery.query('#rtVdrResizableTLogSolnFld')[0].setValue('');\r",
                    "\r",
                    "\r",
                    "Ext.ComponentQuery.query('#RDTechSupportLogsStatusSelectFld')[0].setValue(null);\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "/*\r",
                    "var techLogStore  = Ext.getStore('TechSupportLogsStore') ;\r",
                    "\r",
                    "    var tempTechStr = Ext.getStore('TempTechSupportLogStore') ;\r",
                    "\r",
                    "if(this.config.detailScreenTechLog){\r",
                    "\r",
                    "    var updatedRecord = this.config.detailScreenTechLog.data ;\r",
                    "\r",
                    "    var problem = Ext.ComponentQuery.query('#RDNotepadNoteProblem')[0].getValue();\r",
                    "\r",
                    "    var solution = Ext.ComponentQuery.query('#RDNotepadNoteSolution')[0].getValue();\r",
                    "\r",
                    "    updatedRecord.problem = problem ;\r",
                    "    updatedRecord.solution = solution ;\r",
                    "\r",
                    "            this.config.detailScreenTechLog.set(updatedRecord);\r",
                    "            this.config.detailScreenTechLog.dirty= true;\r",
                    "\r",
                    "    try{\r",
                    "\r",
                    "       var techLogRecord =  techLogStore.findRecord('id',this.config.detailScreenTechLog.get('id'));\r",
                    "\r",
                    "\r",
                    "        console.log(techLogRecord) ;\r",
                    "\r",
                    "        var TEST = techLogRecord.data ;\r",
                    "            TEST.problem = problem ;\r",
                    "            TEST.solution = solution ;\r",
                    "\r",
                    "\r",
                    "        this.config.isStoreUpdated = true ;\r",
                    "        techLogRecord.set(TEST);\r",
                    "        techLogRecord.dirty= true;\r",
                    "\r",
                    "  //     techLogRecord.set('problem',problem);\r",
                    "     //  techLogRecord.set('solution',solution );\r",
                    "\r",
                    "        console.log(techLogRecord) ;\r",
                    "\r",
                    "         this.config.techLogRecordToUpdate = techLogRecord ;\r",
                    "        techLogStore.sync();\r",
                    "\r",
                    "\r",
                    "   // RMdatalink.util.DataLoader.onRetailerMasterStoreUpdate(techLogStore,techLogRecord,'','','','','');\r",
                    "\r",
                    "     Ext.Msg.alert('Success.', 'Record Updated Successfully.', Ext.emptyFn);\r",
                    "\r",
                    "\r",
                    "\r",
                    "    this.config.detailScreenTechLog = null;\r",
                    "    Ext.ComponentQuery.query('#RDNotepadNoteProblem')[0].setValue('');\r",
                    "\r",
                    "     Ext.ComponentQuery.query('#RDNotepadNoteSolution')[0].setValue('');\r",
                    "\r",
                    "     var list = Ext.ComponentQuery.query('#RDCRMTab')[0].down('#mainList');\r",
                    "\r",
                    "     list.deselectAll() ;\r",
                    "\r",
                    "    Ext.ComponentQuery.query('#RDNotepadNoteProblem')[0].setDisabled(true);\r",
                    "\r",
                    "Ext.ComponentQuery.query('#RDNotepadNoteSolution')[0].setDisabled(true);\r",
                    "\r",
                    "    }catch(ex){\r",
                    "\r",
                    "        console.error(ex) ;\r",
                    "    }\r",
                    "}\r",
                    "\r",
                    "*/\r",
                    ""
                ],
                "name": "tap"
            },
            "designerId": "7f626537-501b-48a7-8f3a-1da9fa58ad5b"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button[itemId=techSupportLatestLogsSaveBtn]",
                "designer|targetType": "Ext.Button",
                "fn": "ontechSupportLatestLogsSaveBtnTap",
                "implHandler": [
                    "Ext.ComponentQuery.query('#browseLatLogResizableProbFld')[0].setDisabled(true);\r",
                    "\r",
                    "Ext.ComponentQuery.query('#browseLatLogResizableSolFld')[0].setDisabled(true);\r",
                    "Ext.ComponentQuery.query('#borwseLatestLogStatusSelectFld')[0].setDisabled(true);\r",
                    "\r",
                    "var problem = Ext.ComponentQuery.query('#browseLatLogResizableProbFld')[0].getValue();\r",
                    "\r",
                    "var solution =Ext.ComponentQuery.query('#browseLatLogResizableSolFld')[0].getValue();\r",
                    "\r",
                    "\r",
                    "var status  = Ext.ComponentQuery.query('#borwseLatestLogStatusSelectFld')[0].getValue();\r",
                    "\r",
                    "var statusType = \"\";\r",
                    "switch(status){\r",
                    "    case \"1\":\r",
                    "        statusType =  \"Pending\";\r",
                    "    break;\r",
                    "    case \"2\":\r",
                    "        statusType =  \"In Progress\";\r",
                    "    break;\r",
                    "    case \"3\":\r",
                    "        statusType =  \"Completed\";\r",
                    "    break;\r",
                    "\r",
                    "\r",
                    "}\r",
                    "\r",
                    "//////////////////////////////////////////////////////////////////////////////\r",
                    "\r",
                    "\r",
                    "    var techLogStore  = Ext.getStore('TechSupportLogsStore') ;\r",
                    "\r",
                    "\r",
                    "if(this.config.browseLatestScreenTechLog){\r",
                    "\r",
                    "    var updatedRecord = this.config.browseLatestScreenTechLog.data ;\r",
                    "\r",
                    "\r",
                    "\r",
                    "    updatedRecord.problem = problem ;\r",
                    "    updatedRecord.solution = solution ;\r",
                    "    updatedRecord.status = statusType;\r",
                    "    updatedRecord.status_id = status ;\r",
                    "\r",
                    "              this.config.isStoreUpdated = true ;\r",
                    "            this.config.browseLatestScreenTechLog.set(updatedRecord);\r",
                    "            this.config.browseLatestScreenTechLog.dirty= true;\r",
                    "console.log(   this.config.browseLatestScreenTechLog) ;\r",
                    "            this.config.techLogRecordToUpdate =    this.config.browseLatestScreenTechLog ;\r",
                    "            techLogStore.sync();\r",
                    "\r",
                    "\r",
                    "    Ext.Msg.alert('Success.', 'Record Updated Successfully.', Ext.emptyFn);\r",
                    "        this.config.browseLatestScreenTechLog = null;\r",
                    "\r",
                    "        var list = Ext.ComponentQuery.query('#browseLatestLogTab')[0].down('#mainList');\r",
                    "\r",
                    "           list.deselectAll() ;\r",
                    "\r",
                    "}\r",
                    "\r",
                    "/////////////////////////////////////////////////////////////////////////////////\r",
                    "\r",
                    "\r",
                    "Ext.ComponentQuery.query('#browseLatLogResizableSolFld')[0].setValue('');\r",
                    "\r",
                    "Ext.ComponentQuery.query('#browseLatLogResizableProbFld')[0].setValue('');\r",
                    "\r",
                    "Ext.ComponentQuery.query('#borwseLatestLogStatusSelectFld')[0].setValue(null);"
                ],
                "name": "tap"
            },
            "designerId": "e8d5e245-37e5-40ce-aadf-210085f08ea1"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "company_name",
                    "company_id"
                ],
                "fn": "loadVendorRetailerSpecificStore",
                "implHandler": [
                    "\r",
                    "\r",
                    "\r",
                    "var companySpecStore = Ext.getStore('CompanySpecificTechSupportStore');\r",
                    "\r",
                    "var paramTopass = {\r",
                    "    collection : dbEnv + \"rdl_tech_support_logs\",\r",
                    "    pageNo:1,\r",
                    "    pageSize:100,\r",
                    "    sortBy:{},\r",
                    "    query:{company : company_name },\r",
                    "    fields:{}\r",
                    "\r",
                    "};\r",
                    "\r",
                    " RMdatalink.iwa.rdl.queryDB(paramTopass,success,error) ;\r",
                    "\r",
                    "function success(response){\r",
                    " Ext.Viewport.setMasked(false);\r",
                    "    console.log(response);\r",
                    "\r",
                    "    var data = response.items;\r",
                    "    companySpecStore.removeAll() ;\r",
                    "    companySpecStore.sync() ;\r",
                    "\r",
                    "    companySpecStore.setData(data) ;\r",
                    "    companySpecStore.sync() ;\r",
                    "\r",
                    "}\r",
                    "\r",
                    "function error(response ){\r",
                    "\r",
                    "    console.error(response);\r",
                    "}\r",
                    "\r",
                    "\r",
                    ""
                ]
            },
            "designerId": "d9e076e5-27f8-4585-98f4-c3a271d9dcbb"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button[itemId=discardTechSupportBtn]",
                "designer|targetType": "Ext.Button",
                "fn": "ondiscardTechSupportBtnTap",
                "implHandler": [
                    " this.endTimer() ;\r",
                    "\r",
                    " Ext.ComponentQuery.query('#RMTechSupportLog')[0].setText(\"Start Tech Support\");\r",
                    "Ext.ComponentQuery.query('#RMTechSupportLog')[0].setStyle('background-color:transparent;');\r",
                    "    var popup =  RMdatalink.app.getController('TechSupportLog').config.techSupportWindow ;\r",
                    " popup.hide();\r",
                    " //Ext.Msg.alert('Success.', 'Record Added Successfully.', Ext.emptyFn);\r",
                    "\r",
                    "\r",
                    "\r",
                    " // RMdatalink.app.getController('TechSupportLog').refreshTempTechLogs();\r",
                    "\r",
                    "\r",
                    " Ext.ComponentQuery.query('#problemTechSupportTxtArea')[0].setValue(\"\");\r",
                    "\r",
                    " Ext.ComponentQuery.query('#solutionTechSupportTxtArea')[0].setValue(\"\");\r",
                    ""
                ],
                "name": "tap"
            },
            "designerId": "68d1c64f-ebda-4ec5-b513-a49d94951961"
        }
    ]
}