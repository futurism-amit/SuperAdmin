/*
 * File: app/view/DeleteUserRoleScreen.js
 *
 * This file was generated by Sencha Architect version 3.0.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.3.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.3.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('RMdatalink.view.DeleteUserRoleScreen', {
    extend: 'Ext.Sheet',
    alias: 'widget.DeleteUserRoleScreen',

    requires: [
        'Ext.form.Panel',
        'Ext.field.Select',
        'Ext.form.FieldSet',
        'Ext.Button'
    ],

    config: {
        cls: 'x-rm-filterdd',
        height: '200px',
        itemId: 'DeleteUserRoleScreen',
        width: '600px',
        layout: 'fit',
        items: [
            {
                xtype: 'formpanel',
                cls: 'x-rm-rdformpanel',
                layout: {
                    type: 'vbox',
                    pack: 'center'
                },
                items: [
                    {
                        xtype: 'selectfield',
                        itemId: 'deleteUserRoleSelectFld',
                        label: 'Select Role To Delete',
                        labelWidth: '200px',
                        autoSelect: false,
                        displayField: 'user_role',
                        store: 'PermisstionsStore',
                        valueField: 'user_role'
                    },
                    {
                        xtype: 'selectfield',
                        itemId: 'deleteUserRolePlcaeHolderSelectFld',
                        label: 'Select Place Holder Role To Aplly',
                        labelWidth: '200px',
                        autoSelect: false,
                        displayField: 'user_role',
                        valueField: 'user_role'
                    },
                    {
                        xtype: 'fieldset',
                        margin: '0 0 0 200px',
                        layout: 'hbox',
                        items: [
                            {
                                xtype: 'button',
                                cls: [
                                    'x-rm-detailsSaveBtn',
                                    'x-rm-detailsInnerBtns'
                                ],
                                itemId: 'deleteUserRoleCacelBtn',
                                width: '150px',
                                text: 'Cancel'
                            },
                            {
                                xtype: 'button',
                                cls: 'x-rm-blueBtn',
                                itemId: 'deleteUserRoleDeleteBtn',
                                width: '150px',
                                text: 'Delete'
                            }
                        ]
                    }
                ]
            }
        ],
        listeners: [
            {
                fn: 'onDeleteUserRoleSelectFldChange',
                event: 'change',
                delegate: '#deleteUserRoleSelectFld'
            }
        ]
    },

    onDeleteUserRoleSelectFldChange: function(selectfield, newValue, oldValue, eOpts) {

        var permissionsStore = Ext.getStore('PermisstionsStore') ;
        var placeHolderselFld = Ext.ComponentQuery.query('#deleteUserRolePlcaeHolderSelectFld')[0] ;

        var options = [] ;

        var data = permissionsStore.getData().all ;

        for(var i=0 ; i < data.length ; i ++ ){

            if(newValue  ==  data[i].data.user_role ){


            }else{

                options.push(data[i].data);
            }

        }
        //user_role

        placeHolderselFld.setOptions(options) ;
    }

});