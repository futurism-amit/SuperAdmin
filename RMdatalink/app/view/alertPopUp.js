/*
 * File: app/view/alertPopUp.js
 *
 * This file was generated by Sencha Architect version 3.0.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.3.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.3.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('RMdatalink.view.alertPopUp', {
    extend: 'Ext.Sheet',
    alias: 'widget.alertPopUp',

    requires: [
        'Ext.Container',
        'Ext.Label',
        'Ext.Button'
    ],

    config: {
        cls: 'x-rm-alertpopup',
        height: '80px',
        hideAnimation: false,
        id: 'alertPopUp',
        showAnimation: false,
        width: '250px',
        hideOnMaskTap: true,
        scrollable: false,
        items: [
            {
                xtype: 'container',
                height: '50%',
                layout: {
                    type: 'hbox',
                    align: 'center',
                    pack: 'center'
                },
                items: [
                    {
                        xtype: 'label',
                        cls: 'alertPopUpMsg',
                        itemId: 'alertPopUpMsg'
                    }
                ]
            },
            {
                xtype: 'container',
                height: '50%',
                layout: {
                    type: 'hbox',
                    pack: 'center'
                },
                items: [
                    {
                        xtype: 'button',
                        cls: 'x-rm-alertpopupbtns',
                        itemId: 'alertPopUpYesBtn',
                        margin: '0 1%',
                        ui: 'plain',
                        width: '100px',
                        pressedCls: 'x-rm-alertpopupbtns-pressing',
                        text: 'YES'
                    },
                    {
                        xtype: 'button',
                        cls: 'x-rm-alertpopupbtns',
                        itemId: 'alertPopUpNoBtn',
                        margin: '0 1%',
                        ui: 'plain',
                        width: '100px',
                        pressedCls: 'x-rm-alertpopupbtns-pressing',
                        text: 'NO'
                    }
                ]
            }
        ],
        listeners: [
            {
                fn: 'onAlertPopUpYesBtnTap',
                event: 'tap',
                delegate: '#alertPopUpYesBtn'
            },
            {
                fn: 'onAlertPopUpNoBtnTap',
                event: 'tap',
                delegate: '#alertPopUpNoBtn'
            }
        ]
    },

    onAlertPopUpYesBtnTap: function(button, e, eOpts) {
        this.fireEvent("alertconfirm",this);
        this.destroy();
    },

    onAlertPopUpNoBtnTap: function(button, e, eOpts) {
        this.fireEvent("alertdecline",this);
        this.destroy();
    }

});