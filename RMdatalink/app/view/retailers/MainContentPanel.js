/*
 * File: app/view/retailers/MainContentPanel.js
 *
 * This file was generated by Sencha Architect version 3.0.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.3.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.3.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('RMdatalink.view.retailers.MainContentPanel', {
    extend: 'Ext.Panel',
    alias: 'widget.retailersmaincontentpanel',

    requires: [
        'RMdatalink.view.CardHeaderPanel',
        'RMdatalink.view.retailers.ListContainer',
        'Ext.tab.Panel',
        'Ext.tab.Bar',
        'Ext.form.Panel',
        'Ext.form.FieldSet',
        'Ext.field.Radio',
        'Ext.field.Text',
        'Ext.Button',
        'Ext.Map'
    ],

    config: {
        itemId: 'retailersMaincontentpanel',
        layout: 'vbox',
        scrollable: false,
        items: [
            {
                xtype: 'CardHeaderPanel',
                itemId: 'retailerCardHeader',
                flex: 1
            },
            {
                xtype: 'panel',
                flex: 15,
                layout: 'vbox',
                scrollable: false,
                items: [
                    {
                        xtype: 'tabpanel',
                        flex: 1,
                        cls: 'x-rm-tabpanel',
                        itemId: 'retailersTabPanel',
                        ui: 'light',
                        tabBar: {
                            docked: 'top',
                            itemId: 'mytabbar'
                        },
                        items: [
                            {
                                xtype: 'container',
                                title: 'ACTIVE',
                                itemId: 'usersTab',
                                layout: 'fit',
                                scrollable: false,
                                items: [
                                    {
                                        xtype: 'retailerslistcontainer',
                                        layout: {
                                            type: 'vbox',
                                            pack: 'center'
                                        }
                                    }
                                ],
                                listeners: [
                                    {
                                        fn: function(component, eOpts) {
                                            var headers = component.down("#retailerListHeader");
                                            headers.setData([{}]);
                                            headers.setItemTpl(
                                            Ext.create('Ext.XTemplate',
                                            '<div class="x-rm-listtpl-main">',
                                            '    <div style="width: 4%;">',
                                            '        <div style="width: 25px;" data-name="all"></div>',
                                            '    </div>',
                                            '    <div style="width: 12%;" data-name="store_name">',
                                            '        Store&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style="width: 12%;" data-name="manager_firstname">',
                                            '        Name&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style="width: 12%;" data-name="manager_phone">',
                                            '    Phone&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',

                                            '    <div style="width: 10%;" data-name="store_city">',
                                            '        City&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style="width: 6%;" data-name="store_state">',
                                            '        State&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style="width: 8%;" data-name="store_zip">',
                                            '        Zip&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style="width: 5%;" data-name="store_products_datalink">',
                                            '        Data&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style=" width: 5%;" data-name="store_products_ecatalog">',
                                            '        eCat&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style=" width: 5%;" data-name="store_products_smart_cart">',
                                            '        eCom&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style=" width: 6%;" data-name="store_products_rm_plc">',
                                            '        RMPro&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style=" width: 6%;" data-name="store_products_rm_plc">',
                                            '        iRugs&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style=" width: 6%;" data-name="store_monthly_subscription">',
                                            '        Monthly&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '</div>'
                                            )
                                            );
                                            headers.refresh();
                                            var list = component.down('#retailerList');
                                            list.setStore('retailerUsers');
                                            list.setItemTpl(
                                            Ext.create('Ext.XTemplate',
                                            '<div class="x-rm-listtpl-main">',
                                            '    <div class="pointerCursor" style="width: 4%;overflow:visible;">',
                                            '        <div style="width: 25px; height:25px; background-image:url({manager_photo_url})"></div>',
                                            '    </div>',
                                            '    <div class="pointerCursor" style="width: 12%;" {[RMdatalink.util.globalConfig.getListAttrForDelHandling()]} = "{[RMdatalink.util.globalConfig.getStore_nameDelegateClassForTap()]}" >{store_name}</div>',
                                            '    <div class="pointerCursor" style="width: 12%;" {[RMdatalink.util.globalConfig.getListAttrForDelHandling()]} = "{[RMdatalink.util.globalConfig.getManager_LastNameDelegateClassForTap()]}" > {[this.getAccMgrName(values)]}</div>',
                                            '    <div style="width: 12%;height: 32px;">',
                                            '      {[this.getAccMgrPhone(values)]}',
                                            '    </div>',

                                            '    <div style="width: 10%;"  {[RMdatalink.util.globalConfig.getListAttrForDelHandling()]} = "goToMapWithCity">{[this.getCity(values)]}</div>',
                                            '    <div style="width: 6%;" {[RMdatalink.util.globalConfig.getListAttrForDelHandling()]} = "goToMapWithState">{[this.getState(values)]}</div>',
                                            '    <div style="width: 8%;"  {[RMdatalink.util.globalConfig.getListAttrForDelHandling()]} = "goToMapWithZip">{[this.getZip(values)]}</div>',
                                            '    <div style="width: 5%;" class="checkRound">',
                                            '        <div style="width: 9px; height:9px; background-color:{[this.getCheckBoxRound(values.store_products.datalink_status)]}"></div>',
                                            '    </div>',
                                            '    <div style="width: 5%;" class="checkRound">',
                                            '        <div style="width: 9px; height:9px; background-color:{[this.getCheckBoxRound(values.store_products.ecatalog_status)]}"></div>',
                                            '    </div>',
                                            '    <div style="width: 5%;" class="checkRound">',
                                            '        <div style=" width: 9px; height:9px; background-color:{[this.getCheckBoxRound(values.store_products.ecommerce_status)]}"></div>',
                                            '    </div>',
                                            '    <div style="width: 6%;" class="checkRound">',
                                            '        <div style="width: 9px; height:9px; background-color:{[this.getCheckBoxRound(values.store_products.rmpro_status)]}"></div>',
                                            '    </div>',
                                            '    <div style="width: 6%;" class="checkRound">',
                                            '        <div style="width: 9px; height:9px; background-color:{[this.getCheckBoxRound(values.store_products.irugs_status)]}"></div>',
                                            '    </div>',
                                            '    <div style="width: 6%;">${[this.setOwedMonthlyField(values)]}</div>',
                                            '</div>',
                                            {

                                                getAccMgrName: function(value){

                                                    var cmpContacts = value.company_contacts ;
                                                    if(cmpContacts){

                                                        for(var i=0; i < cmpContacts.length ; i++ ){

                                                            if(cmpContacts[i].is_account_mgr){

                                                                return cmpContacts[i].companycontact_firstname +" "+ cmpContacts[i].companycontact_lastname ;
                                                            }
                                                        }

                                                        if(cmpContacts[0]){

                                                            return cmpContacts[0].companycontact_firstname +" "+ cmpContacts[0].companycontact_lastname ;
                                                        }

                                                    }
                                                    return "" ;
                                                },

                                                getAccMgrPhone: function(value){

                                                    var cmpContacts = value.company_contacts ;
                                                    if(cmpContacts){

                                                        for(var i=0; i < cmpContacts.length ; i++ ){

                                                            if(cmpContacts[i].is_account_mgr){

                                                                return cmpContacts[i].companycontact_phone +" Ext:"+ cmpContacts[i].companycontact_phone_ext + "<br>" + cmpContacts[i].companycontact_cellphone;
                                                            }
                                                        }

                                                        if(cmpContacts[0]){

                                                            return cmpContacts[0].companycontact_phone +" Ext:"+ cmpContacts[0].companycontact_phone_ext + "<br>" + cmpContacts[0].companycontact_cellphone;
                                                        }

                                                    }
                                                    return "" ;
                                                },


                                                getCity: function(value){
                                                    if(value.locations){

                                                        if(value.locations[0]){

                                                            if(value.locations[0].city!== ""){
                                                                return value.locations[0].city;
                                                            }


                                                        }
                                                    }

                                                    return value.store_city ;
                                                },

                                                getState: function(value){
                                                    if(value.locations){

                                                        if(value.locations[0]){

                                                            if(value.locations[0].state!== ""){
                                                                return value.locations[0].state;
                                                            }
                                                        }
                                                    }

                                                    return value.store_state ;
                                                },

                                                getZip: function(value){
                                                    if(value.locations){

                                                        if(value.locations[0]){

                                                            if(value.locations[0].zip !== ""){
                                                                return value.locations[0].zip;
                                                            }
                                                        }
                                                    }
                                                    return value.store_zip ;
                                                },

                                                getCheckBoxRound: function(value){
                                                    if(value)
                                                    {
                                                        switch(value){

                                                            case "ACTIVE":
                                                            return '#39b3d7';
                                                            case "INACTIVE":
                                                            return '#ebebeb';
                                                            case "PROSPECT":
                                                            return '#47a447';
                                                            case "HOT_PROSPECT":
                                                            return '#ed9c28';
                                                            case "PENDING":
                                                            return '#3276b1';
                                                        }


                                                        return '#2EC1DA';
                                                    }
                                                    else
                                                    return '#F3F3F4';

                                                }

                                            },

                                            {
                                                setOwedMonthlyField: function(rec){
                                                    var value = 0 ;
                                                    if(rec.store_products.rmpro_status && rec.store_products.rmpro_status == "ACTIVE"){

                                                        value += parseFloat(rec.product_billng.product_rmpro.monthly_membership,0) ;
                                                    }

                                                    if(rec.store_products.datalink_status && rec.store_products.datalink_status == "ACTIVE"){

                                                        value += parseFloat(rec.product_billng.product_datalink.monthly_membership,0) ;
                                                    }

                                                    value.toFixed(2);

                                                    if(value === 0)
                                                    return "0.00";
                                                    else
                                                    {
                                                        var sumStr = ""+ value;
                                                        var sumStrSplit0 = sumStr.split('.')[0];

                                                        var len = sumStrSplit0.length;
                                                        if(len > 3)
                                                        {
                                                            sumStr1 = sumStrSplit0.substr(0,(len-3));
                                                            sumStr2 = sumStrSplit0.substr((len-3),(len-1));
                                                            sumStrSplit0 =  sumStr1 + ',' + sumStr2 ;
                                                        }

                                                        if(sumStr.split('.')[1])
                                                        return sumStrSplit0 + '.' +sumStr.split('.')[1];
                                                        else
                                                        {
                                                            return  sumStrSplit0;
                                                        }
                                                    }


                                                }

                                            }
                                            )
                                            );
                                            list.onStoreClear();
                                            //list.refresh();

                                            var totalsList = component.down('#retailerTotalsList');
                                            var store = list.getStore();

                                            /*totalsList.setData([{}]);
                                            totalsList.setItemTpl(
                                            Ext.create('Ext.XTemplate',
                                            '<div class="x-rm-listtpl-main">',
                                            '    <div style="width: 6%;">TOTALS</div>',
                                            '    <div style="width: 12%;">{[this.getTotalFor(\'store_name\')]}&nbsp; Retailers</div>',
                                            '    <div style="width: 10%;">{[this.getTotalFor(\'Users\')]}&nbsp; Users</div>',
                                            '    <div style="width: 45%;">{[this.getTotalFor(\'store_city\')]}&nbsp; Cities</div>',
                                            '    <div style="width: 6%;">{[this.getTotalFor(\'store_products_datalink\')]}</div>',
                                            '    <div style="width: 5%;">{[this.getTotalFor(\'store_products_ecatalog\')]}</div>',
                                            '    <div style="width: 5%;">{[this.getTotalFor(\'store_products_smart_cart\')]}</div>',
                                            '    <div style="width: 6%;">{[this.getTotalFor(\'store_products_rm_plc\')]}</div>',
                                            '    <div style="width: 9%;">{[this.getTotalFor(\'store_monthly_subscription\')]}</div>',
                                            '</div>',
                                            {
                                            getTotalFor: function(value){
                                            var x = [];
                                            var y;
                                            var sum = 0;
                                            store.each(function(record,id){
                                            if(value=='Users') {
                                            y = record.get('manager_firstname')+" "+record.get('manager_lastname');
                                            }
                                            else
                                            y = record.get(value);
                                            if(value=='store_products_datalink' || value=='store_products_ecatalog' ||
                                            value=='store_products_smart_cart' || value=='store_products_rm_plc') {
                                            if(y === true)
                                            x.push(y);
                                            }
                                            else if(value == 'store_monthly_subscription') {
                                            y = parseFloat(y.replace("$",'').replace(",",""));
                                            sum+=y;
                                            }
                                            else
                                            Ext.Array.include(x,y);
                                            });
                                            if(value == 'store_monthly_subscription')
                                            return '$'+Math.round(sum);
                                            else
                                            return x.length;
                                            }
                                            }
                                            )
                                            );
                                            */
                                            totalsList.setData([
                                            {

                                                store_count:0,
                                                city_count:0,
                                                user_count:0,
                                                monthly_payble:0

                                            }
                                            ]);
                                            totalsList.setItemTpl(
                                            Ext.create('Ext.XTemplate',
                                            '<div class="x-rm-listtpl-main">',
                                            '    <div style="width: 6%;">TOTALS</div>',
                                            '    <div style="width: 12%;">{store_count}&nbsp; Retailers</div>',
                                            '    <div style="width: 10%;">{user_count}&nbsp; Users</div>',
                                            '    <div style="width: 43%;">{city_count}&nbsp; Cities</div>',
                                            '    <div style="width: 3%;">&nbsp;</div>',
                                            '    <div style="width: 20%;text-align:right;">${monthly_payble}</div>',
                                            '</div>'
                                            )
                                            );

                                        },
                                        event: 'initialize'
                                    },
                                    {
                                        fn: function(element, eOpts) {
                                            window.location.hash = 'retailerCard'+0;

                                            RMdatalink.app.getController('PaginationController').setRetailersActiveTabPageNo() ;
                                            Ext.ComponentQuery.query('#retailersMaincontentpanel')[0].down('#mainCardActionBtnContainer').setHidden(false) ;

                                            Ext.ComponentQuery.query('#retailersMaincontentpanel')[0].down('#cardDeleteBtn').setHidden(true) ;

                                        },
                                        event: 'painted'
                                    }
                                ]
                            },
                            {
                                xtype: 'container',
                                title: 'PENDING',
                                itemId: 'pendingTab',
                                layout: 'fit',
                                scrollable: false,
                                items: [
                                    {
                                        xtype: 'retailerslistcontainer',
                                        layout: {
                                            type: 'vbox',
                                            pack: 'center'
                                        }
                                    }
                                ],
                                listeners: [
                                    {
                                        fn: function(component, eOpts) {
                                            /*
                                            var headers = component.down("#retailerListHeader");
                                            headers.setData([{}]);  ///  CONVERT THIS TO A STORE CONTAINING A SIGNLE OBJECT .
                                            headers.setItemTpl(
                                            Ext.create('Ext.XTemplate',
                                            '<div class="x-rm-listtpl-main">',
                                            '    <div style="width: 4%;">',
                                            '        <div style="width: 25px;" data-name="all"></div>',
                                            '    </div>',
                                            '    <div style="width: 12%;" data-name="store_name">',
                                            '        Store&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style="width: 8%;" data-name="manager_lastname">',
                                            '        LastName&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style="width: 8%;" data-name="manager_firstname">',
                                            '        FirstName&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style="width: 10%;" data-name="manager_phone">',
                                            '        Phone&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style="width: 12%;" data-name="store_email">',
                                            '        E-mail&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style="width: 8%;" data-name="store_website">',
                                            '        Website&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style="width: 10%;" data-name="store_city">',
                                            '        City&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style="width: 6%;" data-name="store_state">',
                                            '        State&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style="width: 8%;" data-name="store_zip">',
                                            '        Zip&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style="width: 8%;" data-name="store_pending_approval">',
                                            '        Approval&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style="width: 10%;" data-name="store_note">',
                                            '        Note&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '</div>'
                                            )
                                            );
                                            headers.refresh();
                                            var list = component.down('#retailerList');
                                            list.setStore('retailerPending');
                                            list.setItemTpl(
                                            Ext.create('Ext.XTemplate',
                                            '<div class="x-rm-listtpl-main">',
                                            '    <div class="pointerCursor" style="width: 4%;overflow:visible;">',
                                            '        <div style="width: 25px; height:25px; background-image:url({manager_photo_url})"></div>',
                                            '    </div>',
                                            '    <div class="pointerCursor" style="width: 12%;" {[RMdatalink.util.globalConfig.getListAttrForDelHandling()]} = "{[RMdatalink.util.globalConfig.getStore_nameDelegateClassForTap()]}" >{store_name}</div>',
                                            '    <div class="pointerCursor" style="width: 8%;" {[RMdatalink.util.globalConfig.getListAttrForDelHandling()]} = "{[RMdatalink.util.globalConfig.getManager_LastNameDelegateClassForTap()]}" >{manager_lastname}</div>',
                                            '    <div class="pointerCursor" style="width: 8%;" {[RMdatalink.util.globalConfig.getListAttrForDelHandling()]} = "{[RMdatalink.util.globalConfig.getManager_LastNameDelegateClassForTap()]}" >{manager_firstname}</div>',
                                            '    <div style="width: 10%;">',
                                            '        {manager_phone}',
                                            '    </div>',

                                            '    <div style="width: 10%;"><a href="mailto:{store_email}">{store_email}</a></div>',
                                            '    <div style="width: 8%;">{store_website}</div>',
                                            '    <div style="width: 10%;"{[RMdatalink.util.globalConfig.getListAttrForDelHandling()]} = "goToMapWithCity">{store_city}</div>',
                                            '    <div style="width: 6%;"{[RMdatalink.util.globalConfig.getListAttrForDelHandling()]} = "goToMapWithState">{store_state}</div>',
                                            '    <div style="width: 8%;"{[RMdatalink.util.globalConfig.getListAttrForDelHandling()]} = "goToMapWithZip">{store_zip}</div>',
                                            '    <div style="width: 8%;">{store_pending_approval}</div>',
                                            '    <div style="width: 10%;">{store_note}</div>',
                                            '</div>'
                                            )
                                            );
                                            list.onStoreClear();

                                            */


                                            var headers = component.down("#retailerListHeader");
                                            headers.setData([{}]);
                                            headers.setItemTpl(
                                            Ext.create('Ext.XTemplate',
                                            '<div class="x-rm-listtpl-main">',
                                            '    <div style="width: 4%;">',
                                            '        <div style="width: 25px;" data-name="all"></div>',
                                            '    </div>',
                                            '    <div style="width: 12%;" data-name="store_name">',
                                            '        Store&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style="width: 12%;" data-name="manager_firstname">',
                                            '        Name&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style="width: 12%;" data-name="manager_phone">',
                                            '    Phone&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',

                                            '    <div style="width: 10%;" data-name="store_city">',
                                            '        City&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style="width: 6%;" data-name="store_state">',
                                            '        State&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',

                                            '    <div style="width: 8%;" data-name="store_zip">',
                                            '        Zip&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style="width: 5%;" data-name="store_products_datalink">',
                                            '        Data&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style=" width: 5%;" data-name="store_products_ecatalog">',
                                            '        eCat&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style=" width: 5%;" data-name="store_products_smart_cart">',
                                            '        eCom&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style=" width: 6%;" data-name="store_products_rm_plc">',
                                            '        RMPro&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style=" width: 6%;" data-name="store_products_rm_plc">',
                                            '        iRugs&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style=" width: 6%;" data-name="store_monthly_subscription">',
                                            '        Monthly&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '</div>'
                                            )
                                            );
                                            headers.refresh();
                                            var list = component.down('#retailerList');
                                            list.setStore('retailerPending');

                                            list.setItemTpl(
                                            Ext.create('Ext.XTemplate',
                                            '<div class="x-rm-listtpl-main">',
                                            '    <div class="pointerCursor" style="width: 4%;overflow:visible;">',
                                            '        <div style="width: 25px; height:25px; background-image:url({manager_photo_url})"></div>',
                                            '    </div>',
                                            '    <div class="pointerCursor" style="width: 12%;" {[RMdatalink.util.globalConfig.getListAttrForDelHandling()]} = "{[RMdatalink.util.globalConfig.getStore_nameDelegateClassForTap()]}" >{store_name}</div>',
                                            '    <div class="pointerCursor" style="width: 12%;" {[RMdatalink.util.globalConfig.getListAttrForDelHandling()]} = "{[RMdatalink.util.globalConfig.getManager_LastNameDelegateClassForTap()]}" > {[this.getAccMgrName(values)]}</div>',
                                            '    <div style="width: 12%;height: 32px;">',
                                            '      {[this.getAccMgrPhone(values)]}',
                                            '    </div>',

                                            '    <div style="width: 10%;"  {[RMdatalink.util.globalConfig.getListAttrForDelHandling()]} = "goToMapWithCity">{[this.getCity(values)]}</div>',
                                            '    <div style="width: 6%;" {[RMdatalink.util.globalConfig.getListAttrForDelHandling()]} = "goToMapWithState">{[this.getState(values)]}</div>',
                                            '    <div style="width: 8%;"  {[RMdatalink.util.globalConfig.getListAttrForDelHandling()]} = "goToMapWithZip">{[this.getZip(values)]}</div>',
                                            '    <div style="width: 5%;" class="checkRound">',
                                            '        <div style="width: 9px; height:9px; background-color:{[this.getCheckBoxRound(values.store_products,\'datalink_status\')]}"></div>',
                                            '    </div>',
                                            '    <div style="width: 5%;" class="checkRound">',
                                            '        <div style="width: 9px; height:9px; background-color:{[this.getCheckBoxRound(values.store_products,\'ecatalog_status\')]}"></div>',
                                            '    </div>',
                                            '    <div style="width: 5%;" class="checkRound">',
                                            '        <div style=" width: 9px; height:9px; background-color:{[this.getCheckBoxRound(values.store_products,\'ecommerce_status\')]}"></div>',
                                            '    </div>',
                                            '    <div style="width: 6%;" class="checkRound">',
                                            '        <div style="width: 9px; height:9px; background-color:{[this.getCheckBoxRound(values.store_products,\'rmpro_status\')]}"></div>',
                                            '    </div>',
                                            '    <div style="width: 6%;" class="checkRound">',
                                            '        <div style="width: 9px; height:9px; background-color:{[this.getCheckBoxRound(values.store_products , \'irugs_status\')]}"></div>',
                                            '    </div>',
                                            '    <div style="width: 6%;">${[this.setOwedMonthlyField(values)]}</div>',
                                            '</div>',
                                            {
                                                getAccMgrName: function(value){

                                                    var cmpContacts = value.company_contacts ;
                                                    if(cmpContacts){

                                                        for(var i=0; i < cmpContacts.length ; i++ ){

                                                            if(cmpContacts[i].is_account_mgr){

                                                                return cmpContacts[i].companycontact_firstname +" "+ cmpContacts[i].companycontact_lastname ;
                                                            }
                                                        }

                                                        if(cmpContacts[0]){

                                                            return cmpContacts[0].companycontact_firstname +" "+ cmpContacts[0].companycontact_lastname ;
                                                        }

                                                    }
                                                    return "" ;
                                                },

                                                getAccMgrPhone: function(value){

                                                    var cmpContacts = value.company_contacts ;
                                                    if(cmpContacts){

                                                        for(var i=0; i < cmpContacts.length ; i++ ){

                                                            if(cmpContacts[i].is_account_mgr){

                                                                return cmpContacts[i].companycontact_phone +" Ext:"+ cmpContacts[i].companycontact_phone_ext + "<br>" + cmpContacts[i].companycontact_cellphone;
                                                            }
                                                        }

                                                        if(cmpContacts[0]){

                                                            return cmpContacts[0].companycontact_phone +" Ext:"+ cmpContacts[0].companycontact_phone_ext + "<br>" + cmpContacts[0].companycontact_cellphone;
                                                        }

                                                    }
                                                    return "" ;
                                                },

                                                getCity: function(value){
                                                    if(value.locations){

                                                        if(value.locations[0]){

                                                            if(value.locations[0].city!== ""){
                                                                return value.locations[0].city;
                                                            }


                                                        }
                                                    }

                                                    return value.store_city ;
                                                },

                                                getState: function(value){
                                                    if(value.locations){

                                                        if(value.locations[0]){

                                                            if(value.locations[0].state!== ""){
                                                                return value.locations[0].state;
                                                            }
                                                        }
                                                    }

                                                    return value.store_state ;
                                                },

                                                getZip: function(value){
                                                    if(value.locations){

                                                        if(value.locations[0]){

                                                            if(value.locations[0].zip !== ""){
                                                                return value.locations[0].zip;
                                                            }
                                                        }
                                                    }
                                                    return value.store_zip ;
                                                },


                                                getCheckBoxRound: function(value,key){
                                                    if(value && value[key])
                                                    {
                                                        switch(value[key]){

                                                            case "ACTIVE":
                                                            return '#39b3d7';
                                                            case "INACTIVE":
                                                            return '#ebebeb';
                                                            case "PROSPECT":
                                                            return '#47a447';
                                                            case "HOT_PROSPECT":
                                                            return '#ed9c28';
                                                            case "PENDING":
                                                            return '#3276b1';
                                                        }


                                                        return '#2EC1DA';
                                                    }
                                                    else
                                                    return '#ebebeb';

                                                }

                                            },

                                            {
                                                setOwedMonthlyField: function(rec){
                                                    var value = 0 ;
                                                    if(rec.store_products.rmpro_status && rec.store_products.rmpro_status == "ACTIVE"){

                                                        value += parseFloat(rec.product_billng.product_rmpro.monthly_membership,0) ;
                                                    }

                                                    if(rec.store_products.datalink_status && rec.store_products.datalink_status == "ACTIVE"){

                                                        value += parseFloat(rec.product_billng.product_datalink.monthly_membership,0) ;
                                                    }

                                                    value.toFixed(2);

                                                    if(value === 0)
                                                    return "0.00";
                                                    else
                                                    {
                                                        var sumStr = ""+ value;
                                                        var sumStrSplit0 = sumStr.split('.')[0];

                                                        var len = sumStrSplit0.length;
                                                        if(len > 3)
                                                        {
                                                            sumStr1 = sumStrSplit0.substr(0,(len-3));
                                                            sumStr2 = sumStrSplit0.substr((len-3),(len-1));
                                                            sumStrSplit0 =  sumStr1 + ',' + sumStr2 ;
                                                        }

                                                        if(sumStr.split('.')[1])
                                                        return sumStrSplit0 + '.' +sumStr.split('.')[1];
                                                        else
                                                        {
                                                            return  sumStrSplit0;
                                                        }
                                                    }


                                                }

                                            }
                                            )
                                            );


                                            list.onStoreClear();

                                            //list.refresh();

                                            var totalsList = component.down('#retailerTotalsList');
                                            var store = list.getStore();
                                            /*totalsList.setData([{}]);
                                            totalsList.setItemTpl(
                                            Ext.create('Ext.XTemplate',
                                            '<div class="x-rm-listtpl-main">',
                                            '    <div style="width: 6%;">TOTALS</div>',
                                            '    <div style="width: 12%;">{[this.getTotalFor(\'store_name\')]}&nbsp; Retailers</div>',
                                            '    <div style="width: 10%;">{[this.getTotalFor(\'Users\')]}&nbsp; Users</div>',
                                            '    <div style="width: 43%;">{[this.getTotalFor(\'store_city\')]}&nbsp; Cities</div>',
                                            '</div>',
                                            {
                                            getTotalFor: function(value){
                                            var x = [];
                                            var y;
                                            store.each(function(record,id){
                                            if(value=='Users') {
                                            y = record.get('manager_firstname')+" "+record.get('manager_lastname');
                                            }
                                            else
                                            y = record.get(value);
                                            Ext.Array.include(x,y);
                                            });
                                            return x.length;
                                            }
                                            }
                                            )
                                            );
                                            */

                                            totalsList.setData([
                                            {

                                                store_count:0,
                                                city_count:0,
                                                user_count:0

                                            }
                                            ]);
                                            totalsList.setItemTpl(
                                            Ext.create('Ext.XTemplate',
                                            '<div class="x-rm-listtpl-main">',
                                            '    <div style="width: 6%;">TOTALS</div>',
                                            '    <div style="width: 12%;">{store_count}&nbsp; Retailers</div>',
                                            '    <div style="width: 10%;">{user_count}&nbsp; Users</div>',
                                            '    <div style="width: 43%;">{city_count}&nbsp; Cities</div>',
                                            '</div>'
                                            )
                                            );

                                        },
                                        event: 'initialize'
                                    },
                                    {
                                        fn: function(element, eOpts) {
                                            window.location.hash = 'retailerCard'+1;
                                            RMdatalink.app.getController('PaginationController').setRetailersActiveTabPageNo() ;
                                            Ext.ComponentQuery.query('#retailersMaincontentpanel')[0].down('#mainCardActionBtnContainer').setHidden(false) ;
                                            Ext.ComponentQuery.query('#retailersMaincontentpanel')[0].down('#cardDeleteBtn').setHidden(true) ;
                                        },
                                        event: 'painted'
                                    }
                                ]
                            },
                            {
                                xtype: 'container',
                                title: 'HOT PROSPECTS',
                                itemId: 'hotProspectsTab',
                                layout: 'fit',
                                scrollable: false,
                                items: [
                                    {
                                        xtype: 'retailerslistcontainer',
                                        layout: {
                                            type: 'vbox',
                                            pack: 'center'
                                        }
                                    }
                                ],
                                listeners: [
                                    {
                                        fn: function(component, eOpts) {


                                            /*
                                            var headers = component.down("#retailerListHeader");
                                            headers.setData([{}]);
                                            headers.setItemTpl(
                                            Ext.create('Ext.XTemplate',
                                            '<div class="x-rm-listtpl-main">',
                                            '    <div style="width: 4%;">',
                                            '        <div style="width: 25px;" data-name="all"></div>',
                                            '    </div>',
                                            '    <div style="width: 12%;" data-name="store_name">',
                                            '        Store&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style="width: 8%;" data-name="manager_lastname">',
                                            '        LastName&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style="width: 8%;" data-name="manager_firstname">',
                                            '        FirstName&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style="width: 10%;" data-name="manager_phone">',
                                            '        Phone&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style="width: 12%;" data-name="store_email">',
                                            '        E-mail&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style="width: 10%;" data-name="store_website">',
                                            '        Website&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style="width: 10%;" data-name="store_city">',
                                            '        City&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style="width: 8%;" data-name="store_state">',
                                            '        State&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style="width: 8%;" data-name="store_zip">',
                                            '        Zip&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style="width: 12%;" data-name="store_note">',
                                            '        Note&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '</div>'
                                            )
                                            );
                                            headers.refresh();
                                            var list = component.down('#retailerList');
                                            list.setStore('retailerHotProspects');
                                            list.setItemTpl(
                                            Ext.create('Ext.XTemplate',
                                            '<div class="x-rm-listtpl-main">',
                                            '    <div class="pointerCursor" style="width: 4%;overflow:visible;">',
                                            '        <div style="width: 25px; height:25px; background-image:url({manager_photo_url})"></div>',
                                            '    </div>',
                                            '    <div class="pointerCursor" style="width: 12%;" {[RMdatalink.util.globalConfig.getListAttrForDelHandling()]} = "{[RMdatalink.util.globalConfig.getStore_nameDelegateClassForTap()]}" >{store_name}</div>',
                                            '    <div class="pointerCursor" style="width: 8%;" {[RMdatalink.util.globalConfig.getListAttrForDelHandling()]} = "{[RMdatalink.util.globalConfig.getManager_LastNameDelegateClassForTap()]}" >{manager_lastname}</div>',
                                            '    <div class="pointerCursor" style="width: 8%;" {[RMdatalink.util.globalConfig.getListAttrForDelHandling()]} = "{[RMdatalink.util.globalConfig.getManager_LastNameDelegateClassForTap()]}" >{manager_firstname}</div>',
                                            '    <div style="width: 10%;">',
                                            '       {manager_phone}',
                                            '    </div>',
                                            '    <div style="width: 12%;"><a href="mailto:{store_email}">{store_email}</a></div>',
                                            '    <div style="width: 10%;">{store_website}</div>',
                                            '    <div style="width: 10%;"{[RMdatalink.util.globalConfig.getListAttrForDelHandling()]} = "goToMapWithCity">{store_city}</div>',
                                            '    <div style="width: 8%;"{[RMdatalink.util.globalConfig.getListAttrForDelHandling()]} = "goToMapWithState">{store_state}</div>',
                                            '    <div style="width: 8%;"{[RMdatalink.util.globalConfig.getListAttrForDelHandling()]} = "goToMapWithZip">{store_zip}</div>',
                                            '    <div style="width: 12%;">{store_note}</div>',
                                            '</div>'
                                            )
                                            );
                                            list.onStoreClear();
                                            //list.refresh();

                                            */


                                            var headers = component.down("#retailerListHeader");
                                            headers.setData([{}]);
                                            headers.setItemTpl(
                                            Ext.create('Ext.XTemplate',
                                            '<div class="x-rm-listtpl-main">',
                                            '    <div style="width: 4%;">',
                                            '        <div style="width: 25px;" data-name="all"></div>',
                                            '    </div>',
                                            '    <div style="width: 12%;" data-name="store_name">',
                                            '        Store&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style="width: 12%;" data-name="manager_firstname">',
                                            '        Name&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style="width: 12%;" data-name="manager_phone">',
                                            '    Phone&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style="width: 10%;" data-name="store_city">',
                                            '        City&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style="width: 6%;" data-name="store_state">',
                                            '        State&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',

                                            '    <div style="width: 8%;" data-name="store_zip">',
                                            '        Zip&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style="width: 5%;" data-name="store_products_datalink">',
                                            '        Data&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style=" width: 5%;" data-name="store_products_ecatalog">',
                                            '        eCat&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style=" width: 5%;" data-name="store_products_smart_cart">',
                                            '        eCom&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style=" width: 6%;" data-name="store_products_rm_plc">',
                                            '        RMPro&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style=" width: 6%;" data-name="store_products_rm_plc">',
                                            '        iRugs&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style=" width: 6%;" data-name="store_monthly_subscription">',
                                            '        Monthly&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '</div>'
                                            )
                                            );
                                            headers.refresh();
                                            var list = component.down('#retailerList');
                                            list.setStore('retailerHotProspects');

                                            list.setItemTpl(
                                            Ext.create('Ext.XTemplate',
                                            '<div class="x-rm-listtpl-main">',
                                            '    <div class="pointerCursor" style="width: 4%;overflow:visible;">',
                                            '        <div style="width: 25px; height:25px; background-image:url({manager_photo_url})"></div>',
                                            '    </div>',
                                            '    <div class="pointerCursor" style="width: 12%;" {[RMdatalink.util.globalConfig.getListAttrForDelHandling()]} = "{[RMdatalink.util.globalConfig.getStore_nameDelegateClassForTap()]}" >{store_name}</div>',
                                            '    <div class="pointerCursor" style="width: 12%;" {[RMdatalink.util.globalConfig.getListAttrForDelHandling()]} = "{[RMdatalink.util.globalConfig.getManager_LastNameDelegateClassForTap()]}" > {[this.getAccMgrName(values)]}</div>',
                                            '    <div style="width: 12%;height: 32px;">',
                                            '      {[this.getAccMgrPhone(values)]}',
                                            '    </div>',

                                            '    <div style="width: 10%;"  {[RMdatalink.util.globalConfig.getListAttrForDelHandling()]} = "goToMapWithCity">{[this.getCity(values)]}</div>',
                                            '    <div style="width: 6%;" {[RMdatalink.util.globalConfig.getListAttrForDelHandling()]} = "goToMapWithState">{[this.getState(values)]}</div>',
                                            '    <div style="width: 8%;"  {[RMdatalink.util.globalConfig.getListAttrForDelHandling()]} = "goToMapWithZip">{[this.getZip(values)]}</div>',
                                            '    <div style="width: 5%;" class="checkRound">',
                                            '        <div style="width: 9px; height:9px; background-color:{[this.getCheckBoxRound(values.store_products,\'datalink_status\')]}"></div>',
                                            '    </div>',
                                            '    <div style="width: 5%;" class="checkRound">',
                                            '        <div style="width: 9px; height:9px; background-color:{[this.getCheckBoxRound(values.store_products,\'ecatalog_status\')]}"></div>',
                                            '    </div>',
                                            '    <div style="width: 5%;" class="checkRound">',
                                            '        <div style=" width: 9px; height:9px; background-color:{[this.getCheckBoxRound(values.store_products,\'ecommerce_status\')]}"></div>',
                                            '    </div>',
                                            '    <div style="width: 6%;" class="checkRound">',
                                            '        <div style="width: 9px; height:9px; background-color:{[this.getCheckBoxRound(values.store_products,\'rmpro_status\')]}"></div>',
                                            '    </div>',
                                            '    <div style="width: 6%;" class="checkRound">',
                                            '        <div style="width: 9px; height:9px; background-color:{[this.getCheckBoxRound(values.store_products , \'irugs_status\')]}"></div>',
                                            '    </div>',
                                            '    <div style="width: 6%;">${[this.setOwedMonthlyField(values)]}</div>',
                                            '</div>',
                                            {
                                                getAccMgrName: function(value){

                                                    var cmpContacts = value.company_contacts ;
                                                    if(cmpContacts){

                                                        for(var i=0; i < cmpContacts.length ; i++ ){

                                                            if(cmpContacts[i].is_account_mgr){

                                                                return cmpContacts[i].companycontact_firstname +" "+ cmpContacts[i].companycontact_lastname ;
                                                            }
                                                        }

                                                        if(cmpContacts[0]){

                                                            return cmpContacts[0].companycontact_firstname +" "+ cmpContacts[0].companycontact_lastname ;
                                                        }

                                                    }
                                                    return "" ;
                                                },

                                                getAccMgrPhone: function(value){

                                                    var cmpContacts = value.company_contacts ;
                                                    if(cmpContacts){

                                                        for(var i=0; i < cmpContacts.length ; i++ ){

                                                            if(cmpContacts[i].is_account_mgr){

                                                                return cmpContacts[i].companycontact_phone +" Ext:"+ cmpContacts[i].companycontact_phone_ext + "<br>" + cmpContacts[i].companycontact_cellphone;
                                                            }
                                                        }

                                                        if(cmpContacts[0]){

                                                            return cmpContacts[0].companycontact_phone +" Ext:"+ cmpContacts[0].companycontact_phone_ext + "<br>" + cmpContacts[0].companycontact_cellphone;
                                                        }

                                                    }
                                                    return "" ;
                                                },


                                                getCity: function(value){
                                                    if(value.locations){

                                                        if(value.locations[0]){

                                                            if(value.locations[0].city!== ""){
                                                                return value.locations[0].city;
                                                            }


                                                        }
                                                    }

                                                    return value.store_city ;
                                                },

                                                getState: function(value){
                                                    if(value.locations){

                                                        if(value.locations[0]){

                                                            if(value.locations[0].state!== ""){
                                                                return value.locations[0].state;
                                                            }
                                                        }
                                                    }

                                                    return value.store_state ;
                                                },

                                                getZip: function(value){
                                                    if(value.locations){

                                                        if(value.locations[0]){

                                                            if(value.locations[0].zip !== ""){
                                                                return value.locations[0].zip;
                                                            }
                                                        }
                                                    }
                                                    return value.store_zip ;
                                                },


                                                getCheckBoxRound: function(value,key){
                                                    if(value && value[key])
                                                    {
                                                        switch(value[key]){

                                                            case "ACTIVE":
                                                            return '#39b3d7';
                                                            case "INACTIVE":
                                                            return '#ebebeb';
                                                            case "PROSPECT":
                                                            return '#47a447';
                                                            case "HOT_PROSPECT":
                                                            return '#ed9c28';
                                                            case "PENDING":
                                                            return '#3276b1';
                                                        }


                                                        return '#2EC1DA';
                                                    }
                                                    else
                                                    return '#ebebeb';

                                                }

                                            },

                                            {
                                                setOwedMonthlyField: function(rec){
                                                    var value = 0 ;
                                                    if(rec.store_products.rmpro_status && rec.store_products.rmpro_status == "ACTIVE"){

                                                        value += parseFloat(rec.product_billng.product_rmpro.monthly_membership,0) ;
                                                    }

                                                    if(rec.store_products.datalink_status && rec.store_products.datalink_status == "ACTIVE"){

                                                        value += parseFloat(rec.product_billng.product_datalink.monthly_membership,0) ;
                                                    }

                                                    value.toFixed(2);



                                                    if(value === 0)
                                                    return "0.00";
                                                    else
                                                    {
                                                        var sumStr = ""+ value;
                                                        var sumStrSplit0 = sumStr.split('.')[0];

                                                        var len = sumStrSplit0.length;
                                                        if(len > 3)
                                                        {
                                                            sumStr1 = sumStrSplit0.substr(0,(len-3));
                                                            sumStr2 = sumStrSplit0.substr((len-3),(len-1));
                                                            sumStrSplit0 =  sumStr1 + ',' + sumStr2 ;
                                                        }

                                                        if(sumStr.split('.')[1])
                                                        return sumStrSplit0 + '.' +sumStr.split('.')[1];
                                                        else
                                                        {
                                                            return  sumStrSplit0;
                                                        }
                                                    }


                                                }

                                            }
                                            )
                                            );


                                            list.onStoreClear();
                                            //list.refresh();


                                            var totalsList = component.down('#retailerTotalsList');
                                            var store = list.getStore();
                                            //totalsList.setData([{}]);

                                            /*totalsList.setItemTpl(
                                            Ext.create('Ext.XTemplate',
                                            '<div class="x-rm-listtpl-main">',
                                            '    <div style="width: 6%;">TOTALS</div>',
                                            '    <div style="width: 12%;">{[this.getTotalFor(\'store_name\')]}&nbsp; Retailers</div>',
                                            '    <div style="width: 10%;">{[this.getTotalFor(\'Users\')]}&nbsp; Users</div>',
                                            '    <div style="width: 43%;">{[this.getTotalFor(\'store_city\')]}&nbsp; Cities</div>',
                                            '</div>',
                                            {
                                            getTotalFor: function(value){
                                            var x = [];
                                            var y;
                                            store.each(function(record,id){
                                            if(value=='Users') {
                                            y = record.get('manager_firstname')+" "+record.get('manager_lastname');
                                            }
                                            else
                                            y = record.get(value);
                                            Ext.Array.include(x,y);
                                            });
                                            return x.length;
                                            }
                                            }
                                            )
                                            );
                                            */

                                            totalsList.setData([
                                            {

                                                store_count:0,
                                                city_count:0,
                                                user_count:0

                                            }
                                            ]);
                                            totalsList.setItemTpl(
                                            Ext.create('Ext.XTemplate',
                                            '<div class="x-rm-listtpl-main">',
                                            '    <div style="width: 6%;">TOTALS</div>',
                                            '    <div style="width: 12%;">{store_count}&nbsp; Retailers</div>',
                                            '    <div style="width: 10%;">{user_count}&nbsp; Users</div>',
                                            '    <div style="width: 43%;">{city_count}&nbsp; Cities</div>',
                                            '</div>'
                                            )
                                            );

                                        },
                                        event: 'initialize'
                                    },
                                    {
                                        fn: function(element, eOpts) {
                                            window.location.hash = 'retailerCard'+2;

                                            RMdatalink.app.getController('PaginationController').setRetailersActiveTabPageNo() ;
                                            Ext.ComponentQuery.query('#retailersMaincontentpanel')[0].down('#mainCardActionBtnContainer').setHidden(false) ;
                                            Ext.ComponentQuery.query('#retailersMaincontentpanel')[0].down('#cardDeleteBtn').setHidden(true) ;
                                        },
                                        event: 'painted'
                                    }
                                ]
                            },
                            {
                                xtype: 'container',
                                title: 'PROSPECTS',
                                itemId: 'prospectsTab',
                                layout: 'fit',
                                scrollable: false,
                                items: [
                                    {
                                        xtype: 'retailerslistcontainer',
                                        layout: {
                                            type: 'vbox',
                                            pack: 'center'
                                        }
                                    }
                                ],
                                listeners: [
                                    {
                                        fn: function(component, eOpts) {
                                            /*
                                            var headers = component.down("#retailerListHeader");
                                            headers.setData([{}]);
                                            headers.setItemTpl(
                                            Ext.create('Ext.XTemplate',
                                            '<div class="x-rm-listtpl-main">',
                                            '    <div style="width: 4%;">',
                                            '        <div style="width: 25px;" data-name="all"></div>',
                                            '    </div>',
                                            '    <div style="width: 12%;" data-name="store_name">',
                                            '        Store&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style="width: 8%;" data-name="manager_lastname">',
                                            '        LastName&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style="width: 8%;" data-name="manager_firstname">',
                                            '        FirstName&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style="width: 10%;" data-name="manager_phone">',
                                            '        Phone&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style="width: 12%;" data-name="store_email">',
                                            '        E-mail&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style="width: 10%;" data-name="store_website">',
                                            '        Website&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style="width: 10%;" data-name="store_city">',
                                            '        City&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style="width: 8%;" data-name="store_state">',
                                            '        State&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style="width: 8%;" data-name="store_zip">',
                                            '        Zip&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style="width: 12%;" data-name="store_note">',
                                            '        Note&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '</div>'
                                            )
                                            );
                                            headers.refresh();
                                            var list = component.down('#retailerList');
                                            list.setStore('retailerProspects');
                                            list.setItemTpl(
                                            Ext.create('Ext.XTemplate',
                                            '<div class="x-rm-listtpl-main">',
                                            '    <div class="pointerCursor" style="width: 4%;overflow:visible;">',
                                            '        <div style="width: 25px; height:25px; background-image:url({manager_photo_url})"></div>',
                                            '    </div>',
                                            '    <div class="pointerCursor" style="width: 12%;" {[RMdatalink.util.globalConfig.getListAttrForDelHandling()]} = "{[RMdatalink.util.globalConfig.getStore_nameDelegateClassForTap()]}" >{store_name}</div>',
                                            '    <div class="pointerCursor" style="width: 8%;" {[RMdatalink.util.globalConfig.getListAttrForDelHandling()]} = "{[RMdatalink.util.globalConfig.getManager_LastNameDelegateClassForTap()]}" >{manager_lastname}</div>',
                                            '    <div class="pointerCursor" style="width: 8%;" {[RMdatalink.util.globalConfig.getListAttrForDelHandling()]} = "{[RMdatalink.util.globalConfig.getManager_LastNameDelegateClassForTap()]}" >{manager_firstname}</div>',
                                            '    <div style="width: 10%;">',
                                            '       {manager_phone}',
                                            '    </div>',
                                            '    <div style="width: 12%;"><a href="mailto:{store_email}">{store_email}</a></div>',
                                            '    <div style="width: 10%;">{store_website}</div>',
                                            '    <div style="width: 10%;"{[RMdatalink.util.globalConfig.getListAttrForDelHandling()]} = "goToMapWithCity">{store_city}</div>',
                                            '    <div style="width: 8%;"{[RMdatalink.util.globalConfig.getListAttrForDelHandling()]} = "goToMapWithState">{store_state}</div>',
                                            '    <div style="width: 8%;"{[RMdatalink.util.globalConfig.getListAttrForDelHandling()]} = "goToMapWithZip">{store_zip}</div>',
                                            '    <div style="width: 12%;">{store_note}</div>',
                                            '</div>'
                                            )
                                            );
                                            list.onStoreClear();

                                            */

                                            var headers = component.down("#retailerListHeader");
                                            headers.setData([{}]);
                                            headers.setItemTpl(
                                            Ext.create('Ext.XTemplate',
                                            '<div class="x-rm-listtpl-main">',
                                            '    <div style="width: 4%;">',
                                            '        <div style="width: 25px;" data-name="all"></div>',
                                            '    </div>',
                                            '    <div style="width: 12%;" data-name="store_name">',
                                            '        Store&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style="width: 12%;" data-name="manager_firstname">',
                                            '        Name&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style="width: 12%;" data-name="manager_phone">',
                                            '    Phone&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style="width: 10%;" data-name="store_city">',
                                            '        City&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style="width: 6%;" data-name="store_state">',
                                            '        State&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',

                                            '    <div style="width: 8%;" data-name="store_zip">',
                                            '        Zip&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style="width: 5%;" data-name="store_products_datalink">',
                                            '        Data&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style=" width: 5%;" data-name="store_products_ecatalog">',
                                            '        eCat&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style=" width: 5%;" data-name="store_products_smart_cart">',
                                            '        eCom&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style=" width: 6%;" data-name="store_products_rm_plc">',
                                            '        RMPro&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style=" width: 6%;" data-name="store_products_rm_plc">',
                                            '        iRugs&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style=" width: 6%;" data-name="store_monthly_subscription">',
                                            '        Monthly&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '</div>'
                                            )
                                            );
                                            headers.refresh();
                                            var list = component.down('#retailerList');
                                            list.setStore('retailerProspects');

                                            list.setItemTpl(
                                            Ext.create('Ext.XTemplate',
                                            '<div class="x-rm-listtpl-main">',
                                            '    <div class="pointerCursor" style="width: 4%;overflow:visible;">',
                                            '        <div style="width: 25px; height:25px; background-image:url({manager_photo_url})"></div>',
                                            '    </div>',
                                            '    <div class="pointerCursor" style="width: 12%;" {[RMdatalink.util.globalConfig.getListAttrForDelHandling()]} = "{[RMdatalink.util.globalConfig.getStore_nameDelegateClassForTap()]}" >{store_name}</div>',
                                            '    <div class="pointerCursor" style="width: 12%;" {[RMdatalink.util.globalConfig.getListAttrForDelHandling()]} = "{[RMdatalink.util.globalConfig.getManager_LastNameDelegateClassForTap()]}" > {[this.getAccMgrName(values)]}</div>',
                                            '    <div style="width: 12%;height: 32px;">',
                                            '      {[this.getAccMgrPhone(values)]}',
                                            '    </div>',

                                            '    <div style="width: 10%;"  {[RMdatalink.util.globalConfig.getListAttrForDelHandling()]} = "goToMapWithCity">{[this.getCity(values)]}</div>',
                                            '    <div style="width: 6%;" {[RMdatalink.util.globalConfig.getListAttrForDelHandling()]} = "goToMapWithState">{[this.getState(values)]}</div>',
                                            '    <div style="width: 8%;"  {[RMdatalink.util.globalConfig.getListAttrForDelHandling()]} = "goToMapWithZip">{[this.getZip(values)]}</div>',
                                            '    <div style="width: 5%;" class="checkRound">',
                                            '        <div style="width: 9px; height:9px; background-color:{[this.getCheckBoxRound(values.store_products,\'datalink_status\')]}"></div>',
                                            '    </div>',
                                            '    <div style="width: 5%;" class="checkRound">',
                                            '        <div style="width: 9px; height:9px; background-color:{[this.getCheckBoxRound(values.store_products,\'ecatalog_status\')]}"></div>',
                                            '    </div>',
                                            '    <div style="width: 5%;" class="checkRound">',
                                            '        <div style=" width: 9px; height:9px; background-color:{[this.getCheckBoxRound(values.store_products,\'ecommerce_status\')]}"></div>',
                                            '    </div>',
                                            '    <div style="width: 6%;" class="checkRound">',
                                            '        <div style="width: 9px; height:9px; background-color:{[this.getCheckBoxRound(values.store_products,\'rmpro_status\')]}"></div>',
                                            '    </div>',
                                            '    <div style="width: 6%;" class="checkRound">',
                                            '        <div style="width: 9px; height:9px; background-color:{[this.getCheckBoxRound(values.store_products , \'irugs_status\')]}"></div>',
                                            '    </div>',
                                            '    <div style="width: 6%;">${[this.setOwedMonthlyField(values)]}</div>',
                                            '</div>',
                                            {

                                                getAccMgrName: function(value){

                                                    var cmpContacts = value.company_contacts ;
                                                    if(cmpContacts){

                                                        for(var i=0; i < cmpContacts.length ; i++ ){

                                                            if(cmpContacts[i].is_account_mgr){

                                                                return cmpContacts[i].companycontact_firstname +" "+ cmpContacts[i].companycontact_lastname ;
                                                            }
                                                        }

                                                        if(cmpContacts[0]){

                                                            return cmpContacts[0].companycontact_firstname +" "+ cmpContacts[0].companycontact_lastname ;
                                                        }

                                                    }
                                                    return "" ;
                                                },

                                                getAccMgrPhone: function(value){

                                                    var cmpContacts = value.company_contacts ;
                                                    if(cmpContacts){

                                                        for(var i=0; i < cmpContacts.length ; i++ ){

                                                            if(cmpContacts[i].is_account_mgr){

                                                                return cmpContacts[i].companycontact_phone +" Ext:"+ cmpContacts[i].companycontact_phone_ext + "<br>" + cmpContacts[i].companycontact_cellphone;
                                                            }
                                                        }

                                                        if(cmpContacts[0]){

                                                            return cmpContacts[0].companycontact_phone +" Ext:"+ cmpContacts[0].companycontact_phone_ext + "<br>" + cmpContacts[0].companycontact_cellphone;
                                                        }

                                                    }
                                                    return "" ;
                                                },

                                                getCity: function(value){
                                                    if(value.locations){

                                                        if(value.locations[0]){

                                                            if(value.locations[0].city!== ""){
                                                                return value.locations[0].city;
                                                            }


                                                        }
                                                    }

                                                    return value.store_city ;
                                                },

                                                getState: function(value){
                                                    if(value.locations){

                                                        if(value.locations[0]){

                                                            if(value.locations[0].state!== ""){
                                                                return value.locations[0].state;
                                                            }
                                                        }
                                                    }

                                                    return value.store_state ;
                                                },

                                                getZip: function(value){
                                                    if(value.locations){

                                                        if(value.locations[0]){

                                                            if(value.locations[0].zip !== ""){
                                                                return value.locations[0].zip;
                                                            }
                                                        }
                                                    }
                                                    return value.store_zip ;
                                                },


                                                getCheckBoxRound: function(value,key){
                                                    if(value && value[key])
                                                    {
                                                        switch(value[key]){

                                                            case "ACTIVE":
                                                            return '#39b3d7';
                                                            case "INACTIVE":
                                                            return '#ebebeb';
                                                            case "PROSPECT":
                                                            return '#47a447';
                                                            case "HOT_PROSPECT":
                                                            return '#ed9c28';
                                                            case "PENDING":
                                                            return '#3276b1';
                                                        }


                                                        return '#2EC1DA';
                                                    }
                                                    else
                                                    return '#ebebeb';

                                                }

                                            },

                                            {
                                                setOwedMonthlyField: function(rec){
                                                    var value = 0 ;
                                                    if(rec.store_products.rmpro_status && rec.store_products.rmpro_status == "ACTIVE"){

                                                        value += parseFloat(rec.product_billng.product_rmpro.monthly_membership,0) ;
                                                    }

                                                    if(rec.store_products.datalink_status && rec.store_products.datalink_status == "ACTIVE"){

                                                        value += parseFloat(rec.product_billng.product_datalink.monthly_membership,0) ;
                                                    }

                                                    value.toFixed(2);



                                                    if(value === 0)
                                                    return "0.00";
                                                    else
                                                    {
                                                        var sumStr = ""+ value;
                                                        var sumStrSplit0 = sumStr.split('.')[0];

                                                        var len = sumStrSplit0.length;
                                                        if(len > 3)
                                                        {
                                                            sumStr1 = sumStrSplit0.substr(0,(len-3));
                                                            sumStr2 = sumStrSplit0.substr((len-3),(len-1));
                                                            sumStrSplit0 =  sumStr1 + ',' + sumStr2 ;
                                                        }

                                                        if(sumStr.split('.')[1])
                                                        return sumStrSplit0 + '.' +sumStr.split('.')[1];
                                                        else
                                                        {
                                                            return  sumStrSplit0;
                                                        }
                                                    }


                                                }

                                            }
                                            )
                                            );


                                            list.onStoreClear();

                                            //list.refresh();

                                            var totalsList = component.down('#retailerTotalsList');
                                            var store = list.getStore();
                                            //totalsList.setData([{}]);

                                            /*totalsList.setItemTpl(
                                            Ext.create('Ext.XTemplate',
                                            '<div class="x-rm-listtpl-main">',
                                            '    <div style="width: 6%;">TOTALS</div>',
                                            '    <div style="width: 12%;">{[this.getTotalFor(\'store_name\')]}&nbsp; Retailers</div>',
                                            '    <div style="width: 10%;">{[this.getTotalFor(\'Users\')]}&nbsp; Users</div>',
                                            '    <div style="width: 43%;">{[this.getTotalFor(\'store_city\')]}&nbsp; Cities</div>',
                                            '</div>',
                                            {
                                            getTotalFor: function(value){
                                            var x = [];
                                            var y;
                                            store.each(function(record,id){
                                            if(value=='Users') {
                                            y = record.get('manager_firstname')+" "+record.get('manager_lastname');
                                            }
                                            else
                                            y = record.get(value);
                                            Ext.Array.include(x,y);
                                            });
                                            return x.length;
                                            }
                                            }
                                            )
                                            );
                                            */

                                            totalsList.setData([
                                            {

                                                store_count:0,
                                                city_count:0,
                                                user_count:0

                                            }
                                            ]);
                                            totalsList.setItemTpl(
                                            Ext.create('Ext.XTemplate',
                                            '<div class="x-rm-listtpl-main">',
                                            '    <div style="width: 6%;">TOTALS</div>',
                                            '    <div style="width: 12%;">{store_count}&nbsp; Retailers</div>',
                                            '    <div style="width: 10%;">{user_count}&nbsp; Users</div>',
                                            '    <div style="width: 43%;">{city_count}&nbsp; Cities</div>',
                                            '</div>'
                                            )
                                            );

                                        },
                                        event: 'initialize'
                                    },
                                    {
                                        fn: function(element, eOpts) {
                                            window.location.hash = 'retailerCard'+3;

                                            RMdatalink.app.getController('PaginationController').setRetailersActiveTabPageNo() ;
                                            Ext.ComponentQuery.query('#retailersMaincontentpanel')[0].down('#mainCardActionBtnContainer').setHidden(false) ;
                                            Ext.ComponentQuery.query('#retailersMaincontentpanel')[0].down('#cardDeleteBtn').setHidden(true) ;
                                        },
                                        event: 'painted'
                                    }
                                ]
                            },
                            {
                                xtype: 'container',
                                title: 'INACTIVE',
                                itemId: 'inactiveTab',
                                layout: 'fit',
                                scrollable: false,
                                items: [
                                    {
                                        xtype: 'retailerslistcontainer',
                                        layout: {
                                            type: 'vbox',
                                            pack: 'center'
                                        }
                                    }
                                ],
                                listeners: [
                                    {
                                        fn: function(component, eOpts) {
                                            /*
                                            var headers = component.down("#retailerListHeader");
                                            headers.setData([{}]);
                                            headers.setItemTpl(
                                            Ext.create('Ext.XTemplate',
                                            '<div class="x-rm-listtpl-main">',
                                            '    <div style="width: 4%;">',
                                            '        <div style="width: 25px;" data-name="all"></div>',
                                            '    </div>',
                                            '    <div style="width: 12%;" data-name="store_name">',
                                            '        Store&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style="width: 10%;" data-name="manager_lastname">',
                                            '        LastName&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style="width: 10%;" data-name="manager_firstname">',
                                            '        FirstName&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style="width: 10%;" data-name="manager_phone">',
                                            '        Phone&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style="width: 12%;" data-name="store_email">',
                                            '        E-mail&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style="width: 10%;" data-name="store_website">',
                                            '        Website&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style="width: 10%;" data-name="store_city">',
                                            '        City&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style="width: 6%;" data-name="store_state">',
                                            '        State&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style="width: 8%;" data-name="store_zip">',
                                            '        Zip&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style="width: 15%;" data-name="store_inactive_reason">',
                                            '        Reason&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '</div>'
                                            )
                                            );
                                            headers.refresh();
                                            var list = component.down('#retailerList');
                                            list.setStore('retailerInactive');
                                            list.setItemTpl(
                                            Ext.create('Ext.XTemplate',
                                            '<div class="x-rm-listtpl-main">',
                                            '    <div class="pointerCursor" style="width: 4%;overflow:visible;">',
                                            '        <div style="width: 25px; height:25px; background-image:url({manager_photo_url})"></div>',
                                            '    </div>',
                                            '    <div class="pointerCursor" style="width: 12%;" {[RMdatalink.util.globalConfig.getListAttrForDelHandling()]} = "{[RMdatalink.util.globalConfig.getStore_nameDelegateClassForTap()]}" >{store_name}</div>',
                                            '    <div class="pointerCursor" style="width: 10%;" {[RMdatalink.util.globalConfig.getListAttrForDelHandling()]} = "{[RMdatalink.util.globalConfig.getManager_LastNameDelegateClassForTap()]}" >{manager_lastname}</div>',
                                            '    <div class="pointerCursor" style="width: 10%;" {[RMdatalink.util.globalConfig.getListAttrForDelHandling()]} = "{[RMdatalink.util.globalConfig.getManager_LastNameDelegateClassForTap()]}" >{manager_firstname}</div>',
                                            '    <div style="width: 10%;">',
                                            '        {manager_phone}',
                                            '    </div>',
                                            '    <div style="width: 12%;"><a href="mailto:{store_email}">{store_email}</a></div>',
                                            '    <div style="width: 10%;">{store_website}</div>',
                                            '    <div style="width: 10%;"{[RMdatalink.util.globalConfig.getListAttrForDelHandling()]} = "goToMapWithCity">{store_city}</div>',
                                            '    <div style="width: 6%;"{[RMdatalink.util.globalConfig.getListAttrForDelHandling()]} = "goToMapWithState">{store_state}</div>',
                                            '    <div style="width: 8%;"{[RMdatalink.util.globalConfig.getListAttrForDelHandling()]} = "goToMapWithZip">{store_zip}</div>',
                                            '    <div style="width: 15%;">{store_inactive_reason}</div>',
                                            '</div>'
                                            )
                                            );
                                            list.onStoreClear();
                                            */

                                            var headers = component.down("#retailerListHeader");
                                            headers.setData([{}]);
                                            headers.setItemTpl(
                                            Ext.create('Ext.XTemplate',
                                            '<div class="x-rm-listtpl-main">',
                                            '    <div style="width: 4%;">',
                                            '        <div style="width: 25px;" data-name="all"></div>',
                                            '    </div>',
                                            '    <div style="width: 12%;" data-name="store_name">',
                                            '        Store&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style="width: 12%;" data-name="manager_firstname">',
                                            '        Name&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style="width: 12%;" data-name="manager_phone">',
                                            '    Phone&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style="width: 10%;" data-name="store_city">',
                                            '        City&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style="width: 6%;" data-name="store_state">',
                                            '        State&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style="width: 8%;" data-name="store_zip">',
                                            '        Zip&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style="width: 5%;" data-name="store_products_datalink">',
                                            '        Data&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style=" width: 5%;" data-name="store_products_ecatalog">',
                                            '        eCat&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style=" width: 5%;" data-name="store_products_smart_cart">',
                                            '        eCom&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style=" width: 6%;" data-name="store_products_rm_plc">',
                                            '        RMPro&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style=" width: 6%;" data-name="store_products_rm_plc">',
                                            '        iRugs&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style=" width: 6%;" data-name="store_monthly_subscription">',
                                            '        Monthly&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '</div>'
                                            )
                                            );
                                            headers.refresh();
                                            var list = component.down('#retailerList');
                                            list.setStore('retailerInactive');
                                            list.setItemTpl(
                                            Ext.create('Ext.XTemplate',
                                            '<div class="x-rm-listtpl-main">',
                                            '    <div class="pointerCursor" style="width: 4%;overflow:visible;">',
                                            '        <div style="width: 25px; height:25px; background-image:url({manager_photo_url})"></div>',
                                            '    </div>',
                                            '    <div class="pointerCursor" style="width: 12%;" {[RMdatalink.util.globalConfig.getListAttrForDelHandling()]} = "{[RMdatalink.util.globalConfig.getStore_nameDelegateClassForTap()]}" >{store_name}</div>',
                                            '    <div class="pointerCursor" style="width: 12%;" {[RMdatalink.util.globalConfig.getListAttrForDelHandling()]} = "{[RMdatalink.util.globalConfig.getManager_LastNameDelegateClassForTap()]}" > {[this.getAccMgrName(values)]}</div>',
                                            '    <div style="width: 12%;height: 32px;">',
                                            '      {[this.getAccMgrPhone(values)]}',
                                            '    </div>',

                                            '    <div style="width: 10%;"  {[RMdatalink.util.globalConfig.getListAttrForDelHandling()]} = "goToMapWithCity">{[this.getCity(values)]}</div>',
                                            '    <div style="width: 6%;" {[RMdatalink.util.globalConfig.getListAttrForDelHandling()]} = "goToMapWithState">{[this.getState(values)]}</div>',
                                            '    <div style="width: 8%;"  {[RMdatalink.util.globalConfig.getListAttrForDelHandling()]} = "goToMapWithZip">{[this.getZip(values)]}</div>',
                                            '    <div style="width: 5%;" class="checkRound">',
                                            '        <div style="width: 9px; height:9px; background-color:{[this.getCheckBoxRound(values.store_products,\'datalink_status\')]}"></div>',
                                            '    </div>',
                                            '    <div style="width: 5%;" class="checkRound">',
                                            '        <div style="width: 9px; height:9px; background-color:{[this.getCheckBoxRound(values.store_products,\'ecatalog_status\')]}"></div>',
                                            '    </div>',
                                            '    <div style="width: 5%;" class="checkRound">',
                                            '        <div style=" width: 9px; height:9px; background-color:{[this.getCheckBoxRound(values.store_products,\'ecommerce_status\')]}"></div>',
                                            '    </div>',
                                            '    <div style="width: 6%;" class="checkRound">',
                                            '        <div style="width: 9px; height:9px; background-color:{[this.getCheckBoxRound(values.store_products,\'rmpro_status\')]}"></div>',
                                            '    </div>',
                                            '    <div style="width: 6%;" class="checkRound">',
                                            '        <div style="width: 9px; height:9px; background-color:{[this.getCheckBoxRound(values.store_products , \'irugs_status\')]}"></div>',
                                            '    </div>',
                                            '    <div style="width: 6%;">${[this.setOwedMonthlyField(values)]}</div>',
                                            '</div>',
                                            {
                                                getAccMgrName: function(value){

                                                    var cmpContacts = value.company_contacts ;
                                                    if(cmpContacts){

                                                        for(var i=0; i < cmpContacts.length ; i++ ){

                                                            if(cmpContacts[i].is_account_mgr){

                                                                return cmpContacts[i].companycontact_firstname +" "+ cmpContacts[i].companycontact_lastname ;
                                                            }
                                                        }

                                                        if(cmpContacts[0]){

                                                            return cmpContacts[0].companycontact_firstname +" "+ cmpContacts[0].companycontact_lastname ;
                                                        }

                                                    }
                                                    return "" ;
                                                },

                                                getAccMgrPhone: function(value){

                                                    var cmpContacts = value.company_contacts ;
                                                    if(cmpContacts){

                                                        for(var i=0; i < cmpContacts.length ; i++ ){

                                                            if(cmpContacts[i].is_account_mgr){

                                                                return cmpContacts[i].companycontact_phone +" Ext:"+ cmpContacts[i].companycontact_phone_ext + "<br>" + cmpContacts[i].companycontact_cellphone;
                                                            }
                                                        }

                                                        if(cmpContacts[0]){

                                                            return cmpContacts[0].companycontact_phone +" Ext:"+ cmpContacts[0].companycontact_phone_ext + "<br>" + cmpContacts[0].companycontact_cellphone;
                                                        }

                                                    }
                                                    return "" ;
                                                },

                                                getCity: function(value){
                                                    if(value.locations){

                                                        if(value.locations[0]){

                                                            if(value.locations[0].city!== ""){
                                                                return value.locations[0].city;
                                                            }


                                                        }
                                                    }

                                                    return value.store_city ;
                                                },

                                                getState: function(value){
                                                    if(value.locations){

                                                        if(value.locations[0]){

                                                            if(value.locations[0].state!== ""){
                                                                return value.locations[0].state;
                                                            }
                                                        }
                                                    }

                                                    return value.store_state ;
                                                },

                                                getZip: function(value){
                                                    if(value.locations){

                                                        if(value.locations[0]){

                                                            if(value.locations[0].zip !== ""){
                                                                return value.locations[0].zip;
                                                            }
                                                        }
                                                    }
                                                    return value.store_zip ;
                                                },


                                                getCheckBoxRound: function(value,key){
                                                    if(value && value[key])
                                                    {
                                                        switch(value[key]){

                                                            case "ACTIVE":
                                                            return '#39b3d7';
                                                            case "INACTIVE":
                                                            return '#ebebeb';
                                                            case "PROSPECT":
                                                            return '#47a447';
                                                            case "HOT_PROSPECT":
                                                            return '#ed9c28';
                                                            case "PENDING":
                                                            return '#3276b1';
                                                        }


                                                        return '#2EC1DA';
                                                    }
                                                    else
                                                    return '#ebebeb';

                                                }

                                            },

                                            {
                                                setOwedMonthlyField: function(rec){
                                                    var value = 0 ;
                                                    if(rec.store_products.rmpro_status && rec.store_products.rmpro_status == "ACTIVE"){

                                                        value += parseFloat(rec.product_billng.product_rmpro.monthly_membership,0) ;
                                                    }

                                                    if(rec.store_products.datalink_status && rec.store_products.datalink_status == "ACTIVE"){

                                                        value += parseFloat(rec.product_billng.product_datalink.monthly_membership,0) ;
                                                    }

                                                    value.toFixed(2);



                                                    if(value === 0)
                                                    return "0.00";
                                                    else
                                                    {
                                                        var sumStr = ""+ value;
                                                        var sumStrSplit0 = sumStr.split('.')[0];

                                                        var len = sumStrSplit0.length;
                                                        if(len > 3)
                                                        {
                                                            sumStr1 = sumStrSplit0.substr(0,(len-3));
                                                            sumStr2 = sumStrSplit0.substr((len-3),(len-1));
                                                            sumStrSplit0 =  sumStr1 + ',' + sumStr2 ;
                                                        }

                                                        if(sumStr.split('.')[1])
                                                        return sumStrSplit0 + '.' +sumStr.split('.')[1];
                                                        else
                                                        {
                                                            return  sumStrSplit0;
                                                        }
                                                    }


                                                }

                                            }
                                            )
                                            );

                                            list.onStoreClear();

                                            //list.refresh();

                                            var totalsList = component.down('#retailerTotalsList');
                                            var store = list.getStore();
                                            /*totalsList.setData([{}]);
                                            totalsList.setItemTpl(
                                            Ext.create('Ext.XTemplate',
                                            '<div class="x-rm-listtpl-main">',
                                            '    <div style="width: 6%;">TOTALS</div>',
                                            '    <div style="width: 12%;">{[this.getTotalFor(\'store_name\')]}&nbsp; Retailers</div>',
                                            '    <div style="width: 10%;">{[this.getTotalFor(\'Users\')]}&nbsp; Users</div>',
                                            '    <div style="width: 15%;">{[this.getTotalFor(\'store_city\')]}&nbsp; Cities</div>',
                                            '    <div style="width: 10%;">{[this.getTotalFor(\'Past Due\')]}&nbsp;Past Due</div>',
                                            '    <div style="width: 10%;">{[this.getTotalFor(\'Cancelled\')]}&nbsp;Cancelled</div>',
                                            '    <div style="width: 10%;">{[this.getTotalFor(\'Hold\')]}&nbsp;On Hold</div>',
                                            '</div>',
                                            {
                                            getTotalFor: function(value){
                                            var x = [];
                                            var y;
                                            var reasonCounts = {};
                                            store.each(function(record,id){
                                            if(value=='Users')
                                            y = record.get('manager_firstname')+" "+record.get('manager_lastname');
                                            else if(value=='Past Due' || value=='Cancelled' || value=='Hold') {
                                            y = record.get('store_inactive_reason');
                                            reasonCounts[y] = reasonCounts[y] ? reasonCounts[y]+1 : 1;
                                            }
                                            else
                                            y = record.get(value);

                                            Ext.Array.include(x,y);
                                            });
                                            if(value=='Past Due' || value=='Cancelled' || value=='Hold') {
                                            return reasonCounts[value]?reasonCounts[value]:0;
                                            }
                                            else
                                            return x.length;
                                            }
                                            }
                                            )
                                            );
                                            */
                                            totalsList.setData([
                                            {

                                                store_count:0,
                                                city_count:0,
                                                user_count:0

                                            }
                                            ]);
                                            totalsList.setItemTpl(
                                            Ext.create('Ext.XTemplate',
                                            '<div class="x-rm-listtpl-main">',
                                            '    <div style="width: 6%;">TOTALS</div>',
                                            '    <div style="width: 12%;">{store_count}&nbsp; Retailers</div>',
                                            '    <div style="width: 10%;">{user_count}&nbsp; Users</div>',
                                            '    <div style="width: 43%;">{city_count}&nbsp; Cities</div>',
                                            '</div>'
                                            )
                                            );

                                        },
                                        event: 'initialize'
                                    },
                                    {
                                        fn: function(element, eOpts) {
                                            window.location.hash = 'retailerCard'+4;
                                            RMdatalink.app.getController('PaginationController').setRetailersActiveTabPageNo() ;
                                            Ext.ComponentQuery.query('#retailersMaincontentpanel')[0].down('#mainCardActionBtnContainer').setHidden(false) ;
                                            Ext.ComponentQuery.query('#retailersMaincontentpanel')[0].down('#cardDeleteBtn').setHidden(true) ;
                                        },
                                        event: 'painted'
                                    }
                                ]
                            },
                            {
                                xtype: 'container',
                                title: 'ALL',
                                itemId: 'allRetailerTab',
                                layout: 'fit',
                                scrollable: false,
                                items: [
                                    {
                                        xtype: 'retailerslistcontainer',
                                        layout: {
                                            type: 'vbox',
                                            pack: 'center'
                                        }
                                    }
                                ],
                                listeners: [
                                    {
                                        fn: function(component, eOpts) {


                                            /*
                                            var headers = component.down("#retailerListHeader");
                                            headers.setData([{}]);  ///  CONVERT THIS TO A STORE CONTAINING A SIGNLE OBJECT .
                                            headers.setItemTpl(
                                            Ext.create('Ext.XTemplate',
                                            '<div class="x-rm-listtpl-main">',
                                            '    <div style="width: 4%;">',
                                            '        <div style="width: 25px;" data-name="all"></div>',
                                            '    </div>',
                                            '    <div style="width: 12%;" data-name="store_name">',
                                            '        Store&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style="width: 10%;" data-name="manager_lastname">',
                                            '        LastName&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style="width: 10%;" data-name="manager_firstname">',
                                            '        FirstName&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style="width: 10%;" data-name="manager_phone">',
                                            '        Phone&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '  <div style="width: 12%;" data-name="store_email">',
                                            '        E-mail&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style="width: 10%;" data-name="store_website">',
                                            '        Website&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style="width: 10%;" data-name="store_city">',
                                            '        City&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style="width: 6%;" data-name="store_state">',
                                            '        State&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style="width: 10%;" data-name="store_zip">',
                                            '        Zip&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '</div>'
                                            )
                                            );
                                            headers.refresh();
                                            var list = component.down('#retailerList');
                                            list.setStore('retailersMaster');
                                            list.setItemTpl(
                                            Ext.create('Ext.XTemplate',
                                            '<div class="x-rm-listtpl-main">',
                                            '    <div class="pointerCursor" style="width: 4%;overflow:visible;">',
                                            '        <div style="width: 25px; height:25px; background-image:url({manager_photo_url})"></div>',
                                            '    </div>',
                                            '    <div class="pointerCursor" style="width: 12%;" {[RMdatalink.util.globalConfig.getListAttrForDelHandling()]} = "{[RMdatalink.util.globalConfig.getStore_nameDelegateClassForTap()]}" >{store_name}</div>',
                                            '    <div class="pointerCursor" style="width: 10%;" {[RMdatalink.util.globalConfig.getListAttrForDelHandling()]} = "{[RMdatalink.util.globalConfig.getManager_LastNameDelegateClassForTap()]}" >{manager_lastname}</div>',
                                            '    <div class="pointerCursor" style="width: 10%;" {[RMdatalink.util.globalConfig.getListAttrForDelHandling()]} = "{[RMdatalink.util.globalConfig.getManager_LastNameDelegateClassForTap()]}" >{manager_firstname}</div>',
                                            '    <div style="width: 10%;">',
                                            '        {manager_phone}',
                                            '    </div>',
                                            '    <div style="width: 12%;"><a href="mailto:{store_email}">{store_email}</a></div>',
                                            '    <div style="width: 10%;">{store_website}</div>',
                                            '    <div style="width: 10%;"{[RMdatalink.util.globalConfig.getListAttrForDelHandling()]} = "goToMapWithCity">{store_city}</div>',
                                            '    <div style="width: 6%;"{[RMdatalink.util.globalConfig.getListAttrForDelHandling()]} = "goToMapWithState">{store_state}</div>',
                                            '    <div style="width: 8%;"{[RMdatalink.util.globalConfig.getListAttrForDelHandling()]} = "goToMapWithZip">{store_zip}</div>',
                                            '</div>'
                                            )
                                            );
                                            list.onStoreClear();
                                            //list.refresh();

                                            */

                                            var headers = component.down("#retailerListHeader");
                                            headers.setData([{}]);
                                            headers.setItemTpl(
                                            Ext.create('Ext.XTemplate',
                                            '<div class="x-rm-listtpl-main">',
                                            '    <div style="width: 4%;">',
                                            '        <div style="width: 25px;" data-name="all"></div>',
                                            '    </div>',
                                            '    <div style="width: 12%;" data-name="store_name">',
                                            '        Store&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style="width: 12%;" data-name="manager_firstname">',
                                            '        Name&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style="width: 12%;" data-name="manager_phone">',
                                            '    Phone&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style="width: 10%;" data-name="store_city">',
                                            '        City&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style="width: 6%;" data-name="store_state">',
                                            '        State&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style="width: 8%;" data-name="store_zip">',
                                            '        Zip&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style="width: 5%;" data-name="store_products_datalink">',
                                            '        Data&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style=" width: 5%;" data-name="store_products_ecatalog">',
                                            '        eCat&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style=" width: 5%;" data-name="store_products_smart_cart">',
                                            '        eCom&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style=" width: 6%;" data-name="store_products_rm_plc">',
                                            '        RMPro&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style=" width: 6%;" data-name="store_products_rm_plc">',
                                            '        iRugs&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style=" width: 6%;" data-name="store_monthly_subscription">',
                                            '        Monthly&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '</div>'
                                            )
                                            );
                                            headers.refresh();
                                            var list = component.down('#retailerList');
                                            list.setStore('retailersMaster');
                                            list.setItemTpl(
                                            Ext.create('Ext.XTemplate',
                                            '<div class="x-rm-listtpl-main">',
                                            '    <div class="pointerCursor" style="width: 4%;overflow:visible;">',
                                            '        <div style="width: 25px; height:25px; background-image:url({manager_photo_url})"></div>',
                                            '    </div>',
                                            '    <div class="pointerCursor" style="width: 12%;" {[RMdatalink.util.globalConfig.getListAttrForDelHandling()]} = "{[RMdatalink.util.globalConfig.getStore_nameDelegateClassForTap()]}" >{store_name}</div>',
                                            '    <div class="pointerCursor" style="width: 12%;" {[RMdatalink.util.globalConfig.getListAttrForDelHandling()]} = "{[RMdatalink.util.globalConfig.getManager_LastNameDelegateClassForTap()]}" > {[this.getAccMgrName(values)]}</div>',
                                            '    <div style="width: 12%;height: 32px;">',
                                            '      {[this.getAccMgrPhone(values)]}',
                                            '    </div>',

                                            '    <div style="width: 10%;"  {[RMdatalink.util.globalConfig.getListAttrForDelHandling()]} = "goToMapWithCity">{[this.getCity(values)]}</div>',
                                            '    <div style="width: 6%;" {[RMdatalink.util.globalConfig.getListAttrForDelHandling()]} = "goToMapWithState">{[this.getState(values)]}</div>',
                                            '    <div style="width: 8%;"  {[RMdatalink.util.globalConfig.getListAttrForDelHandling()]} = "goToMapWithZip">{[this.getZip(values)]}</div>',
                                            '    <div style="width: 5%;" class="checkRound">',
                                            '        <div style="width: 9px; height:9px; background-color:{[this.getCheckBoxRound(values.store_products,\'datalink_status\')]}"></div>',
                                            '    </div>',
                                            '    <div style="width: 5%;" class="checkRound">',
                                            '        <div style="width: 9px; height:9px; background-color:{[this.getCheckBoxRound(values.store_products,\'ecatalog_status\')]}"></div>',
                                            '    </div>',
                                            '    <div style="width: 5%;" class="checkRound">',
                                            '        <div style=" width: 9px; height:9px; background-color:{[this.getCheckBoxRound(values.store_products,\'ecommerce_status\')]}"></div>',
                                            '    </div>',
                                            '    <div style="width: 6%;" class="checkRound">',
                                            '        <div style="width: 9px; height:9px; background-color:{[this.getCheckBoxRound(values.store_products,\'rmpro_status\')]}"></div>',
                                            '    </div>',
                                            '    <div style="width: 6%;" class="checkRound">',
                                            '        <div style="width: 9px; height:9px; background-color:{[this.getCheckBoxRound(values.store_products , \'irugs_status\')]}"></div>',
                                            '    </div>',
                                            '    <div style="width: 6%;">${[this.setOwedMonthlyField(values)]}</div>',
                                            '</div>',
                                            {

                                                getAccMgrName: function(value){

                                                    var cmpContacts = value.company_contacts ;
                                                    if(cmpContacts){

                                                        for(var i=0; i < cmpContacts.length ; i++ ){

                                                            if(cmpContacts[i].is_account_mgr){

                                                                return cmpContacts[i].companycontact_firstname +" "+ cmpContacts[i].companycontact_lastname ;
                                                            }
                                                        }

                                                        if(cmpContacts[0]){

                                                            return cmpContacts[0].companycontact_firstname +" "+ cmpContacts[0].companycontact_lastname ;
                                                        }

                                                    }
                                                    return "" ;
                                                },

                                                getAccMgrPhone: function(value){

                                                    var cmpContacts = value.company_contacts ;
                                                    if(cmpContacts){

                                                        for(var i=0; i < cmpContacts.length ; i++ ){

                                                            if(cmpContacts[i].is_account_mgr){

                                                                return cmpContacts[i].companycontact_phone +" Ext:"+ cmpContacts[i].companycontact_phone_ext + "<br>" + cmpContacts[i].companycontact_cellphone;
                                                            }
                                                        }

                                                        if(cmpContacts[0]){

                                                            return cmpContacts[0].companycontact_phone +" Ext:"+ cmpContacts[0].companycontact_phone_ext + "<br>" + cmpContacts[0].companycontact_cellphone;
                                                        }

                                                    }
                                                    return "" ;
                                                },

                                                getCity: function(value){
                                                    if(value.locations){

                                                        if(value.locations[0]){

                                                            if(value.locations[0].city!== ""){
                                                                return value.locations[0].city;
                                                            }


                                                        }
                                                    }

                                                    return value.store_city ;
                                                },

                                                getState: function(value){
                                                    if(value.locations){

                                                        if(value.locations[0]){

                                                            if(value.locations[0].state!== ""){
                                                                return value.locations[0].state;
                                                            }
                                                        }
                                                    }

                                                    return value.store_state ;
                                                },

                                                getZip: function(value){
                                                    if(value.locations){

                                                        if(value.locations[0]){

                                                            if(value.locations[0].zip !== ""){
                                                                return value.locations[0].zip;
                                                            }
                                                        }
                                                    }
                                                    return value.store_zip ;
                                                },


                                                getCheckBoxRound: function(value,key){
                                                    if(value && value[key])
                                                    {
                                                        switch(value[key]){

                                                            case "ACTIVE":
                                                            return '#39b3d7';
                                                            case "INACTIVE":
                                                            return '#ebebeb';
                                                            case "PROSPECT":
                                                            return '#47a447';
                                                            case "HOT_PROSPECT":
                                                            return '#ed9c28';
                                                            case "PENDING":
                                                            return '#3276b1';
                                                        }


                                                        return '#ffffff';
                                                    }
                                                    else
                                                    return '#ffffff';

                                                }

                                            },

                                            {
                                                setOwedMonthlyField: function(rec){
                                                    var value = 0 ;
                                                    if(rec.store_products.rmpro_status && rec.store_products.rmpro_status == "ACTIVE"){

                                                        value += parseFloat(rec.product_billng.product_rmpro.monthly_membership,0) ;
                                                    }

                                                    if(rec.store_products.datalink_status && rec.store_products.datalink_status == "ACTIVE"){

                                                        value += parseFloat(rec.product_billng.product_datalink.monthly_membership,0) ;
                                                    }

                                                    value.toFixed(2);



                                                    if(value === 0)
                                                    return "0.00";
                                                    else
                                                    {
                                                        var sumStr = ""+ value;
                                                        var sumStrSplit0 = sumStr.split('.')[0];

                                                        var len = sumStrSplit0.length;
                                                        if(len > 3)
                                                        {
                                                            sumStr1 = sumStrSplit0.substr(0,(len-3));
                                                            sumStr2 = sumStrSplit0.substr((len-3),(len-1));
                                                            sumStrSplit0 =  sumStr1 + ',' + sumStr2 ;
                                                        }

                                                        if(sumStr.split('.')[1])
                                                        return sumStrSplit0 + '.' +sumStr.split('.')[1];
                                                        else
                                                        {
                                                            return  sumStrSplit0;
                                                        }
                                                    }


                                                }

                                            }
                                            )
                                            );
                                            list.onStoreClear();
                                            //list.refresh();


                                            var totalsList = component.down('#retailerTotalsList');
                                            var store = list.getStore();
                                            /*totalsList.setData([{}]);

                                            totalsList.setItemTpl(
                                            Ext.create('Ext.XTemplate',
                                            '<div class="x-rm-listtpl-main">',
                                            '    <div style="width: 6%;">TOTALS</div>',
                                            '    <div style="width: 12%;">{[this.getTotalFor(\'store_name\')]}&nbsp; Retailers</div>',
                                            '    <div style="width: 10%;">{[this.getTotalFor(\'Users\')]}&nbsp; Users</div>',
                                            '    <div style="width: 43%;">{[this.getTotalFor(\'store_city\')]}&nbsp; Cities</div>',
                                            '</div>',
                                            {
                                            getTotalFor: function(value){
                                            var x = [];
                                            var y;
                                            store.each(function(record,id){
                                            if(value=='Users') {
                                            y = record.get('manager_firstname')+" "+record.get('manager_lastname');
                                            }
                                            else
                                            y = record.get(value);
                                            Ext.Array.include(x,y);
                                            });
                                            return x.length;
                                            }
                                            }
                                            )
                                            );
                                            */

                                            totalsList.setData([
                                            {

                                                store_count:0,
                                                city_count:0,
                                                user_count:0

                                            }
                                            ]);
                                            totalsList.setItemTpl(
                                            Ext.create('Ext.XTemplate',
                                            '<div class="x-rm-listtpl-main">',
                                            '    <div style="width: 6%;">TOTALS</div>',
                                            '    <div style="width: 12%;">{store_count}&nbsp; Retailers</div>',
                                            '    <div style="width: 10%;">{user_count}&nbsp; Users</div>',
                                            '    <div style="width: 43%;">{city_count}&nbsp; Cities</div>',
                                            '</div>'
                                            )
                                            );

                                        },
                                        event: 'initialize'
                                    },
                                    {
                                        fn: function(element, eOpts) {
                                            window.location.hash = 'retailerCard'+5;


                                            RMdatalink.app.getController('PaginationController').setRetailersActiveTabPageNo() ;

                                            Ext.ComponentQuery.query('#retailersMaincontentpanel')[0].down('#mainCardActionBtnContainer').setHidden(false) ;
                                            Ext.ComponentQuery.query('#retailersMaincontentpanel')[0].down('#cardDeleteBtn').setHidden(false) ;

                                            Ext.ComponentQuery.query('#allRetailerTab')[0].down('#retailerList').refresh();
                                        },
                                        event: 'painted'
                                    }
                                ]
                            },
                            {
                                xtype: 'container',
                                title: 'On Map',
                                itemId: 'gMapTab',
                                layout: 'vbox',
                                scrollable: false,
                                items: [
                                    {
                                        xtype: 'formpanel',
                                        action: 'setScrollBarVisible',
                                        border: '1 1 1 1',
                                        cls: [
                                            'x-rm-fldnoBorder',
                                            'x-rm-rdformpanel'
                                        ],
                                        height: '60px',
                                        hidden: false,
                                        itemId: 'gmapSearchFormPanel',
                                        margin: '0 0 5 0',
                                        scrollable: 'horizontal',
                                        layout: {
                                            type: 'hbox',
                                            align: 'center',
                                            pack: 'center'
                                        },
                                        items: [
                                            {
                                                xtype: 'fieldset',
                                                cls: 'x-rm-radiordformpanel',
                                                width: '220px',
                                                layout: 'hbox',
                                                items: [
                                                    {
                                                        xtype: 'radiofield',
                                                        cls: 'pointerCursor',
                                                        itemId: 'rtMapCityRadioBtn',
                                                        inputCls: 'radiofieldInput',
                                                        label: 'City',
                                                        labelCls: 'transparentBack',
                                                        labelWidth: '80%',
                                                        name: 'searchRtOnMapFor',
                                                        checked: true
                                                    },
                                                    {
                                                        xtype: 'radiofield',
                                                        cls: 'pointerCursor',
                                                        itemId: 'rtMapZipRadioBtn',
                                                        inputCls: 'radiofieldInput',
                                                        label: 'Zip',
                                                        labelCls: 'transparentBack',
                                                        labelWidth: '80%',
                                                        name: 'searchRtOnMapFor'
                                                    },
                                                    {
                                                        xtype: 'radiofield',
                                                        cls: 'pointerCursor',
                                                        itemId: 'rtMapStateRadioBtn',
                                                        inputCls: 'radiofieldInput',
                                                        label: 'State',
                                                        labelCls: 'transparentBack',
                                                        labelWidth: '80%',
                                                        name: 'searchRtOnMapFor'
                                                    }
                                                ]
                                            },
                                            {
                                                xtype: 'fieldset',
                                                width: '240px',
                                                items: [
                                                    {
                                                        xtype: 'textfield',
                                                        itemId: 'rtMapCityFld',
                                                        label: 'City'
                                                    },
                                                    {
                                                        xtype: 'textfield',
                                                        hidden: true,
                                                        itemId: 'rtMapZipFld',
                                                        label: 'Zip'
                                                    },
                                                    {
                                                        xtype: 'textfield',
                                                        action: 'autoSuggestionField',
                                                        hidden: true,
                                                        itemId: 'rtMapStateFld',
                                                        label: 'State'
                                                    }
                                                ]
                                            },
                                            {
                                                xtype: 'fieldset',
                                                cls: [
                                                    'x-rm-radiordformpanel',
                                                    'x-rm-fldnoBorder'
                                                ],
                                                hidden: false,
                                                width: '615px',
                                                layout: 'hbox',
                                                items: [
                                                    {
                                                        xtype: 'checkboxfield',
                                                        cls: 'pointerCursor',
                                                        itemId: 'activeCheckFldongMap',
                                                        width: '120px',
                                                        component: {
                                                            xtype: 'input',
                                                            type: 'checkbox',
                                                            useMask: true,
                                                            cls: 'x-input-checkbox',
                                                            style: 'border:none !imporatant;'
                                                        },
                                                        inputCls: 'noBorderInput',
                                                        label: '<div><span style="width: 9px; height:9px; background-color:#39b3d7;float: left;/* font-size: 12px !important; */"></span><span style="     font-size: 100% !important;     margin: 0px 5px; ">Active</span></div>',
                                                        labelCls: 'radiofieldInput',
                                                        labelWidth: '70%',
                                                        checked: true
                                                    },
                                                    {
                                                        xtype: 'checkboxfield',
                                                        cls: 'pointerCursor',
                                                        itemId: 'pendingCheckFldongMap',
                                                        width: '120px',
                                                        inputCls: 'radiofieldInput',
                                                        label: '<div><span style="width: 9px; height:9px; background-color:#3276b1;float: left;/* font-size: 12px !important; */"></span><span style="     font-size: 100% !important;     margin: 0px 5px; ">Pending</span></div>',
                                                        labelWidth: '70%',
                                                        checked: true
                                                    },
                                                    {
                                                        xtype: 'checkboxfield',
                                                        cls: 'pointerCursor',
                                                        itemId: 'hotProspectCheckFldongMap',
                                                        width: '135px',
                                                        inputCls: 'radiofieldInput',
                                                        label: ' <div><span style="width: 9px; height:9px; background-color:#ed9c28;float: left;/* font-size: 12px !important; */"></span><span style="     font-size: 100% !important;     margin: -12px 5px; ">Hot Prospect</span></div>',
                                                        labelWidth: '75%',
                                                        checked: true
                                                    },
                                                    {
                                                        xtype: 'checkboxfield',
                                                        cls: 'pointerCursor',
                                                        itemId: 'prospectCheckFldongMap',
                                                        width: '120px',
                                                        inputCls: 'radiofieldInput',
                                                        label: '<div><span style="width: 9px; height:9px; background-color:#47a447;float: left;/* font-size: 12px !important; */"></span><span style="     font-size: 100% !important;     margin: 0px 5px; ">Prospect</span></div>',
                                                        labelWidth: '70%',
                                                        checked: true
                                                    },
                                                    {
                                                        xtype: 'checkboxfield',
                                                        cls: 'pointerCursor',
                                                        itemId: 'inActiveCheckFldongMap',
                                                        width: '120px',
                                                        inputCls: 'radiofieldInput',
                                                        label: '<div><span style="width: 9px; height:9px; background-color:#ebebeb;float: left;/* font-size: 12px !important; */"></span><span style="     font-size: 100% !important;     margin: 0px 5px; ">InActive</span></div>',
                                                        labelWidth: '70%',
                                                        checked: true
                                                    }
                                                ]
                                            },
                                            {
                                                xtype: 'button',
                                                cls: 'x-rm-blueBtn',
                                                height: '30px',
                                                itemId: 'gMapSearchButton',
                                                margin: '0 0 10 10',
                                                width: '100px',
                                                text: 'Search'
                                            },
                                            {
                                                xtype: 'button',
                                                cls: 'x-rm-blueBtn',
                                                height: '30px',
                                                itemId: 'gMapAssignLatLongBtn',
                                                margin: '0 0 10 10',
                                                width: '140px',
                                                text: 'Refresh Retailers'
                                            }
                                        ]
                                    },
                                    {
                                        xtype: 'map',
                                        flex: 2,
                                        itemId: 'googleMapView'
                                    }
                                ],
                                listeners: [
                                    {
                                        fn: function(element, eOpts) {
                                            window.location.hash = 'retailerCard'+6;

                                            Ext.ComponentQuery.query('#retailersMaincontentpanel')[0].down('#mainCardActionBtnContainer').setHidden(true) ;

                                            if(RMdatalink.app.getController('GMapController').config.isFirstTime){

                                                Ext.ComponentQuery.query('#googleMapView')[0].setMapOptions(
                                                {
                                                    zoom: 3 ,
                                                    center:new google.maps.LatLng(49.9026669,-119.4478125)
                                                }
                                                );


                                                RMdatalink.app.getController('GMapController').config.isFirstTime = false ;
                                                RMdatalink.app.getController('GMapController').doSearchRetailers();
                                            }

                                            //RMdatalink.app.getController('GMapController').setDefaultMarkers() ;
                                        },
                                        event: 'painted'
                                    }
                                ]
                            }
                        ]
                    }
                ]
            }
        ],
        listeners: [
            {
                fn: 'onPanelInitialize1',
                event: 'initialize'
            }
        ]
    },

    onPanelInitialize1: function(component, eOpts) {
        component.down('#cardAddRetailerBtn').element.on("tap",function(){

            RMdatalink.util.globalConfig.setDataToShowInSettingWindow({}) ;

                component.fireEvent('addretailertapped', component);


        });


        component.down('#cardExportBtn').element.on("tap",function(){

                    var store = Ext.getStore('retailersMaster');

                     var data = RMdatalink.app.getController('inhouse.DetailScreenController').getArrayDataFromStore(store) ;


                    RMdatalink.app.getController('inhouse.DetailScreenController').exportToCSV(data);

        });

        component.down('#cardTitleLabel').element.on("tap",function(){

          // RMdatalink.app.getController('UINav').onBackTextTap();
        });





        component.down('#cardDeleteBtn').element.on("tap",function(){

          // RMdatalink.app.getController('Main').onDeleteButtonTap(component);

             RMdatalink.app.getController('DeleteRecords').deleteRetailers();
        });
    }

});