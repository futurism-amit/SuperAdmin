/*
 * File: app/view/discounts/MainContentPanel.js
 *
 * This file was generated by Sencha Architect version 3.0.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.3.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.3.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('RMdatalink.view.discounts.MainContentPanel', {
    extend: 'Ext.Panel',
    alias: 'widget.discountsmaincontentpanel',

    requires: [
        'RMdatalink.view.detailsHeader',
        'RMdatalink.view.discounts.ListContainer',
        'Ext.tab.Panel',
        'Ext.tab.Bar',
        'Ext.Button',
        'Ext.form.Panel',
        'Ext.form.FieldSet',
        'Ext.Label',
        'Ext.Spacer',
        'Ext.field.Select',
        'Ext.field.Number',
        'Ext.field.Radio',
        'Ext.field.TextArea',
        'Ext.SegmentedButton'
    ],

    statics: {
        vipListDataHandler: function() {
            var component  = Ext.ComponentQuery.query("#discountVipTab")[0];
            var list = component.down('#discountList');

            var data = getArrayFromStore(Ext.getStore('vendors.Master'));

            var dataToPush = [];

            var keyOfRetailer = 'promo_code_info';
            var flagofRetailer = 'is_promo_code_active';

            for(var i=0;i<data.length;i++){

                if(  data[i][keyOfRetailer]  &&  data[i][flagofRetailer] ){

                    dataToPush.push(data[i]);

                }

            }

            list.setData(dataToPush);
        },

        addValuesInVipForm: function(promoCode, vendor_id, price, startDate, endDate, limit, comment) {
            console.log("CLICKED");
            var CreateVippVendorFrom = Ext.ComponentQuery.query("#CreateVippVendorFrom")[0];

            if(CreateVippVendorFrom){


            }





            var VipFormPromoCode = Ext.ComponentQuery.query("#VipFormPromoCode")[0];
            var VipFormVendorId = Ext.ComponentQuery.query("#VipFormVendorId")[0];
            var vipFormPrice = Ext.ComponentQuery.query("#vipFormPrice")[0];
            var vipFormStartDate = Ext.ComponentQuery.query("#vipFormStartDate")[0];
            var vipFormEndDate = Ext.ComponentQuery.query("#vipFormEndDate")[0];
            var vipFormLimit = Ext.ComponentQuery.query("#vipFormLimit")[0];
            var vipFormComment = Ext.ComponentQuery.query("#vipFormComment")[0];
            var vendorMaster  = Ext.getStore("vendors.Master");


            VipFormPromoCode.setValue(promoCode);
            VipFormVendorId.setValue(vendor_id);
            vipFormPrice.setValue(price);
            vipFormStartDate.setValue(startDate);
            vipFormEndDate.setValue(endDate);
            vipFormComment.setValue(comment);
            vipFormLimit.setValue(limit);
        }
    },

    config: {
        itemId: 'discountsMainContentPanel',
        layout: 'vbox',
        scrollable: false,
        items: [
            {
                xtype: 'detailsHeader',
                flex: 1
            },
            {
                xtype: 'panel',
                flex: 15,
                layout: 'hbox',
                scrollable: false,
                items: [
                    {
                        xtype: 'tabpanel',
                        action: 'onActiveItemChanged',
                        flex: 3,
                        cls: 'x-rm-tabpanel',
                        itemId: 'discountsTabPanel',
                        ui: 'light',
                        tabBar: {
                            docked: 'top',
                            itemId: 'discountsNavigationTabBar'
                        },
                        items: [
                            {
                                xtype: 'container',
                                title: 'DATALINK',
                                itemId: 'discountsDataLinkTab',
                                layout: 'fit',
                                scrollable: false,
                                listeners: [
                                    {
                                        fn: function(component, eOpts) {
                                            var headers = component.down("#discountListHeader");
                                            headers.setData([{}]);
                                            headers.setItemTpl(
                                            Ext.create('Ext.XTemplate',
                                            '<div class="x-rm-listtpl-main">',
                                            '    <div style="width: 15%;" data-name="code">',
                                            '        Code&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style="width: 10%;" data-name="status">',
                                            '        Status&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style="width: 12%;" data-name="startDate">',
                                            '        Start&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style="width: 10%;" data-name="endDate">',
                                            '    End&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style="width: 10%;" data-name="used">',
                                            '        Used&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style="width: 20%;" data-name="comment">',
                                            '        Comment&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '</div>'
                                            )
                                            );

                                            //resources/images/retailerDetail/correct_sign_selected.png
                                            headers.refresh();
                                            var list = component.down('#discountList');
                                            list.setItemTpl(
                                            Ext.create('Ext.XTemplate',
                                            '<div class="x-rm-listtpl-main">',
                                            '    <div class="pointerCursor boldText" style="width: 15%;">{code}</div>',
                                            '    <div class="pointerCursor boldText" style="width: 10%;">{status}</div>',
                                            '    <div class="pointerCursor" style="width: 12%;">{startDate}</div>',
                                            '    <div class="pointerCursor" style="width: 12%;">{endDate}</div>',
                                            '    <div class="pointerCursor" style="width: 10%;">{used}</div>',
                                            '    <input type="text" style="width: 30% !important;" class="x-rm-rdinlinecmt" data-id="{id}" value="{comment}" maxlength="24"',
                                            '        onchange="RMdatalink.app.getController(\'RetailerDeatilsDataSet\').saveCommentForDiscount(this,\'discountsDataLink\');"/>',
                                            '    <div id="LibraryDelete" onclick = "RMdatalink.app.getController(\'RetailerDeatilsDataSet\').deleteDiscount({id},\'discountsDataLink\');"></div>',
                                            '</div>'
                                            )
                                            );

                                            list.setMode("SINGLE");
                                            //list.onStoreClear();
                                            //list.refresh();



                                            // var totalsList = component.down('#inhouseTotalsList');
                                            // var store = list.getStore();
                                            // totalsList.setData([{}]);
                                            // totalsList.setItemTpl(
                                            //     Ext.create('Ext.XTemplate',
                                            //                '<div class="x-rm-listtpl-main">',
                                            //                '    <div style="width: 6%;">TOTALS</div>',
                                            //                '    <div style="width: 12%;">{[this.getTotalFor(\'store_name\')]}&nbsp; Retailers</div>',
                                            //                '    <div style="width: 10%;">{[this.getTotalFor(\'Users\')]}&nbsp; Users</div>',
                                            //                '    <div style="width: 43%;">{[this.getTotalFor(\'store_city\')]}&nbsp; Cities</div>',
                                            //                '    <div style="width: 5%;">{[this.getTotalFor(\'store_products_datalink\')]}</div>',
                                            //                '    <div style="width: 5%;">{[this.getTotalFor(\'store_products_ecatalog\')]}</div>',
                                            //                '    <div style="width: 5%;">{[this.getTotalFor(\'store_products_smart_cart\')]}</div>',
                                            //                '    <div style="width: 5%;">{[this.getTotalFor(\'store_products_rm_plc\')]}</div>',
                                            //                '    <div style="width: 9%;">{[this.getTotalFor(\'store_monthly_subscription\')]}</div>',
                                            //                '</div>',
                                            //                {
                                            //                     getTotalFor: function(value){
                                            //                         var x = [];
                                            //                         var y;
                                            //                         var sum = 0;
                                            //                         store.each(function(record,id){
                                            //                             if(value=='Users') {
                                            //                                 y = record.get('manager_firstname')+" "+record.get('manager_lastname');
                                            //                             }
                                            //                             else
                                            //                                 y = record.get(value);
                                            //                             if(value=='store_products_datalink' || value=='store_products_ecatalog' ||
                                            //                                value=='store_products_smart_cart' || value=='store_products_rm_plc') {
                                            //                                 if(y === true)
                                            //                                     x.push(y);
                                            //                             }
                                            //                             else if(value == 'store_monthly_subscription') {
                                            //                                 y = parseFloat(y.replace("$",'').replace(",",""));
                                            //                                 sum+=y;
                                            //                             }
                                            //                             else
                                            //                                 Ext.Array.include(x,y);
                                            //                         });
                                            //                         if(value == 'store_monthly_subscription')
                                            //                             return '$'+Math.round(sum);
                                            //                         else
                                            //                             return x.length;
                                            //                     }
                                            //                }
                                            //               )
                                            // );

                                        },
                                        event: 'initialize'
                                    },
                                    {
                                        fn: function(element, eOpts) {
                                            window.location.hash = 'discountCard'+0;
                                        },
                                        event: 'painted'
                                    }
                                ],
                                items: [
                                    {
                                        xtype: 'discountslistcontainer'
                                    }
                                ]
                            },
                            {
                                xtype: 'container',
                                title: 'ECATLOG',
                                itemId: 'discountsEcatlogTab',
                                layout: 'fit',
                                scrollable: false,
                                listeners: [
                                    {
                                        fn: function(component, eOpts) {
                                            var headers = component.down("#discountListHeader");
                                            headers.setData([{}]);
                                            headers.setItemTpl(
                                            Ext.create('Ext.XTemplate',
                                            '<div class="x-rm-listtpl-main">',
                                            '    <div style="width: 15%;" data-name="code">',
                                            '        Code&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style="width: 10%;" data-name="status">',
                                            '        Status&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style="width: 12%;" data-name="startDate">',
                                            '        Start&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style="width: 12%;" data-name="endDate">',
                                            '    End&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style="width: 10%;" data-name="used">',
                                            '        Used&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style="width: 20%;" data-name="comment">',
                                            '        Comment&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '</div>'
                                            )
                                            );
                                            headers.refresh();
                                            var list = component.down('#discountList');

                                            list.setItemTpl(
                                            Ext.create('Ext.XTemplate',
                                            '<div class="x-rm-listtpl-main">',
                                            '    <div class="pointerCursor boldText" style="width: 15%;">{code}</div>',
                                            '    <div class="pointerCursor boldText" style="width: 10%;">{status}</div>',
                                            '    <div class="pointerCursor" style="width: 12%;">{startDate}</div>',
                                            '    <div class="pointerCursor" style="width: 12%;">{endDate}</div>',
                                            '    <div class="pointerCursor" style="width: 10%;">{used}</div>',
                                            '    <input type="text" style="width: 30% !important;" class="x-rm-rdinlinecmt" data-id="{id}" value="{comment}" maxlength="24"',
                                            '        onchange="RMdatalink.app.getController(\'RetailerDeatilsDataSet\').saveCommentForDiscount(this,\'discountsEcatlogTab\');"/>',
                                            '    <div id="LibraryDelete" onclick = "RMdatalink.app.getController(\'RetailerDeatilsDataSet\').deleteDiscount({id},\'discountsEcatlogTab\');"></div>',
                                            '</div>'
                                            )
                                            );

                                            list.setMode("SINGLE");
                                            //list.onStoreClear();
                                            //list.refresh();




                                            // var totalsList = component.down('#inhouseTotalsList');
                                            // var store = list.getStore();
                                            // totalsList.setData([{}]);
                                            // totalsList.setItemTpl(
                                            //     Ext.create('Ext.XTemplate',
                                            //                '<div class="x-rm-listtpl-main">',
                                            //                '    <div style="width: 6%;">TOTALS</div>',
                                            //                '    <div style="width: 12%;">{[this.getTotalFor(\'store_name\')]}&nbsp; Retailers</div>',
                                            //                '    <div style="width: 10%;">{[this.getTotalFor(\'Users\')]}&nbsp; Users</div>',
                                            //                '    <div style="width: 43%;">{[this.getTotalFor(\'store_city\')]}&nbsp; Cities</div>',
                                            //                '</div>',
                                            //                {
                                            //                     getTotalFor: function(value){
                                            //                         var x = [];
                                            //                         var y;
                                            //                         store.each(function(record,id){
                                            //                             if(value=='Users') {
                                            //                                 y = record.get('manager_firstname')+" "+record.get('manager_lastname');
                                            //                             }
                                            //                             else
                                            //                                 y = record.get(value);
                                            //                             Ext.Array.include(x,y);
                                            //                         });
                                            //                         return x.length;
                                            //                     }
                                            //                }
                                            //               )
                                            // );

                                        },
                                        event: 'initialize'
                                    },
                                    {
                                        fn: function(element, eOpts) {
                                            window.location.hash = 'discountCard'+1;
                                        },
                                        event: 'painted'
                                    }
                                ],
                                items: [
                                    {
                                        xtype: 'discountslistcontainer'
                                    }
                                ]
                            },
                            {
                                xtype: 'container',
                                title: 'SMART CART',
                                itemId: 'discountsSmartCartTab',
                                layout: 'fit',
                                scrollable: false,
                                listeners: [
                                    {
                                        fn: function(component, eOpts) {
                                            var headers = component.down("#discountListHeader");
                                            headers.setData([{}]);
                                            headers.setItemTpl(
                                            Ext.create('Ext.XTemplate',
                                            '<div class="x-rm-listtpl-main">',
                                            '    <div style="width: 15%;" data-name="code">',
                                            '        Code&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style="width: 10%;" data-name="status">',
                                            '        Status&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style="width: 12%;" data-name="startDate">',
                                            '        Start&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style="width: 12%;" data-name="endDate">',
                                            '    End&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style="width: 10%;" data-name="used">',
                                            '        Used&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style="width: 20%;" data-name="comment">',
                                            '        Comment&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '</div>'
                                            )
                                            );
                                            headers.refresh();
                                            var list = component.down('#discountList');

                                            list.setItemTpl(
                                            Ext.create('Ext.XTemplate',
                                            '<div class="x-rm-listtpl-main">',
                                            '    <div class="pointerCursor boldText" style="width: 15%;">{code}</div>',
                                            '    <div class="pointerCursor boldText" style="width: 10%;">{status}</div>',
                                            '    <div class="pointerCursor" style="width: 12%;">{startDate}</div>',
                                            '    <div class="pointerCursor" style="width: 12%;">{endDate}</div>',
                                            '    <div class="pointerCursor" style="width: 10%;">{used}</div>',
                                            '    <input type="text" style="width: 30% !important;" class="x-rm-rdinlinecmt" data-id="{id}" value="{comment}" maxlength="24"',
                                            '        onchange="RMdatalink.app.getController(\'RetailerDeatilsDataSet\').saveCommentForDiscount(this,\'discountsSmartCartTab\');"/>',
                                            '    <div id="LibraryDelete" onclick = "RMdatalink.app.getController(\'RetailerDeatilsDataSet\').deleteDiscount({id},\'discountsSmartCartTab\');"></div>',
                                            '</div>'
                                            )
                                            );

                                            list.setMode("SINGLE");
                                            //list.onStoreClear();
                                            //list.refresh();




                                            // var totalsList = component.down('#inhouseTotalsList');
                                            // var store = list.getStore();
                                            // totalsList.setData([{}]);
                                            // totalsList.setItemTpl(
                                            //     Ext.create('Ext.XTemplate',
                                            //                '<div class="x-rm-listtpl-main">',
                                            //                '    <div style="width: 6%;">TOTALS</div>',
                                            //                '    <div style="width: 12%;">{[this.getTotalFor(\'store_name\')]}&nbsp; Retailers</div>',
                                            //                '    <div style="width: 10%;">{[this.getTotalFor(\'Users\')]}&nbsp; Users</div>',
                                            //                '    <div style="width: 43%;">{[this.getTotalFor(\'store_city\')]}&nbsp; Cities</div>',
                                            //                '</div>',
                                            //                {
                                            //                     getTotalFor: function(value){
                                            //                         var x = [];
                                            //                         var y;
                                            //                         store.each(function(record,id){
                                            //                             if(value=='Users') {
                                            //                                 y = record.get('manager_firstname')+" "+record.get('manager_lastname');
                                            //                             }
                                            //                             else
                                            //                                 y = record.get(value);
                                            //                             Ext.Array.include(x,y);
                                            //                         });
                                            //                         return x.length;
                                            //                     }
                                            //                }
                                            //               )
                                            // );

                                        },
                                        event: 'initialize'
                                    },
                                    {
                                        fn: function(element, eOpts) {
                                            window.location.hash = 'discountCard'+2;
                                        },
                                        event: 'painted'
                                    }
                                ],
                                items: [
                                    {
                                        xtype: 'discountslistcontainer'
                                    }
                                ]
                            },
                            {
                                xtype: 'container',
                                title: 'RM PLC',
                                itemId: 'discountsRMPLCTab',
                                layout: 'fit',
                                scrollable: false,
                                listeners: [
                                    {
                                        fn: function(component, eOpts) {
                                            var headers = component.down("#discountListHeader");
                                            headers.setData([{}]);
                                            headers.setItemTpl(
                                            Ext.create('Ext.XTemplate',
                                            '<div class="x-rm-listtpl-main">',
                                            '    <div style="width: 15%;" data-name="code">',
                                            '        Code&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style="width: 10%;" data-name="status">',
                                            '        Status&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style="width: 12%;" data-name="startDate">',
                                            '        Start&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style="width: 12%;" data-name="endDate">',
                                            '    End&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style="width: 10%;" data-name="used">',
                                            '        Used&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style="width: 20%;" data-name="comment">',
                                            '        Comment&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '</div>'
                                            )
                                            );
                                            headers.refresh();
                                            var list = component.down('#discountList');

                                            list.setItemTpl(
                                            Ext.create('Ext.XTemplate',
                                            '<div class="x-rm-listtpl-main">',
                                            '    <div class="pointerCursor boldText" style="width: 15%;">{code}</div>',
                                            '    <div class="pointerCursor boldText" style="width: 10%;">{status}</div>',
                                            '    <div class="pointerCursor" style="width: 12%;">{startDate}</div>',
                                            '    <div class="pointerCursor" style="width: 12%;">{endDate}</div>',
                                            '    <div class="pointerCursor" style="width: 10%;">{used}</div>',
                                            '    <input type="text" style="width: 30% !important;" class="x-rm-rdinlinecmt" data-id="{id}" value="{comment}" maxlength="24"',
                                            '        onchange="RMdatalink.app.getController(\'RetailerDeatilsDataSet\').saveCommentForDiscount(this,\'discountsRMPLCTab\');"/>',
                                            '    <div id="LibraryDelete" onclick = "RMdatalink.app.getController(\'RetailerDeatilsDataSet\').deleteDiscount({id},\'discountsRMPLCTab\');"></div>',
                                            '</div>'
                                            )
                                            );

                                            list.setMode("SINGLE");
                                            //list.onStoreClear();
                                            //list.refresh();




                                            // var totalsList = component.down('#inhouseTotalsList');
                                            // var store = list.getStore();
                                            // totalsList.setData([{}]);
                                            // totalsList.setItemTpl(
                                            //     Ext.create('Ext.XTemplate',
                                            //                '<div class="x-rm-listtpl-main">',
                                            //                '    <div style="width: 6%;">TOTALS</div>',
                                            //                '    <div style="width: 12%;">{[this.getTotalFor(\'store_name\')]}&nbsp; Retailers</div>',
                                            //                '    <div style="width: 10%;">{[this.getTotalFor(\'Users\')]}&nbsp; Users</div>',
                                            //                '    <div style="width: 43%;">{[this.getTotalFor(\'store_city\')]}&nbsp; Cities</div>',
                                            //                '</div>',
                                            //                {
                                            //                     getTotalFor: function(value){
                                            //                         var x = [];
                                            //                         var y;
                                            //                         store.each(function(record,id){
                                            //                             if(value=='Users') {
                                            //                                 y = record.get('manager_firstname')+" "+record.get('manager_lastname');
                                            //                             }
                                            //                             else
                                            //                                 y = record.get(value);
                                            //                             Ext.Array.include(x,y);
                                            //                         });
                                            //                         return x.length;
                                            //                     }
                                            //                }
                                            //               )
                                            // );

                                        },
                                        event: 'initialize'
                                    },
                                    {
                                        fn: function(element, eOpts) {
                                            window.location.hash = 'discountCard'+3;
                                        },
                                        event: 'painted'
                                    }
                                ],
                                items: [
                                    {
                                        xtype: 'discountslistcontainer'
                                    }
                                ]
                            },
                            {
                                xtype: 'container',
                                title: 'IRUGZ',
                                itemId: 'discountsIrugzTab',
                                layout: 'fit',
                                scrollable: false,
                                listeners: [
                                    {
                                        fn: function(component, eOpts) {
                                            var headers = component.down("#discountListHeader");
                                            headers.setData([{}]);
                                            headers.setItemTpl(
                                            Ext.create('Ext.XTemplate',
                                            '<div class="x-rm-listtpl-main">',
                                            '    <div style="width: 15%;" data-name="code">',
                                            '        Code&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style="width: 10%;" data-name="status">',
                                            '        Status&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style="width: 12%;" data-name="startDate">',
                                            '        Start&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style="width: 12%;" data-name="endDate">',
                                            '    End&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style="width: 10%;" data-name="used">',
                                            '        Used&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style="width: 20%;" data-name="comment">',
                                            '        Comment&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '</div>'
                                            )
                                            );
                                            headers.refresh();
                                            var list = component.down('#discountList');

                                            list.setItemTpl(
                                            Ext.create('Ext.XTemplate',
                                            '<div class="x-rm-listtpl-main">',
                                            '    <div class="pointerCursor boldText" style="width: 15%;">{code}</div>',
                                            '    <div class="pointerCursor boldText" style="width: 10%;">{status}</div>',
                                            '    <div class="pointerCursor" style="width: 12%;">{startDate}</div>',
                                            '    <div class="pointerCursor" style="width: 12%;">{endDate}</div>',
                                            '    <div class="pointerCursor" style="width: 10%;">{used}</div>',
                                            '    <input type="text" style="width: 30% !important;" class="x-rm-rdinlinecmt" data-id="{id}" value="{comment}" maxlength="24"',
                                            '        onchange="RMdatalink.app.getController(\'RetailerDeatilsDataSet\').saveCommentForDiscount(this,\'discountsIrugzTab\');"/>',
                                            '    <div id="LibraryDelete" onclick = "RMdatalink.app.getController(\'RetailerDeatilsDataSet\').deleteDiscount({id},\'discountsIrugzTab\');"></div>',
                                            '</div>'
                                            )
                                            );

                                            list.setMode("SINGLE");
                                            //list.onStoreClear();
                                            //list.refresh();




                                            // var totalsList = component.down('#inhouseTotalsList');
                                            // var store = list.getStore();
                                            // totalsList.setData([{}]);
                                            // totalsList.setItemTpl(
                                            //     Ext.create('Ext.XTemplate',
                                            //                '<div class="x-rm-listtpl-main">',
                                            //                '    <div style="width: 6%;">TOTALS</div>',
                                            //                '    <div style="width: 12%;">{[this.getTotalFor(\'store_name\')]}&nbsp; Retailers</div>',
                                            //                '    <div style="width: 10%;">{[this.getTotalFor(\'Users\')]}&nbsp; Users</div>',
                                            //                '    <div style="width: 43%;">{[this.getTotalFor(\'store_city\')]}&nbsp; Cities</div>',
                                            //                '</div>',
                                            //                {
                                            //                     getTotalFor: function(value){
                                            //                         var x = [];
                                            //                         var y;
                                            //                         store.each(function(record,id){
                                            //                             if(value=='Users') {
                                            //                                 y = record.get('manager_firstname')+" "+record.get('manager_lastname');
                                            //                             }
                                            //                             else
                                            //                                 y = record.get(value);
                                            //                             Ext.Array.include(x,y);
                                            //                         });
                                            //                         return x.length;
                                            //                     }
                                            //                }
                                            //               )
                                            // );

                                        },
                                        event: 'initialize'
                                    },
                                    {
                                        fn: function(element, eOpts) {
                                            window.location.hash = 'discountCard'+4;
                                        },
                                        event: 'painted'
                                    }
                                ],
                                items: [
                                    {
                                        xtype: 'discountslistcontainer'
                                    }
                                ]
                            },
                            {
                                xtype: 'container',
                                title: 'VIP',
                                itemId: 'discountVipTab',
                                layout: 'fit',
                                scrollable: false,
                                listeners: [
                                    {
                                        fn: function(component, eOpts) {
                                            var headers = component.down("#discountListHeader");
                                            headers.setData([{}]);
                                            headers.setItemTpl(
                                            Ext.create('Ext.XTemplate',
                                            '<div class="x-rm-listtpl-main">',
                                            '    <div style="width: 15%;" data-name="vendor_name">',
                                            '        Vendors&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style="width: 10%;" data-name="code">',
                                            '        Code&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style="width: 10%;" data-name="status">',
                                            '        Status&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style="width: 6%;" data-name="price">',
                                            '        Price&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style="width: 12%;" data-name="startDate">',
                                            '    Start&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style="width: 12%;" data-name="endDate">',
                                            '    End&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style="width: 10%;" data-name="used">',
                                            '        Used&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style="width: 20%;" data-name="comment">',
                                            '     Comment&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '</div>'
                                            )
                                            );
                                            headers.refresh();
                                            var list = component.down('#discountList');

                                            list.setItemTpl(
                                            Ext.create('Ext.XTemplate',
                                            '<div class="x-rm-listtpl-main">',
                                            '    <div class="pointerCursor boldText" style="width: 15%;">{vendor_name}</div>',
                                            '    <div class="pointerCursor boldText" style="width: 10%;">{promo_code_info.promo_code}</div>',
                                            '    <div class="pointerCursor boldText" style="width: 10%;">{[this.getStatus(values)]}</div>',
                                            '    <div class="pointerCursor" style="width: 6%;">{promo_code_info.vip_price}</div>',
                                            '    <div class="pointerCursor" style="width: 12%;">{promo_code_info.start_date}</div>',
                                            '    <div class="pointerCursor" style="width: 12%;">{promo_code_info.end_date}</div>',
                                            '    <div class="pointerCursor" style="width: 10%;">{[this.getUsedString(values)]}</div>',
                                            '    <div class="pointerCursor" style="width: 25%;">{promo_code_info.comment}</div>',
                                            '</div>',
                                            {
                                                getStatus: function(value){
                                                    try{
                                                        if(value.promo_code_info.status_promo_code && value.promo_code_info.status_promo_code == 'inactive' ){

                                                            return "INACTIVE"      ;
                                                        }
                                                        return "ACTIVE";


                                                    }catch(e){

                                                        return "ACTIVE";
                                                    }
                                                },
                                                getUsedString:function(value){
                                                    try{

                                                        var usedAmount = "0";
                                                        var divisorSign = "/";
                                                        var limitValue = value.promo_code_info.limit_value;
                                                        return usedAmount  + divisorSign + limitValue;
                                                    }catch(e){
                                                        return "0/100";
                                                    }

                                                }

                                            }
                                            )
                                            );

                                            list.setMode("SINGLE");




                                        },
                                        event: 'initialize'
                                    },
                                    {
                                        fn: function(element, eOpts) {
                                            window.location.hash = 'discountCard'+5;

                                            //list.setData(getArrayFromStore(Ext.getStore('vendors.Master')));


                                            // discountVipTab discountList
                                            var me = Ext.ComponentQuery.query("#discountsMainContentPanel")[0];
                                            me.vipListDataHandler();
                                            // var component  = Ext.ComponentQuery.query("#discountVipTab")[0];
                                            // var list = component.down('#discountList');


                                            // list.setData(getArrayFromStore(Ext.getStore('vendors.Master')));
                                            //Ext.getStore("vendors.Master");
                                        },
                                        event: 'painted'
                                    }
                                ],
                                items: [
                                    {
                                        xtype: 'discountslistcontainer',
                                        itemId: 'discounts.listcontainer5'
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        xtype: 'tabpanel',
                        flex: 2,
                        cls: [
                            'x-rm-tabpanel',
                            'x-rm-tabpanelWidth50'
                        ],
                        itemId: 'discountsSidePanel',
                        margin: '8 20 0 10',
                        ui: 'light',
                        tabBar: {
                            docked: 'top',
                            itemId: 'discountsSideNavigationTabBar'
                        },
                        items: [
                            {
                                xtype: 'container',
                                title: 'CREATE NEW',
                                itemId: 'discountsSideCreateNewkTab',
                                layout: 'vbox',
                                scrollable: false,
                                items: [
                                    {
                                        xtype: 'panel',
                                        width: '100%',
                                        items: [
                                            {
                                                xtype: 'button',
                                                cls: [
                                                    'x-rm-filterbtn',
                                                    'x-rm-blueBtn'
                                                ],
                                                docked: 'right',
                                                height: '25px',
                                                itemId: 'discountCreateNewClear',
                                                minWidth: '70px',
                                                width: '70px',
                                                pressedCls: 'x-rm-blueBtn-pressing',
                                                text: 'New'
                                            }
                                        ]
                                    },
                                    {
                                        xtype: 'formpanel',
                                        flex: 1,
                                        cls: [
                                            'x-rm-rdformpanel',
                                            'x-rm-rdmanagerform'
                                        ],
                                        itemId: 'discountsCreateNewForm',
                                        margin: '20px 0 0 0',
                                        width: '100%',
                                        layout: 'vbox',
                                        scrollable: false,
                                        items: [
                                            {
                                                xtype: 'textfield',
                                                itemId: 'discountCreateNewDCodeTextField',
                                                label: 'Discount Code',
                                                labelWidth: '120px',
                                                maxLength: 8
                                            },
                                            {
                                                xtype: 'fieldset',
                                                baseCls: 'x-form-fieldset normalTitle',
                                                margin: '2% 0 0 2%',
                                                width: '100%',
                                                layout: 'vbox',
                                                title: 'How many times can this discount be used ?',
                                                items: [
                                                    {
                                                        xtype: 'textfield',
                                                        actionChange: 'textChange',
                                                        itemId: 'discountCreateNewDCountTextField',
                                                        margin: '0% 0% 0% 20% ',
                                                        width: '60%',
                                                        inputCls: 'fontNormalForDiscount',
                                                        label: 'OO No Limit',
                                                        labelAlign: 'right',
                                                        labelCls: 'discountFieldsetLabel',
                                                        labelWidth: '100px'
                                                    }
                                                ]
                                            },
                                            {
                                                xtype: 'fieldset',
                                                baseCls: 'x-form-fieldset normalTitle',
                                                margin: '2% 0 0 2%',
                                                layout: 'vbox',
                                                title: 'Select the type of discount and set any extra conditions.',
                                                items: [
                                                    {
                                                        xtype: 'fieldset',
                                                        itemId: 'usdFieldSetItemId',
                                                        layout: 'hbox',
                                                        items: [
                                                            {
                                                                xtype: 'label',
                                                                html: '<div style= "font-size: 12px;" class="x-rm-radio-discount"><input id = "usd" style="height: 12px;width: 12px;" class="pointerCursor" type="radio" name="discount-radio" checked="true" onchange ="RMdatalink.app.getController  (\'discount.DiscountTabHandler\').onRadioBtnSelectionEnabledisable(this);"/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<img   src="resources/images/retailerDetail/doller_sign.png" style="margin-right: 10px;height: 17px;width: 10px;"/>&nbsp;&nbsp;USD&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</div>',
                                                                margin: '1% 0% 0% 2% '
                                                            },
                                                            {
                                                                xtype: 'textfield',
                                                                actionChange: 'textChange',
                                                                itemId: 'discountCreateNewDinDollorsTextField',
                                                                margin: '1% 0% 0% 2% ',
                                                                width: '60%',
                                                                inputCls: 'fontNormalForDiscount',
                                                                label: 'Taken off per month',
                                                                labelAlign: 'right',
                                                                labelCls: 'discountFieldsetLabel',
                                                                labelWidth: '130px',
                                                                maxLength: 6
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        xtype: 'fieldset',
                                                        itemId: 'usdFieldSetItemId1',
                                                        layout: 'hbox',
                                                        items: [
                                                            {
                                                                xtype: 'label',
                                                                html: '<div style= "font-size: 12px;" class="x-rm-radio-discount"><input id = "discount" class="pointerCursor" type="radio" name="discount-radio" onchange ="RMdatalink.app.getController  (\'discount.DiscountTabHandler\').onRadioBtnSelectionEnabledisable(this);"/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<img   src="resources/images/retailerDetail/percentage_sign.png" style="margin-right: 10px;height: 16px;width: 17px;"/>Discount&nbsp;</div>',
                                                                margin: '1% 0% 0% 2% '
                                                            },
                                                            {
                                                                xtype: 'textfield',
                                                                actionChange: 'textChange',
                                                                disabled: true,
                                                                itemId: 'discountCreateNewDinPercentTextField',
                                                                margin: '1% 0% 0% 2% ',
                                                                width: '60%',
                                                                inputCls: 'fontNormalForDiscount',
                                                                label: 'Taken off per month',
                                                                labelAlign: 'right',
                                                                labelCls: 'discountFieldsetLabel',
                                                                labelWidth: '130px',
                                                                maxLength: 6
                                                            }
                                                        ]
                                                    }
                                                ]
                                            },
                                            {
                                                xtype: 'fieldset',
                                                baseCls: 'x-form-fieldset normalTitle',
                                                margin: '2% 0 0 2%',
                                                width: '95%',
                                                title: 'How long doee discount apply to a subscription?',
                                                layout: {
                                                    type: 'hbox',
                                                    align: 'start'
                                                },
                                                items: [
                                                    {
                                                        xtype: 'textfield',
                                                        actionChange: 'textChange',
                                                        flex: 1,
                                                        itemId: 'discountCreateNewDValidMonthsTextField',
                                                        margin: '1% 0% 0% 2% ',
                                                        inputCls: 'fontNormalForDiscount',
                                                        label: 'Months',
                                                        labelAlign: 'right',
                                                        labelCls: 'discountFieldsetLabel',
                                                        labelWidth: '60px',
                                                        maxLength: 2
                                                    },
                                                    {
                                                        xtype: 'textfield',
                                                        actionChange: 'textChange',
                                                        flex: 1,
                                                        itemId: 'discountCreateNewDValidDaysTextField',
                                                        margin: '1% 0% 0% 2% ',
                                                        inputCls: 'fontNormalForDiscount',
                                                        label: 'Days',
                                                        labelAlign: 'right',
                                                        labelCls: 'discountFieldsetLabel',
                                                        labelWidth: '60px',
                                                        maxLength: 2
                                                    }
                                                ]
                                            },
                                            {
                                                xtype: 'fieldset',
                                                baseCls: 'x-form-fieldset normalTitle',
                                                margin: '2% 0 0 2%',
                                                title: 'How long is this promotion available',
                                                layout: {
                                                    type: 'hbox',
                                                    align: 'start'
                                                },
                                                items: [
                                                    {
                                                        xtype: 'textfield',
                                                        itemId: 'discountCreateNewDStartDateTextField',
                                                        margin: '1% 0% 0% 1% ',
                                                        width: '160px',
                                                        inputCls: 'fontNormalForDiscount',
                                                        label: 'Start Date',
                                                        labelCls: 'discountFieldsetLabel',
                                                        labelWidth: '80px',
                                                        listeners: [
                                                            {
                                                                fn: function(component, eOpts) {
                                                                    component.element.on("tap",function(){


                                                                        function fn(newDate){


                                                                            component.setValue(Ext.Date.format(newDate, "m/d/Y"));
                                                                            RMdatalink.util.Calendar.hideCalendar();
                                                                            component.setDisabled(false);

                                                                        }

                                                                        RMdatalink.util.Calendar.showCalendar(fn,component);
                                                                        component.setDisabled(true);

                                                                    });
                                                                },
                                                                event: 'initialize'
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        xtype: 'textfield',
                                                        itemId: 'discountCreateNewDEndDateTextField',
                                                        margin: '1% 0% 0% 0% ',
                                                        width: '160px',
                                                        inputCls: 'fontNormalForDiscount',
                                                        label: 'End Date',
                                                        labelCls: 'discountFieldsetLabel',
                                                        labelWidth: '80px',
                                                        listeners: [
                                                            {
                                                                fn: function(component, eOpts) {
                                                                    component.element.on("tap",function(){

                                                                        function fn(newDate){
                                                                            component.setValue(Ext.Date.format(newDate, "m/d/Y"));
                                                                            RMdatalink.util.Calendar.hideCalendar();
                                                                            component.setDisabled(false);
                                                                        }

                                                                        RMdatalink.util.Calendar.showCalendar(fn,component);
                                                                        component.setDisabled(true);
                                                                    });

                                                                },
                                                                event: 'initialize'
                                                            }
                                                        ]
                                                    }
                                                ]
                                            },
                                            {
                                                xtype: 'spacer',
                                                html: ' <center class="discount"><input class="pointerCursor" style="margin-top:5px;" type="checkbox" data-name="NeverExpires"/>&nbsp;&nbsp;Never Expires</center>',
                                                margin: '2% 0 0 0',
                                                maxHeight: '30px',
                                                style: 'font-size:70%;'
                                            },
                                            {
                                                xtype: 'panel',
                                                baseCls: 'x-form-fieldset normalTitle',
                                                margin: '2% 0 0 2%',
                                                layout: {
                                                    type: 'hbox',
                                                    align: 'center',
                                                    pack: 'center'
                                                },
                                                items: [
                                                    {
                                                        xtype: 'button',
                                                        cls: 'grayBtn',
                                                        height: '25px',
                                                        itemId: 'discountCreateNewDCancelBtn',
                                                        minWidth: '70px',
                                                        text: 'Cancel'
                                                    },
                                                    {
                                                        xtype: 'spacer',
                                                        width: 20
                                                    },
                                                    {
                                                        xtype: 'button',
                                                        cls: [
                                                            'x-rm-filterbtn',
                                                            'x-rm-blueBtn'
                                                        ],
                                                        height: '25px',
                                                        itemId: 'discountCreateNewUpdateBtn',
                                                        minWidth: '70px',
                                                        pressedCls: 'x-rm-blueBtn-pressing',
                                                        text: 'Add New/Update'
                                                    },
                                                    {
                                                        xtype: 'spacer',
                                                        width: 20
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                xtype: 'container',
                                title: 'PREVIOUS',
                                itemId: 'discountsSidePreviousTab',
                                layout: 'fit',
                                scrollable: false,
                                listeners: [
                                    {
                                        fn: function(component, eOpts) {
                                            var headers = component.down("#discountListHeader");
                                            headers.setData([{}]);
                                            headers.setItemTpl(
                                            Ext.create('Ext.XTemplate',
                                            '<div class="x-rm-listtpl-main">',
                                            '    <div style="width: 20%;" data-name="code">',
                                            '        Code&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style="width: 15%;" data-name="status">',
                                            '        Status&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style="width: 15%;" data-name="startDate">',
                                            '        Start&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style="width: 15%;" data-name="endDate">',
                                            '    End&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style="width: 15%;" data-name="used">',
                                            '        Used&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style="width: 20%;" data-name="comment">',
                                            '        Comment&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '</div>'
                                            )
                                            );
                                            headers.refresh();
                                            var list = component.down('#discountList');

                                            list.setItemTpl(
                                            Ext.create('Ext.XTemplate',
                                            '<div class="x-rm-listtpl-main">',
                                            '    <div style="width: 20%;">{code}</div>',
                                            '    <div style="width: 15%;">{status}</div>',
                                            '    <div style="width: 15%;">{startDate}</div>',
                                            '    <div style="width: 15%;">{endDate}</div>',
                                            '    <div style="width: 15%;">{used}</div>',
                                            '    <input type="text" class="x-rm-rdinlinecmt" data-id="{id}" value="{comment}" maxlength="24"',
                                            '        onchange="RMdatalink.app.getController(\'RetailerDeatilsDataSet\').saveCommentForDiscount(this,\'discountsSidePreviousTab\');"/>',
                                            '</div>'
                                            )
                                            );
                                            //list.onStoreClear();
                                            //list.refresh();




                                            // var totalsList = component.down('#inhouseTotalsList');
                                            // var store = list.getStore();
                                            // totalsList.setData([{}]);
                                            // totalsList.setItemTpl(
                                            //     Ext.create('Ext.XTemplate',
                                            //                '<div class="x-rm-listtpl-main">',
                                            //                '    <div style="width: 6%;">TOTALS</div>',
                                            //                '    <div style="width: 12%;">{[this.getTotalFor(\'store_name\')]}&nbsp; Retailers</div>',
                                            //                '    <div style="width: 10%;">{[this.getTotalFor(\'Users\')]}&nbsp; Users</div>',
                                            //                '    <div style="width: 43%;">{[this.getTotalFor(\'store_city\')]}&nbsp; Cities</div>',
                                            //                '</div>',
                                            //                {
                                            //                     getTotalFor: function(value){
                                            //                         var x = [];
                                            //                         var y;
                                            //                         store.each(function(record,id){
                                            //                             if(value=='Users') {
                                            //                                 y = record.get('manager_firstname')+" "+record.get('manager_lastname');
                                            //                             }
                                            //                             else
                                            //                                 y = record.get(value);
                                            //                             Ext.Array.include(x,y);
                                            //                         });
                                            //                         return x.length;
                                            //                     }
                                            //                }
                                            //               )
                                            // );

                                        },
                                        event: 'initialize'
                                    },
                                    {
                                        fn: function(element, eOpts) {



                                            //window.location.hash = 'retailerCard'+1;
                                        },
                                        event: 'painted'
                                    }
                                ],
                                items: [
                                    {
                                        xtype: 'discountslistcontainer'
                                    }
                                ]
                            },
                            {
                                xtype: 'container',
                                title: 'PREVIOUS',
                                hidden: true,
                                itemId: 'vipCreateNewSIdeTab',
                                style: 'background-color:white',
                                layout: 'vbox',
                                scrollable: false,
                                items: [
                                    {
                                        xtype: 'formpanel',
                                        flex: 1,
                                        cls: 'x-rm-rdformpanel ',
                                        disabled: false,
                                        itemId: 'CreateVippVendorFrom',
                                        style: 'background-color:white',
                                        items: [
                                            {
                                                xtype: 'textfield',
                                                cls: 'clsFOrVipTab',
                                                itemId: 'VipFormPromoCode',
                                                label: 'Promo Code',
                                                labelWidth: '120px'
                                            },
                                            {
                                                xtype: 'selectfield',
                                                cls: 'clsFOrVipTab',
                                                itemId: 'VipFormVendorId',
                                                label: 'Vendor',
                                                labelWidth: '120px',
                                                autoSelect: false,
                                                displayField: 'vendor_name',
                                                store: 'vendors.Master',
                                                usePicker: 'auto',
                                                valueField: '_id'
                                            },
                                            {
                                                xtype: 'numberfield',
                                                cls: 'clsFOrVipTab',
                                                itemId: 'vipFormPrice',
                                                label: 'Price',
                                                labelWidth: '120px'
                                            },
                                            {
                                                xtype: 'textfield',
                                                action: 'inputByDatePicker',
                                                cls: 'clsFOrVipTab',
                                                itemId: 'vipFormStartDate',
                                                label: 'Start Date',
                                                labelWidth: '120px'
                                            },
                                            {
                                                xtype: 'fieldset',
                                                cls: 'activeInactivePromoCodeCls',
                                                itemId: 'vipPromoActiveStatus',
                                                minHeight: '20px',
                                                layout: 'hbox',
                                                items: [
                                                    {
                                                        xtype: 'label',
                                                        cls: 'labelClassForLogo',
                                                        html: 'Status',
                                                        style: 'padding-top:3px;',
                                                        width: '120px'
                                                    },
                                                    {
                                                        xtype: 'radiofield',
                                                        style: 'margin-left:10px',
                                                        width: '90px',
                                                        label: 'Active',
                                                        labelWidth: '80px',
                                                        name: 'activeStatus',
                                                        value: 'active',
                                                        checked: true
                                                    },
                                                    {
                                                        xtype: 'radiofield',
                                                        style: 'margin-left:10px',
                                                        width: '90px',
                                                        label: 'InActive',
                                                        labelWidth: '80px',
                                                        name: 'activeStatus',
                                                        value: 'inactive'
                                                    }
                                                ]
                                            },
                                            {
                                                xtype: 'textfield',
                                                action: 'inputByDatePicker',
                                                cls: 'clsFOrVipTab',
                                                itemId: 'vipFormEndDate',
                                                label: 'End Date',
                                                labelWidth: '120px'
                                            },
                                            {
                                                xtype: 'numberfield',
                                                cls: 'clsFOrVipTab',
                                                itemId: 'vipFormLimit',
                                                label: 'Limit',
                                                labelWidth: '120px'
                                            },
                                            {
                                                xtype: 'textareafield',
                                                cls: 'clsFOrVipTab',
                                                itemId: 'vipFormComment',
                                                label: 'Comment',
                                                labelWidth: '120px'
                                            },
                                            {
                                                xtype: 'container',
                                                hidden: false,
                                                margin: '10 2px 0 80',
                                                padding: '0 2 0 0',
                                                layout: {
                                                    type: 'hbox',
                                                    align: 'center',
                                                    pack: 'center'
                                                },
                                                items: [
                                                    {
                                                        xtype: 'button',
                                                        handler: function(button, e) {
                                                            console.log("CLICKED");
                                                            var CreateVippVendorFrom = Ext.ComponentQuery.query("#CreateVippVendorFrom")[0];

                                                            if(CreateVippVendorFrom){


                                                            }





                                                            var VipFormPromoCode = Ext.ComponentQuery.query("#VipFormPromoCode")[0];
                                                            var VipFormVendorId = Ext.ComponentQuery.query("#VipFormVendorId")[0];
                                                            var vipFormPrice = Ext.ComponentQuery.query("#vipFormPrice")[0];
                                                            var vipFormStartDate = Ext.ComponentQuery.query("#vipFormStartDate")[0];
                                                            var vipFormEndDate = Ext.ComponentQuery.query("#vipFormEndDate")[0];
                                                            var vipFormLimit = Ext.ComponentQuery.query("#vipFormLimit")[0];
                                                            var vipFormComment = Ext.ComponentQuery.query("#vipFormComment")[0];
                                                            var vendorMaster  = Ext.getStore("vendors.Master");

                                                            var CreateVippVendorFrom = Ext.ComponentQuery.query("#CreateVippVendorFrom")[0];
                                                            var valuesoForm = CreateVippVendorFrom.getValues();


                                                            var promoCode  = VipFormPromoCode.getValue();
                                                            var vipFormPrice  = vipFormPrice.getValue();
                                                            var startValue = vipFormStartDate.getValue();
                                                            var EndValue = vipFormEndDate.getValue();
                                                            var LimitValue = vipFormLimit.getValue();
                                                            var commentValue = vipFormComment.getValue();
                                                            var activeStatusOfPromoCode = valuesoForm.activeStatus;


                                                            var vendorId = VipFormVendorId.getValue();
                                                            var vendor = findVendorBy_id(vendorId);

                                                            console.log(vendor);
                                                            if(vendor.data.prevent_be_vip){

                                                                alert("THIS VENDOR CANNOT BE ADDDE TI VIP LIST");
                                                                return;

                                                            }





                                                            //promo_code_info
                                                            //is_promo_code_active

                                                            var vendor_id = vendorId;
                                                            var keyOfRetailer = 'promo_code_info';
                                                            var flagofRetailer = 'is_promo_code_active';
                                                            var vendorMaster = Ext.getStore('vendors.Master') ;

                                                            console.log(vendor_id);


                                                            var record;
                                                            if(vendor_id)
                                                            {
                                                                record = findVendorBy_id(vendor_id) ;
                                                            }



                                                            console.log(record);
                                                            if(!record){

                                                                return ;
                                                            }


                                                            var updatingData = {

                                                                promo_code:promoCode,
                                                                vip_price:vipFormPrice,
                                                                start_date:startValue,
                                                                end_date:EndValue,
                                                                limit_value:LimitValue,
                                                                comment:commentValue,
                                                                status_promo_code:activeStatusOfPromoCode
                                                            };
                                                            var rtlrs = updatingData;
                                                            var me = Ext.ComponentQuery.query("#discountsMainContentPanel")[0];
                                                            updateVendor() ;






                                                            function updateVendor(){


                                                                var dataToupdate = {


                                                                };
                                                                record.set(keyOfRetailer, updatingData);
                                                                record.set(flagofRetailer, true);
                                                                dataToupdate[keyOfRetailer] = rtlrs;
                                                                dataToupdate[flagofRetailer] = true;
                                                                console.error(dataToupdate);
                                                                me.vipListDataHandler();
                                                                //return;
                                                                RMdatalink.iwa.rdl.doUpdateCollection(vendorMaster, dataToupdate , record.get('_id'), updateSuccess, updateError );


                                                            }



                                                            function updateSuccess(){

                                                                record.set(keyOfRetailer, rtlrs);
                                                                var discounts = Ext.ComponentQuery.query("#discountsMainContentPanel")[0];
                                                                discounts.vipListDataHandler();
                                                                Ext.Viewport.setMasked(false);
                                                                console.log("vendor updated successfully");
                                                            }



                                                            function updateError(){

                                                                Ext.Viewport.setMasked(false);
                                                                console.log("error in updating vendor");

                                                            }


                                                        },
                                                        action: 'addNew',
                                                        cls: 'x-rm-blueBtn',
                                                        height: '20px',
                                                        itemId: 'addVipPromoCodeAddButtton',
                                                        width: '80px',
                                                        text: 'Add'
                                                    },
                                                    {
                                                        xtype: 'button',
                                                        handler: function(button, e) {
                                                            console.log("CLICKED");
                                                            var CreateVippVendorFrom = Ext.ComponentQuery.query("#CreateVippVendorFrom")[0];

                                                            if(CreateVippVendorFrom){


                                                            }






                                                            var VipFormVendorId = Ext.ComponentQuery.query("#VipFormVendorId")[0];







                                                            var vendorId = VipFormVendorId.getValue();
                                                            var vendor = findVendorBy_id(vendorId);








                                                            var vendor_id = vendorId;
                                                            var keyOfRetailer = 'promo_code_info';
                                                            var flagofRetailer = 'is_promo_code_active';
                                                            var vendorMaster = Ext.getStore('vendors.Master') ;

                                                            console.log(vendor_id);


                                                            var record;
                                                            if(vendor_id)
                                                            {
                                                                record = findVendorBy_id(vendor_id) ;
                                                            }



                                                            console.log(record);
                                                            if(!record){

                                                                return ;
                                                            }


                                                            var updatingData = false;
                                                            var rtlrs = updatingData;


                                                            var discountVipTabList = Ext.ComponentQuery.query("#discountVipTab #discountList")[0];
                                                            var store = discountVipTabList.getStore();
                                                            var recordTodeleteFromListIndex = store.find("_id" ,vendor_id );
                                                            var recordTodeleteFrom = store.getAt(recordTodeleteFromListIndex);
                                                            if(recordTodeleteFrom){

                                                            }else{
                                                                return;
                                                            }

                                                            store.remove(recordTodeleteFrom);
                                                            var addVipPromoCodeClearButtton  = Ext.ComponentQuery.query("#addVipPromoCodeClearButtton")[0];

                                                            var handler = addVipPromoCodeClearButtton.getHandler();

                                                            handler.call(addVipPromoCodeClearButtton,addVipPromoCodeClearButtton);

                                                            updateVendor() ;





                                                            function updateVendor(){


                                                                var dataToupdate = {


                                                                };
                                                                record.set(keyOfRetailer, updatingData);
                                                                record.set(flagofRetailer, true);
                                                                dataToupdate[keyOfRetailer] = rtlrs;
                                                                dataToupdate[flagofRetailer] = true;
                                                                console.error(dataToupdate);

                                                                //return;
                                                                RMdatalink.iwa.rdl.doUpdateCollection(vendorMaster, dataToupdate , record.get('_id'), updateSuccess, updateError );


                                                            }



                                                            function updateSuccess(){

                                                                record.set(keyOfRetailer, rtlrs);
                                                                Ext.Viewport.setMasked(false);
                                                                var discounts = Ext.ComponentQuery.query("#discountsMainContentPanel")[0];
                                                                discounts.vipListDataHandler();

                                                                console.log("vendor updated successfully");
                                                            }



                                                            function updateError(){

                                                                Ext.Viewport.setMasked(false);
                                                                console.log("error in updating vendor");

                                                            }


                                                        },
                                                        cls: 'newGrayBtn',
                                                        height: '20px',
                                                        itemId: 'addVipPromoCodeDeleteButtton',
                                                        margin: '0 5 0 5',
                                                        minHeight: '24px',
                                                        width: '80px',
                                                        pressedCls: 'x-rm-card-actionbtn-pressing',
                                                        text: 'Delete'
                                                    },
                                                    {
                                                        xtype: 'button',
                                                        handler: function(button, e) {

                                                            var VipFormPromoCode = Ext.ComponentQuery.query("#VipFormPromoCode")[0];
                                                            var VipFormVendorId = Ext.ComponentQuery.query("#VipFormVendorId")[0];
                                                            var vipFormPrice = Ext.ComponentQuery.query("#vipFormPrice")[0];
                                                            var vipFormStartDate = Ext.ComponentQuery.query("#vipFormStartDate")[0];
                                                            var vipFormEndDate = Ext.ComponentQuery.query("#vipFormEndDate")[0];
                                                            var vipFormLimit = Ext.ComponentQuery.query("#vipFormLimit")[0];
                                                            var vipFormComment = Ext.ComponentQuery.query("#vipFormComment")[0];
                                                            var vendorMaster  = Ext.getStore("vendors.Master");


                                                            VipFormPromoCode.setValue(null);
                                                            VipFormVendorId.setValue(null);
                                                            vipFormPrice.setValue(null);
                                                            vipFormStartDate.setValue(null);
                                                            vipFormEndDate.setValue(null);
                                                            vipFormComment.setValue(null);
                                                            vipFormLimit.setValue(null);

                                                            var discountVipTabList = Ext.ComponentQuery.query("#discountVipTab #discountList")[0];
                                                            discountVipTabList.deselectAll();

                                                            var addVipPromoCodeAddButtton = Ext.ComponentQuery.query("#addVipPromoCodeAddButtton")[0];
                                                            addVipPromoCodeAddButtton.setText("Add");
                                                        },
                                                        cls: [
                                                            'x-rm-blueBtn',
                                                            'x-rm-rdopenbtns',
                                                            'x-rm-smalliconbtns'
                                                        ],
                                                        height: '20px',
                                                        itemId: 'addVipPromoCodeClearButtton',
                                                        margin: '0 4 0 0',
                                                        style: '',
                                                        width: '80px',
                                                        badgeText: '',
                                                        iconAlign: 'center',
                                                        text: 'Clear'
                                                    }
                                                ]
                                            },
                                            {
                                                xtype: 'segmentedbutton',
                                                cls: 'segButton',
                                                hidden: true,
                                                layout: {
                                                    type: 'hbox',
                                                    align: 'center',
                                                    pack: 'center'
                                                },
                                                items: [
                                                    {
                                                        xtype: 'button',
                                                        handler: function(button, e) {
                                                            console.log("CLICKED");
                                                            var CreateVippVendorFrom = Ext.ComponentQuery.query("#CreateVippVendorFrom")[0];

                                                            if(CreateVippVendorFrom){


                                                            }





                                                            var VipFormPromoCode = Ext.ComponentQuery.query("#VipFormPromoCode")[0];
                                                            var VipFormVendorId = Ext.ComponentQuery.query("#VipFormVendorId")[0];
                                                            var vipFormPrice = Ext.ComponentQuery.query("#vipFormPrice")[0];
                                                            var vipFormStartDate = Ext.ComponentQuery.query("#vipFormStartDate")[0];
                                                            var vipFormEndDate = Ext.ComponentQuery.query("#vipFormEndDate")[0];
                                                            var vipFormLimit = Ext.ComponentQuery.query("#vipFormLimit")[0];
                                                            var vipFormComment = Ext.ComponentQuery.query("#vipFormComment")[0];
                                                            var vendorMaster  = Ext.getStore("vendors.Master");





                                                            var promoCode  = VipFormPromoCode.getValue();
                                                            var vipFormPrice  = vipFormPrice.getValue();
                                                            var startValue = vipFormStartDate.getValue();
                                                            var EndValue = vipFormStartDate.getValue();
                                                            var LimitValue = vipFormLimit.getValue();
                                                            var commentValue = vipFormComment.getValue();


                                                            var vendorId = VipFormVendorId.getValue();
                                                            var vendor = findVendorBy_id(vendorId);

                                                            console.log(vendor);
                                                            if(vendor.data.prevent_be_vip){

                                                                alert("THIS VENDOR CANNOT BE ADDDE TI VIP LIST");
                                                                return;

                                                            }






                                                            var vendor_id = vendorId;
                                                            var keyOfRetailer = 'vip_program_info';
                                                            var vendorMaster = Ext.getStore('vendors.Master') ;

                                                            console.log(vendor_id);


                                                            var record;
                                                            if(vendor_id)
                                                            {
                                                                record = findVendorBy_id(vendor_id) ;
                                                            }



                                                            console.log(record);
                                                            if(!record){

                                                                return ;
                                                            }


                                                            var updatingData = {

                                                                promo_code:promoCode,
                                                                vip_price:vipFormPrice,
                                                                start_date:startValue,
                                                                end_date:EndValue,
                                                                limit_value:LimitValue,
                                                                comment:commentValue
                                                            };
                                                            var rtlrs = updatingData;
                                                            var me = Ext.ComponentQuery.query("#discountsMainContentPanel")[0];
                                                            updateVendor() ;






                                                            function updateVendor(){


                                                                var dataToupdate = {


                                                                };
                                                                record.set(keyOfRetailer, updatingData);
                                                                dataToupdate[keyOfRetailer] = rtlrs;
                                                                console.error(dataToupdate);
                                                                me.vipListDataHandler();
                                                                //return;
                                                                RMdatalink.iwa.rdl.doUpdateCollection(vendorMaster, dataToupdate , record.get('_id'), updateSuccess, updateError );


                                                            }



                                                            function updateSuccess(){

                                                                record.set(keyOfRetailer, rtlrs);
                                                                Ext.Viewport.setMasked(false);
                                                                console.log("vendor updated successfully");
                                                            }



                                                            function updateError(){

                                                                Ext.Viewport.setMasked(false);
                                                                console.log("error in updating vendor");

                                                            }

                                                            function findVendorBy_id(v_id){

                                                                var vendors = vendorMaster.data.all ;
                                                                var venRec = null ;
                                                                for(var j=0;j<vendors.length ; j++){

                                                                    if(v_id == vendors[j].data._id){

                                                                        venRec = vendors[j] ;
                                                                        break;
                                                                    }
                                                                }

                                                                return venRec;

                                                            }


                                                        },
                                                        cls: 'grayBtn',
                                                        margin: '10px',
                                                        width: '130px',
                                                        text: 'Create'
                                                    },
                                                    {
                                                        xtype: 'button',
                                                        cls: 'grayBtn',
                                                        hidden: false,
                                                        margin: '10px',
                                                        width: '130px',
                                                        text: 'Delete'
                                                    },
                                                    {
                                                        xtype: 'button',
                                                        cls: 'grayBtn',
                                                        hidden: false,
                                                        margin: '10px',
                                                        width: '130px',
                                                        text: 'Update'
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            }
        ],
        listeners: [
            {
                fn: 'onDiscountsTabPanelActiveItemChange',
                event: 'activeitemchange',
                delegate: '#discountsTabPanel'
            }
        ]
    },

    onDiscountsTabPanelActiveItemChange: function(container, value, oldValue, eOpts) {
        console.log("ACTIVE ITEM CHANGE");
        if(container){

            if(value.getItemId() == 'discountVipTab'){


                console.log("ACTIVE ITEM CHAGNES.CLOAS UNHHIDEED TAB");
                var discountsSidePanel = Ext.ComponentQuery.query("#discountsSidePanel");
                var discountsSideCreateNewkTab = discountsSidePanel[0].down("#discountsSideCreateNewkTab");
                var discountsSidePreviousTab = discountsSidePanel[0].down("#discountsSidePreviousTab");
                var vipCreateNewSIdeTab = discountsSidePanel[0].down("#vipCreateNewSIdeTab");
                    discountsSideCreateNewkTab.setHidden(true);
                    discountsSidePreviousTab.setHidden(true);
                    vipCreateNewSIdeTab.setHidden(false);
                var discountsSideNavigationTabBar = Ext.ComponentQuery.query("#discountsSideNavigationTabBar")[0];
                    discountsSideNavigationTabBar.setHidden(true);
                    //discountsSidePanel.setActiveItem(vipCreateNewSIdeTab);

            }else{
                var discountsSidePanel = Ext.ComponentQuery.query("#discountsSidePanel");
                var discountsSideCreateNewkTab = discountsSidePanel[0].down("#discountsSideCreateNewkTab");
                var discountsSidePreviousTab = discountsSidePanel[0].down("#discountsSidePreviousTab");
                var vipCreateNewSIdeTab = discountsSidePanel[0].down("#vipCreateNewSIdeTab");
                    discountsSideCreateNewkTab.setHidden(false);
                    discountsSidePreviousTab.setHidden(false);
                    vipCreateNewSIdeTab.setHidden(true);
                    discountsSidePanel[0].setActiveItem(discountsSideCreateNewkTab);
                var discountsSideNavigationTabBar = Ext.ComponentQuery.query("#discountsSideNavigationTabBar")[0];
                    //discountsSideNavigationTabBar.setHidden(false);

            }
        }



    },

    vipListDataHandler: function() {
        var component  = Ext.ComponentQuery.query("#discountVipTab")[0];
        var list = component.down('#discountList');

        var data = getArrayFromStore(Ext.getStore('vendors.Master'));

        var dataToPush = [];


        var keyOfRetailer = 'promo_code_info';
        var flagofRetailer = 'is_promo_code_active';

        for(var i=0;i<data.length;i++){

            if(  data[i][keyOfRetailer]  &&  data[i][flagofRetailer] ){

                    dataToPush.push(data[i]);

            }

        }
        var store = list.getStore();
        if(store){
            store.removeAll();
            store.setData(dataToPush);
        }else{
            list.setData(dataToPush);
        }


    },

    addValuesInVipForm: function(promoCode, vendor_id, price, startDate, endDate, limit, comment) {
        console.log("CLICKED");
        var CreateVippVendorFrom = Ext.ComponentQuery.query("#CreateVippVendorFrom")[0];

        if(CreateVippVendorFrom){


        }





        var VipFormPromoCode = Ext.ComponentQuery.query("#VipFormPromoCode")[0];
        var VipFormVendorId = Ext.ComponentQuery.query("#VipFormVendorId")[0];
        var vipFormPrice = Ext.ComponentQuery.query("#vipFormPrice")[0];
        var vipFormStartDate = Ext.ComponentQuery.query("#vipFormStartDate")[0];
        var vipFormEndDate = Ext.ComponentQuery.query("#vipFormEndDate")[0];
        var vipFormLimit = Ext.ComponentQuery.query("#vipFormLimit")[0];
        var vipFormComment = Ext.ComponentQuery.query("#vipFormComment")[0];
        var vendorMaster  = Ext.getStore("vendors.Master");


        VipFormPromoCode.setValue(promoCode);
        VipFormVendorId.setValue(vendor_id);
        vipFormPrice.setValue(price);
        vipFormStartDate.setValue(startDate);
        vipFormEndDate.setValue(endDate);
        vipFormComment.setValue(comment);
        vipFormLimit.setValue(limit);
    }

});