/*
 * File: app/view/discounts/ListContainer.js
 *
 * This file was generated by Sencha Architect version 3.0.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.3.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.3.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('RMdatalink.view.discounts.ListContainer', {
    extend: 'Ext.Panel',
    alias: 'widget.discountslistcontainer',

    requires: [
        'RMdatalink.view.common.searchView',
        'Ext.Panel',
        'Ext.XTemplate',
        'Ext.dataview.List',
        'Ext.dataview.DataView'
    ],

    config: {
        layout: 'vbox',
        scrollable: false,
        items: [
            {
                xtype: 'panel',
                height: '32px',
                itemId: 'mypanel2',
                style: 'margin-top:5px;',
                layout: 'fit',
                scrollable: false,
                items: [
                    {
                        xtype: 'searchView'
                    }
                ],
                listeners: [
                    {
                        fn: function(component, eOpts) {
                            var filterBtn = component.down('#filterBtn') ;
                            filterBtn.destroy();
                        },
                        event: 'initialize'
                    }
                ]
            },
            {
                xtype: 'panel',
                flex: 15,
                layout: 'hbox',
                scrollable: false,
                items: [
                    {
                        xtype: 'panel',
                        width: '100%',
                        layout: 'vbox',
                        scrollable: false,
                        items: [
                            {
                                xtype: 'dataview',
                                actionSorting: 'sortingStore',
                                flex: 1,
                                cls: 'x-rm-list-header',
                                itemId: 'discountListHeader',
                                scrollable: false,
                                itemTpl: [
                                    '<div>Data View Item {string}</div>'
                                ]
                            },
                            {
                                xtype: 'list',
                                action: 'setScrollBarVisible',
                                flex: 15,
                                cls: 'x-rm-list',
                                itemId: 'discountList',
                                mode: 'MULTI',
                                itemTpl: [
                                    '<div>List Item {string}</div>'
                                ]
                            }
                        ]
                    },
                    {
                        xtype: 'panel',
                        flex: 0
                    }
                ]
            },
            {
                xtype: 'panel',
                flex: 1,
                layout: 'fit',
                items: [
                    {
                        xtype: 'dataview',
                        cls: 'x-rm-list-totals',
                        itemId: 'retailerTotalsList',
                        width: '90%',
                        scrollable: false
                    }
                ]
            }
        ],
        listeners: [
            {
                fn: 'onDiscountListSelect',
                event: 'select',
                delegate: '#discountList'
            },
            {
                fn: 'onDiscountListItemTap',
                event: 'itemtap',
                delegate: '#discountList'
            }
        ]
    },

    onDiscountListSelect: function(dataview, record, eOpts) {

        var discountsTabPanel = Ext.ComponentQuery.query('#discountsTabPanel')[0];



        var componet = dataview;
        //"discountVipTab"
        var isTheDataviewChildOFdiscountVipTab = false;
        while( componet &&  componet.getParent() ){


            if(componet.getItemId() == "discountVipTab"){

                isTheDataviewChildOFdiscountVipTab = true;
                break;

            }
                componet = componet.getParent();
        }
        if(isTheDataviewChildOFdiscountVipTab){
          console.log("THIS CLICK SHOULD BE PREVEBNTED");
            return;
        }else{

            console.log("THIS CLICK IS ALLOWE");
            RMdatalink.app.getController('discount.DiscountTabHandler').onDiscountListSelect(record,discountsTabPanel.getActiveItem()) ;
        }

    },

    onDiscountListItemTap: function(dataview, index, target, record, e, eOpts) {
        var componet = dataview;
        //"discountVipTab"
        var isTheDataviewChildOFdiscountVipTab = false;
        while( componet &&  componet.getParent() ){


            if(componet.getItemId() == "discountVipTab"){

                isTheDataviewChildOFdiscountVipTab = true;
                break;

            }
            componet = componet.getParent();
        }
        if(isTheDataviewChildOFdiscountVipTab){

            console.log("THIS CLICK IS ALLOWE");
            var vendorsMainContentPanel = Ext.ComponentQuery.query("#vendorsMainContentPanel")[0];
            if(vendorsMainContentPanel){

                var vip_program_info = record.data.promo_code_info;
                if(vip_program_info){

                    var promo_code = vip_program_info.promo_code;
                    var vip_price = vip_program_info.vip_price;
                    var start_date = vip_program_info.start_date;
                    var end_date= vip_program_info.end_date;
                    var limit_value = vip_program_info.limit_value;
                    var comment = vip_program_info.comment;
                    var status = vip_program_info.status_promo_code || 'active' ;
                }else{

                    console.log("NO vip_program_info FOUDN");
                    return;

                }
                addValuesInVipForm(promo_code , record.data._id  , vip_price ,start_date ,end_date , limit_value , comment , status);
            }
        }else{

            console.log("THIS CLICK SHOULD BE PREVEBNTED");
            return;


        }



        function addValuesInVipForm(promoCode , vendor_id , price , startDate , endDate  , limit , comment , status){

            console.log("CLICKED");
            var CreateVippVendorFrom = Ext.ComponentQuery.query("#CreateVippVendorFrom")[0];

            if(CreateVippVendorFrom){


            }





            var VipFormPromoCode = Ext.ComponentQuery.query("#VipFormPromoCode")[0];
            var VipFormVendorId = Ext.ComponentQuery.query("#VipFormVendorId")[0];
            var vipFormPrice = Ext.ComponentQuery.query("#vipFormPrice")[0];
            var vipFormStartDate = Ext.ComponentQuery.query("#vipFormStartDate")[0];
            var vipFormEndDate = Ext.ComponentQuery.query("#vipFormEndDate")[0];
            var vipFormLimit = Ext.ComponentQuery.query("#vipFormLimit")[0];
            var vipFormComment = Ext.ComponentQuery.query("#vipFormComment")[0];
            var vendorMaster  = Ext.getStore("vendors.Master");

            VipFormPromoCode.setValue(promoCode);
            VipFormVendorId.setValue(vendor_id);
            vipFormPrice.setValue(price);
            vipFormStartDate.setValue(startDate);
            vipFormEndDate.setValue(endDate);
            vipFormComment.setValue(comment);
            vipFormLimit.setValue(limit);

            var CreateVippVendorFrom = Ext.ComponentQuery.query("#CreateVippVendorFrom")[0];
            var values  = CreateVippVendorFrom.getValues();
            values.activeStatus = status ;

            CreateVippVendorFrom.setValues(values);



            var addVipPromoCodeAddButtton = Ext.ComponentQuery.query("#addVipPromoCodeAddButtton")[0];
                addVipPromoCodeAddButtton.setText("Update");

        }

    }

});