/*
 * File: app/view/vendors/MainContentPanel.js
 *
 * This file was generated by Sencha Architect version 3.0.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.3.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.3.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('RMdatalink.view.vendors.MainContentPanel', {
    extend: 'Ext.Panel',
    alias: 'widget.vendorsMaincontentpanel',

    requires: [
        'RMdatalink.view.CardHeaderPanel',
        'RMdatalink.view.vendors.ListContainer',
        'Ext.Panel',
        'Ext.tab.Panel',
        'Ext.tab.Bar'
    ],

    config: {
        itemId: 'vendorsMainContentPanel',
        layout: 'vbox',
        scrollable: false,
        items: [
            {
                xtype: 'CardHeaderPanel',
                itemId: 'vendorCardHeader',
                flex: 1
            },
            {
                xtype: 'panel',
                flex: 15,
                layout: 'vbox',
                scrollable: false,
                items: [
                    {
                        xtype: 'tabpanel',
                        flex: 1,
                        cls: 'x-rm-tabpanel',
                        itemId: 'vendorsTabPanel',
                        ui: 'light',
                        tabBar: {
                            docked: 'top',
                            itemId: 'mytabbar'
                        },
                        items: [
                            {
                                xtype: 'container',
                                title: 'ALL',
                                itemId: 'allVendorTab',
                                layout: 'fit',
                                scrollable: false,
                                listeners: [
                                    {
                                        fn: function(component, eOpts) {
                                            var headers = component.down("#vendorListHeader");

                                            headers.setData([{}]);
                                            headers.setItemTpl(
                                            Ext.create('Ext.XTemplate',
                                            '<div class="x-rm-listtpl-main" style="width: 99.5%;border-bottom: 1px solid #9b9b9b; background-color: gainsboro;font-weight: bold;color: #555;">',
                                            '    <div style="width: 4%;"> Logo&nbsp;',
                                            '        <div style="width: 25px;" data-name="all"></div>',
                                            '    </div>',
                                            '    <div style="width: 14%;" class= "boldText" data-name="vendor_name">',
                                            '        Name&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',

                                            '    <div style="width: 8%;text-align:center;" class= "boldText"  data-name="SKU">',
                                            '    SKUs&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',


                                            '    <div style="width: 8%;text-align:center;" class= "boldText"  data-name="collections">',
                                            '        Collections&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style="width: 8%;text-align:center;" class= "boldText"  data-name="design">',
                                            '        Designs&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',



                                            '    <div style="width: 8%;text-align: center;" class= "boldText"  data-name="no_of_images">',
                                            '      Images&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',

                                            '    <div style="width: 8%;text-align: center;"  class= "boldText" data-name="no_of_additional_images">',
                                            '     Addl. images&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',

                                            '    <div style="width: 8%;text-align:center;" class= "boldText"  data-name="vendor_monthly_subscription">',
                                            '    Price/Month&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',

                                            '    <div style="width: 12%;text-align:center;" class= "boldText"  data-name="manager_firstname">',
                                            '         Act Manager name&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style="width: 10%;text-align:center;" class= "boldText"  data-name="manager_phone">',
                                            '         Phone&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style="width: 10%;text-align:center;" class= "boldText"  data-name="manager_email">',
                                            '         Email&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',

                                            '</div>'
                                            )
                                            );
                                            headers.refresh();
                                            var list = component.down('#vendorList');

                                            list.setItemTpl(
                                            Ext.create('Ext.XTemplate',
                                            '<div class="x-rm-listtpl-main pointerCursor" >',
                                            '    <div style="width: 4%;overflow:visible;">',
                                            '        <div style="width: 25px; height:25px; background-image:url({vendor_logo})"></div>',
                                            '    </div>',
                                            '    <div style="width: 14%;" class= "boldText" {[RMdatalink.util.globalConfig.getListAttrForDelHandling()]} = "{[RMdatalink.util.globalConfig.getStore_nameDelegateClassForTap()]}"  >{vendor_name}</div>',
                                            '    <div style="width: 8%;text-align:center;"  class= "boldText" {[RMdatalink.util.globalConfig.getListAttrForDelHandling()]} = "{[RMdatalink.util.globalConfig.getStore_nameDelegateClassForTap()]}"  >{[formatNormalNum(values.SKU)]}</div>',

                                            '    <div style="width: 8%;text-align:center;" class= "boldText"  {[RMdatalink.util.globalConfig.getListAttrForDelHandling()]} = "{[RMdatalink.util.globalConfig.getStore_nameDelegateClassForTap()]}"  >{[formatNormalNum(values.collections)]}</div>',
                                            '    <div style="width: 8%;text-align:center;" class= "boldText"  {[RMdatalink.util.globalConfig.getListAttrForDelHandling()]} = "{[RMdatalink.util.globalConfig.getStore_nameDelegateClassForTap()]}" >{[formatNormalNum(values.design)]}</div>',

                                            '    <div style="width: 8%;text-align:center;" class= "boldText"  {[RMdatalink.util.globalConfig.getListAttrForDelHandling()]} = "{[RMdatalink.util.globalConfig.getStore_nameDelegateClassForTap()]}"  >{[formatNormalNum(values.no_of_images)]}</div>',
                                            '    <div style="width: 8%;text-align:center;"  {[RMdatalink.util.globalConfig.getListAttrForDelHandling()]} = "{[RMdatalink.util.globalConfig.getStore_nameDelegateClassForTap()]}"  >{[formatNormalNum(values.no_of_additional_images)]}</div>',


                                            '    <div style="width: 8%;text-align:center;"  {[RMdatalink.util.globalConfig.getListAttrForDelHandling()]} = "{[RMdatalink.util.globalConfig.getStore_nameDelegateClassForTap()]}"  >{[formatNum(values.product_price.datalink.standard_price)]}</div>',

                                            '    <div style="width: 12%;text-align:center;"  {[RMdatalink.util.globalConfig.getListAttrForDelHandling()]} = "{[RMdatalink.util.globalConfig.getManager_LastNameDelegateClassForTap()]}" > {[this.getAccMgrName(values)]}</div>',
                                            '    <div style="width: 10%;height: 32px;text-align:center;"  {[RMdatalink.util.globalConfig.getListAttrForDelHandling()]} = "{[RMdatalink.util.globalConfig.getManager_LastNameDelegateClassForTap()]}" >  {[this.getAccMgrPhone(values)]}</div>',
                                            '    <div style="width: 10%;text-align:center;" >  {[this.getAccMgrEmail(values)]}</div>',
                                            '</div>',
                                            {


                                                getAccMgrName: function(value){

                                                    var cmpContacts = value.company_contacts ;
                                                    if(cmpContacts){

                                                        for(var i=0; i < cmpContacts.length ; i++ ){

                                                            if(cmpContacts[i].is_account_mgr){

                                                                return cmpContacts[i].companycontact_firstname +" "+ cmpContacts[i].companycontact_lastname ;
                                                            }
                                                        }

                                                        if(cmpContacts[0]){

                                                            return cmpContacts[0].companycontact_firstname +" "+ cmpContacts[0].companycontact_lastname ;
                                                        }

                                                    }
                                                    return "" ;
                                                },

                                                getAccMgrPhone: function(value){

                                                    var cmpContacts = value.company_contacts ;
                                                    if(cmpContacts){

                                                        for(var i=0; i < cmpContacts.length ; i++ ){

                                                            if(cmpContacts[i].is_account_mgr){

                                                                return cmpContacts[i].companycontact_phone +" Ext:"+ cmpContacts[i].companycontact_phone_ext + "<br>" + cmpContacts[i].companycontact_cellphone;
                                                            }
                                                        }

                                                        if(cmpContacts[0]){

                                                            return cmpContacts[0].companycontact_phone +" Ext:"+ cmpContacts[0].companycontact_phone_ext + "<br>" + cmpContacts[0].companycontact_cellphone;
                                                        }

                                                    }
                                                    return "" ;
                                                },
                                                getAccMgrEmail: function(value){

                                                    var cmpContacts = value.company_contacts ;
                                                    if(cmpContacts){

                                                        for(var i=0; i < cmpContacts.length ; i++ ){

                                                            if(cmpContacts[i].is_account_mgr){

                                                                return cmpContacts[i].companycontact_email ;
                                                            }
                                                        }

                                                        if(cmpContacts[0]){

                                                            return cmpContacts[0].companycontact_email ;
                                                        }

                                                    }
                                                    return "" ;
                                                }



                                            }
                                            )
                                            );
                                            list.onStoreClear();
                                            // ****  HERE SET STORE  FOR ALL VENDOR LIST *****
                                            list.setStore('vendors.Master');
                                            //list.refresh();

                                            //  ****  FOR TOTAL LIST  ***********

                                            var totalsList = component.down('#vendorTotalsList');
                                            var store = list.getStore();
                                            totalsList.setData([{}]);
                                            totalsList.setItemTpl(
                                            Ext.create('Ext.XTemplate',
                                            '<div class="x-rm-listtpl-main">',
                                            '    <div style="width: 5%;">TOTAL</div>',
                                            '    <div style="width: 11%;">{[this.getTotalFor(\'vendor_name\')]}&nbsp; Vendors</div>',
                                            '    <div style="width: 41%;">{[this.getTotalFor(\'Users\')]}&nbsp; Users</div>',
                                            '    <div style="width: 43%;">{[this.getTotalFor(\'vendor_city\')]}&nbsp; Cities</div>',
                                            '</div>',
                                            {

                                                getAccMgrName: function(value){

                                                    var cmpContacts = value.company_contacts ;
                                                    if(cmpContacts){

                                                        for(var i=0; i < cmpContacts.length ; i++ ){

                                                            if(cmpContacts[i].is_account_mgr){

                                                                return cmpContacts[i].companycontact_firstname +" "+ cmpContacts[i].companycontact_lastname ;
                                                            }
                                                        }

                                                        if(cmpContacts[0]){

                                                            return cmpContacts[0].companycontact_firstname +" "+ cmpContacts[0].companycontact_lastname ;
                                                        }

                                                    }
                                                    return "" ;
                                                },

                                                getAccMgrPhone: function(value){

                                                    var cmpContacts = value.company_contacts ;
                                                    if(cmpContacts){

                                                        for(var i=0; i < cmpContacts.length ; i++ ){

                                                            if(cmpContacts[i].is_account_mgr){

                                                                return cmpContacts[i].companycontact_phone +" Ext:"+ cmpContacts[i].companycontact_phone_ext + "<br>" + cmpContacts[i].companycontact_cellphone;
                                                            }
                                                        }

                                                        if(cmpContacts[0]){

                                                            return cmpContacts[0].companycontact_phone +" Ext:"+ cmpContacts[0].companycontact_phone_ext + "<br>" + cmpContacts[0].companycontact_cellphone;
                                                        }

                                                    }
                                                    return "" ;
                                                },



                                                getTotalFor: function(value){
                                                    var x = [];
                                                    var y;
                                                    store.each(function(record,id){
                                                        if(value=='Users') {
                                                            y = record.get('manager_firstname')+" "+record.get('manager_lastname');
                                                        }
                                                        else
                                                        {
                                                            y = record.get(value);
                                                        }

                                                        Ext.Array.include(x,y);
                                                    });

                                                    return x.length;
                                                }
                                            }
                                            )
                                            );

                                        },
                                        event: 'initialize'
                                    },
                                    {
                                        fn: function(element, eOpts) {
                                            window.location.hash = 'vendorCard'+2;
                                        },
                                        event: 'painted'
                                    }
                                ],
                                items: [
                                    {
                                        xtype: 'vendorslistcontainer',
                                        itemId: 'allVendorListContainer'
                                    }
                                ]
                            },
                            {
                                xtype: 'container',
                                title: 'UPDATED',
                                itemId: 'vendorUpdatedTab',
                                layout: 'fit',
                                scrollable: false,
                                listeners: [
                                    {
                                        fn: function(component, eOpts) {
                                            var headers = component.down("#vendorListHeader");

                                            headers.setData([{}]);
                                            headers.setItemTpl(
                                            Ext.create('Ext.XTemplate',
                                            '<div class="x-rm-listtpl-main" style="width: 99.5%;border-bottom: 1px solid #9b9b9b; background-color: gainsboro;font-weight: bold;color: #555;">',
                                            '    <div style="width: 8%;"> Logo&nbsp;',
                                            '        <div style="width: 25px;" data-name="all"></div>',
                                            '    </div>',
                                            '    <div style="width: 10%;" data-name="vendor_name">',
                                            '        Name&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style="width: 10%;text-align: center;" data-name="collections">',
                                            '        Collections&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style="width: 10%;text-align: center;" data-name="design">',
                                            '        Designs&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style="width: 7%;text-align: center;" data-name="SKU">',
                                            '   SKUs&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',

                                            '    <div style="width: 10%;text-align: center;" data-name="no_of_images">',
                                            '      Images&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',

                                            '    <div style="width: 10%;text-align: center;" data-name="no_of_additional_images">',
                                            '     Addl. images&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',


                                            '    <div style="width: 14%;" data-name="last_data_update">',
                                            '        Data Update&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style="width: 14%;" data-name="last_inventory_update">',
                                            '        Inventory Update&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',



                                            '</div>'
                                            )
                                            );
                                            headers.refresh();
                                            var list = component.down('#vendorList');


                                            list.setItemTpl(
                                            Ext.create('Ext.XTemplate',
                                            '<div class="x-rm-listtpl-main pointerCursor">',
                                            '    <div style="width: 8%;overflow:visible;">',
                                            '        <div style="width: 25px; height:25px; background-image:url({vendor_logo})"></div>',
                                            '    </div>',
                                            '    <div style="width: 10%;" class = "boldText" {[RMdatalink.util.globalConfig.getListAttrForDelHandling()]} = "{[RMdatalink.util.globalConfig.getStore_nameDelegateClassForTap()]}"  >{vendor_name}</div>',
                                            '    <div style="width: 10%;text-align: center;" {[RMdatalink.util.globalConfig.getListAttrForDelHandling()]} = "{[RMdatalink.util.globalConfig.getStore_nameDelegateClassForTap()]}"  >{[formatNormalNum(values.collections)]} </div>',
                                            '    <div style="width: 10%;text-align: center;" {[RMdatalink.util.globalConfig.getListAttrForDelHandling()]} = "{[RMdatalink.util.globalConfig.getStore_nameDelegateClassForTap()]}" >{[formatNormalNum(values.design)]}</div>',
                                            '    <div style="width: 7%;text-align: center;" {[RMdatalink.util.globalConfig.getListAttrForDelHandling()]} = "{[RMdatalink.util.globalConfig.getStore_nameDelegateClassForTap()]}"  >{[formatNormalNum(values.SKU)]}</div>',

                                            ' <div style="width:10%"> <input type="text" style="text-align: center;width: 90% !important;" class="x-rm-rdinlinecmt rtRmpProSetup" data-id="{_id}" value="{[formatNormalNum(values.no_of_images)]}" maxlength="24"',
                                            '        onchange="RMdatalink.app.getController(\'VendorStatsController\').updateVendorFlds(this,\'no_of_images\');"/></div>',

                                            ' <div style="width:10%"> <input type="text" style="text-align: center;width: 90% !important;" class="x-rm-rdinlinecmt rtRmpProSetup" data-id="{_id}" value="{[formatNormalNum(values.no_of_additional_images)]}" maxlength="24"',
                                            '        onchange="RMdatalink.app.getController(\'VendorStatsController\').updateVendorFlds(this,\'no_of_additional_images\');"/></div>',



                                            '    <div style="width: 14%;" {[RMdatalink.util.globalConfig.getListAttrForDelHandling()]} = "last_data_update"  >{[this.getDataupdatedDate(values)]}</div>',
                                            '    <div style="width: 14%;" {[RMdatalink.util.globalConfig.getListAttrForDelHandling()]} = "last_inventory_update"  >{[this.getInventoryupdatedDate(values)]}</div>',




                                            '</div>',
                                            {
                                                getDataupdatedDate: function(value){
                                                    if(value.last_data_update){
                                                        return value.last_data_update;
                                                    }else{

                                                        return "Click here to set.";
                                                    }
                                                },

                                                getInventoryupdatedDate: function(value){
                                                    if(value.last_inventory_update){
                                                        return value.last_inventory_update;
                                                    }else{

                                                        return "Click here to set.";
                                                    }
                                                }
                                            }
                                            )
                                            );
                                            list.onStoreClear();
                                            // ****  HERE SET STORE  FOR ALL VENDOR LIST *****
                                            list.setMode('SINGLE');
                                            list.setStore('vendors.Master');
                                            list.setItemHeight(22);
                                            //list.refresh();

                                            //  ****  FOR TOTAL LIST  ***********

                                            var totalsList = component.down('#vendorTotalsList');
                                            var store = list.getStore();
                                            totalsList.setData([{}]);
                                            totalsList.setItemTpl(
                                            Ext.create('Ext.XTemplate',
                                            '<div class="x-rm-listtpl-main">',
                                            '    <div style="width: 5%;">TOTAL</div>',
                                            '    <div style="width: 11%;">{[this.getTotalFor(\'vendor_name\')]}&nbsp; Vendors</div>',
                                            '    <div style="width: 41%;">{[this.getTotalFor(\'Users\')]}&nbsp; Users</div>',
                                            '    <div style="width: 43%;">{[this.getTotalFor(\'vendor_city\')]}&nbsp; Cities</div>',
                                            '</div>',
                                            {
                                                getTotalFor: function(value){
                                                    var x = [];
                                                    var y;
                                                    store.each(function(record,id){
                                                        if(value=='Users') {
                                                            y = record.get('manager_firstname')+" "+record.get('manager_lastname');
                                                        }
                                                        else
                                                        {
                                                            y = record.get(value);
                                                        }

                                                        Ext.Array.include(x,y);
                                                    });

                                                    return x.length;
                                                }
                                            }
                                            )
                                            );

                                        },
                                        event: 'initialize'
                                    },
                                    {
                                        fn: function(element, eOpts) {
                                            window.location.hash = 'vendorCard'+0;
                                        },
                                        event: 'painted'
                                    }
                                ],
                                items: [
                                    {
                                        xtype: 'vendorslistcontainer',
                                        itemId: 'usersVendorListContainer'
                                    }
                                ]
                            },
                            {
                                xtype: 'container',
                                title: 'USERS',
                                hidden: true,
                                itemId: 'usersVendorTab',
                                layout: 'fit',
                                scrollable: false,
                                listeners: [
                                    {
                                        fn: function(component, eOpts) {
                                            var headers = component.down("#vendorListHeader");

                                            headers.setData([{}]);
                                            headers.setItemTpl(
                                            Ext.create('Ext.XTemplate',
                                            '<div class="x-rm-listtpl-main" style="width: 98.5%;">',
                                            '    <div style="width: 4%;">',
                                            '        <div style="width: 25px;" data-name="all"></div>',
                                            '    </div>',
                                            '    <div style="width: 12%;" data-name="vendor_name">',
                                            '        Vendor&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style="width: 10%;" data-name="manager_lastname">',
                                            '        LastName&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style="width: 10%;" data-name="manager_firstname">',
                                            '        FirstName&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style="width: 12%;" data-name="manager_phone">',
                                            '    Phone&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style="width: 10%;" data-name="vendor_state">',
                                            '    State&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style="width: 10%;" data-name="vendor_city">',
                                            '        City&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '</div>'
                                            )
                                            );
                                            headers.refresh();
                                            var list = component.down('#vendorList');

                                            list.setItemTpl(
                                            Ext.create('Ext.XTemplate',
                                            '<div class="x-rm-listtpl-main">',
                                            '    <div style="width: 4%;overflow:visible;" class="pointerCursor">',
                                            '        <div style="width: 25px; height:25px; background-image:url({manager_photo_url})"></div>',
                                            '    </div>',
                                            '    <div style="width: 12%;" class="pointerCursor" {[RMdatalink.util.globalConfig.getListAttrForDelHandling()]} = "{[RMdatalink.util.globalConfig.getStore_nameDelegateClassForTap()]}" >{vendor_name}</div>',
                                            '    <div style="width: 10%;" class="pointerCursor" {[RMdatalink.util.globalConfig.getListAttrForDelHandling()]} = "{[RMdatalink.util.globalConfig.getManager_LastNameDelegateClassForTap()]}" >{manager_lastname}</div>',
                                            '    <div style="width: 10%;" class="pointerCursor" {[RMdatalink.util.globalConfig.getListAttrForDelHandling()]} = "{[RMdatalink.util.globalConfig.getManager_LastNameDelegateClassForTap()]}" >{manager_firstname}</div>',
                                            '    <div style="width: 12%;" >{manager_phone}</div>',
                                            '    <div style="width: 10%;">{vendor_state}</div>',
                                            '    <div style="width: 10%;">{vendor_city}</div>',
                                            '</div>'
                                            )
                                            );
                                            list.onStoreClear();
                                            //list.refresh();

                                            //  ****  FOR TOTAL LIST  ***********

                                            var totalsList = component.down('#vendorTotalsList');
                                            var store = list.getStore();
                                            totalsList.setData([{}]);
                                            totalsList.setItemTpl(
                                            Ext.create('Ext.XTemplate',
                                            '<div class="x-rm-listtpl-main">',
                                            '    <div style="width: 5%;">TOTAL</div>',
                                            '    <div style="width: 11%;">{[this.getTotalFor(\'vendor_name\')]}&nbsp; Vendors</div>',
                                            '    <div style="width: 41%;">{[this.getTotalFor(\'Users\')]}&nbsp; Users</div>',
                                            '    <div style="width: 43%;">{[this.getTotalFor(\'vendor_city\')]}&nbsp; Cities</div>',
                                            '</div>',
                                            {
                                                getTotalFor: function(value){
                                                    var x = [];
                                                    var y;
                                                    store.each(function(record,id){
                                                        if(value=='Users') {
                                                            y = record.get('manager_firstname')+" "+record.get('manager_lastname');
                                                        }
                                                        else
                                                        {
                                                            y = record.get(value);
                                                        }

                                                        Ext.Array.include(x,y);
                                                    });

                                                    return x.length;
                                                }
                                            }
                                            )
                                            );

                                        },
                                        event: 'initialize'
                                    },
                                    {
                                        fn: function(element, eOpts) {
                                            window.location.hash = 'vendorCard'+0;
                                        },
                                        event: 'painted'
                                    }
                                ],
                                items: [
                                    {
                                        xtype: 'vendorslistcontainer',
                                        itemId: 'usersVendorListContainer'
                                    }
                                ]
                            },
                            {
                                xtype: 'container',
                                title: 'INACTIVE',
                                hidden: true,
                                itemId: 'inactiveVendorTab',
                                layout: 'fit',
                                scrollable: false,
                                listeners: [
                                    {
                                        fn: function(component, eOpts) {
                                            var headers = component.down("#vendorListHeader");

                                            headers.setData([{}]);
                                            headers.setItemTpl(
                                            Ext.create('Ext.XTemplate',
                                            '<div class="x-rm-listtpl-main" style="width: 98.5%;">',
                                            '    <div style="width: 4%;">',
                                            '        <div style="width: 25px;" data-name="all"></div>',
                                            '    </div>',
                                            '    <div style="width: 12%;" data-name="vendor_name">',
                                            '        Vendor&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style="width: 10%;" data-name="manager_lastname">',
                                            '        LastName&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style="width: 10%;" data-name="manager_firstname">',
                                            '        FirstName&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style="width: 12%;" data-name="manager_phone">',
                                            '    Phone&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style="width: 10%;" data-name="vendor_state">',
                                            '    State&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style="width: 10%;" data-name="vendor_city">',
                                            '        City&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '</div>'
                                            )
                                            );
                                            headers.refresh();
                                            var list = component.down('#vendorList');

                                            list.setItemTpl(
                                            Ext.create('Ext.XTemplate',
                                            '<div class="x-rm-listtpl-main">',
                                            '    <div style="width: 4%;overflow:visible;" class="pointerCursor">',
                                            '        <div style="width: 25px; height:25px; background-image:url({manager_photo_url})"></div>',
                                            '    </div>',
                                            '    <div style="width: 12%;" class="pointerCursor" {[RMdatalink.util.globalConfig.getListAttrForDelHandling()]} = "{[RMdatalink.util.globalConfig.getStore_nameDelegateClassForTap()]}" >{vendor_name}</div>',
                                            '    <div style="width: 10%;" class="pointerCursor" {[RMdatalink.util.globalConfig.getListAttrForDelHandling()]} = "{[RMdatalink.util.globalConfig.getManager_LastNameDelegateClassForTap()]}" >{manager_lastname}</div>',
                                            '    <div style="width: 10%;" class="pointerCursor" {[RMdatalink.util.globalConfig.getListAttrForDelHandling()]} = "{[RMdatalink.util.globalConfig.getManager_LastNameDelegateClassForTap()]}" >{manager_firstname}</div>',
                                            '    <div style="width: 12%;" >{manager_phone}</div>',
                                            '    <div style="width: 10%;">{vendor_state}</div>',
                                            '    <div style="width: 10%;">{vendor_city}</div>',
                                            '</div>'
                                            )
                                            );


                                            list.onStoreClear();
                                            //list.refresh();

                                            //  ****  FOR TOTAL LIST  ***********

                                            var totalsList = component.down('#vendorTotalsList');
                                            var store = list.getStore();
                                            totalsList.setData([{}]);
                                            totalsList.setItemTpl(
                                            Ext.create('Ext.XTemplate',
                                            '<div class="x-rm-listtpl-main">',
                                            '    <div style="width: 5%;">TOTAL</div>',
                                            '    <div style="width: 11%;">{[this.getTotalFor(\'vendor_name\')]}&nbsp; Vendors</div>',
                                            '    <div style="width: 41%;">{[this.getTotalFor(\'Users\')]}&nbsp; Users</div>',
                                            '    <div style="width: 43%;">{[this.getTotalFor(\'vendor_city\')]}&nbsp; Cities</div>',
                                            '</div>',
                                            {
                                                getTotalFor: function(value){
                                                    var x = [];
                                                    var y;
                                                    store.each(function(record,id){
                                                        if(value=='Users') {
                                                            y = record.get('manager_firstname')+" "+record.get('manager_lastname');
                                                        }
                                                        else
                                                        {
                                                            y = record.get(value);
                                                        }

                                                        Ext.Array.include(x,y);
                                                    });

                                                    return x.length;
                                                }
                                            }
                                            )
                                            );

                                        },
                                        event: 'initialize'
                                    },
                                    {
                                        fn: function(element, eOpts) {
                                            window.location.hash = 'vendorCard'+1;
                                        },
                                        event: 'painted'
                                    }
                                ],
                                items: [
                                    {
                                        xtype: 'vendorslistcontainer',
                                        itemId: 'inactiveVendorListContainer'
                                    }
                                ]
                            }
                        ]
                    }
                ]
            }
        ],
        listeners: [
            {
                fn: 'onVendorsTabPanelActiveItemChange',
                event: 'activeitemchange',
                delegate: '#vendorsTabPanel'
            },
            {
                fn: 'onPanelInitialize1',
                event: 'initialize'
            }
        ]
    },

    onVendorsTabPanelActiveItemChange: function(container, value, oldValue, eOpts) {
        return ;

        var list = null;
        var vendorsMaster =  Ext.getStore("vendors.Master");
        listData = [];

        vendorsMaster.clearFilter();

        switch(value._itemId) {
            case 'usersVendorTab':

                list = Ext.ComponentQuery.query("#usersVendorListContainer")[0].down('#vendorList');

                //  ***********   FILTER RECORD BY Active STATUS  **********
                vendorsMaster.filterBy(function(record){
                    if(record.data.vendor_status === 'Active')
                    {
                        listData.push(record.data);
                        return record;
                    }

                });
                break;


            case 'inactiveVendorTab':

                list = (Ext.ComponentQuery.query("#inactiveVendorListContainer")[0].down('#vendorList'));
                //  ***********   FILTER RECORD BY Inactive STATUS  **********
                vendorsMaster.filterBy(function(record){
                    if(record.data.vendor_status === 'Inactive')
                    {
                        listData.push(record.data);
                        return record;
                    }

                });
                break;


            case 'allVendorTab':

                list = (Ext.ComponentQuery.query("#allVendorListContainer")[0].down('#vendorList'));


                vendorsMaster.filterBy(function(record){
                    listData.push(record.data);
                });
                break;
        }

        // *********  CLEAR  LIST  FILTER  ***********

        if(list.getStore())
        {
            list.getStore().clearFilter();
        }


        RMdatalink.util.globalMethods.fillListDataByListObject(list,listData);
        list.refresh();

    },

    onPanelInitialize1: function(component, eOpts) {
        component.down('#cardAddRetailerBtn').element.on("tap",function(){




               Ext.Viewport.setMasked({
                            xtype: 'loadmask'
                        });

             Ext.Function.defer( showRtDtl, 100, this);



            function showRtDtl(){
                   RMdatalink.util.globalConfig.setDataToShowInSettingWindow({}) ;

                component.fireEvent('addretailertapped', component);

            }

        });


        component.down('#cardExportBtn').element.on("tap",function(){

                    var store = Ext.getStore('vendors.Master');

                     var data = RMdatalink.app.getController('inhouse.DetailScreenController').getArrayDataFromStore(store) ;


                    RMdatalink.app.getController('inhouse.DetailScreenController').exportToCSV(data);

        });


        component.down('#cardTitleLabel').element.on("tap",function(){

           //RMdatalink.app.getController('UINav').onBackTextTap();
        });


        component.down('#cardDeleteBtn').element.on("tap",function(){

          // RMdatalink.app.getController('Main').onDeleteButtonTap(component);

             RMdatalink.app.getController('DeleteRecords').deleteVendors();
        });
    }

});