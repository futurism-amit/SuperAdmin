/*
 * File: app/view/retailer/PaymentHistoryPanel.js
 *
 * This file was generated by Sencha Architect version 3.0.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.3.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.3.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('RMdatalink.view.retailer.PaymentHistoryPanel', {
    extend: 'Ext.Panel',
    alias: 'widget.retailerpaymenthistorypanel',

    requires: [
        'RMdatalink.view.listWithHeader',
        'Ext.Panel',
        'Ext.tab.Panel',
        'Ext.tab.Bar'
    ],

    config: {
        layout: 'vbox',
        scrollable: false,
        items: [
            {
                xtype: 'panel',
                flex: 15,
                hidden: false,
                layout: 'vbox',
                scrollable: false,
                items: [
                    {
                        xtype: 'tabpanel',
                        flex: 1,
                        cls: [
                            'x-rm-tabpanel',
                            'x-rm-tabpanelBilling'
                        ],
                        ui: 'light',
                        tabBar: {
                            docked: 'top',
                            itemId: 'mytabbar'
                        },
                        items: [
                            {
                                xtype: 'container',
                                actionInit: 'containerInit',
                                title: '<div style="line-height: 25px;">Payment History</div>',
                                itemId: 'paymentHistoryTab',
                                layout: 'fit',
                                scrollable: false,
                                items: [
                                    {
                                        xtype: 'listwithheader'
                                    }
                                ],
                                listeners: [
                                    {
                                        fn: function(component, eOpts) {
                                            var headers = component.down("#headerList");

                                            headers.setStore(Ext.getStore('billing.ListHeaderStore'));
                                            headers.setData([{}]);
                                            headers.setItemTpl(
                                            Ext.create('Ext.XTemplate',
                                            '<div class="x-rm-listtpl-main">',
                                            '    <div style="width: 15%;" data-name="store_account">',
                                            '        Date&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style="width: 15%;" data-name="store_name">',
                                            '        Product&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style="width: 20%;" data-name="month0">',
                                            '        Invoice #&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style="width: 20%;" data-name="month0">',
                                            '        Payment method&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style="width: 15%;" data-name="store_name">',
                                            '        Receipt&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '    <div style="width: 15%;" data-name="store_name">',
                                            '        Amount&nbsp;<img src="resources/images/button_icons/downArrow.png"/>',
                                            '    </div>',
                                            '</div>'
                                            )
                                            );

                                            headers.refresh();

                                            var list = component.down('#mainList');
                                            list.setStore(Ext.getStore('InvoiceHistoryStore'));
                                            list.setItemTpl(
                                            Ext.create('Ext.XTemplate',
                                            '<div class="x-rm-listtpl-main">',
                                            '    <div style="width: 15%;">{pay_date}</div>',
                                            '    <div style="width: 15%;">{[this.getProductType(values)]}</div>',
                                            '    <div style="width: 20%;">{invoice_number}</div>',
                                            '    <div style="width: 20%;">{payment_method_detail}</div>',
                                            '    <div style="width: 15%;"></div>',
                                            '    <div style="width: 15%;">{total_payble} $</div>',
                                            '</div>',
                                            {
                                                getProductType:function(record){

                                                    if(record.invoice_product == "product_datalink"){

                                                        return "Datalink" ;
                                                    }else if(record.invoice_product == "product_rmpro"){
                                                        return "RM-PRO" ;
                                                    }

                                                    return "";

                                                }

                                            }
                                            )
                                            );

                                            list.setMode("SINGLE");

                                            list.setAllowDeselect(false);

                                            list.on("select",function(invoiceList, record, eOpts){

                                            });

                                            list.setItemHeight(22);

                                        },
                                        event: 'initialize'
                                    }
                                ]
                            }
                        ]
                    }
                ]
            }
        ]
    }

});