/*
 * File: app/controller/RetailerPaymentController.js
 *
 * This file was generated by Sencha Architect version 3.0.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.3.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.3.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('RMdatalink.controller.RetailerPaymentController', {
    extend: 'Ext.app.Controller',

    config: {
        control: {
            "button[itemId=retailerMainAccSettingsBtn]": {
                tap: 'onretailerMainAccSettingsBtnTap'
            },
            "button[itemId=rtlUserIptnsLogoutBtn]": {
                tap: 'onrtlUserIptnsLogoutBtnTap'
            },
            "button[itemId=rtGenSetSaveAddrBtn]": {
                tap: 'onrtGenSetSaveAddrBtnTap'
            },
            "button[itemId=rtGenSetUpdatePwdBtn]": {
                tap: 'onrtGenSetUpdatePwdBtnTap'
            }
        }
    },

    onretailerMainAccSettingsBtnTap: function(button, e, eOpts) {
                        if(Ext.getCmp("RetailerLoginUserOptions"))
                        {
                             var popup =  Ext.getCmp("RetailerLoginUserOptions") ;
                        }
                        else{

                             var popup =   Ext.widget('RetailerLoginUserOptions');
                        }



                        popup.showBy(button);





    },

    onrtlUserIptnsLogoutBtnTap: function(button, e, eOpts) {

        Ext.getCmp("RetailerLoginUserOptions").hide() ;
        Ext.Viewport.setActiveItem("LoginScreen");
        Ext.ComponentQuery.query('#loginActionButton')[0].setDisabled(false);

        Ext.ComponentQuery.query('#retailerMain')[0].destroy();
    },

    onrtGenSetSaveAddrBtnTap: function(button, e, eOpts) {
        this.updateRtAddressFlds() ;
    },

    onrtGenSetUpdatePwdBtnTap: function(button, e, eOpts) {
        this.updateRtPassword();
    },

    initialiseRetailer: function() {


        this.initialiseAppForRtUser();

        var LoginHandler = RMdatalink.app.getController('LoginHandler');

        var ownerName = "";
        if( LoginHandler.config.logedInUserRecord.store_owner_firstname  &&  LoginHandler.config.logedInUserRecord.store_owner_firstname != "undefined")
        {
            ownerName = LoginHandler.config.logedInUserRecord.store_owner_firstname  ;
        }


        Ext.ComponentQuery.query('#rtMngPaymentAddrFullNameLbl')[0].setHtml(ownerName );


         Ext.ComponentQuery.query('#retailerUserStoreNameLbl')[0].setHtml( LoginHandler.config.logedInUserRecord.store_name);
         Ext.ComponentQuery.query('#retailerUserStoreOwnerLbl')[0].setHtml(ownerName );
         Ext.ComponentQuery.query('#retailerMainAccSettingsBtn')[0].setText(LoginHandler.config.logedInUserRecord.store_email );

        this.setGenSettingFlds() ;



        if(LoginHandler.config.logedInUserRecord.store_products.datalink_status && LoginHandler.config.logedInUserRecord.store_products.datalink_status == "ACTIVE"){

         Ext.ComponentQuery.query('#rtUserProductDatalinkBtn')[0].setHidden(false);

         this.initProductDatalink();

        }else{

            Ext.ComponentQuery.query('#rtUserProductDatalinkBtn')[0].setHidden(true);
        }


        if(LoginHandler.config.logedInUserRecord.store_products.rmpro_status && LoginHandler.config.logedInUserRecord.store_products.rmpro_status == "ACTIVE"){
            Ext.ComponentQuery.query('#rtUserProductRMPROBtn')[0].setHidden(false);

            this.initProductRMPRO() ;
        }
        else{

             Ext.ComponentQuery.query('#rtUserProductRMPROBtn')[0].setHidden(true);
        }

        RMdatalink.app.getController('InvoiceHistoryController').searchInvoicesForRt("",1,50,LoginHandler.config.logedInUserRecord._id);
    },

    setGenSettingFlds: function() {
        var LoginHandler = RMdatalink.app.getController('LoginHandler');


        var rtl = LoginHandler.config.logedInUserRecord ;


        var storePhone =  rtl.store_phone ;
        var storeAddress = rtl.store_address_line1 ;
        var storeSuite = rtl.store_address_suite ;
        var storeCity = rtl.store_city ;
        var storeState = rtl.store_state ;
        var strZip = rtl.store_zip ;


        if(rtl.locations && rtl.locations.length > 0){

            if(rtl.locations[0].phone != "")
                storePhone =   rtl.locations[0].phone ;

            if(rtl.locations[0].address != "")
             storeAddress = rtl.locations[0].address ;

            if(rtl.locations[0].suit != "")
             storeSuite = rtl.locations[0].suit ;

            if(rtl.locations[0].city != "")
             storeCity = rtl.locations[0].city ;

            if(rtl.locations[0].state != "")
             storeState = rtl.locations[0].state  ;

            if(rtl.locations[0].zip != "")
             strZip = rtl.locations[0].zip ;
        }

          Ext.ComponentQuery.query('#rtGenSetStoreNameFld')[0].setValue( rtl.store_name);

          Ext.ComponentQuery.query('#rtGenSetPhoneFld')[0].setValue(storePhone);

          Ext.ComponentQuery.query('#rtGenSetAddressFld')[0].setValue(storeAddress);

          Ext.ComponentQuery.query('#rtGenSetSuiteFld')[0].setValue(storeSuite);

          Ext.ComponentQuery.query('#rtGenSetCityFld')[0].setValue(storeCity);

          Ext.ComponentQuery.query('#rtGenSetStateFld')[0].setValue(storeState);

          Ext.ComponentQuery.query('#rtGenSetZipFld')[0].setValue(strZip);




          Ext.ComponentQuery.query('#rtMngPaymentAddrLbl')[0].setHtml(storeAddress);
         Ext.ComponentQuery.query('#rtMngPaymentAddrCityLbl')[0].setHtml(storeCity);
         Ext.ComponentQuery.query('#rtMngPaymentAddrStateLbl')[0].setHtml(storeState);
         Ext.ComponentQuery.query('#rtMngPaymentAddrZipLbl')[0].setHtml(strZip);
    },

    updateRtAddressFlds: function() {

        var LoginHandler = RMdatalink.app.getController('LoginHandler');


        var rtl = LoginHandler.config.logedInUserRecord ;


        var dataToUpdate = {

            "store_name":rtl.store_name,
            "locations":rtl.locations ? rtl.locations : []
        };

            dataToUpdate.store_name =   Ext.ComponentQuery.query('#rtGenSetStoreNameFld')[0].getValue();

            if(dataToUpdate.locations.length > 0){

                dataToUpdate.locations[0].phone	=	Ext.ComponentQuery.query('#rtGenSetPhoneFld')[0].getValue() ;
                dataToUpdate.locations[0].address	=	Ext.ComponentQuery.query('#rtGenSetAddressFld')[0].getValue() ;
                dataToUpdate.locations[0].suit	=	Ext.ComponentQuery.query('#rtGenSetSuiteFld')[0].getValue() ;
                dataToUpdate.locations[0].city	=	Ext.ComponentQuery.query('#rtGenSetCityFld')[0].getValue() ;
                dataToUpdate.locations[0].state	=	Ext.ComponentQuery.query('#rtGenSetStateFld')[0].getValue() ;
                dataToUpdate.locations[0].zip		=	Ext.ComponentQuery.query('#rtGenSetZipFld')[0].getValue() ;



            }
            else{


                var location ={

                    phone	:	Ext.ComponentQuery.query('#rtGenSetPhoneFld')[0].getValue(),
                    address	:	Ext.ComponentQuery.query('#rtGenSetAddressFld')[0].getValue(),
                    suit	:	Ext.ComponentQuery.query('#rtGenSetSuiteFld')[0].getValue(),
                    city	:	Ext.ComponentQuery.query('#rtGenSetCityFld')[0].getValue(),
                    state	:	Ext.ComponentQuery.query('#rtGenSetStateFld')[0].getValue(),
                    zip		:	Ext.ComponentQuery.query('#rtGenSetZipFld')[0].getValue()

                };

                dataToUpdate.locations.push(location);

            }



          Ext.ComponentQuery.query('#rtMngPaymentAddrLbl')[0].setHtml(Ext.ComponentQuery.query('#rtGenSetAddressFld')[0].getValue());
         Ext.ComponentQuery.query('#rtMngPaymentAddrCityLbl')[0].setHtml(Ext.ComponentQuery.query('#rtGenSetCityFld')[0].getValue());
         Ext.ComponentQuery.query('#rtMngPaymentAddrStateLbl')[0].setHtml(Ext.ComponentQuery.query('#rtGenSetStateFld')[0].getValue());
         Ext.ComponentQuery.query('#rtMngPaymentAddrZipLbl')[0].setHtml(Ext.ComponentQuery.query('#rtGenSetZipFld')[0].getValue());

        this.updateRetailer(dataToUpdate) ;
    },

    updateRtPassword: function() {

                    var LoginHandler = RMdatalink.app.getController('LoginHandler');


                    var rtl = LoginHandler.config.logedInUserRecord ;




                    var prevPwd = Ext.ComponentQuery.query('#rtGenSetprevPawdFld')[0].getValue() ;
                    var newPwd = Ext.ComponentQuery.query('#rtGenSetNewPawdFld')[0].getValue() ;
                    var confNewPwd = Ext.ComponentQuery.query('#rtGenSetConfNewPawdFld')[0].getValue() ;



        var validationResult = true ;
        var html = "";
        if(prevPwd != rtl.store_password ){

             html = '<div style="color:red;font-size: 0.74em;">The password you gave is incorrect.</div>';
             Ext.ComponentQuery.query('#rtGenSetprevPawdFld')[0].setHtml(html);

            validationResult = false ;

        }else{

             Ext.ComponentQuery.query('#rtGenSetprevPawdFld')[0].setHtml("");
        }

        if(!newPwd || newPwd.length < 6 ){
             html = '<div style="color:red;font-size: 0.74em;">Must have at least 6 characters.</div>';
             Ext.ComponentQuery.query('#rtGenSetNewPawdFld')[0].setHtml(html);

            validationResult = false ;
        }else{

             Ext.ComponentQuery.query('#rtGenSetNewPawdFld')[0].setHtml("");
        }

        if(newPwd != confNewPwd ){

            html = '<div style="color:red;font-size: 0.74em;">The password you gave is incorrect.</div>';
             Ext.ComponentQuery.query('#rtGenSetConfNewPawdFld')[0].setHtml(html);
              validationResult = false ;

        }else{

             Ext.ComponentQuery.query('#rtGenSetConfNewPawdFld')[0].setHtml("");
        }

        if(validationResult)
        {

                var dataToUpdate = {
                    store_password : confNewPwd
                };

               this.updateRetailer(dataToUpdate) ;

               Ext.ComponentQuery.query('#rtGenSetprevPawdFld')[0].setValue("") ;
               Ext.ComponentQuery.query('#rtGenSetNewPawdFld')[0].setValue("") ;
               Ext.ComponentQuery.query('#rtGenSetConfNewPawdFld')[0].setValue("") ;

        }

    },

    updateRetailer: function(dataToUpdate) {

                    var LoginHandler = RMdatalink.app.getController('LoginHandler');


                    var rtl = LoginHandler.config.logedInUserRecord ;

                    var masterStore = Ext.getStore('retailersMaster');

                    Ext.Viewport.setMasked( {
                        xtype: 'loadmask'
                    });

                   RMdatalink.iwa.rdl.doUpdateCollection(masterStore, dataToUpdate , rtl._id, suc, err);


                    function suc(){

                        for(var key in dataToUpdate) {

                            LoginHandler.config.logedInUserRecord[key] = dataToUpdate[key] ;
                        }

                        Ext.Viewport.setMasked(false);

                        Ext.Msg.alert("Success", "Information updated successfully.");

                    }
                    function err(){
                            Ext.Viewport.setMasked(false);
                         Ext.Msg.alert("Failuer", "Failed to update information, please try again.");
                    }


    },

    initProductDatalink: function() {
            var LoginHandler = RMdatalink.app.getController('LoginHandler');

            var rtl = LoginHandler.config.logedInUserRecord ;

            var parentPanel = Ext.ComponentQuery.query('#rtuProductDatalinkTab')[0] ;


            var billingData = rtl.product_billng.product_datalink ;

        if(!billingData){
            return ;
        }

            var html ="";

            html = "Product <br/> RM Datalink<br/> "+billingData.product_modules.length + " Add-ons";

            parentPanel.down('#rtuModuleSummaryLbl').setHtml(html);

            html = "Due Date <br/>"+ billingData.due_date;

             parentPanel.down('#rtuDueDateLbl').setHtml(html);

            parentPanel.down('#rtuPaymentPrdTermSlctFld').setValue(billingData.payment_period);

            html = "Unit price/month<br/>"+ billingData.monthly_membership;

             parentPanel.down('#rtuTotalPricePerMonthLbl').setHtml(html);


            html = '<div style= "margin-left: -106px;"> Your current Datalink billing invoice.<span style="float:right;">#invoice  :' + billingData.invoice_number+ '</span> </div>';

           parentPanel.down('#rtuBillHeaderLbl').setHtml(html) ;
    },

    initProductRMPRO: function() {
            var LoginHandler = RMdatalink.app.getController('LoginHandler');

            var rtl = LoginHandler.config.logedInUserRecord ;

            var parentPanel = Ext.ComponentQuery.query('#rtuProductRMPROTab')[0] ;


            var billingData = rtl.product_billng.product_rmpro ;

        if(!billingData){
            return ;
        }

            var html ="";

            html = "Product <br/> RMPro- Package Name<br/> "+billingData.product_modules.length + " Add-ons";

            parentPanel.down('#rtuModuleSummaryLbl').setHtml(html);

            html = "Due Date <br/>"+ billingData.due_date;

             parentPanel.down('#rtuDueDateLbl').setHtml(html);

            parentPanel.down('#rtuPaymentPrdTermSlctFld').setValue(billingData.payment_period);

            html = "Unit price/month<br/>"+ billingData.monthly_membership;

             parentPanel.down('#rtuTotalPricePerMonthLbl').setHtml(html);


            html = '<div style= "margin-left: -106px;"> Your current RM-PRO billing invoice.<span style="float:right;">#invoice  :' + billingData.invoice_number+ '</span> </div>';

           parentPanel.down('#rtuBillHeaderLbl').setHtml(html) ;




    },

    initialiseAppForRtUser: function() {

                    function loadStore(){
                              if(! RMdatalink.app.getController('PaginationController').config.storesLoadedFirstTime[RMdatalink.app.getController('PaginationController').getCurrentActiveStoreId()]){
                                     RMdatalink.app.getController('PaginationController').loadStore(1,RMdatalink.util.DataLoader.getPageSize(),false);
                          }
                    }


                  RMdatalink.app.getController('PaginationController').setCurrentActiveStoreId('products.DatalinkMain') ;
                   loadStore();





                  RMdatalink.app.getController('PaginationController').setCurrentActiveStoreId('billingMasterStore') ;
                  loadStore();



                RMdatalink.app.getController('RMProController').initRMproStore() ;



    },

    calculateRMPRODiscountAndTotal: function() {
         var LoginHandler = RMdatalink.app.getController('LoginHandler');

            var rtl = LoginHandler.config.logedInUserRecord ;

            var parentPanel = Ext.ComponentQuery.query('#rtuProductRMPROTab')[0] ;


            var billingData = rtl.product_billng.product_rmpro ;

        if(!billingData){
            return ;
        }


          var monthlyUnitPrice = 0 ;

         monthlyUnitPrice = parseInt(billingData.monthly_membership,0) ;

         var paymentPeriod = parentPanel.down('#rtuPaymentPrdTermSlctFld').getValue() ;

         var totalAmmount = monthlyUnitPrice * paymentPeriod ;

         var discount = 0 ;

        var rmProPricing = RMdatalink.app.getController('BillingDetailsController').config.pricingData[3] ;



        for(var i = 0 ; i < rmProPricing.discount_policy.length; i++ ){

            var duration = parseInt(rmProPricing.discount_policy[i].discount_duration,0 ) * 12 ;

            if(paymentPeriod >= duration && discount < parseInt(rmProPricing.discount_policy[i].discount_value,0 ) ){
                discount = parseInt(rmProPricing.discount_policy[i].discount_value,0 ) ;
            }


        }

        // billingData.payment_period_start + " to " +   billingData.payment_period_end + "( " + billingData.payment_period
        //paymentPeriod

        var pStartDate = new Date( billingData.payment_period_start);
        if(pStartDate){

            var pEndDate = pStartDate.setMonth(pStartDate.getMonth() + parseInt(paymentPeriod,0));

             billingData.payment_period_end = RMdatalink.util.globalMethods.getAMDate(pEndDate);
             billingData.payment_period =paymentPeriod ;

        }

        var totalDiscount = (totalAmmount / 100 )*discount ;

        totalDiscount = Math.round(totalDiscount) ;

        var finalPayble = totalAmmount - totalDiscount ;


        parentPanel.down('#rtuDiscountValueLbl').setHtml("$ " + totalDiscount);

        parentPanel.down('#rtuTotalPaybleNoDiscountLbl').setHtml("Account<br/> $ "+totalAmmount);

        parentPanel.down('#rtuTotalPaybleAfterDiscountLbl').setHtml( "$ " + finalPayble);





        var masterStore = Ext.getStore('retailersMaster');
        masterStore.removeAll();
        masterStore.sync();

        masterStore.setData([rtl]);
        masterStore.sync() ;

        var varibleToSet = {
            record:masterStore.getAt(0)
        };

        RMdatalink.util.globalConfig.setDataToShowInSettingWindow(varibleToSet) ;

        /*

        rtUserPaymentFreqFld

        rtUserAdvancePaymentFld
        rtUserDiscountAppliedFld
        rtUserTotalPaybleFld
        rtUserTotalSavingFld

        contract_period

        */

        if(billingData.payment_frequency )
        {
                Ext.ComponentQuery.query('#rtUserPaymentFreqFld')[0].setValue(billingData.payment_frequency + "Months");
        }else{
            Ext.ComponentQuery.query('#rtUserPaymentFreqFld')[0].setValue("");
        }

        if(billingData.advance_payment_period)
        {
            Ext.ComponentQuery.query('#rtUserAdvancePaymentFld')[0].setValue(billingData.advance_payment_period+ "Months");
        }else{

            Ext.ComponentQuery.query('#rtUserAdvancePaymentFld')[0].setValue("");
        }

        Ext.ComponentQuery.query('#rtUserDiscountAppliedFld')[0].setValue(billingData.discount + " %");
        Ext.ComponentQuery.query('#rtUserTotalPaybleFld')[0].setValue( "$ " + finalPayble  );
        // Ext.ComponentQuery.query('#rtUserTotalSavingFld')[0].setValue(billingData  + " $");


        var ProductBillingController = RMdatalink.app.getController('ProductBillingController');
            ProductBillingController.intRMPROBilling() ;
            ProductBillingController.displayRMPROBillig();

        var contractLbl = Ext.ComponentQuery.query('#rtUserContractTermLbl')[0] ;
        if(billingData.contract_period){
            var cTerm = parseInt(billingData.contract_period,0) / 12 ;

            var cEndDate = new Date(billingData.contract_start_date );

            cEndDate = cEndDate.setMonth(cEndDate.getMonth() + parseInt(billingData.contract_period,0)) ;

            cEndDate = RMdatalink.util.globalMethods.getAMDate(cEndDate);

            var cHtml = billingData.payment_period_start + " to " +   billingData.payment_period_end + "  ( " + billingData.payment_period + " Month )";
            contractLbl.setHtml('<div style="margin-left:20px;padding-top:5px !important;">Payment Term : '+cHtml+'</div>');
        }else{
            contractLbl.setHtml("");
        }

    },

    calculateDatalinkDiscountAndTotal: function() {
         var LoginHandler = RMdatalink.app.getController('LoginHandler');

            var rtl = LoginHandler.config.logedInUserRecord ;

            var parentPanel = Ext.ComponentQuery.query('#rtuProductDatalinkTab')[0] ;


            var billingData = rtl.product_billng.product_datalink ;

        if(!billingData){
            return ;
        }


          var monthlyUnitPrice = 0 ;

         monthlyUnitPrice = parseInt(billingData.monthly_membership,0) ;

         var paymentPeriod = parentPanel.down('#rtuPaymentPrdTermSlctFld').getValue() ;

         var totalAmmount = monthlyUnitPrice * paymentPeriod ;

         var discount = 0 ;

        var rmProPricing = RMdatalink.app.getController('BillingDetailsController').config.pricingData[0] ;



        for(var i = 0 ; i < rmProPricing.advance_payment_discounts.length; i++ ){

            var duration = parseInt(rmProPricing.advance_payment_discounts[i].discount_duration,0 ) * 12 ;

            if(paymentPeriod >= duration && discount < parseInt(rmProPricing.advance_payment_discounts[i].discount_value,0 ) ){
                discount = parseInt(rmProPricing.advance_payment_discounts[i].discount_value,0 ) ;
            }



        }


        var totalDiscount = (totalAmmount / 100 )*discount ;

        totalDiscount = Math.round(totalDiscount) ;

        var finalPayble = totalAmmount - totalDiscount ;


        parentPanel.down('#rtuDiscountValueLbl').setHtml(totalDiscount);

        parentPanel.down('#rtuTotalPaybleNoDiscountLbl').setHtml("Account<br/>"+totalAmmount);

        parentPanel.down('#rtuTotalPaybleAfterDiscountLbl').setHtml(finalPayble);


    }

});