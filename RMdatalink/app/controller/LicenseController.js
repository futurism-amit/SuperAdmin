/*
 * File: app/controller/LicenseController.js
 *
 * This file was generated by Sencha Architect version 3.0.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.3.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.3.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('RMdatalink.controller.LicenseController', {
    extend: 'Ext.app.Controller',

    config: {
        isAutoFill: true,

        control: {
            "button[itemId=licEditSubBtn]": {
                tap: 'onlicEditSubBtnButtonTap'
            },
            "button[itemId=licCancelBtn]": {
                tap: 'onlicCancelBtnTap'
            },
            "button[itemId=licSaveBtn]": {
                tap: 'onlicSaveBtnTap'
            },
            "selectfield[itemId=licenseScreenPayPrdFld]": {
                change: 'onlicenseScreenPayPrdFldChange'
            },
            "textfield[itemId=licenseScreenFromFld]": {
                change: 'onlicenseScreenFromFldChange'
            },
            "textfield[itemId=licenseScreenPrdDaysFld]": {
                change: 'onlicenseScreenPrdDaysFldChange'
            }
        }
    },

    onlicEditSubBtnButtonTap: function(button, e, eOpts) {

        this.enableDisableFlds(false);
    },

    onlicCancelBtnTap: function(button, e, eOpts) {
        var lcHsList = Ext.ComponentQuery.query('#licenseHistoryListPanel')[0].down('#mainList');

        var selections = lcHsList.getSelection() ;

        if(selections.length > 0){

            this.onHistoryLicSelect(lcHsList , selections[0],null );
            this.enableDisableFlds(true);
        }




    },

    onlicSaveBtnTap: function(button, e, eOpts) {
        var lcHsList = Ext.ComponentQuery.query('#licenseHistoryListPanel')[0].down('#mainList');

        var selections = lcHsList.getSelection() ;

         this.enableDisableFlds(true);
    },

    onlicenseScreenPayPrdFldChange: function(selectfield, newValue, oldValue, eOpts) {
        var LicenseScreen = Ext.ComponentQuery.query('#LicenseScreen')[0] ;

        if(this.config.isAutoFill){
           if(newValue && newValue != 0)
           {
                LicenseScreen.down('#licenseScreenPrdDaysFld').setHidden(true);
           }
            else if( newValue ){
                LicenseScreen.down('#licenseScreenPrdDaysFld').setHidden(false);
            }
            return ;
        }

        if(newValue == 0){

              LicenseScreen.down('#licenseScreenPrdDaysFld').setHidden(false);
            var from =  LicenseScreen.down('#licenseScreenFromFld').getValue() ;
            var prd =  LicenseScreen.down('#licenseScreenPrdDaysFld').getValue() ;
             if(isNaN(prd)){
                                   return ;
             }
        prd = parseInt(prd) ;
             var tempEndDate = new Date(from) ;


            tempEndDate.setDate(tempEndDate.getDate() + prd ) ;

           var to = (tempEndDate.getMonth() + 1 ) + "/"+ (tempEndDate.getDate())+"/" + tempEndDate.getFullYear() ;



            LicenseScreen.down('#licenseScreenToFld').setValue(to) ;


        }
        else{


              LicenseScreen.down('#licenseScreenPrdDaysFld').setHidden(true);

            var from =  LicenseScreen.down('#licenseScreenFromFld').getValue() ;
            var prd = newValue ;

             var tempEndDate = new Date(from) ;


            tempEndDate.setMonth(tempEndDate.getMonth() + prd) ;

           var to = (tempEndDate.getMonth() + 1 ) + "/"+ (tempEndDate.getDate())+"/" + tempEndDate.getFullYear() ;



            LicenseScreen.down('#licenseScreenToFld').setValue(to) ;
        }
    },

    onlicenseScreenFromFldChange: function(textfield, newValue, oldValue, eOpts) {
            if(this.config.isAutoFill){
                return ;
            }

            var LicenseScreen = Ext.ComponentQuery.query('#LicenseScreen')[0] ;

            var from = newValue ;
            var prd = LicenseScreen.down('#licenseScreenPayPrdFld').getValue() ;


        if(prd == 0){


             prd =  LicenseScreen.down('#licenseScreenPrdDaysFld').getValue() ;
             if(isNaN(prd)){
                                   return ;
             }
            prd = parseInt(prd) ;
             var tempEndDate = new Date(from) ;


            tempEndDate.setDate(tempEndDate.getDate() + prd ) ;

            console.error(from + " end " + tempEndDate  );

           var to = (tempEndDate.getMonth() + 1 ) + "/"+ (tempEndDate.getDate())+"/" + tempEndDate.getFullYear() ;



            LicenseScreen.down('#licenseScreenToFld').setValue(to) ;


        }
        else{

             var tempEndDate = new Date(from) ;


            tempEndDate.setMonth(tempEndDate.getMonth() + prd) ;

           var to = (tempEndDate.getMonth() + 1 ) + "/"+ (tempEndDate.getDate())+"/" + tempEndDate.getFullYear() ;



            LicenseScreen.down('#licenseScreenToFld').setValue(to) ;
        }
    },

    onlicenseScreenPrdDaysFldChange: function(textfield, newValue, oldValue, eOpts) {
            if(this.config.isAutoFill){
                return ;
            }

            var LicenseScreen = Ext.ComponentQuery.query('#LicenseScreen')[0] ;

            var from = LicenseScreen.down('#licenseScreenFromFld').getValue() ;
            var prd = LicenseScreen.down('#licenseScreenPayPrdFld').getValue() ;


        if(prd == 0){


             prd =  newValue ;
             if(isNaN(prd)){
                                   return ;
             }

             prd = parseInt(prd) ;

             var tempEndDate = new Date(from) ;


            tempEndDate.setDate(tempEndDate.getDate() + prd ) ;



           var to = (tempEndDate.getMonth() + 1 ) + "/"+ (tempEndDate.getDate())+"/" + tempEndDate.getFullYear() ;



            LicenseScreen.down('#licenseScreenToFld').setValue(to) ;


        }

    },

    selectModulesOnLicense: function() {
        /*
        var selectedStr = Ext.getStore('printInvoice.subscribedModulesStore') ;
        var rmproModuleStr = Ext.getStore('products.RMProStore') ;
        var licenseModuleList = Ext.ComponentQuery.query('#licenseScreenModuleList')[0].down('#mainList') ;
        var licenseModuleStr  = Ext.getStore('License.ProductsStore') ;

        licenseModuleList.setDisableSelection(false);

        licenseModuleStr.removeAll() ;

        licenseModuleStr.setData(getArrayDataFromStore(rmproModuleStr)) ;

        licenseModuleStr.sync() ;
        var recToSelect = getArrayDataFromStore(selectedStr);

        var licenseHsStr = Ext.getStore('LicenseHistoryStore') ;
        var invoiceHsStr = Ext.getStore('InvoiceHistoryStore') ; ;

        licenseHsStr.removeAll();
        licenseHsStr.setData(getArrayDataFromStore(invoiceHsStr));

        licenseModuleList.deselectAll() ;


        for( var i=0; i < licenseModuleStr.getData().all.length ; i++ ){


            var tRec = licenseModuleStr.getAt(i) ;
            if(tRec){
                tRec.set('quantity',0) ;
                tRec.set('subscription_length',"") ;

            }
        }


        ////////////////////////
        var invoiceController = RMdatalink.app.getController('InvoiceController') ;

        var dataToUpdate = {

            product_billng : invoiceController.config.product_billing_rec  ///n
        };

        var product_rmpro = dataToUpdate.product_billng.product_rmpro ;

        var subscription_length = product_rmpro.payment_period ;

        subscription_length = parseInt(subscription_length) ;

        if(subscription_length >= 12){

            subscription_length = subscription_length /12 ;
            subscription_length = subscription_length + "Year (s)" ;
        }else{

            subscription_length = subscription_length + "Month (s)" ;
        }
        ////////////////////////////////






        for( var i=0; i < recToSelect.length ; i++ ){

            var recIndex = licenseModuleStr.findExact('_id',recToSelect[i]._id);
            var tRec = licenseModuleStr.getAt(recIndex) ;
            if(tRec){
                tRec.set('quantity',recToSelect[i].quantity) ; //subscription_length
                 tRec.set('remark_val',recToSelect[i].remark_val) ;
                  tRec.set('subscription_length',subscription_length) ;

                licenseModuleList.select(tRec,true,true);
            }
        }


        // this.setLicenseFlds() ;

        function getArrayDataFromStore(store){
            var data = new Array();
            data = store.getData().items;

            var dataToReturn = new Array();

            for(var i=0; i < data.length ; i++){

                dataToReturn.push(data[i].data);
            }

            return dataToReturn ;
        }


        licenseModuleList.setDisableSelection(true);
        */
        var licHsLst = Ext.ComponentQuery.query('#licenseHistoryListPanel')[0].down('#mainList');

        var licHsStr = licHsLst.getStore() ;
        var maxLn = licHsStr.getData().all.length -1 ;

        licHsLst.select(maxLn);

    },

    setLicenseFlds: function(licRec) {


        var invoiceController = RMdatalink.app.getController('InvoiceController') ;
        var rmProInvoicePanel = Ext.ComponentQuery.query('#LicenseScreen')[0] ;
        var rtRecord = invoiceController.config.selectedRetailer ;
        var accNo = rtRecord.data.account_no ;
        var dataToUpdate = {

            product_billng : invoiceController.config.product_billing_rec  ///n
        };

        var product_rmpro = dataToUpdate.product_billng.product_rmpro ;


         rmProInvoicePanel.down('#licenseScreenAcctNoFld').setValue(accNo) ;
         rmProInvoicePanel.down('#licenseScreenPayPrdFld').setValue(licRec.data.payment_period) ;

        if(licRec.data.payment_period_start)
        {
          rmProInvoicePanel.down('#licenseScreenFromFld').setValue(licRec.data.payment_period_start) ;
        }else{
            rmProInvoicePanel.down('#licenseScreenFromFld').setValue(licRec.data.due_date) ;
        }
         rmProInvoicePanel.down('#licenseScreenToFld').setValue(licRec.data.payment_period_end) ;

         rmProInvoicePanel.down('#licenseScreenInvoiceNoFld').setValue(licRec.data.invoice_number) ;
         rmProInvoicePanel.down('#licenseScreenPaidAmtFld').setValue(formatNum(licRec.data.ammount_paying)) ;

         rmProInvoicePanel.down('#liscenseScreenStoreTitleFldSet').setTitle(rtRecord.data.store_name) ;

         rmProInvoicePanel.down('#liscenseScreenForm1').setDisabled(true) ;

        var diff = this.getDiffDays(licRec.data.due_date,licRec.data.payment_period_end) ;

         rmProInvoicePanel.down('#licenseScreenPrdDaysFld').setValue("0") ;
        /*
        due_date


        licenseScreenAcctNoFld
        licenseScreenPayPrdFld

        licenseScreenFromFld
        licenseScreenToFld

        licenseScreenInvoiceNoFld
        licenseScreenPaidAmtFld
        licenseScreenNoteFld
        */
    },

    onHistoryLicSelect: function(list, record, eOpts) {


        this.config.isAutoFill = true ;

        console.log(record);

        var LicenseScreen = Ext.ComponentQuery.query('#LicenseScreen')[0] ;


        // var html = "Manually created by " + record.data.created_by + " on " + record.data.created_date_stamp ;

        var html = "Auto created on " + record.data.created_date_stamp ;

        LicenseScreen.down('#licenseTimeStampLbl').setHtml(html) ;
        var rmproModuleStr = Ext.getStore('products.RMProStore') ;
        var licenseModuleList = Ext.ComponentQuery.query('#licenseScreenModuleList')[0].down('#mainList') ;
        var licenseModuleStr  = Ext.getStore('License.ProductsStore') ;

        licenseModuleList.setDisableSelection(false);

        this.setLicenseFlds(record);





        licenseModuleStr.removeAll() ;

        licenseModuleStr.setData(getArrayDataFromStore(rmproModuleStr)) ;

        licenseModuleStr.sync() ;
        var recToSelect = record.data.product_modules;


        licenseModuleList.deselectAll() ;


        for( var i=0; i < licenseModuleStr.getData().all.length ; i++ ){


            var tRec = licenseModuleStr.getAt(i) ;
            if(tRec){
                tRec.set('quantity',0) ;
                tRec.set('subscription_length',"") ;

            }
        }


        var invoiceController = RMdatalink.app.getController('InvoiceController') ;


        var product_rmpro = record.data ;

        var subscription_length = product_rmpro.payment_period ;

        subscription_length = parseInt(subscription_length) ;

        if(subscription_length >= 12){

            subscription_length = subscription_length /12 ;
            subscription_length = subscription_length + "Year (s)" ;
        }else{

            subscription_length = subscription_length + "Month (s)" ;
        }
        ////////////////////////////////






        for( var i=0; i < recToSelect.length ; i++ ){

            var recIndex = licenseModuleStr.findExact('_id',recToSelect[i].module_id);
            var tRec = licenseModuleStr.getAt(recIndex) ;
            if(tRec){
                tRec.set('quantity',recToSelect[i].quantity) ; //subscription_length
                 tRec.set('remark_val',recToSelect[i].remark_val) ;
                  tRec.set('subscription_length',subscription_length) ;

                licenseModuleList.select(tRec,true,true);
            }
        }


        // this.setLicenseFlds() ;

        function getArrayDataFromStore(store){
            var data = new Array();
            data = store.getData().items;

            var dataToReturn = new Array();

            for(var i=0; i < data.length ; i++){

                dataToReturn.push(data[i].data);
            }

            return dataToReturn ;
        }


        licenseModuleList.setDisableSelection(true);

        this.config.isAutoFill = false ;
    },

    enableDisableFlds: function(status) {

        var LicenseScreen = Ext.ComponentQuery.query('#LicenseScreen')[0] ;

        LicenseScreen.down('#licenseScreenFromFld').setDisabled(status);
        LicenseScreen.down('#licenseScreenPayPrdFld').setDisabled(status);
        LicenseScreen.down('#licenseScreenNoteFld').setDisabled(status);
        LicenseScreen.down('#licenseScreenPrdDaysFld').setDisabled(status);

        LicenseScreen.down('#licSaveBtn').setHidden(status);
        LicenseScreen.down('#licCancelBtn').setHidden(status);
        LicenseScreen.down('#licEditSubBtn').setHidden(!status);


        var licenseModuleList = Ext.ComponentQuery.query('#licenseScreenModuleList')[0].down('#mainList') ;

        licenseModuleList.setDisableSelection(status);

        var selectFlds = document.getElementsByClassName('licEdtFld');

        for( var i = 0 ; i< selectFlds.length ; i++ ){

            selectFlds[i].disabled = status  ;


        }


    },

    getDiffDays: function(dd1, dd2) {
        var oneDay = 24*60*60*1000; // hours*minutes*seconds*milliseconds
        var firstDate = new Date(dd1);
        var secondDate = new Date(dd2);

        var diffDays = Math.round(Math.abs((firstDate.getTime() - secondDate.getTime())/(oneDay)));

        return diffDays ;
    }

});