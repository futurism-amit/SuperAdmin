/*
 * File: app/controller/GMapController.js
 *
 * This file was generated by Sencha Architect version 3.0.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.3.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.3.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('RMdatalink.controller.GMapController', {
    extend: 'Ext.app.Controller',

    config: {
        gmap: null,
        markers: [
            
        ],
        isFirstTime: true,

        control: {
            "radiofield[name=searchRtOnMapFor]": {
                check: 'onRadiofieldCheck'
            },
            "button[itemId=gMapSearchButton]": {
                tap: 'ongMapSearchButtonTap'
            },
            "button[itemId=gMapAssignLatLongBtn]": {
                tap: 'ongMapAssignLatLongBtnTap'
            }
        }
    },

    onRadiofieldCheck: function(checkboxfield, e, eOpts) {


        switch(checkboxfield.getItemId()){

            case "rtMapCityRadioBtn":

                        Ext.ComponentQuery.query('#rtMapCityFld')[0].setHidden(false);
                        Ext.ComponentQuery.query('#rtMapZipFld')[0].setHidden(true);
                        Ext.ComponentQuery.query('#rtMapStateFld')[0].setHidden(true);

                break;


            case "rtMapZipRadioBtn":
                        Ext.ComponentQuery.query('#rtMapCityFld')[0].setHidden(true);
                        Ext.ComponentQuery.query('#rtMapZipFld')[0].setHidden(false);
                        Ext.ComponentQuery.query('#rtMapStateFld')[0].setHidden(true);

                break;


            case "rtMapStateRadioBtn":
                        Ext.ComponentQuery.query('#rtMapCityFld')[0].setHidden(true);
                        Ext.ComponentQuery.query('#rtMapZipFld')[0].setHidden(true);
                        Ext.ComponentQuery.query('#rtMapStateFld')[0].setHidden(false);

                break;

        }








    },

    ongMapSearchButtonTap: function(button, e, eOpts) {
        this.doSearchRetailers() ;
    },

    ongMapAssignLatLongBtnTap: function(button, e, eOpts) {



        Ext.Msg.confirm("Confirm","This may take very long time. do you want to continue ?",onMessageAns ,this);


        function onMessageAns(action,opt,confirmBox){


            if(action == "yes"){

                 Ext.Viewport.setMasked({
                                            xtype: 'loadmask'
                });


                refreshRetailers() ;


            }else{


                return ;
            }


        }



        function refreshRetailers(){

            doSearchForRetailers() ;
        }

        var retailers = [] ;
        var index = 0 ;

        function doSearchForRetailers(){



                    RMdatalink.iwa.rdl.queryDB({collection: dbEnv + "rdl_masterretailerrecords",pageNo:1 ,pageSize: 20000 ,sortBy:{},
                                                query:{

                                                     "Latitude": { $exists: false }
                                                },
                 fields:{


                     Latitude: 1,
                     Longitude: 1,

                     store_address_line1:1,
                     store_city: 1,
                     store_name: 1,
                     store_phone: 1,
                     store_state: 1,
                     store_status: 1,
                     store_website: 1,
                     store_zip: 1,
                     store_products:1,
                     locations:1

                 }
                 },success,error);




                function success(){


                    console.log(arguments) ;
                    retailers = arguments[0].items ;

                    updateRetailerWithLatLang();


                }

                function error(){

                    Ext.Viewport.setMasked(false) ;
                }
        }

        function updateRetailerWithLatLang(){


            if(index < retailers.length){

                if(retailers[index].Latitude){

                    index++;

                    updateRetailerWithLatLang() ;

                    return;

                }else{

                    var address= retailers[index].store_address_line1 ;
                    var city = retailers[index].store_city ;
                    var zip = retailers[index].store_zip ;


                    if(retailers[index].locations && retailers[index].locations[0] ){

                        if(retailers[index].locations[0].address){

                            address = retailers[index].locations[0].address ;
                        }

                        if(retailers[index].locations[0].city){

                            city = retailers[index].locations[0].city ;
                        }

                        if(retailers[index].locations[0].zip){

                            zip = retailers[index].locations[0].zip ;
                        }

                    }



                    getLatLng(address,city,zip);


                }


            }else{

                Ext.Viewport.setMasked(false) ;
            }

        }


        function getLatLng(address,city,zip){

            //http://maps.googleapis.com/maps/api/geocode/json?address=7310MiramarRd+SanDiego+92126

            var baseURL = 'http://maps.googleapis.com/maps/api/geocode/json?address=' ;

            var url = baseURL + address +'+'+city+'+'+zip ;

            Ext.Ajax.request({
            url: url,
            success: function(response){
            var res = Ext.JSON.decode(response.responseText ) ;
            console.log(res);


                updateWithLatLang(res);

            }
        });

        }




        var masterStore = Ext.getStore('retailersMaster');

        function updateWithLatLang(latLongRes){


            var dataToUpdate = {} ;

            if(latLongRes  && latLongRes.status == "OK"  && latLongRes.results  && latLongRes.results[0]  && latLongRes.results[0].geometry  && latLongRes.results[0].geometry.location.lat)
            {

                dataToUpdate = {

                     Latitude: latLongRes.results[0].geometry.location.lat,
                     Longitude: latLongRes.results[0].geometry.location.lng,
                     LatLangFromAddress: true
                };


            }else{

                updateError();

                return ;
            }



            RMdatalink.iwa.rdl.doUpdateCollection(masterStore, dataToUpdate ,retailers[index]._id , updateSuccess, updateError );


        }


        function updateSuccess(){

            index++;
            updateRetailerWithLatLang() ;
        }


        function updateError(){

            index++;
            updateRetailerWithLatLang() ;

        }
    },

    addMarker: function(latitude, longitude, description, store_status) {


        var base_path = "resources/images/" ;
        var icon = "inactive.png";

        if(store_status){

            switch(store_status){

                case "ACTIVE":
                    icon = "active.png";
                    break;

                case "PROSPECTS":
                    icon = "prospect.png";
                    break;

                 case "HOT_PROSPECTS":
                    icon = "hot_prospect.png";
                    break;

                case "INACTIVE":
                    icon = "inactive.png";
                    break;

                case "PENDING":
                    icon = "pending.png";
                    break;
                case "NO_STATUS":
                     icon = "inactive.png";
                    break;
            }

        }



        var gMap = Ext.ComponentQuery.query('#googleMapView')[0].getMap();

        if(store_status == "NO_STATUS")
        {

            var marker = new google.maps.Marker({
        					position : new google.maps.LatLng( latitude ,longitude),
        					title : description,
        					animation : false,//google.maps.Animation.DROP,
        					map : gMap
        				});


        }else{

            var marker = new google.maps.Marker({
        					position : new google.maps.LatLng( latitude ,longitude),
        					title : description,
        					animation : false,//google.maps.Animation.DROP,
        					map : gMap,
                            icon:base_path+icon
        				});


        }

        this.config.markers.push(marker);
    },

    deleteAllMarkers: function() {

        for(var i=0; i< this.config.markers.length; i++){

            this.deleteMarker(this.config.markers[i]);
        }

        this.config.markers = [] ;
    },

    deleteMarker: function(marker) {


        marker.setMap(null);
    },

    setDefaultMarkers: function() {
        return ;
        this.deleteAllMarkers() ;




        var masterStore = Ext.getStore('retailersMaster');

        var data = masterStore.getData().all ;

        for(var i =0 ;i <data.length; i++){

            this.addMarker(data[i].data.Latitude, data[i].data.Longitude ,data[i].data.store_name + " , "+data[i].data.store_address_line1);

        }

        Ext.ComponentQuery.query('#googleMapView')[0].setMapCenter({ latitude: 40.903454, longitude: -73.789113 });
    },

    doSearchRetailers: function() {
         var that =this ;

         var searchString = "" ;
         var searchFld = "store_city" ;

        Ext.ComponentQuery.query('#gmapSearchFormPanel')[0].setMasked({
                                            xtype: 'loadmask'
                                        });



        if(! Ext.ComponentQuery.query('#rtMapCityFld')[0].getHidden()){

         searchString =  Ext.ComponentQuery.query('#rtMapCityFld')[0].getValue() ;
         searchFld = "store_city" ;

        }else if(! Ext.ComponentQuery.query('#rtMapZipFld')[0].getHidden()){

         searchString =  Ext.ComponentQuery.query('#rtMapZipFld')[0].getValue() ;
         searchFld = "store_zip" ;

        }else if(! Ext.ComponentQuery.query('#rtMapStateFld')[0].getHidden()){

         searchString =  Ext.ComponentQuery.query('#rtMapStateFld')[0].getValue() ;
         searchFld = "store_state" ;

        }

        var storeStatusQuery = {
            '$or':[

            ]
            };

        // {'store_status':{}}

        var ps =[] ;

        var  at = true ;
        if( Ext.ComponentQuery.query('#activeCheckFldongMap')[0].getChecked()){

            storeStatusQuery['$or'].push({'store_status': "ACTIVE"});
              ps.push({'$or':
                        [
                         {"store_products.datalink_status" : "ACTIVE"},
                         {"store_products.ecatalog_status" : "ACTIVE"},
                         {"store_products.ecommerce_status" :"ACTIVE"},
                         {"store_products.irugs_status" : "ACTIVE"},
                         {"store_products.rmpro_status" : "ACTIVE"}
                         ]}) ;
        }else{

            at =false ;
        }


        if( Ext.ComponentQuery.query('#prospectCheckFldongMap')[0].getChecked()){

            storeStatusQuery['$or'].push({'store_status': "PROSPECTS"});
              ps.push({'$or':
                        [
                         {"store_products.datalink_status" : "PROSPECT"},
                         {"store_products.ecatalog_status" : "PROSPECT"},
                         {"store_products.ecommerce_status" :"PROSPECT"},
                         {"store_products.irugs_status" : "PROSPECT"},
                         {"store_products.rmpro_status" : "PROSPECT"}
                         ]}) ;
        }else{

            at =false ;
        }



        if( Ext.ComponentQuery.query('#inActiveCheckFldongMap')[0].getChecked()){

            storeStatusQuery['$or'].push({'store_status': "INACTIVE"});

            ps.push({'$and':
                      [
                         {"store_products.datalink_status" : "INACTIVE"},
                         {"store_products.ecatalog_status" : "INACTIVE"},
                         {"store_products.ecommerce_status" :"INACTIVE"},
                         {"store_products.irugs_status" : "INACTIVE"},
                         {"store_products.rmpro_status" : "INACTIVE"}
                      ]}) ;
        }else{

            at =false ;
        }



        if( Ext.ComponentQuery.query('#pendingCheckFldongMap')[0].getChecked()){

            storeStatusQuery['$or'].push({'store_status': "PENDING"});
              ps.push({'$or':
                        [
                         {"store_products.datalink_status" : "PENDING"},
                         {"store_products.ecatalog_status" : "PENDING"},
                         {"store_products.ecommerce_status" :"PENDING"},
                         {"store_products.irugs_status" : "PENDING"},
                         {"store_products.rmpro_status" : "PENDING"}
                         ]}) ;

        }else{

            at =false ;
        }


        if( Ext.ComponentQuery.query('#hotProspectCheckFldongMap')[0].getChecked()){

            storeStatusQuery['$or'].push({'store_status': "HOT_PROSPECTS"});

            ps.push({'$or':
                        [
                         {"store_products.datalink_status" : "HOT_PROSPECT"},
                         {"store_products.ecatalog_status" : "HOT_PROSPECT"},
                         {"store_products.ecommerce_status" :"HOT_PROSPECT"},
                         {"store_products.irugs_status" : "HOT_PROSPECT"},
                         {"store_products.rmpro_status" : "HOT_PROSPECT"}
                         ]}) ;
        }else{

            at =false ;
        }





        var query = {'$and':[

                     //{ "store_status": store_status }

                ]};

        var obj ={};
        obj[searchFld] = { $regex: searchString , $options: 'i' };
        query.$and.push(obj) ;

        if(storeStatusQuery.$or.length > 0 && !at){
            //query.$and.push(storeStatusQuery );
            query.$and.push({'$and':ps} );

        }


                    RMdatalink.iwa.rdl.queryDB({collection: dbEnv + "rdl_masterretailerrecords",pageNo:1 ,pageSize: 20000 ,sortBy:{},
                 query:query,
                 fields:{


                     Latitude: 1,
                     Longitude: 1,

                     store_address_line1:1,
                     store_city: 1,
                     store_name: 1,
                     store_phone: 1,
                     store_state: 1,
                     store_status: 1,
                     store_website: 1,
                     store_zip: 1,
                     store_products:1,
                     locations:1

                 }
                 },success,error);




        function success(){


            console.log(arguments) ;
            setMarkers(arguments[0].items  ) ;
        }

        function error(){


        }


        function setMarkers(data){

                that.deleteAllMarkers() ;

          if(data.length > 0)
          {
            for(var i =0 ;i <data.length; i++){

                if(data[i].Latitude && data[i].Longitude)
                {
                    var storeStatus = "NO_STATUS";

                      storeStatus =  getStroeStatus(data[i].store_products) ;



                    var address= data[i].store_address_line1 ;
                    var city = data[i].store_city ;
                    var zip = data[i].store_zip ;


                    if(data[i].locations && data[i].locations[0] ){

                        if(data[i].locations[0].address){

                            address = data[i].locations[0].address ;
                        }

                        if(data[i].locations[0].city){

                            city = data[i].locations[0].city ;
                        }

                        if(data[i].locations[0].zip){

                            zip = data[i].locations[0].zip ;
                        }

                    }




                    that.addMarker(data[i].Latitude, data[i].Longitude ,data[i].store_name + " , "+address + " , " + city,storeStatus);
                }
            }
            if(data[0].Latitude && data[0].Longitude)
            {
                Ext.ComponentQuery.query('#googleMapView')[0].setMapCenter({ latitude: data[0].Latitude, longitude: data[0].Longitude });
            }
          }
            Ext.ComponentQuery.query('#gmapSearchFormPanel')[0].setMasked(false);
        }



        function getStroeStatus(store_products){
            try{
            if(store_products)
            {
                    if(
                        Ext.ComponentQuery.query('#activeCheckFldongMap')[0].isChecked() &&
                       (store_products.datalink_status == "ACTIVE" || store_products.ecatalog_status == "ACTIVE" ||
                       store_products.ecommerce_status == "ACTIVE"  ||
                       store_products.irugs_status == "ACTIVE" ||store_products.rmpro_status == "ACTIVE")
                      ){


                        return "ACTIVE" ;
                    }


                    if(
                         Ext.ComponentQuery.query('#pendingCheckFldongMap')[0].isChecked() &&
                       (store_products.datalink_status == "PENDING" || store_products.ecatalog_status == "PENDING" ||
                       store_products.ecommerce_status == "PENDING"  ||
                       store_products.irugs_status == "PENDING" ||store_products.rmpro_status == "PENDING")
                      ){


                        return "PENDING" ;
                    }


                    if(
                       Ext.ComponentQuery.query('#hotProspectCheckFldongMap')[0].isChecked() &&
                      (store_products.datalink_status == "HOT_PROSPECT" || store_products.ecatalog_status == "HOT_PROSPECT" ||
                       store_products.ecommerce_status == "HOT_PROSPECT"  ||
                       store_products.irugs_status == "HOT_PROSPECT" ||store_products.rmpro_status == "HOT_PROSPECT")
                      ){


                        return "HOT_PROSPECTS" ;
                    }

                    if(
                         Ext.ComponentQuery.query('#prospectCheckFldongMap')[0].isChecked() &&
                       (store_products.datalink_status == "PROSPECT" || store_products.ecatalog_status == "PROSPECT" ||
                       store_products.ecommerce_status == "PROSPECT"  ||
                       store_products.irugs_status == "PROSPECT" ||store_products.rmpro_status == "PROSPECT")
                      ){


                        return "PROSPECTS" ;
                    }

                     if(
                        Ext.ComponentQuery.query('#inActiveCheckFldongMap')[0].isChecked() &&
                       (store_products.datalink_status == "INACTIVE" || store_products.ecatalog_status == "INACTIVE" ||
                       store_products.ecommerce_status == "INACTIVE"  ||
                       store_products.irugs_status == "INACTIVE" ||store_products.rmpro_status == "INACTIVE")
                      ){


                        return "INACTIVE" ;
                    }
            }
            return "NO_STATUS" ;
            }catch(ex){

                console.error(ex);
                 return "NO_STATUS" ;
            }
        }
    },

    openMapWith: function(searchKey, record, recordKey) {

          RMdatalink.app.getController('GMapController').config.isFirstTime = false ;

        Ext.ComponentQuery.query('#googleMapView')[0].setMapOptions(
        {
            zoom: 3 ,
            center:new google.maps.LatLng(49.9026669,-119.4478125)
        }
        );

        var that =this;
        if(Ext.ComponentQuery.query('#RMContentPanel')[0].getActiveItem().getItemId() == 'card-retailers')
        {


             setMapView() ;


        }



        function setMapView(){

            Ext.ComponentQuery.query('#retailersTabPanel')[0].setActiveItem(6);

            switch(searchKey){


                case "store_state":
                    if(record.get(recordKey))
                    {
                        Ext.ComponentQuery.query('#rtMapStateRadioBtn')[0].setChecked(true);
                        Ext.ComponentQuery.query('#rtMapStateFld')[0].setValue(record.get(recordKey));
                    }else{
                        return ;
                    }
                    break;

                case "store_city":
                    if(record.get(recordKey))
                    {
                        Ext.ComponentQuery.query('#rtMapCityRadioBtn')[0].setChecked(true);
                        Ext.ComponentQuery.query('#rtMapCityFld')[0].setValue(record.get(recordKey));
                    }else{
                        return ;
                    }

                    break;

                case "store_zip":
                    if(record.get(recordKey))
                    {
                        Ext.ComponentQuery.query('#rtMapZipRadioBtn')[0].setChecked(true);
                        Ext.ComponentQuery.query('#rtMapZipFld')[0].setValue(record.get(recordKey));
                    }else{
                        return ;
                    }

                    break;
            }

            that.doSearchRetailers() ;
        }


    }

});