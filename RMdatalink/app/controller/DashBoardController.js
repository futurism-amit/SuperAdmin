/*
 * File: app/controller/DashBoardController.js
 *
 * This file was generated by Sencha Architect version 3.0.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.3.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.3.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('RMdatalink.controller.DashBoardController', {
    extend: 'Ext.app.Controller',
    alias: 'controller.DashBoardController',

    config: {
    },

    loadVIPStoreInDashBoard: function() {

        var store = Ext.getStore("vendors.Master");
        var vipDashBoard= Ext.ComponentQuery.query("#vipDashBoard")[0];
        var component = vipDashBoard;
        var list = component.down('#mainList');
        var keyOfRetailer  = 'promo_code_info';
        var flagofRetailer = 'is_promo_code_active';
        var storemaster = Ext.getStore('vendors.Master');
        var data = storemaster.getData();

        var optionArray = [];

        data.all.forEach(function(obj){

            var values = obj.data;
            if( values.is_promo_code_active   && values[keyOfRetailer] ){

                optionArray.push(obj.raw);

            }
        });
        var storeOfList = list.getStore();
        if(optionArray.length){
            if(storeOfList){
                storeOfList.setData(optionArray);
            }else{
                list.setData(optionArray);
            }

        }


        this.getCountForVIPDashBoard();
    },

    getCountForVIPDashBoard: function() {


        var fnToExecute = function(){
            var vipDashBoard= Ext.ComponentQuery.query("#vipDashBoard")[0];
            var component = vipDashBoard;
            var list = component.down('#mainList');
            var storeOfList = list.getStore();

            if( storeOfList){

            }else{
                return;
            }
            var data = storeOfList.getData();

            var optionArray = [];


            for(  var i =0 ;i <data.all.length ; i++){

                var record = storeOfList.getAt(i);

                this[fnToCall](record);
                //this.getCountProspectRetailer(record);

            }

        };
        var me = this;


        var fnToCall  = 'getCountActiveRetailer';


        // SOCKET CANNOT TAKE MANY MULTIPLE REQUEST SIMULTANEOUSLY.

        // SEND REQUEST SEPERATELY


            fnToCall  = 'getCountActiveRetailer';
            fnToExecute.call(me);


        setTimeout( function(){
            fnToCall  = 'getCountProspectRetailer';
            fnToExecute.call(me);
        } ,2000 );

    },

    getCountActiveRetailer: function(record) {


        var vendor_name = record.data.vendor_name;
        var queryToExecute = getSearchQuery({

            VendorPartner:vendor_name
        });


        startSearch(queryToExecute) ;


        function getSearchQuery(values){

            var query = {} ;
            query.$and = [] ;
            var temp = { $or:[] };
            var q = {} ;



            if(  values.VendorPartner){



                query.$and.push(
                    {
                        'e_commerce_info.vip_vendor': values.VendorPartner
                    }

                );
                query.$and.push(
                    {
                        'store_products.vip_status': "ACTIVE"
                    }

                );
            }



            return query ;
        }





        function startSearch(qry){
            var searchQuery =  qry ;
            RMdatalink.iwa.rdl.queryDB({collection: dbEnv + "rdl_masterretailerrecords",pageNo:1,pageSize: 50 ,sortBy:{"store_name":1},
                                        query:searchQuery,fields:{ '_id':1}},success,error);



        }




        var me = this;
        function success(){

            console.log("1" , arguments);

            record.set('totalVIPActiveVendor' , arguments[0].count );
            me.setTotalListOfVIPDashBoard();

        }

        function error(){

            console.log("2" , arguments);

        }















    },

    getCountProspectRetailer: function(record) {

        var vendor_name = record.data.vendor_name;
        var queryToExecute = getSearchQuery({

            VendorPartner:vendor_name
        });




        startSearch(queryToExecute) ;

        function getSearchQuery(values){

            var query = {} ;
            query.$and = [] ;
            var temp = { $or:[] };
            var q = {} ;



            if(  values.VendorPartner){



                query.$and.push(
                    {
                        'e_commerce_info.vip_vendor': values.VendorPartner
                    }

                );
                query.$and.push(
                    {
                        'store_products.vip_status': {

                            "$ne":"ACTIVE"
                        }
                    }

                );
            }



            return query ;
        }






        function startSearch(qry){
            var searchQuery =  qry ;
            RMdatalink.iwa.rdl.queryDB({collection: dbEnv + "rdl_masterretailerrecords",pageNo:1,pageSize: 50 ,sortBy:{"store_name":1},
                                        query:searchQuery,fields:{ '_id':1 }},success,error);



        }




        var me = this;
        function success(){

            console.warn("1" , arguments);
            record.set('totalVIPProspectRetailer' , arguments[0].count );
            me.setTotalListOfVIPDashBoard();
        }

        function error(){

            console.error("2" , arguments);

        }















    },

    setTotalListOfVIPDashBoard: function() {
        var vipDashBoard = Ext.ComponentQuery.query("#vipDashBoard")[0];

        var vipTotalsList = vipDashBoard.query("#vipTotalsList")[0];
        var vipTotalsListStore = vipTotalsList.getStore();
        var component = vipDashBoard;
        var list = component.down('#mainList');
        var storeOfList = list.getStore();


        var active_total = 0;
        var prospect_total = 0;


        try{
            var data = storeOfList.getData();
            data.all.forEach(function(obj){
                // TAKE PRECAUTION FOR NAN
                active_total += parseInt(obj.data.totalVIPActiveVendor)? parseInt(obj.data.totalVIPActiveVendor) : 0 ;
                prospect_total += parseInt(obj.data.totalVIPProspectRetailer) ? parseInt(obj.data.totalVIPProspectRetailer):0;
            });
            vipTotalsListStore.setData([{

                active_total:active_total,
                prospect_total:prospect_total
            }]);
        }catch(e){
            console.log(e);

        }


    }

});