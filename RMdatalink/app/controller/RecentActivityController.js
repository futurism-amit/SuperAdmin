/*
 * File: app/controller/RecentActivityController.js
 *
 * This file was generated by Sencha Architect version 3.0.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.3.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.3.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('RMdatalink.controller.RecentActivityController', {
    extend: 'Ext.app.Controller',

    config: {
    },

    onTechSupportLog: function(timeStart, company, problem, companyType) {
        var activity = {

            activity_date:timeStart,
            activity_description:"TechLog :"+company + "::" +problem,
            type: "tech_support_log",
            searchvalue:timeStart,
            company:company ,
            company_type:companyType

        };

        this.saveRecentActivity(activity) ;
    },

    onUploadAttachment: function() {

    },

    onAddEditVendor: function() {

    },

    onAddEditNote_tips: function() {

    },

    saveRecentActivity: function(activity) {
        var loginController = RMdatalink.app.getController('LoginHandler') ;

        if(!loginController.config.logedInUserRecord.recent_activity){

            return;
        }

        loginController.config.logedInUserRecord.recent_activity.push(activity);


          var inhouseController = RMdatalink.app.getController('inhouse.DetailScreenController') ;
          var inhouseMasterStore = Ext.getStore('inhouseMasterStore');

          var userData = new Object() ;
          userData = loginController.config.logedInUserRecord ;
        var inhouseUser_id = userData._id ;
        if(userData._id){
            delete(userData._id) ;
        }
          //inhouseController.selectedInhouseUser.setData( userData ) ;


          var recordToUpdate = inhouseMasterStore.find("username",userData.username ) ;

            console.log(recordToUpdate) ;
            if(recordToUpdate != -1){

                inhouseController.config.isUpdatingInhouse = true ;

            var inhouseRec =  inhouseMasterStore.getAt(recordToUpdate)  ;

                if(!inhouseRec){

                    updateUserProfileOnServer() ;
                    return ;
                }

                inhouseRec.set(userData);
                inhouseRec.dirty= true;
                console.error(inhouseRec);

                inhouseMasterStore.sync();

                RMdatalink.app.getController('RetailerDeatilsDataSet').setInhouseData() ;

                //refreshInhouseUserList() ;
            }
            else{
                updateUserProfileOnServer() ;
            }


        function refreshInhouseUserList(){
            var listToRefresh ;

            Ext.ComponentQuery.query('#inHouseUsersTab')[0].down('#inhouseList').refresh() ;
            Ext.ComponentQuery.query('#inHouseRepsTab')[0].down('#inhouseList').refresh() ;

          /*  if(userData.type == "users" ){

              listToRefresh = Ext.ComponentQuery.query('#inHouseUsersTab')[0].down('#inhouseList') ;

            }else{

               listToRefresh  = Ext.ComponentQuery.query('#inHouseRepsTab')[0].down('#inhouseList') ;

            }

             listToRefresh.refresh() ;
           */

        }



        function updateUserProfileOnServer(){

           // inhouseMasterStore
           // userData

            //alert("asd");
            var sid = inhouseMasterStore.getStoreId() ;
            if(! RMdatalink.iwa.rdl.collections[sid]){
                console.error(sid) ;
                RMdatalink.iwa.rdl.collections[sid] = dbEnv + "rdl_inhouserecords" ;
            }

            console.log(userData);
            console.log(inhouseUser_id) ;
              RMdatalink.iwa.rdl.doUpdateCollection(inhouseMasterStore, userData , inhouseUser_id , suc, err);

            function suc(){

            }
            function err(){

            }


        }
    }

});