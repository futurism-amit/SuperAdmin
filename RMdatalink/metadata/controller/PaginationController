{
    "type": "Ext.app.Controller",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "currentActiveStoreId": "retailersMaster",
        "designer|userClassName": "PaginationController",
        "next_backBtn": 0,
        "scopeRequiredToLoadStores": [
            "{}"
        ],
        "storesLoadedFirstTime": [
            "\r",
            "{\r",
            "    retailersMaster:false,\r",
            "    inhouseMasterStore:false,\r",
            "    discountsMasterStore:false,\r",
            "    vendorDetailsRecodsStore:false,\r",
            "    productDetailsRecordsStore:false,\r",
            "    billingMasterStore:false,\r",
            "    notificationsNew:false\r",
            "    \r",
            "}"
        ]
    },
    "configAlternates": {
        "scopeRequiredToLoadStores": "object",
        "soresLoadedFirstTime": "object",
        "storesLoadedFirstTime": "object",
        "next_backBtn": "number"
    },
    "designerId": "c370bd7f-da99-461c-9a11-fbf13b282156",
    "customConfigs": [
        {
            "group": "(Custom Properties)",
            "name": "currentActiveStoreId",
            "type": "string"
        },
        {
            "group": "(Custom Properties)",
            "name": "scopeRequiredToLoadStores",
            "type": "string"
        },
        {
            "group": "(Custom Properties)",
            "name": "storesLoadedFirstTime",
            "type": "string"
        },
        {
            "group": "(Custom Properties)",
            "name": "next_backBtn",
            "type": "string"
        }
    ],
    "cn": [
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button[itemId=backPageBtn]",
                "designer|targetType": "Ext.Button",
                "fn": "onBackPageButtonTap",
                "implHandler": [
                    "this.config.next_backBtn = -1 ;\r",
                    "\r",
                    "if(Ext.ComponentQuery.query('#RMContentPanel')[0].getActiveItem().getItemId() == 'card-retailers')\r",
                    "{\r",
                    "    this.loadStore(1,RMdatalink.util.DataLoader.getPageSize(),RMdatalink.util.DataLoader.getEnableCachig());\r",
                    "}\r",
                    "else{\r",
                    "    var storeId = this.getCurrentActiveStoreId();\r",
                    "\r",
                    "    var store = Ext.getStore(storeId);\r",
                    "\r",
                    "    var currentPageNo = store.getPageNo();\r",
                    "    var totalNoOfPages = 100; store.getTotalNoOfPages();\r",
                    "\r",
                    "    if(currentPageNo > 1)\r",
                    "    {\r",
                    "    /* Here request Data loader to load next page */\r",
                    "    currentPageNo = currentPageNo - 1 ;\r",
                    "\r",
                    "      this.loadStore(currentPageNo,RMdatalink.util.DataLoader.getPageSize(),RMdatalink.util.DataLoader.getEnableCachig());\r",
                    "    }\r",
                    "\r",
                    "    store.setPageNo(currentPageNo);\r",
                    "}"
                ],
                "name": "tap"
            },
            "designerId": "65cda7e1-66fa-47bd-a149-aa64ff7e043d"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button[itemId=nextPageBtn]",
                "designer|targetType": "Ext.Button",
                "fn": "onNextPageButtonTap",
                "implHandler": [
                    "this.config.next_backBtn =  1 ;\r",
                    "\r",
                    "if(Ext.ComponentQuery.query('#RMContentPanel')[0].getActiveItem().getItemId() == 'card-retailers')\r",
                    "{\r",
                    "    this.loadStore(1,RMdatalink.util.DataLoader.getPageSize(),RMdatalink.util.DataLoader.getEnableCachig());\r",
                    "}\r",
                    "else{\r",
                    "    var storeId = this.getCurrentActiveStoreId();\r",
                    "\r",
                    "    var store = Ext.getStore(storeId);\r",
                    "\r",
                    "    var currentPageNo = store.getPageNo();\r",
                    "    var totalNoOfPages = 100; store.getTotalNoOfPages();\r",
                    "\r",
                    "    if(currentPageNo < totalNoOfPages)\r",
                    "    {\r",
                    "    /* Here request Data loader to load next page */\r",
                    "    currentPageNo = currentPageNo + 1 ;\r",
                    "\r",
                    "      this.loadStore(currentPageNo,RMdatalink.util.DataLoader.getPageSize(),RMdatalink.util.DataLoader.getEnableCachig());\r",
                    "    }\r",
                    "\r",
                    "    store.setPageNo(currentPageNo);\r",
                    "\r",
                    "}"
                ],
                "name": "tap"
            },
            "designerId": "281810d9-0e87-46cc-b9ac-914e77805b20"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "pageNo",
                    "pageSize",
                    "enableCaching"
                ],
                "fn": "loadStore",
                "implHandler": [
                    "\r",
                    "var dataLoader = RMdatalink.util.DataLoader ;\r",
                    "var scope = this.getScopeRequiredToLoadStores();\r",
                    "var that = this ;\r",
                    "var wasVendorMasterLoaded =false;\r",
                    "var storeId = this.getCurrentActiveStoreId() ;\r",
                    "switch(this.getCurrentActiveStoreId()){\r",
                    "\r",
                    "    case 'retailersMaster':\r",
                    "        this.loadRetailersPaged({page_no:pageNo}) ;\r",
                    "\r",
                    "        //dataLoader.loadRetailerMasterStore(scope, pageNo, pageSize,enableCaching ,successCallBack,failuerCallBack);\r",
                    "\r",
                    "        break;\r",
                    "\r",
                    "    case 'inhouseMasterStore':\r",
                    "\r",
                    "           Ext.ComponentQuery.query('#inhouseMainContentPanel')[0].setMasked( {\r",
                    "                xtype: 'loadmask'\r",
                    "            });\r",
                    "\r",
                    "        dataLoader.loadInhouseMasterStore(scope, pageNo, pageSize,enableCaching ,successCallBack,failuerCallBack);\r",
                    "\r",
                    "        break;\r",
                    "\r",
                    "    case 'discountsMasterStore':\r",
                    "    dataLoader.loadDiscountMasterStore(scope, pageNo, pageSize,enableCaching ,successCallBack,failuerCallBack);\r",
                    "\r",
                    "        break;\r",
                    "\r",
                    "    case 'vendorDetailsRecodsStore':\r",
                    "\r",
                    "\r",
                    "         dataLoader.loadVendorDetailStore(scope, pageNo, pageSize,enableCaching ,successCallBack,failuerCallBack);\r",
                    "\r",
                    "        break;\r",
                    "\r",
                    "    case 'productDetailsRecordsStore':\r",
                    "\r",
                    "        if(Ext.ComponentQuery.query('#pricingMainContentsPanel')[0])\r",
                    "        {\r",
                    "            Ext.ComponentQuery.query('#pricingMainContentsPanel')[0].setMasked( {\r",
                    "                    xtype: 'loadmask'\r",
                    "                });\r",
                    "        }\r",
                    "         dataLoader.loadProductDetailStore(scope, pageNo, pageSize,enableCaching ,successCallBack,failuerCallBack);\r",
                    "\r",
                    "        break ;\r",
                    "\r",
                    "    case 'billingMasterStore':\r",
                    "        RMdatalink.app.getController('SearchController').searchRtForBilling(\"\",\"\", pageNo ) ;\r",
                    "\r",
                    "\r",
                    "        //dataLoader.loadBillingMasterStore(scope, pageNo, pageSize,enableCaching,successCallBack,failuerCallBack );\r",
                    "\r",
                    "        break;\r",
                    "\r",
                    "    case 'notificationsNew':\r",
                    "\r",
                    "\r",
                    "         dataLoader.loadNotificationStore(scope, pageNo, pageSize,enableCaching ,successCallBack,failuerCallBack);\r",
                    "\r",
                    "        break;\r",
                    "\r",
                    "    case 'vendors.Master':\r",
                    "\r",
                    "        dataLoader.loadVendorMasterStore(scope, pageNo, pageSize,enableCaching ,successCallBack,failuerCallBack);\r",
                    "        wasVendorMasterLoaded = true;\r",
                    "        break;\r",
                    "    case 'TechSupportLogsStore':\r",
                    "\r",
                    "        RMdatalink.app.getController('SearchController').doLoadTechSupport( pageNo, pageSize ,true, successCallBack,failuerCallBack );\r",
                    "\r",
                    "        //dataLoader.loadTechLogStore(scope, pageNo, pageSize,enableCaching ,successCallBack,failuerCallBack);\r",
                    "        break;\r",
                    "    case 'PermisstionsStore':\r",
                    "        dataLoader.loadPermissionsStore(scope, pageNo, pageSize,enableCaching ,successCallBack,failuerCallBack);\r",
                    "        break;\r",
                    "\r",
                    "    case 'products.RMProStore':\r",
                    "\r",
                    "        if( Ext.ComponentQuery.query('#productRMproMainPanel')[0])\r",
                    "        {\r",
                    "            Ext.ComponentQuery.query('#productRMproMainPanel')[0].setMasked( {\r",
                    "                xtype: 'loadmask'\r",
                    "            });\r",
                    "        }\r",
                    "        dataLoader.loadProductRMProStore(scope, pageNo, pageSize,enableCaching ,successCallBack,failuerCallBack);\r",
                    "\r",
                    "        break;\r",
                    "\r",
                    "    case 'products.DatalinkMain':\r",
                    "        if(Ext.ComponentQuery.query('#productDatalinkMainPanel')[0])\r",
                    "        {\r",
                    "            Ext.ComponentQuery.query('#productDatalinkMainPanel')[0].setMasked( {\r",
                    "                xtype: 'loadmask'\r",
                    "            });\r",
                    "        }\r",
                    "\r",
                    "        dataLoader.loadProductDatalinkStore(scope, pageNo, pageSize,enableCaching ,successCallBack,failuerCallBack);\r",
                    "\r",
                    "        break;\r",
                    "\r",
                    "\r",
                    "    case 'products.ecomMain':\r",
                    "        if(Ext.ComponentQuery.query('#productecomMainPanel')[0])\r",
                    "        {\r",
                    "            Ext.ComponentQuery.query('#productecomMainPanel')[0].setMasked( {\r",
                    "                xtype: 'loadmask'\r",
                    "            });\r",
                    "        }\r",
                    "\r",
                    "        dataLoader.loadProductecomStore(scope, pageNo, pageSize,enableCaching ,successCallBack,failuerCallBack);\r",
                    "\r",
                    "        break;\r",
                    "\r",
                    "}\r",
                    "\r",
                    "\r",
                    "\r",
                    "function successCallBack(){\r",
                    "     that.loadDependentStoresonMaster(storeId);\r",
                    "\r",
                    "     that.config.storesLoadedFirstTime[storeId] = true ;\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "    if(wasVendorMasterLoaded){\r",
                    "\r",
                    "\r",
                    "\r",
                    "    }\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "}\r",
                    "\r",
                    "function failuerCallBack(){\r",
                    "\r",
                    "}\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    ""
                ]
            },
            "designerId": "ecb53a92-4d90-49f5-81c6-1b0661b0740d"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "storeId"
                ],
                "fn": "loadDependentStoresonMaster",
                "implHandler": [
                    "\r",
                    "switch(storeId){\r",
                    "\r",
                    "    case 'retailersMaster':\r",
                    "       // RMdatalink.util.globalMethods.fillDataFromMasterStore.call(this, arguments);\r",
                    "\r",
                    "        break;\r",
                    "\r",
                    "    case 'products.RMProStore':\r",
                    "\r",
                    "        //Ext.ComponentQuery.query('#productRMproMainPanel')[0].setMasked(false);\r",
                    "        if(RMdatalink.app.getController('RMProController').config.isPricingPolicyUpdated){\r",
                    "                if(Ext.ComponentQuery.query('#productRMproMainPanel')[0])\r",
                    "              {\r",
                    "                RMdatalink.app.getController('RMProController').config.isPricingPolicyUpdated = false ;\r",
                    "                RMdatalink.app.getController('BillingDetailsController').loadRM_PROData() ;\r",
                    "                RMdatalink.app.getController('BillingDetailsController').updateRMProPricing() ;\r",
                    "\r",
                    "                  Ext.ComponentQuery.query('#productRMproMainPanel')[0].setMasked(false);\r",
                    "              }\r",
                    "\r",
                    "        }else{\r",
                    "                RMdatalink.app.getController('RMProController').loadPricingStore();\r",
                    "\r",
                    "                if(RMdatalink.app.getController('BillingDetailsController').config.isPricingDataloaded){\r",
                    "                    RMdatalink.app.getController('BillingDetailsController').initialseRMProPricingPolicy() ;\r",
                    "                }\r",
                    "        }\r",
                    "\r",
                    "         RMdatalink.app.getController('RMProController').setRmProListHeight();\r",
                    "\r",
                    "        break;\r",
                    "    case 'products.DatalinkMain':\r",
                    "       if( Ext.ComponentQuery.query('#productDatalinkMainPanel')[0])\r",
                    "       {\r",
                    "            Ext.ComponentQuery.query('#productDatalinkMainPanel')[0].setMasked(false);\r",
                    "\r",
                    "            RMdatalink.app.getController('DatalinkController').setDlDataPrice() ;\r",
                    "            RMdatalink.app.getController('DatalinkController').selectAllModules() ;\r",
                    "\r",
                    "            RMdatalink.app.getController('DatalinkController').setDatalinkListHeight() ;\r",
                    "       }\r",
                    "\r",
                    "\r",
                    "        break;\r",
                    "\r",
                    "   case 'products.ecomMain':\r",
                    "       if( Ext.ComponentQuery.query('#productecomMainPanel')[0])\r",
                    "       {\r",
                    "            Ext.ComponentQuery.query('#productecomMainPanel')[0].setMasked(false);\r",
                    "\r",
                    "//             RMdatalink.app.getController('DatalinkController').setDlDataPrice() ;\r",
                    "//             RMdatalink.app.getController('DatalinkController').selectAllModules() ;\r",
                    "\r",
                    "//             RMdatalink.app.getController('DatalinkController').setDatalinkListHeight() ;\r",
                    "       }\r",
                    "\r",
                    "\r",
                    "        break;\r",
                    "\r",
                    "    case 'inhouseMasterStore':\r",
                    "\r",
                    "            RMdatalink.app.getController('RetailerDeatilsDataSet').setInhouseData();\r",
                    "\r",
                    "              Ext.ComponentQuery.query('#inhouseMainContentPanel')[0].setMasked(false);\r",
                    "            RMdatalink.app.getController('LoginHandler').hideUserRightInfoForInhouse() ;\r",
                    "        break;\r",
                    "\r",
                    "    case 'discountsMasterStore':\r",
                    "//             var discountsMasterStore = Ext.getStore('discountsMasterStore');\r",
                    "//         discountsMasterStore.sync();\r",
                    "\r",
                    "\r",
                    "              RMdatalink.app.getController('RetailerDeatilsDataSet').setDataForDiscountsTab();\r",
                    "\r",
                    "        break;\r",
                    "\r",
                    "    case 'vendorDetailsRecodsStore':\r",
                    "\r",
                    "\r",
                    "        break;\r",
                    "\r",
                    "    case 'productDetailsRecordsStore':\r",
                    "\r",
                    "        RMdatalink.app.getController('BillingDetailsController').loadPricingStores();\r",
                    "        if(Ext.ComponentQuery.query('#productRMproMainPanel')[0])\r",
                    "        {\r",
                    "            Ext.ComponentQuery.query('#productRMproMainPanel')[0].setMasked(false);\r",
                    "        }\r",
                    "        break ;\r",
                    "\r",
                    "    case 'billingMasterStore':\r",
                    "\r",
                    "\r",
                    "        break;\r",
                    "\r",
                    "    case 'notificationsNew':\r",
                    "\r",
                    "\r",
                    "        break;\r",
                    "    case 'vendors.Master':\r",
                    "\r",
                    "\r",
                    "\r",
                    "        RMdatalink.app.getController('VendorStatsController').loadVendorStats() ;\r",
                    "        RMdatalink.app.getController('SearchDropDownController').loadDropDownStore();\r",
                    "        RMdatalink.app.getController('DashBoardController').loadVIPStoreInDashBoard();\r",
                    "        \r",
                    "        \r",
                    "        break;\r",
                    "\r",
                    "    case 'PermisstionsStore':\r",
                    "\r",
                    "        RMdatalink.app.getController('LoginHandler').onPermissionsLoaded() ;\r",
                    "\r",
                    "        break;\r",
                    "\r",
                    "    case \"TechSupportLogsStore\":\r",
                    "         Ext.Viewport.setMasked(false) ;\r",
                    "\r",
                    "        break ;\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "}\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "function getArrayDataFromStore(store){\r",
                    "\r",
                    "    var data = new Array();\r",
                    "    data = store.getData().all;\r",
                    "\r",
                    "    var dataToReturn = new Array();\r",
                    "\r",
                    "    for(var i=0; i < data.length ; i++){\r",
                    "\r",
                    "        dataToReturn.push(data[i].data);\r",
                    "    }\r",
                    "\r",
                    "    return dataToReturn ;\r",
                    " }\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    ""
                ]
            },
            "designerId": "bc5baecc-d9d3-44c7-be80-17d947a05ab3"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "loadRetailerDependentStores",
                "implHandler": [
                    ""
                ]
            },
            "designerId": "9bf3a7bd-4257-433a-a220-e1d4070fd811"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "loadVendorMasterDependentStore",
                "implHandler": [
                    ""
                ]
            },
            "designerId": "036bbfaa-4046-4053-bce1-392430a99610"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "storeId"
                ],
                "fn": "rollBackStoreVariable",
                "implHandler": [
                    "\r",
                    "var store = Ext.getStore(storeId);\r",
                    "\r",
                    "var currentPageNo = store.getPageNo();\r",
                    "\r",
                    "\r",
                    "if(currentPageNo > 1){\r",
                    "    if(RMdatalink.util.DataLoader.getEnableCachig()){\r",
                    "\r",
                    "        delete(store.config.cachedData[currentPageNo]);\r",
                    "    }\r",
                    "\r",
                    "    currentPageNo = currentPageNo -1 ;\r",
                    "    store.setPageNo(currentPageNo);\r",
                    "\r",
                    "\r",
                    "}\r",
                    "\r",
                    "\r",
                    ""
                ]
            },
            "designerId": "41e438e7-a0c4-4024-960a-efc13f224fbf"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "params"
                ],
                "fn": "loadRetailersPaged",
                "implHandler": [
                    "\r",
                    "\r",
                    "\r",
                    "var searchText = \"\" ;\r",
                    "var store_status = \"\" ;\r",
                    "var page_no = 1;\r",
                    "\r",
                    "var that = this ;\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "if(Ext.ComponentQuery.query('#RMContentPanel')[0].getActiveItem().getItemId() == 'card-retailers')\r",
                    "{\r",
                    "\r",
                    "  var activeTab = Ext.ComponentQuery.query('#retailersTabPanel')[0].getActiveItem();\r",
                    "  var activeTabId = activeTab.getItemId();\r",
                    "\r",
                    "  var activeStore = activeTab.down('#retailerList').getStore();\r",
                    "  activeStore.setPageNo( activeStore.getPageNo() + (that.config.next_backBtn));\r",
                    "\r",
                    "\r",
                    "    if( activeStore.getPageNo() < 1){\r",
                    "        return ;\r",
                    "    }\r",
                    "    params.page_no = activeStore.getPageNo() ;\r",
                    "\r",
                    "    searchText = activeTab.down('#rtVdrsSearchFld').getValue() ;\r",
                    "\r",
                    "    switch(activeTabId){\r",
                    "\r",
                    "        case \"usersTab\":\r",
                    "            store_status = \"ACTIVE\" ;\r",
                    "            break;\r",
                    "        case \"prospectsTab\":\r",
                    "            store_status = \"PROSPECTS\" ;\r",
                    "            break;\r",
                    "        case \"hotProspectsTab\":\r",
                    "            store_status = \"HOT_PROSPECTS\" ;\r",
                    "            break;\r",
                    "        case \"inactiveTab\":\r",
                    "            store_status = \"INACTIVE\" ;\r",
                    "            break;\r",
                    "        case \"pendingTab\":\r",
                    "            store_status = \"PENDING\" ;\r",
                    "            break;\r",
                    "        case \"allRetailerTab\":\r",
                    "            store_status = \"\" ;\r",
                    "            break;\r",
                    "    }\r",
                    "\r",
                    "}\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "if(params){\r",
                    "\r",
                    "    if( params.searchText  )\r",
                    "    {\r",
                    "            searchText = params.searchText ;\r",
                    "    }\r",
                    "    if( params.store_status )\r",
                    "    {\r",
                    "            store_status = params.store_status ;\r",
                    "    }\r",
                    "    if( params.page_no )\r",
                    "    {\r",
                    "            page_no = params.page_no ;\r",
                    "    }\r",
                    "\r",
                    "}\r",
                    "\r",
                    "\r",
                    "\r",
                    "RMdatalink.app.getController('SearchController').searchRetailerByStatus(searchText,store_status, page_no ) ;"
                ]
            },
            "designerId": "a26b9fb0-ca12-486e-8ac7-2b6d9393de25"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "isSkipCustomFilter"
                ],
                "fn": "initialiseRetailers",
                "implHandler": [
                    "\r",
                    "if(!isSkipCustomFilter)\r",
                    "{\r",
                    "    RMdatalink.app.getController('SearchController').initFilter()  ;\r",
                    "\r",
                    "    return ;\r",
                    "}\r",
                    "\r",
                    "\r",
                    "var retailersStore = Ext.getStore('retailersMaster') ;\r",
                    "retailersStore.setData([{}]);\r",
                    "retailersStore.sync() ;\r",
                    "retailersStore.removeAll();\r",
                    "retailersStore.sync() ;\r",
                    "\r",
                    "\r",
                    "//RMdatalink.app.getController('SearchController').searchRetailerByStatus(\"\",\"\",1 ) ;\r",
                    "//RMdatalink.app.getController('SearchController').doSearchForRetailers(\"\");\r",
                    "\r",
                    "var index =0 ;\r",
                    "\r",
                    "var totalRetailersFound = 0 ;\r",
                    "\r",
                    "\r",
                    "  var store_status = \"ACTIVE\";\r",
                    "\r",
                    "    searchRetailerByStatus() ;\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "function searchRetailerByStatus(){\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "    if(index < 5)\r",
                    "    {\r",
                    "\r",
                    "        var searchText= \"\";\r",
                    "        var page_no = 1;\r",
                    "\r",
                    "        switch(index){\r",
                    "            case 0:\r",
                    "            store_status = \"ACTIVE\" ;\r",
                    "            break;\r",
                    "            case 1:\r",
                    "            store_status = \"INACTIVE\" ;\r",
                    "            break;\r",
                    "            case 2:\r",
                    "             store_status = \"HOT_PROSPECTS\" ;\r",
                    "            break;\r",
                    "            case 3:\r",
                    "             store_status = \"PROSPECTS\" ;\r",
                    "            break;\r",
                    "            case 4:\r",
                    "             store_status = \"PENDING\" ;\r",
                    "            break;\r",
                    "    }\r",
                    "\r",
                    "   var tStatus = store_status ;\r",
                    "         if(store_status==\"PROSPECTS\")\r",
                    "         {\r",
                    "             tStatus = \"PROSPECT\" ;\r",
                    "         }else if(store_status == \"HOT_PROSPECTS\"){\r",
                    "               tStatus = \"HOT_PROSPECT\" ;\r",
                    "         }\r",
                    "\r",
                    "         var pStatus = null ;\r",
                    "         if(store_status == \"INACTIVE\"){\r",
                    "             pStatus =  {'$and':\r",
                    "              [\r",
                    "                 {\"store_products.datalink_status\" : tStatus},\r",
                    "                 {\"store_products.ecatalog_status\" : tStatus},\r",
                    "                 {\"store_products.ecommerce_status\" :tStatus},\r",
                    "                 {\"store_products.irugs_status\" : tStatus},\r",
                    "                 {\"store_products.rmpro_status\" : tStatus},\r",
                    "                 {\"store_products.vip_status\" : tStatus}\r",
                    "                  \r",
                    "              ]} ;\r",
                    "         }else\r",
                    "         {\r",
                    "             pStatus =  {'$or':\r",
                    "                [\r",
                    "                 {\"store_products.datalink_status\" : tStatus},\r",
                    "                 {\"store_products.ecatalog_status\" : tStatus},\r",
                    "                 {\"store_products.ecommerce_status\" :tStatus},\r",
                    "                 {\"store_products.irugs_status\" : tStatus},\r",
                    "                 {\"store_products.rmpro_status\" : tStatus},\r",
                    "                 {\"store_products.rmpro_vip\" : tStatus}\r",
                    "                 ]} ;\r",
                    "         }\r",
                    "\r",
                    "         var tquery = {'$and':[\r",
                    "\r",
                    "             {'$or':[\r",
                    "                                            { \"store_name\": { $regex: searchText , $options: 'i' } },\r",
                    "                                            { \"store_state\": { $regex: searchText  , $options: 'i' } },\r",
                    "                                            { \"store_city\": { $regex: searchText  , $options: 'i' } },\r",
                    "                                            { \"store_zip\": { $regex: searchText  , $options: 'i' } }\r",
                    "                     ]\r",
                    "             },\r",
                    "             pStatus\r",
                    "\r",
                    "        ]} ;\r",
                    "\r",
                    "         \r",
                    "         debugger;\r",
                    "         RMdatalink.iwa.rdl.queryDB({collection: dbEnv + \"rdl_masterretailerrecords\",pageNo:page_no ,pageSize: 50 ,sortBy:{\"store_name\":1},\r",
                    "         query:tquery,\r",
                    "        fields:{}},success,error);\r",
                    "\r",
                    "       /* RMdatalink.iwa.rdl.queryDB({collection: dbEnv + \"rdl_masterretailerrecords\",pageNo:page_no ,pageSize: 50 ,sortBy:{\"store_name\":1},query:\r",
                    "         {'$and':[\r",
                    "\r",
                    "             {'$or':[\r",
                    "                                            { \"store_name\": { $regex: searchText , $options: 'i' } },\r",
                    "                                            { \"store_state\": { $regex: searchText , $options: 'i' } },\r",
                    "                                            { \"store_city\": { $regex: searchText , $options: 'i' } },\r",
                    "                                            { \"store_zip\": { $regex: searchText , $options: 'i' } }\r",
                    "                     ]\r",
                    "             },\r",
                    "             { \"store_status\": store_status }\r",
                    "\r",
                    "        ]},fields:{}},success,error);*/\r",
                    "    }\r",
                    "    else{\r",
                    "            RMdatalink.app.getController('SearchController').doSearchForRetailers(\"\");\r",
                    "    }\r",
                    "}\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "function success(){\r",
                    "\r",
                    "       setTotalList(arguments[0].count,arguments[0].items);\r",
                    "\r",
                    "       setRetailersList(arguments[0].items) ;\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "    if(index == 0)\r",
                    "    {\r",
                    "        var maxP = arguments[0].count / 50 ;\r",
                    "        maxP = Math.ceil(maxP) ;\r",
                    "         RMdatalink.app.getController('PaginationController').setRetailersActiveTabPageNo(maxP) ;\r",
                    "\r",
                    "    }\r",
                    "\r",
                    "       index++;\r",
                    "       searchRetailerByStatus();\r",
                    "\r",
                    "}\r",
                    "\r",
                    "function error(){\r",
                    "\r",
                    "     index++;\r",
                    "     searchRetailerByStatus();\r",
                    "}\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "function setRetailersList(data){\r",
                    "\r",
                    "    //retailersStore.addData( data ) ;\r",
                    "\r",
                    "    var rtvStr = getStoreByRemovePreviousRetailers();\r",
                    "    rtvStr.setData(data);\r",
                    "    rtvStr.sync();\r",
                    "}\r",
                    "\r",
                    "\r",
                    "\r",
                    "function setTotalList(count,items){\r",
                    "\r",
                    "    totalRetailersFound += parseInt(count) ;\r",
                    "\r",
                    "    var totalsList = null ;\r",
                    "    switch(store_status){\r",
                    "        case \"ACTIVE\":\r",
                    "\r",
                    "            totalsList = Ext.ComponentQuery.query('#usersTab')[0].down('#retailerTotalsList');\r",
                    "\r",
                    "            break;\r",
                    "        case \"PROSPECTS\":\r",
                    "\r",
                    "            totalsList = Ext.ComponentQuery.query('#prospectsTab')[0].down('#retailerTotalsList');\r",
                    "\r",
                    "            break;\r",
                    "        case \"HOT_PROSPECTS\":\r",
                    "\r",
                    "            totalsList = Ext.ComponentQuery.query('#hotProspectsTab')[0].down('#retailerTotalsList');\r",
                    "\r",
                    "            break;\r",
                    "        case \"INACTIVE\":\r",
                    "\r",
                    "            totalsList = Ext.ComponentQuery.query('#inactiveTab')[0].down('#retailerTotalsList');\r",
                    "\r",
                    "            break;\r",
                    "        case \"PENDING\":\r",
                    "\r",
                    "            totalsList = Ext.ComponentQuery.query('#pendingTab')[0].down('#retailerTotalsList');\r",
                    "\r",
                    "            break;\r",
                    "    }\r",
                    " var totalMonthlyPrice = 0 ;\r",
                    "\r",
                    "    for(var i=0 ; i < items.length ; i ++ ){\r",
                    "\r",
                    "          var tempTotalPayble =  getMonthlyPaying(items[i]) ;\r",
                    "\r",
                    "\r",
                    "        if(tempTotalPayble){\r",
                    "\r",
                    "            totalMonthlyPrice += parseFloat(tempTotalPayble,0);\r",
                    "        }\r",
                    "    }\r",
                    "\r",
                    "\r",
                    "    totalMonthlyPrice = totalMonthlyPrice.toFixed(2) ;\r",
                    "\r",
                    "    if(totalsList){\r",
                    "\r",
                    "        var tStore = totalsList.getStore();\r",
                    "        tStore.removeAll();\r",
                    "        tStore.sync();\r",
                    "\r",
                    "\r",
                    "        tStore.setData(\r",
                    "         {\r",
                    "\r",
                    "            store_count:count,\r",
                    "            city_count: \"\",\r",
                    "            user_count:\"\",\r",
                    "             monthly_payble: totalMonthlyPrice\r",
                    "\r",
                    "        }\r",
                    "        );\r",
                    "        tStore.sync();\r",
                    "    }\r",
                    "  /*  if(totalsList){\r",
                    "\r",
                    "        var tStore = totalsList.getStore();\r",
                    "        tStore.removeAll();\r",
                    "        tStore.sync();\r",
                    "\r",
                    "        tStore.setData(\r",
                    "         [\r",
                    "         {\r",
                    "\r",
                    "            store_count:count,\r",
                    "            city_count: \"\",\r",
                    "            user_count:\"\"\r",
                    "\r",
                    "        }]\r",
                    "        );\r",
                    "        tStore.sync();\r",
                    "    }*/\r",
                    "\r",
                    " /*   var allTabTotalList = Ext.ComponentQuery.query('#allRetailerTab')[0].down('#retailerTotalsList');\r",
                    "\r",
                    "    if(allTabTotalList){\r",
                    "\r",
                    "        var alltStore = allTabTotalList.getStore();\r",
                    "        alltStore.removeAll();\r",
                    "        alltStore.sync();\r",
                    "\r",
                    "        alltStore.setData([\r",
                    "         {\r",
                    "\r",
                    "            store_count:totalRetailersFound,\r",
                    "            city_count: \"\",\r",
                    "            user_count:\"\"\r",
                    "\r",
                    "        }]\r",
                    "        );\r",
                    "        alltStore.sync();\r",
                    "    }\r",
                    "*/\r",
                    "\r",
                    "}\r",
                    "\r",
                    "\r",
                    "function getStoreByRemovePreviousRetailers(){\r",
                    "     var rtStore = null ;\r",
                    "     switch(store_status){\r",
                    "        case \"ACTIVE\":\r",
                    "\r",
                    "            rtStore = Ext.ComponentQuery.query('#usersTab')[0].down('#retailerList').getStore();\r",
                    "\r",
                    "            break;\r",
                    "        case \"PROSPECTS\":\r",
                    "\r",
                    "            rtStore = Ext.ComponentQuery.query('#prospectsTab')[0].down('#retailerList').getStore();\r",
                    "\r",
                    "            break;\r",
                    "        case \"HOT_PROSPECTS\":\r",
                    "\r",
                    "            rtStore = Ext.ComponentQuery.query('#hotProspectsTab')[0].down('#retailerList').getStore();\r",
                    "\r",
                    "            break;\r",
                    "\r",
                    "        case \"INACTIVE\":\r",
                    "\r",
                    "            rtStore = Ext.ComponentQuery.query('#inactiveTab')[0].down('#retailerList').getStore();\r",
                    "\r",
                    "            break;\r",
                    "        case \"PENDING\":\r",
                    "\r",
                    "            rtStore = Ext.ComponentQuery.query('#pendingTab')[0].down('#retailerList').getStore();\r",
                    "\r",
                    "            break;\r",
                    "         default:\r",
                    "            var retailersStore = Ext.getStore('retailersMaster') ;\r",
                    "            rtStore = retailersStore;\r",
                    "             break;\r",
                    "\r",
                    "\r",
                    "    }\r",
                    "    rtStore.removeAll();\r",
                    "    rtStore.sync();\r",
                    "\r",
                    "    return rtStore;\r",
                    "}\r",
                    "\r",
                    "\r",
                    "\r",
                    "function getMonthlyPaying(rec){\r",
                    "\r",
                    "                       var value = 0 ;\r",
                    "\r",
                    "                       if(rec.store_products && rec.product_billng)\r",
                    "                       {\r",
                    "                       if(rec.store_products.rmpro_status && rec.store_products.rmpro_status == \"ACTIVE\" && rec.product_billng && rec.product_billng.product_rmpro ){\r",
                    "\r",
                    "                           value += parseFloat(rec.product_billng.product_rmpro.monthly_membership,0) ;\r",
                    "                       }\r",
                    "\r",
                    "                       if(rec.store_products.datalink_status && rec.store_products.datalink_status == \"ACTIVE\" && rec.product_billng && rec.product_billng.product_datalink ){\r",
                    "\r",
                    "                           value += parseFloat(rec.product_billng.product_datalink.monthly_membership,0) ;\r",
                    "                       }\r",
                    "\r",
                    "                       value.toFixed(2);\r",
                    "\r",
                    "                       if(value === 0)\r",
                    "                           return \"0.00\";\r",
                    "                       else\r",
                    "                       {\r",
                    "                           var sumStr = \"\"+ value;\r",
                    "                           var sumStrSplit0 = sumStr.split('.')[0];\r",
                    "\r",
                    "                           var len = sumStrSplit0.length;\r",
                    "                           if(len > 3)\r",
                    "                           {\r",
                    "                               sumStr1 = sumStrSplit0.substr(0,(len-3));\r",
                    "                               sumStr2 = sumStrSplit0.substr((len-3),(len-1));\r",
                    "                               sumStrSplit0 =  sumStr1 + ',' + sumStr2 ;\r",
                    "                           }\r",
                    "\r",
                    "                           if(sumStr.split('.')[1])\r",
                    "                               return sumStrSplit0 + '.' +sumStr.split('.')[1];\r",
                    "                           else\r",
                    "                           {\r",
                    "                               return  sumStrSplit0;\r",
                    "                           }\r",
                    "                       }\r",
                    "                       }\r",
                    "    return 0 ;\r",
                    "\r",
                    "}\r",
                    ""
                ]
            },
            "designerId": "da908c57-5ed1-4ad8-ab33-36b141b11a68"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "isSkipCustomFilter"
                ],
                "fn": "handleLastSavedExpansionState",
                "implHandler": [
                    ""
                ]
            },
            "designerId": "e0a1de33-6465-4248-ad1a-9b255d2f82b8"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "maxPage"
                ],
                "fn": "setRetailersActiveTabPageNo",
                "implHandler": [
                    "var that =this ;\r",
                    "\r",
                    "if(Ext.ComponentQuery.query('#RMContentPanel')[0].getActiveItem().getItemId() == 'card-retailers')\r",
                    "{\r",
                    "  var rtMainPanel = Ext.ComponentQuery.query('#retailersMaincontentpanel')[0] ;\r",
                    "  var activeTab = Ext.ComponentQuery.query('#retailersTabPanel')[0].getActiveItem();\r",
                    "  var activeTabId = activeTab.getItemId();\r",
                    "\r",
                    "  var activeStore = activeTab.down('#retailerList').getStore();\r",
                    "\r",
                    "\r",
                    "  //rtMainPanel.down('#mainPageNoLbl').setHtml(activeStore.getPageNo() ) ;\r",
                    "\r",
                    "\r",
                    "   // alert(\"asds\"+maxPage);\r",
                    "    if(maxPage){\r",
                    "        rtMainPanel.down('#mainPageNoLbl').setHtml(activeStore.getPageNo() +' of '+ maxPage ) ;\r",
                    "\r",
                    "        activeStore.config.maxPageNo = maxPage ;\r",
                    "    }else{\r",
                    "\r",
                    "        rtMainPanel.down('#mainPageNoLbl').setHtml(activeStore.getPageNo() +' of 1' ) ;\r",
                    "    }\r",
                    "\r",
                    "}"
                ]
            },
            "designerId": "cf297604-2478-481f-a99d-e829abefba6d"
        }
    ]
}