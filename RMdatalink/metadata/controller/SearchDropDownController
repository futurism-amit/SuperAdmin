{
    "type": "Ext.app.Controller",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "SearchDropDownView": [
            "null"
        ],
        "designer|userClassName": "SearchDropDownController",
        "searchField": [
            "null\r",
            ""
        ]
    },
    "configAlternates": {
        "SearchDropDownView": "object",
        "searchField": "object"
    },
    "designerId": "577fb474-f75b-46f6-b7e7-5ae10baf2af6",
    "customConfigs": [
        {
            "group": "(Custom Properties)",
            "name": "SearchDropDownView",
            "type": "string"
        },
        {
            "group": "(Custom Properties)",
            "name": "searchField",
            "type": "string"
        }
    ],
    "cn": [
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "searchfield[action=fillSearchDropDown]",
                "designer|targetType": "Ext.field.Search",
                "fn": "onfillSearchDropDownSearchfieldKeyup",
                "implHandler": [
                    "this.config.searchField = textfield ;\r",
                    "this.searchForCustomersList(textfield) ;\r",
                    "//this.config.searchField = textfield ;"
                ],
                "name": "keyup"
            },
            "designerId": "1ac4d81a-c774-471c-bccf-a65bf28ad318"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "searchField"
                ],
                "fn": "searchForCustomersList",
                "implHandler": [
                    "\r",
                    "    var _this = this ;\r",
                    "    var searchText = searchField.getValue();\r",
                    "     var SearchDropDownStore = Ext.getStore('SearchDropDownStore') ;\r",
                    "\r",
                    "\r",
                    "    SearchDropDownStore.clearFilter();\r",
                    "\r",
                    "    if(!  this.config.SearchDropDownView )\r",
                    "    {\r",
                    "        this.createSearchDropDownView() ;\r",
                    "    }\r",
                    "\r",
                    "  if(this.config.searchField.getItemId() == \"rtSalesPersonSearchFld\"  ||  this.config.searchField.getItemId() == \"rtDatalinkSalesPersonSearchFld\"){\r",
                    "        this.loadInouseSalesDropDown(searchText);\r",
                    "       _this.config.SearchDropDownView.showBy(searchField) ;\r",
                    "\r",
                    "      return ;\r",
                    "    }\r",
                    "\r",
                    "\r",
                    "var isSearchForRetailer = searchField.getParent().down('#searchForRetailerRadioFld') ? searchField.getParent().down('#searchForRetailerRadioFld').getChecked() : false;\r",
                    "\r",
                    "//var isSearchForRetailer = Ext.ComponentQuery.query('#searchForRetailerRadioFld')[0].getChecked();\r",
                    "\r",
                    "if(isSearchForRetailer){\r",
                    "\r",
                    "    searchForRetailers() ;\r",
                    "}else{\r",
                    "\r",
                    "\r",
                    "            this.loadDropDownStore();\r",
                    "\r",
                    "\r",
                    "\r",
                    "    var searchregx =  new RegExp(searchText ,\"i\" ) ;\r",
                    "\r",
                    "    console.log(searchregx) ;\r",
                    "\r",
                    "\r",
                    "    SearchDropDownStore.filter(\"text\", searchregx );\r",
                    "\r",
                    "\r",
                    "\r",
                    "}\r",
                    "\r",
                    " _this.config.SearchDropDownView.showBy(searchField) ;\r",
                    "\r",
                    "\r",
                    "function searchForRetailers(){\r",
                    "\r",
                    "\r",
                    "\r",
                    "    RMdatalink.iwa.rdl.queryDB({collection: dbEnv + \"rdl_masterretailerrecords\",pageNo:1,pageSize: 50 ,sortBy:{},\r",
                    "     query:{'$or':[\r",
                    "        { \"store_name\": { $regex: searchText , $options: 'i' } },\r",
                    "        { \"store_state\": { $regex: searchText , $options: 'i' } }\r",
                    "     ]},fields:{store_name:1}},success,error);\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "    function success(){\r",
                    "    console.log(arguments[0].count) ;\r",
                    "\r",
                    "       if(parseInt(arguments[0].count) > 0 )\r",
                    "       {\r",
                    "\r",
                    "                var tempArray = arguments[0].items;\r",
                    "\r",
                    "                SearchDropDownStore.removeAll();\r",
                    "                SearchDropDownStore.sync() ;\r",
                    "\r",
                    "\r",
                    "                var tdata = new Array() ;\r",
                    "\r",
                    "               for(var i=0; i < tempArray.length ; i++){\r",
                    "\r",
                    "                   tdata.push({text: tempArray[i].store_name, _id : tempArray[i]._id });\r",
                    "               }\r",
                    "\r",
                    "\r",
                    "            SearchDropDownStore.setData(tdata);\r",
                    "            SearchDropDownStore.sync() ;\r",
                    "\r",
                    "\r",
                    "       }\r",
                    "\r",
                    "\r",
                    "\r",
                    "    }\r",
                    "\r",
                    "    function error(){\r",
                    "\r",
                    "\r",
                    "    }\r",
                    "\r",
                    "\r",
                    "}\r",
                    "\r",
                    "\r",
                    "/*\r",
                    "\r",
                    "    var searchText = searchField.getValue();\r",
                    "\r",
                    "\r",
                    "    var searchregx =  new RegExp(searchText ) ;\r",
                    "    console.log(searchregx) ;\r",
                    "    var SearchDropDownStore = Ext.getStore('SearchDropDownStore') ;\r",
                    "\r",
                    "\r",
                    "\r",
                    "    if(searchText.length == 0){\r",
                    "        return ;\r",
                    "    }\r",
                    "\r",
                    "    RMdatalink.iwa.rdl.queryDB({collection: dbEnv + \"rdl_vendor_masters\",pageNo:1,pageSize:10,sortBy:{},query:{\"vendor_name\":searchregx},fields:{\"vendor_name\":1}},suc,err);\r",
                    "\r",
                    "    function suc(){\r",
                    "\r",
                    "         _this.config.SearchDropDownView.showBy(searchField) ;\r",
                    "        console.log(arguments);\r",
                    "\r",
                    "        SearchDropDownStore.removeAll();\r",
                    "        SearchDropDownStore.sync() ;\r",
                    "\r",
                    "        var data = new Array();\r",
                    "\r",
                    "        for(var i=0 ; i< arguments[0].items.length;i++){\r",
                    "\r",
                    "\r",
                    "            var temp = {\r",
                    "\r",
                    "                text:arguments[0].items[i].vendor_name ,\r",
                    "                _id : arguments[0].items[i]._id\r",
                    "            };\r",
                    "\r",
                    "            data.push( temp );\r",
                    "        }\r",
                    "\r",
                    "        SearchDropDownStore.setData(data);\r",
                    "        SearchDropDownStore.sync();\r",
                    "\r",
                    "    }\r",
                    "\r",
                    "    function err(){\r",
                    "        failuer() ;\r",
                    "    }\r",
                    "\r",
                    "*/"
                ]
            },
            "designerId": "9b376149-bccb-4b5e-929f-6fbba2f4c802"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "createSearchDropDownView",
                "implHandler": [
                    "if(Ext.getCmp(\"SearchDropDownView\"))\r",
                    "{\r",
                    "\r",
                    " return ;\r",
                    "\r",
                    "}else{\r",
                    "\r",
                    "  this.config.SearchDropDownView  = Ext.widget('SearchDropDownView');\r",
                    "}\r",
                    ""
                ]
            },
            "designerId": "6313cfea-75b2-4fbf-b6b4-6b0ce4c05862"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "loadDropDownStore",
                "implHandler": [
                    "\r",
                    "var vendorStore  = Ext.getStore('SearchDropDownStore') ;\r",
                    "\r",
                    "\r",
                    "        var tempArray = new Array();\r",
                    "        tempArray = getArrayDataFromStore(Ext.getStore('vendors.Master'));\r",
                    "\r",
                    "       var SearchDropDownStore = Ext.getStore('SearchDropDownStore') ;\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "        SearchDropDownStore.removeAll();\r",
                    "        SearchDropDownStore.sync() ;\r",
                    "\r",
                    "\r",
                    "        var tdata = new Array() ;\r",
                    "\r",
                    "       for(var i=0; i < tempArray.length ; i++){\r",
                    "\r",
                    "           tdata.push({text: tempArray[i].vendor_name});\r",
                    "       }\r",
                    "\r",
                    "\r",
                    "    SearchDropDownStore.setData(tdata);\r",
                    "    SearchDropDownStore.sync() ;\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "function getArrayDataFromStore(store){\r",
                    "\r",
                    "    var data = new Array();\r",
                    "    data = store.getData().all;\r",
                    "\r",
                    "    var dataToReturn = new Array();\r",
                    "\r",
                    "    for(var i=0; i < data.length ; i++){\r",
                    "\r",
                    "        dataToReturn.push(data[i].data);\r",
                    "    }\r",
                    "\r",
                    "    return dataToReturn ;\r",
                    " }\r",
                    "\r",
                    "\r",
                    ""
                ]
            },
            "designerId": "1a430779-51af-4c10-816a-9737b344dc1c"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "list[itemId=SearchDropDownList]",
                "designer|targetType": "Ext.dataview.List",
                "fn": "onSearchDropDownListItemTap",
                "implHandler": [
                    "console.log(record);\r",
                    "console.log(\"select\");\r",
                    "\r",
                    "if(this.config.searchField.getItemId() == \"techSupportCompanyNameText\"){\r",
                    "\r",
                    "    RMdatalink.app.getController('TechSupportLog').config.tempCompanyId = record.data._id ;\r",
                    "    this.config.searchField.setValue(record.data.text);\r",
                    "}\r",
                    "else if(this.config.searchField.getItemId() == \"rtSalesPersonSearchFld\")\r",
                    "{\r",
                    "    var data = new Object();\r",
                    "\r",
                    "    var customerName = record.data.text ;\r",
                    "    var customersStore = Ext.getStore('products.RtSalesPersonStore') ;\r",
                    "\r",
                    "    if(customersStore.findExact(\"_id\",record.data._id) != -1 ){\r",
                    "        this.config.SearchDropDownView.hide();\r",
                    "        return ;\r",
                    "    }\r",
                    "\r",
                    "    customersStore.add({\r",
                    "        salesperson_name:customerName,\r",
                    "        _id: record.data._id\r",
                    "\r",
                    "    });\r",
                    "\r",
                    "    customersStore.sync() ;\r",
                    "\r",
                    "\r",
                    "    var cStoreLength = customersStore.getData().all.length ;\r",
                    "    var maxCommission = 100 ;\r",
                    "    var equalDivision = (maxCommission / cStoreLength).toFixed(2) ;\r",
                    "\r",
                    "    equalDivision = parseFloat(equalDivision , 0 ) ;\r",
                    "\r",
                    "    for(var i= (cStoreLength  - 1) ; i >= 0; i-- ){\r",
                    "\r",
                    "        if(i == 0)\r",
                    "        {\r",
                    "            customersStore.getAt(i).set('salesperson_commission',(maxCommission - (equalDivision * (cStoreLength - 1 )) )) ;\r",
                    "        }else\r",
                    "        {\r",
                    "            customersStore.getAt(i).set('salesperson_commission',( equalDivision )) ;\r",
                    "        }\r",
                    "\r",
                    "    }\r",
                    "\r",
                    "}\r",
                    "else if(this.config.searchField.getItemId() == \"rtDatalinkSalesPersonSearchFld\")\r",
                    "{\r",
                    "\r",
                    "     var data = new Object();\r",
                    "\r",
                    "    var customerName = record.data.text ;\r",
                    "    var customersStore = Ext.getStore('invoice.RtDatalinkSalesPersonStore') ;\r",
                    "\r",
                    "    if(customersStore.findExact(\"_id\",record.data._id) != -1 ){\r",
                    "        this.config.SearchDropDownView.hide();\r",
                    "        return ;\r",
                    "    }\r",
                    "\r",
                    "\r",
                    "\r",
                    "    customersStore.add({\r",
                    "        salesperson_name:customerName,\r",
                    "        _id: record.data._id\r",
                    "\r",
                    "    });\r",
                    "\r",
                    "    customersStore.sync() ;\r",
                    "\r",
                    "\r",
                    "    var cStoreLength = customersStore.getData().all.length ;\r",
                    "    var maxCommission = 100 ;\r",
                    "    var equalDivision = (maxCommission / cStoreLength).toFixed(2) ;\r",
                    "\r",
                    "    equalDivision = parseFloat(equalDivision , 0 ) ;\r",
                    "\r",
                    "    for(var i= (cStoreLength  - 1) ; i >= 0; i-- ){\r",
                    "\r",
                    "        if(i == 0)\r",
                    "        {\r",
                    "            customersStore.getAt(i).set('salesperson_commission',(maxCommission - (equalDivision * (cStoreLength - 1 )) )) ;\r",
                    "        }else\r",
                    "        {\r",
                    "            customersStore.getAt(i).set('salesperson_commission',( equalDivision )) ;\r",
                    "        }\r",
                    "\r",
                    "    }\r",
                    "\r",
                    "\r",
                    "}\r",
                    "else{\r",
                    "    console.log(record);\r",
                    "\r",
                    "    var data = new Object();\r",
                    "\r",
                    "    var customerName = record.data.text ;\r",
                    "    var customersStore = Ext.getStore('inhouse.CustomersStore') ;\r",
                    "\r",
                    "    if(customersStore.findExact(\"customer_name\",customerName) != -1 ){\r",
                    "        this.config.SearchDropDownView.hide();\r",
                    "        return ;\r",
                    "    }\r",
                    "\r",
                    "    var custType = Ext.ComponentQuery.query('#customersContainer')[0].down('#searchForRetailerRadioFld').getChecked() ? \"retailer\" : \"vendor\";\r",
                    "\r",
                    "    customersStore.add({\r",
                    "        customer_name:customerName,\r",
                    "        customer_id: record.data._id ,\r",
                    "        customer_type:custType\r",
                    "    });\r",
                    "\r",
                    "    customersStore.sync() ;\r",
                    "\r",
                    "\r",
                    "}\r",
                    "\r",
                    " this.config.SearchDropDownView.hide();"
                ],
                "name": "itemtap"
            },
            "designerId": "3195096a-c600-4893-aba2-e62910851b0d"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "list[itemId=inHouseCustomersList]",
                "designer|targetType": "Ext.dataview.List",
                "fn": "oninHouseCustomersListDisclose",
                "implHandler": [
                    "\r",
                    "list.getStore().removeAt(index);\r",
                    "list.getStore().sync() ;"
                ],
                "name": "disclose"
            },
            "designerId": "0aaa5c45-8922-439e-ab88-13e912ba0596"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "searchText"
                ],
                "fn": "loadInouseSalesDropDown",
                "implHandler": [
                    "      var _this = this ;\r",
                    "\r",
                    "      var SearchDropDownStore = Ext.getStore('SearchDropDownStore') ;\r",
                    "\r",
                    "\r",
                    "    RMdatalink.iwa.rdl.queryDB({collection: dbEnv + \"rdl_inhouserecords\",pageNo:1,pageSize: 50 ,sortBy:{},\r",
                    "     query:{'$or':[\r",
                    "\r",
                    "         { \"username\": { $regex: searchText , $options: 'i' } }\r",
                    "\r",
                    "     ]},fields:{username:1}},success,error);\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "    function success(){\r",
                    "    console.log(arguments[0].count) ;\r",
                    "\r",
                    "       if(parseInt(arguments[0].count) > 0 )\r",
                    "       {\r",
                    "\r",
                    "                var tempArray = arguments[0].items;\r",
                    "\r",
                    "                SearchDropDownStore.removeAll();\r",
                    "                SearchDropDownStore.sync() ;\r",
                    "\r",
                    "\r",
                    "                var tdata = new Array() ;\r",
                    "\r",
                    "               for(var i=0; i < tempArray.length ; i++){\r",
                    "\r",
                    "                   tdata.push({text: tempArray[i].username, _id : tempArray[i]._id });\r",
                    "               }\r",
                    "\r",
                    "\r",
                    "            SearchDropDownStore.setData(tdata);\r",
                    "            SearchDropDownStore.sync() ;\r",
                    "\r",
                    "\r",
                    "       }\r",
                    "\r",
                    "\r",
                    "\r",
                    "    }\r",
                    "\r",
                    "    function error(){\r",
                    "\r",
                    "\r",
                    "    }\r",
                    "/*\r",
                    "        var vendorStore  = Ext.getStore('SearchDropDownStore') ;\r",
                    "\r",
                    "\r",
                    "        var tempArray = new Array();\r",
                    "        tempArray = getArrayDataFromStore(Ext.getStore('inhouseMasterStore'));\r",
                    "\r",
                    "        var SearchDropDownStore = Ext.getStore('SearchDropDownStore') ;\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "        SearchDropDownStore.removeAll();\r",
                    "        SearchDropDownStore.sync() ;\r",
                    "\r",
                    "\r",
                    "        var tdata = new Array() ;\r",
                    "\r",
                    "       for(var i=0; i < tempArray.length ; i++){\r",
                    "\r",
                    "           tdata.push(\r",
                    "                       {\r",
                    "                           text: tempArray[i].username,\r",
                    "                           _id: tempArray[i]._id\r",
                    "                       }\r",
                    "                   );\r",
                    "       }\r",
                    "\r",
                    "\r",
                    "    SearchDropDownStore.setData(tdata);\r",
                    "    SearchDropDownStore.sync() ;\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "function getArrayDataFromStore(store){\r",
                    "\r",
                    "    var data = new Array();\r",
                    "    data = store.getData().all;\r",
                    "\r",
                    "    var dataToReturn = new Array();\r",
                    "\r",
                    "    for(var i=0; i < data.length ; i++){\r",
                    "\r",
                    "        dataToReturn.push(data[i].data);\r",
                    "    }\r",
                    "\r",
                    "    return dataToReturn ;\r",
                    " }\r",
                    "\r",
                    "\r",
                    "*/"
                ]
            },
            "designerId": "888cb329-4db5-4dbc-84f8-43b4c6b6e72d"
        }
    ]
}