{
    "type": "Ext.app.Controller",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "defaultStoreStatus": null,
        "designer|userClassName": "SearchController",
        "doNotSave": false,
        "isFromRetailerDetail": false,
        "isSearch": false,
        "searchKey": "ALL",
        "searchText": "",
        "searchTimeOut": 1000,
        "searchTme": 0
    },
    "configAlternates": {
        "searchTimeOut": "number",
        "searchTme": "number",
        "isSearch": "boolean",
        "isFromRetailerDetail": "boolean",
        "doNotSave": "boolean"
    },
    "designerId": "6d8b93b8-bdf1-4d36-940e-c20526c8f68a",
    "customConfigs": [
        {
            "group": "(Custom Properties)",
            "name": "searchTimeOut",
            "type": "string"
        },
        {
            "group": "(Custom Properties)",
            "name": "searchTme",
            "type": "string"
        },
        {
            "group": "(Custom Properties)",
            "name": "isSearch",
            "type": "string"
        },
        {
            "group": "(Custom Properties)",
            "name": "defaultSearchString",
            "type": "string"
        },
        {
            "group": "(Custom Properties)",
            "name": "isFromRetailerDetail",
            "type": "string"
        },
        {
            "group": "(Custom Properties)",
            "name": "defaultStoreStatus",
            "type": "string"
        },
        {
            "group": "(Custom Properties)",
            "name": "searchText",
            "type": "string"
        },
        {
            "group": "(Custom Properties)",
            "name": "searchKey",
            "type": "string"
        },
        {
            "group": "(Custom Properties)",
            "name": "doNotSave",
            "type": "string"
        }
    ],
    "cn": [
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button[action=searchRetailersBtn]",
                "designer|targetType": "Ext.Button",
                "fn": "onretailersVendorsSerchBtnTap",
                "implHandler": [
                    "\r",
                    "var searchText = \"\" ;\r",
                    "\r",
                    "this.config.searchTme = 900 ;\r",
                    "\r",
                    " switch(this.config.searchKey){\r",
                    "\r",
                    "        case \"store_products.rmpro_status\":\r",
                    "        case \"store_products.irugs_status\":\r",
                    "        case \"store_products.ecommerce_status\":\r",
                    "        case \"store_products.ecatalog_status\":\r",
                    "        case \"store_products.datalink_status\":\r",
                    "\r",
                    "       searchText = button.getParent().down('#retailersProductStatusSearchSlctFld').getValue() ;\r",
                    "\r",
                    "\r",
                    "        break;\r",
                    "     case \"user_since\":\r",
                    "        searchText = button.getParent().down('#rtVdrsDateSearchFld').getValue() ;\r",
                    "         break;\r",
                    "\r",
                    "     default:\r",
                    "        searchText = button.getParent().down('#rtVdrsSearchFld').getValue() ;\r",
                    "         break;\r",
                    " }\r",
                    "\r",
                    " button.getParent().down('#rtVdrsSearchFld').setValue(\"\") ;\r",
                    "\r",
                    "if(Ext.ComponentQuery.query('#RMContentPanel')[0].getActiveItem().getItemId() == 'card-retailers')\r",
                    "{\r",
                    "\r",
                    "  var activeTab = Ext.ComponentQuery.query('#retailersTabPanel')[0].getActiveItem().getItemId();\r",
                    "  var store_status = \"\" ;\r",
                    "    switch(activeTab){\r",
                    "\r",
                    "        case \"usersTab\":\r",
                    "            store_status = \"ACTIVE\" ;\r",
                    "\r",
                    "            break;\r",
                    "        case \"prospectsTab\":\r",
                    "            store_status = \"PROSPECTS\" ;\r",
                    "            break;\r",
                    "         case \"hotProspectsTab\":\r",
                    "            store_status = \"HOT_PROSPECTS\" ;\r",
                    "            break;\r",
                    "\r",
                    "        case \"inactiveTab\":\r",
                    "            store_status = \"INACTIVE\" ;\r",
                    "            break;\r",
                    "        case \"pendingTab\":\r",
                    "            store_status = \"PENDING\" ;\r",
                    "            break;\r",
                    "        case \"allRetailerTab\":\r",
                    "            store_status = \"\" ;\r",
                    "            this.doSearchForRetailers(searchText ) ;\r",
                    "\r",
                    "            return;\r",
                    "\r",
                    "    }\r",
                    "\r",
                    "\r",
                    "    this.searchRetailerByStatus(searchText,store_status,1 ) ;\r",
                    "\r",
                    "\r",
                    "\r",
                    "}\r",
                    "else{\r",
                    "        this.doSearchForProspectRetailersAtVendor(searchText ) ;\r",
                    "}\r",
                    ""
                ],
                "name": "tap"
            },
            "designerId": "eae2336e-bdeb-4b9d-b16d-41141457e329"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "searchText"
                ],
                "fn": "doSearchForRetailers",
                "implHandler": [
                    "\r",
                    "\r",
                    "var that = this ;\r",
                    "\r",
                    " var rtMainPanel = Ext.ComponentQuery.query('#retailersMaincontentpanel')[0] ;\r",
                    " rtMainPanel.down('#mainLoadingImg').setHidden(false) ;\r",
                    "\r",
                    "//isSearch\r",
                    "\r",
                    "\r",
                    "that.config.searchText = searchText ;\r",
                    "\r",
                    "if(! that.config.isSearch ){\r",
                    "\r",
                    "    createTimeOut() ;\r",
                    "\r",
                    "}else{\r",
                    "\r",
                    "     that.config.searchTme = 100 ;\r",
                    "}\r",
                    "\r",
                    "function createTimeOut(){\r",
                    "\r",
                    "    that.config.isSearch = true ;\r",
                    "\r",
                    "    Ext.Function.defer( onInterval , 100, that);\r",
                    "\r",
                    "\r",
                    "}\r",
                    "\r",
                    "function onInterval(){\r",
                    "\r",
                    "    that.config.searchTme += 100 ;\r",
                    "\r",
                    "    if(that.config.searchTme < that.config.searchTimeOut)  {\r",
                    "        createTimeOut() ;\r",
                    "    } else{\r",
                    "\r",
                    "        that.config.searchTme = 0 ;\r",
                    "        startSearch() ;\r",
                    "    }\r",
                    "\r",
                    "}\r",
                    "\r",
                    "\r",
                    "//RMdatalink.iwa.rdl.queryDB({collection: dbEnv + \"rdl_masterretailerrecords\",pageNo:1,pageSize: 50 ,sortBy:{},query:{ \"store_name\": { $regex: searchText , $options: 'i' } } ,fields:{}},success,error);\r",
                    "\r",
                    "function startSearch(){\r",
                    "     that.config.isSearch = false ;\r",
                    "\r",
                    "         var searchQuery =  that.getSearchQuery(\"\") ;\r",
                    "    /*\r",
                    "    {'$or':[\r",
                    "                                    { \"store_name\": { $regex: that.config.searchText , $options: 'i' } },\r",
                    "                                    { \"store_state\": { $regex: that.config.searchText , $options: 'i' } },\r",
                    "                                    { \"store_city\": { $regex: that.config.searchText , $options: 'i' } },\r",
                    "                                    { \"store_zip\": { $regex: that.config.searchText , $options: 'i' } }\r",
                    "                                ]}\r",
                    "    */\r",
                    "    RMdatalink.iwa.rdl.queryDB({collection: dbEnv + \"rdl_masterretailerrecords\",pageNo:1,pageSize: 50 ,sortBy:{\"store_name\":1},\r",
                    "                                query:searchQuery,fields:{}},success,error);\r",
                    "\r",
                    "\r",
                    "\r",
                    "}\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "function success(){\r",
                    "\r",
                    "        rtMainPanel.down('#mainLoadingImg').setHidden(true) ;\r",
                    "\r",
                    "        setRetailersList(arguments[0].items) ;\r",
                    "          setTotalCount(arguments[0].count,arguments[0].items) ;\r",
                    "\r",
                    "\r",
                    "\r",
                    "        Ext.ComponentQuery.query('#onlineVendorsRetailersCLbl')[0].setHtml(\"Total Retailers : \"+arguments[0].count) ;\r",
                    "\r",
                    "      var maxP = arguments[0].count / 50 ;\r",
                    "    maxP = Math.ceil(maxP) ;\r",
                    "    Ext.getStore('retailersMaster').config.maxPageNo = maxP ;\r",
                    "}\r",
                    "\r",
                    "function error(){\r",
                    "\r",
                    "   that.config.isSearch = false ;\r",
                    "}\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "function setRetailersList(data){\r",
                    "\r",
                    "\r",
                    "  //  var prospectList  = Ext.ComponentQuery.query('#RDOnlineVendorsTab')[0].down(\"#mainList\");\r",
                    "\r",
                    "\r",
                    "      var prospectStore = Ext.getStore('retailersMaster') ; // prospectList.getStore() ;\r",
                    "\r",
                    "    prospectStore.removeAll();\r",
                    "    prospectStore.sync();\r",
                    "\r",
                    "    prospectStore.setData(data) ;\r",
                    "\r",
                    "    prospectStore.sync();\r",
                    "\r",
                    "    //RMdatalink.app.getController('PaginationController').loadDependentStoresonMaster('retailersMaster');\r",
                    "\r",
                    "\r",
                    "\r",
                    "}\r",
                    "\r",
                    "\r",
                    "function setTotalCount(count,items)\r",
                    "{\r",
                    "\r",
                    "      var allTabTotalList = Ext.ComponentQuery.query('#allRetailerTab')[0].down('#retailerTotalsList');\r",
                    "\r",
                    "\r",
                    "    if(allTabTotalList ){\r",
                    "\r",
                    "        var alltStore = allTabTotalList.getStore();\r",
                    "        alltStore.removeAll();\r",
                    "        alltStore.sync();\r",
                    "\r",
                    "        alltStore.setData([\r",
                    "         {\r",
                    "\r",
                    "            store_count:count,\r",
                    "            city_count: \"\",\r",
                    "            user_count:\"\"\r",
                    "\r",
                    "        }]\r",
                    "        );\r",
                    "        alltStore.sync();\r",
                    "    }\r",
                    "\r",
                    "\r",
                    "\r",
                    "}\r",
                    "\r",
                    ""
                ]
            },
            "designerId": "a1d03b45-5bfe-46ed-a6e7-772ecb107575"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "searchText"
                ],
                "fn": "doSearchForActiveRetailers",
                "implHandler": [
                    "  var importFrmCsvController = RMdatalink.app.getController('ImportCSV') ;\r",
                    "\r",
                    "\r",
                    "\r",
                    "    var phones = [] ;\r",
                    "\r",
                    "\r",
                    "    for(var i =0 ; i < importFrmCsvController.config.retailerForVendor.length ; i++){\r",
                    "\r",
                    "\r",
                    "        phones.push(importFrmCsvController.config.retailerForVendor[i].retailer_phone) ;\r",
                    "    }\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "//RMdatalink.app.getController('VendorRetailerRelations').searchRetailers(searchText) ;\r",
                    "\r",
                    "\r",
                    "RMdatalink.iwa.rdl.queryDB({collection: dbEnv + \"rdl_masterretailerrecords\",pageNo:1,pageSize: 50 ,sortBy:{\"store_name\":1},query:{'$and':[\r",
                    "    { \"store_name\": { $regex: searchText , $options: 'i' } },\r",
                    "         {\r",
                    "               store_phone:{\r",
                    "                   $in:\r",
                    "                   phones\r",
                    "               }\r",
                    "\r",
                    "           }\r",
                    "]},fields:{}},success,error);\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "function success(){\r",
                    "console.log(arguments[0].count) ;\r",
                    "\r",
                    "   if(parseInt(arguments[0].count) > 0 )\r",
                    "   {\r",
                    "       setRetailersList(arguments[0].items) ;\r",
                    "\r",
                    "   }\r",
                    "\r",
                    "\r",
                    "\r",
                    "}\r",
                    "\r",
                    "function error(){\r",
                    "\r",
                    "\r",
                    "}\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "function setRetailersList(data){\r",
                    "\r",
                    "\r",
                    "    var prospectList  = Ext.ComponentQuery.query('#RDInStoreVendorsTab')[0].down(\"#mainList\");\r",
                    "\r",
                    "\r",
                    "      var prospectStore = prospectList.getStore() ;\r",
                    "    prospectStore.removeAll();\r",
                    "    prospectStore.sync();\r",
                    "\r",
                    "    prospectStore.setData(data) ;\r",
                    "\r",
                    "    prospectStore.sync();\r",
                    "\r",
                    "      prospectList.selectAll() ;\r",
                    "\r",
                    "\r",
                    "\r",
                    "}"
                ]
            },
            "designerId": "7f1a17a8-0f7a-4786-8f1f-e65f4d0d2185"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "searchText"
                ],
                "fn": "doSearchForProspectRetailersAtVendor",
                "implHandler": [
                    "\r",
                    "\r",
                    "var that = this ;\r",
                    "//isSearch\r",
                    "\r",
                    "\r",
                    "if(! that.config.isSearch ){\r",
                    "\r",
                    "    createTimeOut() ;\r",
                    "\r",
                    "}else{\r",
                    "\r",
                    "     that.config.searchTme = 100 ;\r",
                    "}\r",
                    "\r",
                    "function createTimeOut(){\r",
                    "\r",
                    "    that.config.isSearch = true ;\r",
                    "\r",
                    "    Ext.Function.defer( onInterval , 100, that);\r",
                    "\r",
                    "\r",
                    "}\r",
                    "\r",
                    "function onInterval(){\r",
                    "\r",
                    "    that.config.searchTme += 100 ;\r",
                    "\r",
                    "    if(that.config.searchTme < that.config.searchTimeOut)  {\r",
                    "        createTimeOut() ;\r",
                    "    } else{\r",
                    "\r",
                    "        that.config.searchTme = 0 ;\r",
                    "        startSearch() ;\r",
                    "    }\r",
                    "\r",
                    "}\r",
                    "\r",
                    "\r",
                    "//RMdatalink.iwa.rdl.queryDB({collection: dbEnv + \"rdl_masterretailerrecords\",pageNo:1,pageSize: 50 ,sortBy:{},query:{ \"store_name\": { $regex: searchText , $options: 'i' } } ,fields:{}},success,error);\r",
                    "\r",
                    "function startSearch(){\r",
                    "     that.config.isSearch = false ;\r",
                    "    RMdatalink.iwa.rdl.queryDB({collection: dbEnv + \"rdl_masterretailerrecords\",pageNo:1,pageSize: 50 ,sortBy:{\"store_name\":1},\r",
                    "                                query:{'$or':[\r",
                    "                                    { \"store_name\": { $regex: searchText , $options: 'i' } },\r",
                    "                                    { \"store_state\": { $regex: searchText , $options: 'i' } },\r",
                    "                                    { \"store_city\": { $regex: searchText , $options: 'i' } },\r",
                    "                                    { \"store_zip\": { $regex: searchText , $options: 'i' } }\r",
                    "                                ]},fields:{}},success,error);\r",
                    "\r",
                    "\r",
                    "\r",
                    "}\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "function success(){\r",
                    "\r",
                    "       setRetailersList(arguments[0].items) ;\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "    Ext.ComponentQuery.query('#onlineVendorsRetailersCLbl')[0].setHtml(\"Total Retailers : \"+arguments[0].count) ;\r",
                    "\r",
                    "\r",
                    "\r",
                    "}\r",
                    "\r",
                    "function error(){\r",
                    "\r",
                    "   that.config.isSearch = false ;\r",
                    "}\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "function setRetailersList(data){\r",
                    "\r",
                    "\r",
                    "  //  var prospectList  = Ext.ComponentQuery.query('#RDOnlineVendorsTab')[0].down(\"#mainList\");\r",
                    "\r",
                    "\r",
                    "      var prospectStore = Ext.getStore('retailers.prospectRTForVendor') ; // prospectList.getStore() ;\r",
                    "\r",
                    "    prospectStore.removeAll();\r",
                    "    prospectStore.sync();\r",
                    "\r",
                    "    prospectStore.setData(data) ;\r",
                    "\r",
                    "    prospectStore.sync();\r",
                    "\r",
                    "\r",
                    "\r",
                    "    try{\r",
                    "          var prospectList  = Ext.ComponentQuery.query('#RDOnlineVendorsTab')[0].down(\"#mainList\");\r",
                    "\r",
                    "\r",
                    "        prospectList.deselectAll() ;\r",
                    "    }catch(ex){\r",
                    "\r",
                    "        console.error(ex) ;\r",
                    "    }\r",
                    "\r",
                    "\r",
                    "}\r",
                    "\r",
                    ""
                ]
            },
            "designerId": "f63e62a9-4e1a-4bcb-9084-85fe595a1107"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "searchfield[action=searchRetailers]",
                "designer|targetType": "Ext.field.Search",
                "fn": "onsearchRetailersFldAction",
                "implHandler": [
                    "\r",
                    "\r",
                    "var searchText = textfield.getValue() ;\r",
                    "\r",
                    "\r",
                    "\r",
                    "if(Ext.ComponentQuery.query('#RMContentPanel')[0].getActiveItem().getItemId() == 'card-retailers')\r",
                    "{\r",
                    "\r",
                    "  var activeTab = Ext.ComponentQuery.query('#retailersTabPanel')[0].getActiveItem().getItemId();\r",
                    "  var store_status = \"\" ;\r",
                    "    switch(activeTab){\r",
                    "\r",
                    "        case \"usersTab\":\r",
                    "            store_status = \"ACTIVE\" ;\r",
                    "            break;\r",
                    "        case \"prospectsTab\":\r",
                    "            store_status = \"PROSPECTS\" ;\r",
                    "            break;\r",
                    "         case \"hotProspectsTab\":\r",
                    "            store_status = \"HOT_PROSPECTS\" ;\r",
                    "            break;\r",
                    "        case \"inactiveTab\":\r",
                    "            store_status = \"INACTIVE\" ;\r",
                    "            break;\r",
                    "        case \"pendingTab\":\r",
                    "            store_status = \"PENDING\" ;\r",
                    "            break;\r",
                    "        case \"allRetailerTab\":\r",
                    "            this.doSearchForRetailers(searchText ) ;\r",
                    "            break;\r",
                    "    }\r",
                    "\r",
                    "\r",
                    "    this.searchRetailerByStatus(searchText,store_status,1 ) ;\r",
                    "\r",
                    "\r",
                    "\r",
                    "}\r",
                    "else{\r",
                    "        this.doSearchForProspectRetailersAtVendor(searchText ) ;\r",
                    "}\r",
                    ""
                ],
                "name": "keyup"
            },
            "designerId": "0a78da3c-6194-412c-b060-7c256de96fa4"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button[action=searchActiveRetailersBtn]",
                "designer|targetType": "Ext.Button",
                "fn": "onsearchActiveRetailersBtnTap",
                "implHandler": [
                    "\r",
                    "\r",
                    "var searchText = button.getParent().down('#rtVdrsSearchFld').getValue() ;\r",
                    "this.doSearchForActiveRetailers(searchText ) ;\r",
                    "\r",
                    ""
                ],
                "name": "tap"
            },
            "designerId": "db745fbc-b0c9-42c6-98e9-43f5a5551b43"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "searchfield[action=searchActiveRetailers]",
                "designer|targetType": "Ext.field.Search",
                "fn": "onsearchActiveRetailersfieldAction",
                "implHandler": [
                    "\r",
                    "        var searchText = textfield.getValue() ;\r",
                    "\r",
                    "        this.doSearchForActiveRetailers(searchText ) ;"
                ],
                "name": "keyup"
            },
            "designerId": "770588ea-a9e3-42f4-bf86-331d3a148454"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "searchText",
                    "store_status",
                    "page_no",
                    "productStatusQuery"
                ],
                "fn": "searchRetailerByStatus",
                "implHandler": [
                    "\r",
                    " var rtMainPanel = Ext.ComponentQuery.query('#retailersMaincontentpanel')[0] ;\r",
                    "// rtMainPanel.down('#mainLoadingImg').setHidden(false) ;\r",
                    "var that = this ;\r",
                    "\r",
                    "\r",
                    "if(this.config.isFromRetailerDetail){\r",
                    "//    this.config.isFromRetailerDetail = false ;\r",
                    "    searchText = this.config.defaultSearchString ;\r",
                    "    store_status = this.config.defaultStoreStatus;\r",
                    "\r",
                    "}\r",
                    "\r",
                    "that.config.searchText = searchText ;\r",
                    "\r",
                    "//isSearch\r",
                    "\r",
                    "\r",
                    "if(! that.config.isSearch ){\r",
                    "\r",
                    "    createTimeOut() ;\r",
                    "\r",
                    "}else{\r",
                    "\r",
                    "     that.config.searchTme = 100 ;\r",
                    "}\r",
                    "\r",
                    "function createTimeOut(){\r",
                    "\r",
                    "    that.config.isSearch = true ;\r",
                    "\r",
                    "    Ext.Function.defer( onInterval , 100, that);\r",
                    "\r",
                    "\r",
                    "}\r",
                    "\r",
                    "function onInterval(){\r",
                    "\r",
                    "    that.config.searchTme += 100 ;\r",
                    "\r",
                    "    if(that.config.searchTme < that.config.searchTimeOut)  {\r",
                    "        createTimeOut() ;\r",
                    "    } else{\r",
                    "\r",
                    "        that.config.searchTme = 0 ;\r",
                    "        startSearch() ;\r",
                    "    }\r",
                    "\r",
                    "}\r",
                    "\r",
                    "\r",
                    "\r",
                    "function startSearch(){\r",
                    "        that.config.isSearch = false ;\r",
                    "\r",
                    " rtMainPanel.down('#mainLoadingImg').setHidden(false) ;\r",
                    "\r",
                    "    if(store_status && store_status !== \"\")\r",
                    "     {\r",
                    "\r",
                    "         var tStatus = store_status ;\r",
                    "         if(store_status==\"PROSPECTS\"){\r",
                    "             tStatus = \"PROSPECT\" ;\r",
                    "         }else if(store_status == \"HOT_PROSPECTS\"){\r",
                    "               tStatus = \"HOT_PROSPECT\" ;\r",
                    "         }\r",
                    "\r",
                    "         var pStatus = null ;\r",
                    "         if(store_status == \"INACTIVE\"){\r",
                    "             pStatus =  {'$and':\r",
                    "              [\r",
                    "                 {\"store_products.datalink_status\" : tStatus},\r",
                    "                 {\"store_products.ecatalog_status\" : tStatus},\r",
                    "                 {\"store_products.ecommerce_status\" :tStatus},\r",
                    "                 {\"store_products.irugs_status\" : tStatus},\r",
                    "                 {\"store_products.rmpro_status\" : tStatus}\r",
                    "              ]} ;\r",
                    "         }else\r",
                    "         {\r",
                    "             pStatus =  {'$or':\r",
                    "                [\r",
                    "                 {\"store_products.datalink_status\" : tStatus},\r",
                    "                 {\"store_products.ecatalog_status\" : tStatus},\r",
                    "                 {\"store_products.ecommerce_status\" :tStatus},\r",
                    "                 {\"store_products.irugs_status\" : tStatus},\r",
                    "                 {\"store_products.rmpro_status\" : tStatus}\r",
                    "                 ]} ;\r",
                    "         }\r",
                    "\r",
                    "\r",
                    "         var searchQuery =  that.getSearchQuery(store_status) ;\r",
                    "         /*\r",
                    "              {'$or':[\r",
                    "                                            { \"store_name\": { $regex: that.config.searchText  , $options: 'i' } },\r",
                    "                                            { \"store_state\": { $regex: that.config.searchText  , $options: 'i' } },\r",
                    "                                            { \"store_city\": { $regex: that.config.searchText  , $options: 'i' } },\r",
                    "                                            { \"store_zip\": { $regex: that.config.searchText  , $options: 'i' } }\r",
                    "                     ]}\r",
                    "         */\r",
                    "\r",
                    "         var tquery = {'$and':[\r",
                    "            searchQuery,\r",
                    "             pStatus\r",
                    "\r",
                    "        ]} ;\r",
                    "\r",
                    "\r",
                    "         RMdatalink.iwa.rdl.queryDB({collection: dbEnv + \"rdl_masterretailerrecords\",pageNo:page_no ,pageSize: 50 ,sortBy:{\"store_name\":1},\r",
                    "         query:tquery,\r",
                    "        fields:{}},success,error);\r",
                    "     }else{\r",
                    "\r",
                    "        var searchQuery =  that.getSearchQuery(store_status) ;\r",
                    "         var tquery = {\r",
                    "             '$and':\r",
                    "             [\r",
                    "\r",
                    "            searchQuery\r",
                    "\r",
                    "        ]} ;\r",
                    "\r",
                    "\r",
                    "         RMdatalink.iwa.rdl.queryDB({collection: dbEnv + \"rdl_masterretailerrecords\",pageNo:page_no ,pageSize: 50 ,sortBy:{\"store_name\":1},\r",
                    "         query:tquery,\r",
                    "        fields:{}},success,error);\r",
                    "\r",
                    "     }\r",
                    "\r",
                    "}\r",
                    "\r",
                    "\r",
                    "\r",
                    "var retailersStore = Ext.getStore('retailersMaster') ;\r",
                    "\r",
                    "\r",
                    "function success(){\r",
                    "\r",
                    "\r",
                    "\r",
                    "     rtMainPanel.down('#mainLoadingImg').setHidden(true) ;\r",
                    "        Ext.Viewport.setMasked(false);\r",
                    "\r",
                    "    if(page_no > 1 && arguments[0].items.length ==0 ){\r",
                    "\r",
                    "\r",
                    "        rollBackStorePageNo() ;\r",
                    "        //retailersStore.setPageNo( parseInt(page_no) - 1 ) ;\r",
                    "        Ext.Msg.alert(\"Alert\",\"Next page is not available.\",Ext.emptyFn);\r",
                    "        return;\r",
                    "    }\r",
                    "       setRetailersList(arguments[0].items) ;\r",
                    "        setTotalList(arguments[0].count,arguments[0].items);\r",
                    "\r",
                    "    var maxP = arguments[0].count / 50 ;\r",
                    "    maxP = Math.ceil(maxP) ;\r",
                    "     RMdatalink.app.getController('PaginationController').setRetailersActiveTabPageNo(maxP) ;\r",
                    "\r",
                    "\r",
                    "\r",
                    "}\r",
                    "\r",
                    "function error(){\r",
                    "\r",
                    "     rtMainPanel.down('#mainLoadingImg').setHidden(true) ;\r",
                    "      Ext.Viewport.setMasked(false);\r",
                    "}\r",
                    "\r",
                    "function rollBackStorePageNo(){\r",
                    "    var activeListStore = null ;\r",
                    "      switch(store_status){\r",
                    "        case \"ACTIVE\":\r",
                    "\r",
                    "            activeListStore = Ext.ComponentQuery.query('#usersTab')[0].down('#retailerList').getStore();\r",
                    "\r",
                    "            break;\r",
                    "        case \"PROSPECTS\":\r",
                    "\r",
                    "            activeListStore = Ext.ComponentQuery.query('#prospectsTab')[0].down('#retailerList').getStore();\r",
                    "\r",
                    "            break;\r",
                    "        case \"HOT_PROSPECTS\":\r",
                    "\r",
                    "            activeListStore = Ext.ComponentQuery.query('#hotProspectsTab')[0].down('#retailerList').getStore();\r",
                    "\r",
                    "            break;\r",
                    "\r",
                    "        case \"INACTIVE\":\r",
                    "\r",
                    "            activeListStore = Ext.ComponentQuery.query('#inactiveTab')[0].down('#retailerList').getStore();\r",
                    "\r",
                    "            break;\r",
                    "        case \"PENDING\":\r",
                    "\r",
                    "            activeListStore = Ext.ComponentQuery.query('#pendingTab')[0].down('#retailerList').getStore();\r",
                    "\r",
                    "            break;\r",
                    "          case \"\":\r",
                    "              activeListStore = retailersStore ;\r",
                    "              break;\r",
                    "    }\r",
                    "\r",
                    "    if(activeListStore)\r",
                    "    {\r",
                    "        activeListStore.setPageNo( parseInt(page_no) - 1 ) ;\r",
                    "    }\r",
                    "\r",
                    "}\r",
                    "\r",
                    "\r",
                    "function setTotalList(count,items){\r",
                    "    var totalsList = null ;\r",
                    "\r",
                    "\r",
                    "       switch(store_status){\r",
                    "        case \"ACTIVE\":\r",
                    "\r",
                    "            totalsList = Ext.ComponentQuery.query('#usersTab')[0].down('#retailerTotalsList');\r",
                    "\r",
                    "            break;\r",
                    "        case \"PROSPECTS\":\r",
                    "\r",
                    "            totalsList = Ext.ComponentQuery.query('#prospectsTab')[0].down('#retailerTotalsList');\r",
                    "\r",
                    "            break;\r",
                    "        case \"HOT_PROSPECTS\":\r",
                    "\r",
                    "            totalsList = Ext.ComponentQuery.query('#hotProspectsTab')[0].down('#retailerTotalsList');\r",
                    "\r",
                    "            break;\r",
                    "\r",
                    "        case \"INACTIVE\":\r",
                    "\r",
                    "            totalsList = Ext.ComponentQuery.query('#inactiveTab')[0].down('#retailerTotalsList');\r",
                    "\r",
                    "            break;\r",
                    "        case \"PENDING\":\r",
                    "\r",
                    "            totalsList = Ext.ComponentQuery.query('#pendingTab')[0].down('#retailerTotalsList');\r",
                    "\r",
                    "            break;\r",
                    "           case \"\":\r",
                    "            totalsList = Ext.ComponentQuery.query('#allRetailerTab')[0].down('#retailerTotalsList');\r",
                    "               break;\r",
                    "    }\r",
                    "\r",
                    "\r",
                    "       var totalMonthlyPrice = 0 ;\r",
                    "\r",
                    "    for(var i=0 ; i < items.length ; i ++ ){\r",
                    "\r",
                    "          var tempTotalPayble =  getMonthlyPaying(items[i]) ;\r",
                    "\r",
                    "\r",
                    "        if(tempTotalPayble){\r",
                    "\r",
                    "            totalMonthlyPrice += parseFloat(tempTotalPayble,0);\r",
                    "        }\r",
                    "    }\r",
                    "\r",
                    "\r",
                    "    totalMonthlyPrice = totalMonthlyPrice.toFixed(2) ;\r",
                    "\r",
                    "    if(totalsList){\r",
                    "\r",
                    "        var tStore = totalsList.getStore();\r",
                    "        tStore.removeAll();\r",
                    "        tStore.sync();\r",
                    "\r",
                    "\r",
                    "        tStore.setData(\r",
                    "         {\r",
                    "\r",
                    "            store_count:count,\r",
                    "            city_count: \"\",\r",
                    "            user_count:\"\",\r",
                    "             monthly_payble: totalMonthlyPrice\r",
                    "\r",
                    "        }\r",
                    "        );\r",
                    "        tStore.sync();\r",
                    "    }\r",
                    "\r",
                    "}\r",
                    "\r",
                    "function setRetailersList(data){\r",
                    "\r",
                    "if(that.config.isFromRetailerDetail){\r",
                    "    that.config.isFromRetailerDetail = false ;\r",
                    "}else{\r",
                    "\r",
                    "    //var rtsStore = getStoreByRemovePreviousRetailers();\r",
                    "    // removeCurrentStatusRetailers() ;\r",
                    "}\r",
                    "\r",
                    "    var rtsStore = getStoreByRemovePreviousRetailers();\r",
                    "    rtsStore.setData(data);\r",
                    "    rtsStore.sync();\r",
                    "    // retailersStore.addData( data ) ;\r",
                    "\r",
                    "\r",
                    "// RMdatalink.app.getController('PaginationController').loadDependentStoresonMaster('retailersMaster');\r",
                    "}\r",
                    "\r",
                    "function removeCurrentStatusRetailers(){\r",
                    "return ;\r",
                    "    var record = retailersStore.findExact(\"store_status\" , store_status);\r",
                    "\r",
                    "\r",
                    "    while(record != -1)\r",
                    "    {\r",
                    "        console.log(record) ;\r",
                    "\r",
                    "          console.log(store_status) ;\r",
                    "        retailersStore.removeAt( record ) ;\r",
                    "\r",
                    "        record = retailersStore.find(\"store_status\" , store_status);\r",
                    "    }\r",
                    "}\r",
                    "\r",
                    "\r",
                    "function getStoreByRemovePreviousRetailers(){\r",
                    "     var rtStore = null ;\r",
                    "     switch(store_status){\r",
                    "        case \"ACTIVE\":\r",
                    "\r",
                    "            rtStore = Ext.ComponentQuery.query('#usersTab')[0].down('#retailerList').getStore();\r",
                    "\r",
                    "            break;\r",
                    "        case \"PROSPECTS\":\r",
                    "\r",
                    "            rtStore = Ext.ComponentQuery.query('#prospectsTab')[0].down('#retailerList').getStore();\r",
                    "\r",
                    "            break;\r",
                    "        case \"HOT_PROSPECTS\":\r",
                    "\r",
                    "            rtStore = Ext.ComponentQuery.query('#hotProspectsTab')[0].down('#retailerList').getStore();\r",
                    "\r",
                    "            break;\r",
                    "\r",
                    "        case \"INACTIVE\":\r",
                    "\r",
                    "            rtStore = Ext.ComponentQuery.query('#inactiveTab')[0].down('#retailerList').getStore();\r",
                    "\r",
                    "            break;\r",
                    "        case \"PENDING\":\r",
                    "\r",
                    "            rtStore = Ext.ComponentQuery.query('#pendingTab')[0].down('#retailerList').getStore();\r",
                    "\r",
                    "            break;\r",
                    "         default:\r",
                    "            rtStore = retailersStore;\r",
                    "             break;\r",
                    "\r",
                    "\r",
                    "    }\r",
                    "    rtStore.removeAll();\r",
                    "    rtStore.sync();\r",
                    "\r",
                    "    return rtStore;\r",
                    "}\r",
                    "\r",
                    "\r",
                    "\r",
                    "function getMonthlyPaying(rec){\r",
                    "\r",
                    "                       var value = 0 ;\r",
                    "\r",
                    "                       if(rec.store_products && rec.product_billng)\r",
                    "                       {\r",
                    "                       if(rec.store_products.rmpro_status && rec.store_products.rmpro_status == \"ACTIVE\" && rec.product_billng && rec.product_billng.product_rmpro){\r",
                    "\r",
                    "                           value += parseFloat(rec.product_billng.product_rmpro.monthly_membership,0) ;\r",
                    "                       }\r",
                    "\r",
                    "                       if(rec.store_products.datalink_status && rec.store_products.datalink_status == \"ACTIVE\" && rec.product_billng && rec.product_billng.product_datalink){\r",
                    "\r",
                    "                           value += parseFloat(rec.product_billng.product_datalink.monthly_membership,0) ;\r",
                    "                       }\r",
                    "\r",
                    "                       value.toFixed(2);\r",
                    "\r",
                    "                       if(value === 0)\r",
                    "                           return \"0.00\";\r",
                    "                       else\r",
                    "                       {\r",
                    "                           var sumStr = \"\"+ value;\r",
                    "                           var sumStrSplit0 = sumStr.split('.')[0];\r",
                    "\r",
                    "                           var len = sumStrSplit0.length;\r",
                    "                           if(len > 3)\r",
                    "                           {\r",
                    "                               sumStr1 = sumStrSplit0.substr(0,(len-3));\r",
                    "                               sumStr2 = sumStrSplit0.substr((len-3),(len-1));\r",
                    "                               sumStrSplit0 =  sumStr1 + ',' + sumStr2 ;\r",
                    "                           }\r",
                    "\r",
                    "                           if(sumStr.split('.')[1])\r",
                    "                               return sumStrSplit0 + '.' +sumStr.split('.')[1];\r",
                    "                           else\r",
                    "                           {\r",
                    "                               return  sumStrSplit0;\r",
                    "                           }\r",
                    "                       }\r",
                    "                       }\r",
                    "    return 0 ;\r",
                    "\r",
                    "}"
                ]
            },
            "designerId": "c05c1375-407d-4e2d-bad1-07ac5e095ab4"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button[itemId=retailersCustomFilterBtn]",
                "designer|targetType": "Ext.Button",
                "fn": "onretailersCustomFilterBtnTap",
                "implHandler": [
                    "this.getCustomSearchComponent().showBy(button) ;"
                ],
                "name": "tap"
            },
            "designerId": "0ce0f1d8-05c0-4ce4-9ba0-69111fe654fa"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "getCustomSearchComponent",
                "implHandler": [
                    "if(Ext.ComponentQuery.query(\"#SearchDropDownView\")[0])\r",
                    "{\r",
                    "\r",
                    " return Ext.ComponentQuery.query(\"#SearchDropDownView\")[0];\r",
                    "\r",
                    "}else{\r",
                    "\r",
                    " return Ext.widget('rtCustomSearchPanel');\r",
                    "}\r",
                    ""
                ]
            },
            "designerId": "fdc5c858-fee1-4c2d-8901-b5969905d75c"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button[itemId=customSearchApplyBtn]",
                "designer|targetType": "Ext.Button",
                "fn": "oncustomSearchApplyBtnTap",
                "implHandler": [
                    "\r",
                    "\r",
                    "var doNotSave = this.config.doNotSave ;\r",
                    "\r",
                    "var that = this ;\r",
                    "\r",
                    " var rtMainPanel = Ext.ComponentQuery.query('#retailersMaincontentpanel')[0] ;\r",
                    " rtMainPanel.down('#mainLoadingImg').setHidden(false) ;\r",
                    "\r",
                    "\r",
                    "var form = button.getParent() ;\r",
                    "\r",
                    "var values = form.getValues() ;\r",
                    "\r",
                    "\r",
                    "if(doNotSave)\r",
                    "{\r",
                    "        var queryToExecute = getSearchQuery() ;\r",
                    "                console.log(queryToExecute) ;\r",
                    "\r",
                    "                startSearch(queryToExecute) ;\r",
                    "}\r",
                    "else{\r",
                    "    if(Ext.ComponentQuery.query('#RMContentPanel')[0].getActiveItem().getItemId() == 'card-retailers')\r",
                    "    {\r",
                    "\r",
                    "      var activeTab = Ext.ComponentQuery.query('#retailersTabPanel')[0].getActiveItem().getItemId();\r",
                    "      var store_status = \"\" ;\r",
                    "        switch(activeTab){\r",
                    "\r",
                    "            case \"allRetailerTab\":\r",
                    "\r",
                    "                var queryToExecute = getSearchQuery() ;\r",
                    "                console.log(queryToExecute) ;\r",
                    "\r",
                    "                startSearch(queryToExecute) ;\r",
                    "\r",
                    "\r",
                    "                break;\r",
                    "            case \"\":\r",
                    "\r",
                    "                break;\r",
                    "            default :\r",
                    "        }\r",
                    "\r",
                    "\r",
                    "    }\r",
                    "}\r",
                    "\r",
                    "function getSearchQuery(){\r",
                    "\r",
                    "    var query = {} ;\r",
                    "\r",
                    "    query.$and = [] ;\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "    if(values.AccNoChk){\r",
                    "\r",
                    "        query.$and.push(\r",
                    "            {\r",
                    "                account_no:  { $regex:   values.AccNo , $options: 'i' }\r",
                    "            }\r",
                    "\r",
                    "        );\r",
                    "    }\r",
                    "\r",
                    "    if(values.CityChk){\r",
                    "         query.$and.push(\r",
                    "            {\r",
                    "                store_city: { $regex:   values.City, $options: 'i' }\r",
                    "            }\r",
                    "\r",
                    "        );\r",
                    "    }\r",
                    "\r",
                    "\r",
                    "     if(values.PhoneChk){\r",
                    "         query.$and.push(\r",
                    "            {\r",
                    "                store_phone:  { $regex: values.Phone , $options: 'i' }\r",
                    "            }\r",
                    "\r",
                    "        );\r",
                    "    }\r",
                    "\r",
                    "\r",
                    "     if(values.StateChk){\r",
                    "         query.$and.push(\r",
                    "            {\r",
                    "                store_state:  { $regex:   values.State , $options: 'i' }\r",
                    "            }\r",
                    "\r",
                    "        );\r",
                    "    }\r",
                    "\r",
                    "\r",
                    "     if(values.StoreEmailChk){\r",
                    "         query.$and.push(\r",
                    "            {\r",
                    "                store_email:  { $regex:   values.StoreEmail , $options: 'i' }\r",
                    "            }\r",
                    "\r",
                    "        );\r",
                    "    }\r",
                    "\r",
                    "\r",
                    "    if(values.StoreNameChk){\r",
                    "         query.$and.push(\r",
                    "            {\r",
                    "                store_name: { $regex:   values.StoreName , $options: 'i' }\r",
                    "            }\r",
                    "\r",
                    "        );\r",
                    "    }\r",
                    "\r",
                    "\r",
                    "   if(values.StoreWebsiteChk){\r",
                    "         query.$and.push(\r",
                    "            {\r",
                    "                store_website: { $regex:   values.StoreWebsite , $options: 'i' }\r",
                    "            }\r",
                    "\r",
                    "        );\r",
                    "    }\r",
                    "\r",
                    "\r",
                    "\r",
                    "   if(values.createdByChk){\r",
                    "         query.$and.push(\r",
                    "            {\r",
                    "                created_by:   { $regex: values.createdBy , $options: 'i' }\r",
                    "            }\r",
                    "\r",
                    "        );\r",
                    "    }\r",
                    "\r",
                    "\r",
                    "     if(values.contactNameChk){\r",
                    "         query.$and.push(\r",
                    "            {\r",
                    "                $or:[\r",
                    "                        {\r",
                    "                            manager_firstname: { $regex: values.contactName , $options: 'i' }\r",
                    "                        },\r",
                    "                        {\r",
                    "                            manager_lastname:{ $regex:values.contactName  , $options: 'i' }\r",
                    "                        }\r",
                    "                   ]\r",
                    "\r",
                    "\r",
                    "            }\r",
                    "\r",
                    "        );\r",
                    "    }\r",
                    "\r",
                    "\r",
                    "         var temp = { $or:[] };\r",
                    "         var q = {} ;\r",
                    "     if(values.allProdChk){\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "         if(values.dlstatus){\r",
                    "              q['store_products.datalink_status'] =  values.allProd  ;// { $regex: values.allProd  , $options: 'i' } ;\r",
                    "             temp.$or.push(q);\r",
                    "         }\r",
                    "\r",
                    "\r",
                    "         if(values.rmprostatus){\r",
                    "             q = {} ;\r",
                    "              q[\"store_products.rmpro_status\"] = values.allProd  ;//{ $regex: values.allProd  , $options: 'i' } ;\r",
                    "             temp.$or.push(q);\r",
                    "         }\r",
                    "\r",
                    "\r",
                    "\r",
                    "         if(values.iRugzStatus){\r",
                    "             q = {} ;\r",
                    "              q[ \"store_products.irugs_status\"] = values.allProd  ;//{ $regex: values.allProd  , $options: 'i' } ;\r",
                    "             temp.$or.push(q);\r",
                    "         }\r",
                    "\r",
                    "\r",
                    "\r",
                    "         if(values.eComstatus){\r",
                    "             q = {} ;\r",
                    "              q[\"store_products.ecommerce_status\"] = values.allProd  ;//{ $regex: values.allProd  , $options: 'i' } ;\r",
                    "             temp.$or.push(q);\r",
                    "         }\r",
                    "\r",
                    "\r",
                    "         if(values.eCatStatus){\r",
                    "             q = {} ;\r",
                    "              q[\"store_products.ecatalog_status\"] =values.allProd  ;// { $regex: values.allProd  , $options: 'i' } ;\r",
                    "            temp.$or.push(q);\r",
                    "         }\r",
                    "         if(values.vipStatus){\r",
                    "             q = {} ;\r",
                    "              q[\"store_products.vip_status\"] =values.allProd  ;// { $regex: values.allProd  , $options: 'i' } ;\r",
                    "            temp.$or.push(q);\r",
                    "         }\r",
                    "\r",
                    "\r",
                    "\r",
                    "         query.$and.push(temp );\r",
                    "    }\r",
                    "\r",
                    "\r",
                    "        temp =  { $or:[] } ;\r",
                    "        if(values.dlstatus){\r",
                    "            q = {} ;\r",
                    "              q['store_products.datalink_status'] =  { $regex: \"\"  , $options: 'i' } ;\r",
                    "             temp.$or.push(q);\r",
                    "            //query.$and.push(q);\r",
                    "         }\r",
                    "\r",
                    "\r",
                    "         if(values.rmprostatus){\r",
                    "             q = {} ;\r",
                    "              q[\"store_products.rmpro_status\"] =  { $regex: \"\" , $options: 'i' } ;\r",
                    "              temp.$or.push(q);\r",
                    "             //query.$and.push(q);\r",
                    "         }\r",
                    "\r",
                    "\r",
                    "\r",
                    "         if(values.iRugzStatus){\r",
                    "             q = {} ;\r",
                    "              q[ \"store_products.irugs_status\"] = { $regex: \"\" , $options: 'i' } ;\r",
                    "              temp.$or.push(q);\r",
                    "             //query.$and.push(q);\r",
                    "         }\r",
                    "\r",
                    "\r",
                    "\r",
                    "         if(values.eComstatus){\r",
                    "             q = {} ;\r",
                    "              q[\"store_products.ecommerce_status\"] =  { $regex: \"\" , $options: 'i' } ;\r",
                    "              temp.$or.push(q);\r",
                    "             // query.$and.push(q);\r",
                    "         }\r",
                    "\r",
                    "\r",
                    "         if(values.eCatStatus){\r",
                    "             q = {} ;\r",
                    "              q[\"store_products.ecatalog_status\"] = { $regex: \"\" , $options: 'i' } ;\r",
                    "\r",
                    "              temp.$or.push(q);\r",
                    "             // query.$and.push(q);\r",
                    "         }\r",
                    "         if(values.vipStatus){\r",
                    "             q = {} ;\r",
                    "              q[\"store_products.vip_status\"] = { $regex: \"\" , $options: 'i' } ;\r",
                    "\r",
                    "              temp.$or.push(q);\r",
                    "\r",
                    "         }\r",
                    "\r",
                    "            if(temp.$or.length > 0 ){\r",
                    "              //   temp.$or.push(q);\r",
                    "              query.$and.push(temp );\r",
                    "            }\r",
                    "\r",
                    "\r",
                    "\r",
                    "    if(values.createdAfterChk){\r",
                    "\r",
                    "         //searchQuery._id = { $lt: objectIdWithTimestamp(that.config.searchText ) }  ;\r",
                    "            var tDate = new Date( values.createdAfter );\r",
                    "            tDate.setDate(tDate.getDate() - 1);\r",
                    "\r",
                    "         query.$and.push(\r",
                    "            {\r",
                    "                user_since: { $gt : tDate }\r",
                    "            }\r",
                    "\r",
                    "        );\r",
                    "    }\r",
                    "\r",
                    "    if(values.VendorPartnerChk &&  values.VendorPartner){\r",
                    "\r",
                    "\r",
                    "\r",
                    "         query.$and.push(\r",
                    "            {\r",
                    "                'e_commerce_info.vip_vendor': values.VendorPartner\r",
                    "            }\r",
                    "\r",
                    "        );\r",
                    "    }\r",
                    "\r",
                    "//VendorPartnerChk\r",
                    "\r",
                    "    return query ;\r",
                    "}\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "///////////////////////////////////////////////////////\r",
                    "\r",
                    "\r",
                    "\r",
                    "function startSearch(qry){\r",
                    "     that.config.isSearch = false ;\r",
                    "\r",
                    "         var searchQuery =  qry ;\r",
                    "\r",
                    "    RMdatalink.iwa.rdl.queryDB({collection: dbEnv + \"rdl_masterretailerrecords\",pageNo:1,pageSize: 50 ,sortBy:{\"store_name\":1},\r",
                    "                                query:searchQuery,fields:{}},success,error);\r",
                    "\r",
                    "\r",
                    "\r",
                    "}\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "function success(){\r",
                    "\r",
                    "     if(!doNotSave)\r",
                    "     {\r",
                    "        that.saveCustomFilter(values) ;\r",
                    "     }else{\r",
                    "\r",
                    "         that.config.doNotSave = false ;\r",
                    "     }\r",
                    "        rtMainPanel.down('#mainLoadingImg').setHidden(true) ;\r",
                    "\r",
                    "        setRetailersList(arguments[0].items) ;\r",
                    "          setTotalCount(arguments[0].count,arguments[0].items) ;\r",
                    "\r",
                    "\r",
                    "\r",
                    "        Ext.ComponentQuery.query('#onlineVendorsRetailersCLbl')[0].setHtml(\"Total Retailers : \"+arguments[0].count) ;\r",
                    "\r",
                    "      var maxP = arguments[0].count / 50 ;\r",
                    "    maxP = Math.ceil(maxP) ;\r",
                    "    Ext.getStore('retailersMaster').config.maxPageNo = maxP ;\r",
                    "}\r",
                    "\r",
                    "function error(){\r",
                    "    RMdatalink.app.getController('PaginationController').initialiseRetailers(true) ;\r",
                    "   that.config.isSearch = false ;\r",
                    "\r",
                    "}\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "function setRetailersList(data){\r",
                    "\r",
                    "\r",
                    "  //  var prospectList  = Ext.ComponentQuery.query('#RDOnlineVendorsTab')[0].down(\"#mainList\");\r",
                    "\r",
                    "\r",
                    "      var prospectStore = Ext.getStore('retailersMaster') ; // prospectList.getStore() ;\r",
                    "\r",
                    "    prospectStore.removeAll();\r",
                    "    prospectStore.sync();\r",
                    "\r",
                    "    prospectStore.setData(data) ;\r",
                    "\r",
                    "    prospectStore.sync();\r",
                    "\r",
                    "    //RMdatalink.app.getController('PaginationController').loadDependentStoresonMaster('retailersMaster');\r",
                    "\r",
                    "\r",
                    "\r",
                    "}\r",
                    "\r",
                    "\r",
                    "function setTotalCount(count,items)\r",
                    "{\r",
                    "\r",
                    "      var allTabTotalList = Ext.ComponentQuery.query('#allRetailerTab')[0].down('#retailerTotalsList');\r",
                    "\r",
                    "\r",
                    "    if(allTabTotalList ){\r",
                    "\r",
                    "        var alltStore = allTabTotalList.getStore();\r",
                    "        alltStore.removeAll();\r",
                    "        alltStore.sync();\r",
                    "\r",
                    "        alltStore.setData([\r",
                    "         {\r",
                    "\r",
                    "            store_count:count,\r",
                    "            city_count: \"\",\r",
                    "            user_count:\"\"\r",
                    "\r",
                    "        }]\r",
                    "        );\r",
                    "        alltStore.sync();\r",
                    "    }\r",
                    "\r",
                    "\r",
                    "\r",
                    "}\r",
                    "\r",
                    "\r",
                    "\r",
                    "function objectIdWithTimestamp(timestamp)\r",
                    "{\r",
                    "    // Convert string date to Date object (otherwise assume timestamp is a date)\r",
                    "    if (typeof(timestamp) == 'string') {\r",
                    "        timestamp = new Date(timestamp);\r",
                    "    }\r",
                    "\r",
                    "    // Convert date object to hex seconds since Unix epoch\r",
                    "    var hexSeconds = Math.floor(timestamp/1000).toString(16);\r",
                    "\r",
                    "    // Create an ObjectId with that hex timestamp\r",
                    "    var constructedObjectId = ObjectId(hexSeconds + \"0000000000000000\");\r",
                    "\r",
                    "    return constructedObjectId ;\r",
                    "}\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "/*\r",
                    "\r",
                    "\r",
                    "Expired: null\r",
                    "ExpiredChk: true\r",
                    "ExpiredUnit: null\r",
                    "\r",
                    "\r",
                    "Phone: \"a\"PhoneChk: true\r",
                    "State: \"a\"\r",
                    "StateChk: true\r",
                    "\r",
                    "StoreEmail: \"a\"\r",
                    "StoreEmailChk: true\r",
                    "\r",
                    "StoreName: \"a\"\r",
                    "StoreNameChk: true\r",
                    "\r",
                    "\r",
                    "StoreWebsite: \"a\"\r",
                    "StoreWebsiteChk: true\r",
                    "\r",
                    "allProd: \"HOT_PROSPECT\"\r",
                    "allProdChk: true\r",
                    "\r",
                    "companyType: null\r",
                    "companyTypeChk: true\r",
                    "\r",
                    "contactName: \"a\"\r",
                    "contactNameChk: true\r",
                    "createdAfter: \"a\"\r",
                    "createdAfterChk: true\r",
                    "createdBy: \"a\"\r",
                    "createdByChk: true\r",
                    "\r",
                    "dlstatus: true\r",
                    "eCatStatus: true\r",
                    "eComstatus: true\r",
                    "iRugzStatus: true\r",
                    "picker: null\r",
                    "rmprostatus: true\r",
                    "\r",
                    "          '$or':[\r",
                    "                            { \"store_name\": { $regex: that.config.searchText  , $options: 'i' } },\r",
                    "                            { \"store_state\": { $regex: that.config.searchText  , $options: 'i' } },\r",
                    "                            { \"store_city\": { $regex: that.config.searchText  , $options: 'i' } },\r",
                    "                            { \"store_zip\": { $regex: that.config.searchText  , $options: 'i' } },\r",
                    "                            { \"store_location\": { $regex: that.config.searchText  , $options: 'i' } },\r",
                    "                            { \"store_email\": { $regex: that.config.searchText  , $options: 'i' } },\r",
                    "                            { \"manager_firstname\": { $regex: that.config.searchText  , $options: 'i' } },\r",
                    "                            { \"manager_lastname\": { $regex: that.config.searchText  , $options: 'i' } },\r",
                    "                            { \"store_products.datalink_status\": { $regex: that.config.searchText  , $options: 'i' } },\r",
                    "                            { \"store_products.ecatalog_status\": { $regex: that.config.searchText  , $options: 'i' } },\r",
                    "                            { \"store_products.ecommerce_status\": { $regex: that.config.searchText  , $options: 'i' } },\r",
                    "                            { \"store_products.irugs_status\": { $regex: that.config.searchText  , $options: 'i' } },\r",
                    "                            { \"store_products.rmpro_status\": { $regex: that.config.searchText  , $options: 'i' } },\r",
                    "                            { \"created_by\": { $regex: that.config.searchText  , $options: 'i' } }\r",
                    "\r",
                    "                     ]\r",
                    "                  };\r",
                    "\r",
                    "}\r",
                    "else{\r",
                    "\r",
                    "    switch(that.config.searchKey){\r",
                    "\r",
                    "        case \"store_products.rmpro_status\":\r",
                    "        case \"store_products.irugs_status\":\r",
                    "        case \"store_products.ecommerce_status\":\r",
                    "        case \"store_products.ecatalog_status\":\r",
                    "        case \"store_products.datalink_status\":\r",
                    "\r",
                    "\r",
                    "\r",
                    "*/"
                ],
                "name": "tap"
            },
            "designerId": "28a28515-7af8-4cd9-b74d-8c6b8d72eb20"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "selectfield[itemId=retailersCustomSearchSeletFld]",
                "designer|targetType": "Ext.field.Select",
                "fn": "onretailersCustomSearchSeletFldChange",
                "implHandler": [
                    "\r",
                    "this.config.searchKey = newValue ;\r",
                    "\r",
                    " switch(this.config.searchKey){\r",
                    "\r",
                    "        case \"store_products.rmpro_status\":\r",
                    "        case \"store_products.irugs_status\":\r",
                    "        case \"store_products.ecommerce_status\":\r",
                    "        case \"store_products.ecatalog_status\":\r",
                    "        case \"store_products.datalink_status\":\r",
                    "\r",
                    "        selectfield.getParent().down('#retailersProductStatusSearchSlctFld').setHidden(false);\r",
                    "        selectfield.getParent().down('#rtVdrsSearchFld').setHidden(true);\r",
                    "         selectfield.getParent().down('#rtVdrsDateSearchFld').setHidden(true);\r",
                    "\r",
                    "        break;\r",
                    "     case \"user_since\":\r",
                    "         selectfield.getParent().down('#retailersProductStatusSearchSlctFld').setHidden(true);\r",
                    "        selectfield.getParent().down('#rtVdrsSearchFld').setHidden(true);\r",
                    "         selectfield.getParent().down('#rtVdrsDateSearchFld').setHidden(false);\r",
                    "         break;\r",
                    "\r",
                    "     default:\r",
                    "        selectfield.getParent().down('#retailersProductStatusSearchSlctFld').setHidden(true);\r",
                    "        selectfield.getParent().down('#rtVdrsSearchFld').setHidden(false);\r",
                    "        selectfield.getParent().down('#rtVdrsDateSearchFld').setHidden(true);\r",
                    "         break;\r",
                    " }"
                ],
                "name": "change"
            },
            "designerId": "d3103b5c-6672-4ed6-8a2e-21a7faefb222"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "store_status"
                ],
                "fn": "getSearchQuery",
                "implHandler": [
                    "var that = this ;\r",
                    "var searchQuery = {};\r",
                    "\r",
                    "var selectFld = null ;\r",
                    "    switch(store_status){\r",
                    "        case \"ACTIVE\":\r",
                    "\r",
                    "            selectFld = Ext.ComponentQuery.query('#usersTab')[0].down('#retailersCustomSearchSeletFld');\r",
                    "\r",
                    "            break;\r",
                    "        case \"PROSPECTS\":\r",
                    "\r",
                    "            selectFld = Ext.ComponentQuery.query('#prospectsTab')[0].down('#retailersCustomSearchSeletFld');\r",
                    "\r",
                    "            break;\r",
                    "        case \"HOT_PROSPECTS\":\r",
                    "\r",
                    "            selectFld = Ext.ComponentQuery.query('#hotProspectsTab')[0].down('#retailersCustomSearchSeletFld');\r",
                    "\r",
                    "            break;\r",
                    "\r",
                    "        case \"INACTIVE\":\r",
                    "\r",
                    "            selectFld = Ext.ComponentQuery.query('#inactiveTab')[0].down('#retailersCustomSearchSeletFld');\r",
                    "\r",
                    "            break;\r",
                    "        case \"PENDING\":\r",
                    "\r",
                    "            selectFld = Ext.ComponentQuery.query('#pendingTab')[0].down('#retailersCustomSearchSeletFld');\r",
                    "\r",
                    "            break;\r",
                    "          case \"\":\r",
                    "            selectFld = Ext.ComponentQuery.query('#allRetailerTab')[0].down('#retailersCustomSearchSeletFld');\r",
                    "              break;\r",
                    "\r",
                    "          default:\r",
                    "            selectFld = Ext.ComponentQuery.query('#allRetailerTab')[0].down('#retailersCustomSearchSeletFld');\r",
                    "              break;\r",
                    "    }\r",
                    "\r",
                    "\r",
                    "that.config.searchKey = selectFld.getValue() ;\r",
                    "\r",
                    "if(that.config.searchKey == \"ALL\")\r",
                    "{\r",
                    "  searchQuery  = {\r",
                    "\r",
                    "\r",
                    "                '$or':[\r",
                    "                            { \"store_name\": { $regex: that.config.searchText  , $options: 'i' } },\r",
                    "                            { \"store_state\": { $regex: that.config.searchText  , $options: 'i' } },\r",
                    "                            { \"store_city\": { $regex: that.config.searchText  , $options: 'i' } },\r",
                    "                            { \"store_zip\": { $regex: that.config.searchText  , $options: 'i' } },\r",
                    "                            { \"store_location\": { $regex: that.config.searchText  , $options: 'i' } },\r",
                    "                            { \"store_email\": { $regex: that.config.searchText  , $options: 'i' } },\r",
                    "                            { \"manager_firstname\": { $regex: that.config.searchText  , $options: 'i' } },\r",
                    "                            { \"manager_lastname\": { $regex: that.config.searchText  , $options: 'i' } },\r",
                    "                            { \"store_products.datalink_status\": { $regex: that.config.searchText  , $options: 'i' } },\r",
                    "                            { \"store_products.ecatalog_status\": { $regex: that.config.searchText  , $options: 'i' } },\r",
                    "                            { \"store_products.ecommerce_status\": { $regex: that.config.searchText  , $options: 'i' } },\r",
                    "                            { \"store_products.irugs_status\": { $regex: that.config.searchText  , $options: 'i' } },\r",
                    "                            { \"store_products.rmpro_status\": { $regex: that.config.searchText  , $options: 'i' } },\r",
                    "                            { \"created_by\": { $regex: that.config.searchText  , $options: 'i' } }\r",
                    "\r",
                    "                     ]\r",
                    "                  };\r",
                    "\r",
                    "}\r",
                    "else{\r",
                    "\r",
                    "    switch(that.config.searchKey){\r",
                    "\r",
                    "        case \"store_products.rmpro_status\":\r",
                    "        case \"store_products.irugs_status\":\r",
                    "        case \"store_products.ecommerce_status\":\r",
                    "        case \"store_products.ecatalog_status\":\r",
                    "        case \"store_products.datalink_status\":\r",
                    "\r",
                    "          //  searchQuery[that.config.searchKey] = { $regex: that.config.searchText  , $options: 'i' }  ;\r",
                    "        if( that.config.searchText == \"ANY\")\r",
                    "        {\r",
                    "                       searchQuery[that.config.searchKey]= { $regex: \"\"  , $options: 'i' }  ;\r",
                    "        }\r",
                    "        else{\r",
                    "                       searchQuery[that.config.searchKey]= that.config.searchText  ;\r",
                    "            }\r",
                    "\r",
                    "            break;\r",
                    "        case \"user_since\":\r",
                    "           //searchQuery._id = { $lt: objectIdWithTimestamp(that.config.searchText ) }  ;\r",
                    "            var tDate = new Date(that.config.searchText );\r",
                    "            tDate.setDate(tDate.getDate() - 1);\r",
                    "            searchQuery[that.config.searchKey] = { $gt : tDate }  ;\r",
                    "\r",
                    "            //searchQuery._id = { $gt : tDate }  ;\r",
                    "\r",
                    "            break;\r",
                    "        default:\r",
                    "            searchQuery[that.config.searchKey] = { $regex: that.config.searchText  , $options: 'i' }  ;\r",
                    "\r",
                    "            break;\r",
                    "    }\r",
                    "\r",
                    "\r",
                    "\r",
                    "}\r",
                    "\r",
                    "return searchQuery ;\r",
                    "\r",
                    "\r",
                    "function objectIdWithTimestamp(timestamp)\r",
                    "{\r",
                    "    // Convert string date to Date object (otherwise assume timestamp is a date)\r",
                    "    if (typeof(timestamp) == 'string') {\r",
                    "        timestamp = new Date(timestamp);\r",
                    "    }\r",
                    "\r",
                    "    // Convert date object to hex seconds since Unix epoch\r",
                    "    var hexSeconds = Math.floor(timestamp/1000).toString(16);\r",
                    "\r",
                    "    // Create an ObjectId with that hex timestamp\r",
                    "    var constructedObjectId = ObjectId(hexSeconds + \"0000000000000000\");\r",
                    "\r",
                    "    return constructedObjectId ;\r",
                    "}\r",
                    "\r",
                    "\r",
                    "\r",
                    "/*\r",
                    "\r",
                    "function objectIdWithTimestamp(timestamp)\r",
                    "{\r",
                    "    // Convert string date to Date object (otherwise assume timestamp is a date)\r",
                    "    if (typeof(timestamp) == 'string') {\r",
                    "        timestamp = new Date(timestamp);\r",
                    "    }\r",
                    "\r",
                    "    // Convert date object to hex seconds since Unix epoch\r",
                    "    var hexSeconds = Math.floor(timestamp/1000).toString(16);\r",
                    "\r",
                    "    // Create an ObjectId with that hex timestamp\r",
                    "    var constructedObjectId = ObjectId(hexSeconds + \"0000000000000000\");\r",
                    "\r",
                    "    return constructedObjectId\r",
                    "}\r",
                    "\r",
                    "db.dev_rdl_masterretailerrecords.find({ _id: { $gt: objectIdWithTimestamp('5/28/2014') } })\r",
                    "\r",
                    "*/\r",
                    ""
                ]
            },
            "designerId": "6275a47e-f536-42cb-81bc-3af07c9afaf3"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "searchText",
                    "page_no",
                    "pageSize"
                ],
                "fn": "doSearchTechSupportLog",
                "implHandler": [
                    "//   dbEnv +'rdl_tech_support_logs'   pageNo, pageSize, enableCachig, successCallBack, failuerCallBack)\r",
                    "\r",
                    "var techSupportMainPanel=  Ext.ComponentQuery.query('#browseLatestLogMainContainer')[0] ;\r",
                    " techSupportMainPanel.down('#mainLoadingImg').setHidden(false) ;\r",
                    "\r",
                    "\r",
                    "    var tquery ={'$or':[\r",
                    "                                            { \"company\": { $regex: searchText , $options: 'i' } },\r",
                    "                                            { \"crm_user\": { $regex: searchText , $options: 'i' } },\r",
                    "                                            { \"problem\": { $regex: searchText , $options: 'i' } },\r",
                    "                                            { \"time_start\": { $regex: searchText  , $options: 'i' } }\r",
                    "                     ]};\r",
                    "\r",
                    "\r",
                    "\r",
                    "         RMdatalink.iwa.rdl.queryDB({collection: dbEnv + \"rdl_tech_support_logs\",pageNo:page_no ,pageSize: 50 ,sortBy:{},\r",
                    "         query:tquery,\r",
                    "         fields:{}},success,error);\r",
                    "\r",
                    "\r",
                    "\r",
                    "function success(){\r",
                    "         techSupportMainPanel.down('#mainLoadingImg').setHidden(true) ;\r",
                    "   console.log(arguments[0].items) ;\r",
                    "\r",
                    "     if(page_no > 1 && arguments[0].items.length == 0 ){\r",
                    "\r",
                    "\r",
                    "        rollBackPageNo() ;\r",
                    "        Ext.Msg.alert(\"Alert\",\"Next page is not available.\",Ext.emptyFn);\r",
                    "        return;\r",
                    "    }\r",
                    "\r",
                    "\r",
                    "    setTechSupportLogStore(arguments[0].items) ;\r",
                    "\r",
                    "     Ext.Viewport.setMasked(false) ;\r",
                    "\r",
                    "     techSupportMainPanel.down('#mainPageNoLbl').setHtml(page_no) ;\r",
                    "\r",
                    "}\r",
                    "\r",
                    "function error(){\r",
                    "      Ext.Viewport.setMasked(false) ;\r",
                    "\r",
                    "}\r",
                    "\r",
                    "function setTechSupportLogStore(data){\r",
                    "\r",
                    "    var techSupportLogStr = Ext.getStore('TechSupportLogsStore');\r",
                    "\r",
                    "    techSupportLogStr.removeAll();\r",
                    "    techSupportLogStr.sync() ;\r",
                    "\r",
                    "    techSupportLogStr.setData(data);\r",
                    "    techSupportLogStr.sync();\r",
                    "}\r",
                    "\r",
                    "function rollBackPageNo(){\r",
                    "     var techSupportLogStr = Ext.getStore('TechSupportLogsStore');\r",
                    "    techSupportLogStr.setPageNo( parseInt(page_no) - 1 ) ;\r",
                    "}\r",
                    "\r",
                    "/*\r",
                    "    company: \"Anji Mountain\"\r",
                    "    company_id: \"\"\r",
                    "    company_logo: \"\"\r",
                    "    crm_user: \"patrickb\"\r",
                    "    crm_user_id: \"\"\r",
                    "    id: \"ext-record-1001\"\r",
                    "    problem: \"Need RugsUSA account #\"\r",
                    "    product_id: \"4\"\r",
                    "    product_name: \"RM PLC\"\r",
                    "    solution: \"123356\"\r",
                    "    status: \"Completed\"\r",
                    "    status_id: \"3\"\r",
                    "    time_start: \"2014-05-08 13:12:48\"\r",
                    "    total_time: Object\r",
                    "    vendor_id: \"\"\r",
                    "*/"
                ]
            },
            "designerId": "ff0299d0-940d-4590-84fe-7265b48bffb3"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "selectfield[itemId=retailersProductStatusSearchSlctFld]",
                "designer|targetType": "Ext.field.Select",
                "fn": "onretailersProductStatusSearchSlctFldChange",
                "implHandler": [
                    "\r",
                    "var searchText =newValue ;\r",
                    "\r",
                    "this.config.searchTme = 900 ;\r",
                    "\r",
                    "if(Ext.ComponentQuery.query('#RMContentPanel')[0].getActiveItem().getItemId() == 'card-retailers')\r",
                    "{\r",
                    "\r",
                    "  var activeTab = Ext.ComponentQuery.query('#retailersTabPanel')[0].getActiveItem().getItemId();\r",
                    "  var store_status = \"\" ;\r",
                    "    switch(activeTab){\r",
                    "\r",
                    "        case \"usersTab\":\r",
                    "            store_status = \"ACTIVE\" ;\r",
                    "\r",
                    "            break;\r",
                    "        case \"prospectsTab\":\r",
                    "            store_status = \"PROSPECTS\" ;\r",
                    "            break;\r",
                    "         case \"hotProspectsTab\":\r",
                    "            store_status = \"HOT_PROSPECTS\" ;\r",
                    "            break;\r",
                    "\r",
                    "        case \"inactiveTab\":\r",
                    "            store_status = \"INACTIVE\" ;\r",
                    "            break;\r",
                    "        case \"pendingTab\":\r",
                    "            store_status = \"PENDING\" ;\r",
                    "            break;\r",
                    "        case \"allRetailerTab\":\r",
                    "            store_status = \"\" ;\r",
                    "            this.doSearchForRetailers(searchText ) ;\r",
                    "\r",
                    "            return;\r",
                    "\r",
                    "    }\r",
                    "\r",
                    "\r",
                    "    this.searchRetailerByStatus(searchText,store_status,1 ) ;\r",
                    "\r",
                    "\r",
                    "\r",
                    "}\r",
                    "else{\r",
                    "        this.doSearchForProspectRetailersAtVendor(searchText ) ;\r",
                    "}\r",
                    ""
                ],
                "name": "change"
            },
            "designerId": "46d8c06f-e0b6-467e-a6a5-383c970dc4ce"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "pageNo",
                    "pageSize",
                    "skipTypeTime",
                    "successCallBack",
                    "failuerCallBack"
                ],
                "fn": "doLoadTechSupport",
                "implHandler": [
                    "console.log(\"SERACH\");\r",
                    "\r",
                    "var that = this ;\r",
                    "\r",
                    "if(skipTypeTime){\r",
                    "    that.config.searchTme = 900 ;\r",
                    "\r",
                    "}\r",
                    "\r",
                    "\r",
                    "if(! that.config.isSearch ){\r",
                    "\r",
                    "    createTimeOut() ;\r",
                    "\r",
                    "}else{\r",
                    "\r",
                    "     that.config.searchTme = 100 ;\r",
                    "}\r",
                    "\r",
                    "function createTimeOut(){\r",
                    "\r",
                    "    that.config.isSearch = true ;\r",
                    "\r",
                    "    Ext.Function.defer( onInterval , 100, that);\r",
                    "\r",
                    "\r",
                    "}\r",
                    "\r",
                    "function onInterval(){\r",
                    "\r",
                    "    that.config.searchTme += 100 ;\r",
                    "\r",
                    "    if(that.config.searchTme < that.config.searchTimeOut)  {\r",
                    "        createTimeOut() ;\r",
                    "    } else{\r",
                    "\r",
                    "        that.config.searchTme = 0 ;\r",
                    "        startSearch() ;\r",
                    "    }\r",
                    "\r",
                    "}\r",
                    "///skipTypeTime\r",
                    "\r",
                    "\r",
                    "function startSearch(){\r",
                    "        that.config.isSearch = false ;\r",
                    "\r",
                    "\r",
                    "        var searchText = Ext.ComponentQuery.query('#brwsTechSupportLogSearchFld')[0].getValue();\r",
                    "\r",
                    "\r",
                    "        that.doSearchTechSupportLog(searchText,pageNo,pageSize);\r",
                    "}\r",
                    ""
                ]
            },
            "designerId": "b0bb54a3-cb18-4975-b834-f6ffbf9f25e8"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "searchfield[action=searchTechSupportLog]",
                "designer|targetType": "Ext.field.Search",
                "fn": "onsearchTechSupportLogKeyup",
                "implHandler": [
                    "\r",
                    "\r",
                    "this.doLoadTechSupport( 1, 50 ,false );"
                ],
                "name": "keyup"
            },
            "designerId": "193fcd2d-748a-494c-b6d7-4ac7cdd1130e"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button[itemId=brwsTechSupportSerchBtn]",
                "designer|targetType": "Ext.Button",
                "fn": "onbrwsTechSupportSerchBtnTap",
                "implHandler": [
                    "console.log(\"SERACH\");\r",
                    "\r",
                    "this.doLoadTechSupport( 1, 50 ,true );"
                ],
                "name": "tap"
            },
            "designerId": "37ebb2f9-a699-483f-bc5b-ba968fb9fbeb"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "searchfield[itemId=rtVdrsDateSearchFld]",
                "designer|targetType": "Ext.field.Search",
                "fn": "onrtVdrsDateSearchFldInitialize",
                "implHandler": [
                    "component.element.on(\"tap\",function(){\r",
                    "\r",
                    "\r",
                    "        function fn(newDate){\r",
                    "\r",
                    "\r",
                    "            component.setValue(Ext.Date.format(newDate, \"m/d/Y\"));\r",
                    "            RMdatalink.util.Calendar.hideCalendar();\r",
                    "             component.setDisabled(false);\r",
                    "\r",
                    "           RMdatalink.app.getController('SearchController').doInitRtSearch(component.getValue());\r",
                    "\r",
                    "        }\r",
                    "\r",
                    "        RMdatalink.util.Calendar.showCalendar(fn,component);\r",
                    "        component.setDisabled(true);\r",
                    "\r",
                    "});"
                ],
                "name": "initialize"
            },
            "designerId": "9eabdcbd-65d2-47c9-a131-ea6757a76462"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "searchText"
                ],
                "fn": "doInitRtSearch",
                "implHandler": [
                    "\r",
                    "\r",
                    "this.config.searchTme = 900 ;\r",
                    "\r",
                    "if(Ext.ComponentQuery.query('#RMContentPanel')[0].getActiveItem().getItemId() == 'card-retailers')\r",
                    "{\r",
                    "\r",
                    "  var activeTab = Ext.ComponentQuery.query('#retailersTabPanel')[0].getActiveItem().getItemId();\r",
                    "  var store_status = \"\" ;\r",
                    "    switch(activeTab){\r",
                    "\r",
                    "        case \"usersTab\":\r",
                    "            store_status = \"ACTIVE\" ;\r",
                    "\r",
                    "            break;\r",
                    "        case \"prospectsTab\":\r",
                    "            store_status = \"PROSPECTS\" ;\r",
                    "            break;\r",
                    "         case \"hotProspectsTab\":\r",
                    "            store_status = \"HOT_PROSPECTS\" ;\r",
                    "            break;\r",
                    "\r",
                    "        case \"inactiveTab\":\r",
                    "            store_status = \"INACTIVE\" ;\r",
                    "            break;\r",
                    "        case \"pendingTab\":\r",
                    "            store_status = \"PENDING\" ;\r",
                    "            break;\r",
                    "        case \"allRetailerTab\":\r",
                    "            store_status = \"\" ;\r",
                    "            this.doSearchForRetailers(searchText ) ;\r",
                    "\r",
                    "            return;\r",
                    "\r",
                    "    }\r",
                    "\r",
                    "\r",
                    "    this.searchRetailerByStatus(searchText,store_status,1 ) ;\r",
                    "\r",
                    "\r",
                    "\r",
                    "}\r",
                    "else{\r",
                    "        this.doSearchForProspectRetailersAtVendor(searchText ) ;\r",
                    "}\r",
                    ""
                ]
            },
            "designerId": "2fa3ea16-7bfd-45f0-9293-e9b1c800a5be"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "searchText",
                    "store_status",
                    "page_no",
                    "productStatusQuery"
                ],
                "fn": "searchRtForBilling",
                "implHandler": [
                    "store_status= \"ACTIVE\" ;\r",
                    " var rtMainPanel = Ext.ComponentQuery.query('#billingMainContentPanel')[0] ;\r",
                    "if(!rtMainPanel){\r",
                    "\r",
                    "    return ;\r",
                    "}\r",
                    "\r",
                    "// rtMainPanel.down('#mainLoadingImg').setHidden(false) ;\r",
                    "var that = this ;\r",
                    "\r",
                    "\r",
                    "if(this.config.isFromRetailerDetail){\r",
                    "//    this.config.isFromRetailerDetail = false ;\r",
                    "    searchText = this.config.defaultSearchString ;\r",
                    "    store_status = this.config.defaultStoreStatus;\r",
                    "\r",
                    "}\r",
                    "\r",
                    "that.config.searchText = searchText ;\r",
                    "\r",
                    "//isSearch\r",
                    "\r",
                    "\r",
                    "if(! that.config.isSearch ){\r",
                    "\r",
                    "    createTimeOut() ;\r",
                    "\r",
                    "}else{\r",
                    "\r",
                    "     that.config.searchTme = 100 ;\r",
                    "}\r",
                    "\r",
                    "function createTimeOut(){\r",
                    "\r",
                    "    that.config.isSearch = true ;\r",
                    "\r",
                    "    Ext.Function.defer( onInterval , 100, that);\r",
                    "\r",
                    "\r",
                    "}\r",
                    "\r",
                    "function onInterval(){\r",
                    "\r",
                    "    that.config.searchTme += 100 ;\r",
                    "\r",
                    "    if(that.config.searchTme < that.config.searchTimeOut)  {\r",
                    "        createTimeOut() ;\r",
                    "    } else{\r",
                    "\r",
                    "        that.config.searchTme = 0 ;\r",
                    "        startSearch() ;\r",
                    "    }\r",
                    "\r",
                    "}\r",
                    "\r",
                    "\r",
                    "\r",
                    "function startSearch(){\r",
                    "        that.config.isSearch = false ;\r",
                    "\r",
                    " rtMainPanel.down('#mainLoadingImg').setHidden(false) ;\r",
                    "\r",
                    "    if(store_status && store_status !== \"\")\r",
                    "     {\r",
                    "\r",
                    "         var tStatus = store_status ;\r",
                    "         if(store_status==\"PROSPECTS\"){\r",
                    "             tStatus = \"PROSPECT\" ;\r",
                    "         }else if(store_status == \"HOT_PROSPECTS\"){\r",
                    "               tStatus = \"HOT_PROSPECT\" ;\r",
                    "         }\r",
                    "\r",
                    "         var pStatus = null ;\r",
                    "         if(store_status == \"INACTIVE\"){\r",
                    "             pStatus =  {'$and':\r",
                    "              [\r",
                    "                 {\"store_products.datalink_status\" : tStatus},\r",
                    "                 {\"store_products.ecatalog_status\" : tStatus},\r",
                    "                 {\"store_products.ecommerce_status\" :tStatus},\r",
                    "                 {\"store_products.irugs_status\" : tStatus},\r",
                    "                 {\"store_products.rmpro_status\" : tStatus}\r",
                    "              ]} ;\r",
                    "         }else\r",
                    "         {\r",
                    "             pStatus =  {'$or':\r",
                    "                [\r",
                    "                 {\"store_products.datalink_status\" : tStatus},\r",
                    "                 {\"store_products.ecatalog_status\" : tStatus},\r",
                    "                 {\"store_products.ecommerce_status\" :tStatus},\r",
                    "                 {\"store_products.irugs_status\" : tStatus},\r",
                    "                 {\"store_products.rmpro_status\" : tStatus}\r",
                    "                 ]} ;\r",
                    "         }\r",
                    "\r",
                    "// that.getSearchQuery(store_status) ;\r",
                    "         var searchQuery =\r",
                    "\r",
                    "              {'$or':[\r",
                    "                                            { \"store_name\": { $regex: that.config.searchText  , $options: 'i' } },\r",
                    "                                            { \"store_state\": { $regex: that.config.searchText  , $options: 'i' } },\r",
                    "                                            { \"store_city\": { $regex: that.config.searchText  , $options: 'i' } },\r",
                    "                                            { \"store_zip\": { $regex: that.config.searchText  , $options: 'i' } }\r",
                    "                     ]} ;\r",
                    "\r",
                    "         var tquery = {'$and':[\r",
                    "            searchQuery,\r",
                    "             pStatus\r",
                    "\r",
                    "        ]} ;\r",
                    "\r",
                    "\r",
                    "         RMdatalink.iwa.rdl.queryDB({collection: dbEnv + \"rdl_masterretailerrecords\",pageNo:page_no ,pageSize: 50 ,sortBy:{\"store_name\":1},\r",
                    "         query:tquery,\r",
                    "        fields:{}},success,error);\r",
                    "     }else{\r",
                    "\r",
                    "        var searchQuery =  that.getSearchQuery(store_status) ;\r",
                    "         var tquery = {\r",
                    "             '$and':\r",
                    "             [\r",
                    "\r",
                    "            searchQuery\r",
                    "\r",
                    "        ]} ;\r",
                    "\r",
                    "\r",
                    "         RMdatalink.iwa.rdl.queryDB({collection: dbEnv + \"rdl_masterretailerrecords\",pageNo:page_no ,pageSize: 50 ,sortBy:{\"store_name\":1},\r",
                    "         query:tquery,\r",
                    "        fields:{}},success,error);\r",
                    "\r",
                    "     }\r",
                    "\r",
                    "}\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "function success(){\r",
                    "\r",
                    "\r",
                    "\r",
                    "     rtMainPanel.down('#mainLoadingImg').setHidden(true) ;\r",
                    "        Ext.Viewport.setMasked(false);\r",
                    "\r",
                    "    if(page_no > 1 && arguments[0].items.length ==0 ){\r",
                    "\r",
                    "\r",
                    "        rollBackStorePageNo() ;\r",
                    "\r",
                    "        Ext.Msg.alert(\"Alert\",\"Next page is not available.\",Ext.emptyFn);\r",
                    "        return;\r",
                    "    }\r",
                    "       setRetailersList(arguments[0].items) ;\r",
                    "        setTotalList(arguments[0].count);\r",
                    "\r",
                    "  //   RMdatalink.app.getController('PaginationController').setRetailersActiveTabPageNo() ;\r",
                    "\r",
                    "\r",
                    "\r",
                    "}\r",
                    "\r",
                    "function error(){\r",
                    "\r",
                    "     rtMainPanel.down('#mainLoadingImg').setHidden(true) ;\r",
                    "      Ext.Viewport.setMasked(false);\r",
                    "}\r",
                    "\r",
                    "function rollBackStorePageNo(){\r",
                    "\r",
                    "    var activeListStore =  Ext.getStore(\"billingMasterStore\");\r",
                    "\r",
                    "\r",
                    "    if(activeListStore)\r",
                    "    {\r",
                    "        activeListStore.setPageNo( parseInt(page_no) - 1 ) ;\r",
                    "    }\r",
                    "\r",
                    "}\r",
                    "\r",
                    "\r",
                    "function setTotalList(count){\r",
                    "\r",
                    "\r",
                    "}\r",
                    "\r",
                    "function setRetailersList(data){\r",
                    "\r",
                    "if(that.config.isFromRetailerDetail){\r",
                    "    that.config.isFromRetailerDetail = false ;\r",
                    "}else{\r",
                    "\r",
                    "\r",
                    "}\r",
                    "\r",
                    "    var rtsStore = getStoreByRemovePreviousRetailers();\r",
                    "    rtsStore.setData(data);\r",
                    "    rtsStore.sync();\r",
                    "\r",
                    "// RMdatalink.app.getController('PaginationController').loadDependentStoresonMaster('retailersMaster');\r",
                    "}\r",
                    "\r",
                    "function removeCurrentStatusRetailers(){\r",
                    "return ;\r",
                    "\r",
                    "}\r",
                    "\r",
                    "\r",
                    "function getStoreByRemovePreviousRetailers(){\r",
                    "\r",
                    "     var rtStore =  Ext.getStore(\"billingMasterStore\");\r",
                    "\r",
                    "\r",
                    "    rtStore.removeAll();\r",
                    "    rtStore.sync();\r",
                    "\r",
                    "    return rtStore;\r",
                    "}\r",
                    ""
                ]
            },
            "designerId": "e8010457-c9f6-4089-86d3-8844a278fd79"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "filter"
                ],
                "fn": "saveCustomFilter",
                "implHandler": [
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "var LoginHandler = RMdatalink.app.getController('LoginHandler') ;\r",
                    "\r",
                    "var _id = LoginHandler.config.userDetails._id ;\r",
                    " var inhouseMasterStore = Ext.getStore('inhouseMasterStore');\r",
                    "\r",
                    "var dataToUpdate = {\r",
                    "    custom_filter:filter\r",
                    "};\r",
                    "\r",
                    "\r",
                    " RMdatalink.iwa.rdl.doUpdateCollection(inhouseMasterStore, dataToUpdate , _id, success, error);\r",
                    "\r",
                    "function success(){\r",
                    "\r",
                    "}\r",
                    "\r",
                    "function error(){\r",
                    "\r",
                    "\r",
                    "}"
                ]
            },
            "designerId": "fa28f189-d208-44eb-8da6-26c68ae4f106"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "initFilter",
                "implHandler": [
                    "\r",
                    "var allRetailerTab = Ext.ComponentQuery.query('#allRetailerTab')[0] ;\r",
                    "\r",
                    "var button = allRetailerTab.down('#customSearchApplyBtn') ;\r",
                    "\r",
                    "var form = button.getParent() ;\r",
                    "\r",
                    "var LoginHandler = RMdatalink.app.getController('LoginHandler') ;\r",
                    "\r",
                    "\r",
                    "var filter = LoginHandler.config.userDetails.custom_filter ;\r",
                    "\r",
                    "if(filter)\r",
                    "{\r",
                    "    form.setValues(filter);\r",
                    "     this.config.doNotSave = true ;\r",
                    "    button.fireEvent('tap',button);\r",
                    "}\r",
                    "else{\r",
                    "\r",
                    "      RMdatalink.app.getController('PaginationController').initialiseRetailers(true) ;\r",
                    "}\r",
                    "\r",
                    ""
                ]
            },
            "designerId": "3783c302-faca-4dd6-917d-ec8aa8b5f8fa"
        }
    ]
}