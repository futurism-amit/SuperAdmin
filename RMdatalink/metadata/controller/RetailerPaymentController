{
    "type": "Ext.app.Controller",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "designer|userClassName": "RetailerPaymentController"
    },
    "designerId": "061febe0-a714-439f-8dca-f95510f160b4",
    "cn": [
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "initialiseRetailer",
                "implHandler": [
                    "\r",
                    "\r",
                    "this.initialiseAppForRtUser();\r",
                    "\r",
                    "var LoginHandler = RMdatalink.app.getController('LoginHandler');\r",
                    "\r",
                    "var ownerName = \"\";\r",
                    "if( LoginHandler.config.logedInUserRecord.store_owner_firstname  &&  LoginHandler.config.logedInUserRecord.store_owner_firstname != \"undefined\")\r",
                    "{\r",
                    "    ownerName = LoginHandler.config.logedInUserRecord.store_owner_firstname  ;\r",
                    "}\r",
                    "\r",
                    "\r",
                    "Ext.ComponentQuery.query('#rtMngPaymentAddrFullNameLbl')[0].setHtml(ownerName );\r",
                    "\r",
                    "\r",
                    " Ext.ComponentQuery.query('#retailerUserStoreNameLbl')[0].setHtml( LoginHandler.config.logedInUserRecord.store_name);\r",
                    " Ext.ComponentQuery.query('#retailerUserStoreOwnerLbl')[0].setHtml(ownerName );\r",
                    " Ext.ComponentQuery.query('#retailerMainAccSettingsBtn')[0].setText(LoginHandler.config.logedInUserRecord.store_email );\r",
                    "\r",
                    "this.setGenSettingFlds() ;\r",
                    "\r",
                    "\r",
                    "\r",
                    "if(LoginHandler.config.logedInUserRecord.store_products.datalink_status && LoginHandler.config.logedInUserRecord.store_products.datalink_status == \"ACTIVE\"){\r",
                    "\r",
                    " Ext.ComponentQuery.query('#rtUserProductDatalinkBtn')[0].setHidden(false);\r",
                    "\r",
                    " this.initProductDatalink();\r",
                    "\r",
                    "}else{\r",
                    "\r",
                    "    Ext.ComponentQuery.query('#rtUserProductDatalinkBtn')[0].setHidden(true);\r",
                    "}\r",
                    "\r",
                    "\r",
                    "if(LoginHandler.config.logedInUserRecord.store_products.rmpro_status && LoginHandler.config.logedInUserRecord.store_products.rmpro_status == \"ACTIVE\"){\r",
                    "    Ext.ComponentQuery.query('#rtUserProductRMPROBtn')[0].setHidden(false);\r",
                    "\r",
                    "    this.initProductRMPRO() ;\r",
                    "}\r",
                    "else{\r",
                    "\r",
                    "     Ext.ComponentQuery.query('#rtUserProductRMPROBtn')[0].setHidden(true);\r",
                    "}\r",
                    "\r",
                    "RMdatalink.app.getController('InvoiceHistoryController').searchInvoicesForRt(\"\",1,50,LoginHandler.config.logedInUserRecord._id);"
                ]
            },
            "designerId": "d73c8908-288e-4723-bba9-8a9e677569b3"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button[itemId=retailerMainAccSettingsBtn]",
                "designer|targetType": "Ext.Button",
                "fn": "onretailerMainAccSettingsBtnTap",
                "implHandler": [
                    "                if(Ext.getCmp(\"RetailerLoginUserOptions\"))\r",
                    "                {\r",
                    "                     var popup =  Ext.getCmp(\"RetailerLoginUserOptions\") ;\r",
                    "                }\r",
                    "                else{\r",
                    "\r",
                    "                     var popup =   Ext.widget('RetailerLoginUserOptions');\r",
                    "                }\r",
                    "\r",
                    "\r",
                    "\r",
                    "                popup.showBy(button);\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    ""
                ],
                "name": "tap"
            },
            "designerId": "c355f6d4-b8d6-4b06-b3db-870a319dae39"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button[itemId=rtlUserIptnsLogoutBtn]",
                "designer|targetType": "Ext.Button",
                "fn": "onrtlUserIptnsLogoutBtnTap",
                "implHandler": [
                    "\r",
                    "Ext.getCmp(\"RetailerLoginUserOptions\").hide() ;\r",
                    "Ext.Viewport.setActiveItem(\"LoginScreen\");\r",
                    "Ext.ComponentQuery.query('#loginActionButton')[0].setDisabled(false);\r",
                    "\r",
                    "Ext.ComponentQuery.query('#retailerMain')[0].destroy();"
                ],
                "name": "tap"
            },
            "designerId": "614a8861-1439-4117-bb3f-8bd69d307015"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "setGenSettingFlds",
                "implHandler": [
                    "var LoginHandler = RMdatalink.app.getController('LoginHandler');\r",
                    "\r",
                    "\r",
                    "var rtl = LoginHandler.config.logedInUserRecord ;\r",
                    "\r",
                    "\r",
                    "var storePhone =  rtl.store_phone ;\r",
                    "var storeAddress = rtl.store_address_line1 ;\r",
                    "var storeSuite = rtl.store_address_suite ;\r",
                    "var storeCity = rtl.store_city ;\r",
                    "var storeState = rtl.store_state ;\r",
                    "var strZip = rtl.store_zip ;\r",
                    "\r",
                    "\r",
                    "if(rtl.locations && rtl.locations.length > 0){\r",
                    "\r",
                    "    if(rtl.locations[0].phone != \"\")\r",
                    "        storePhone =   rtl.locations[0].phone ;\r",
                    "\r",
                    "    if(rtl.locations[0].address != \"\")\r",
                    "     storeAddress = rtl.locations[0].address ;\r",
                    "\r",
                    "    if(rtl.locations[0].suit != \"\")\r",
                    "     storeSuite = rtl.locations[0].suit ;\r",
                    "\r",
                    "    if(rtl.locations[0].city != \"\")\r",
                    "     storeCity = rtl.locations[0].city ;\r",
                    "\r",
                    "    if(rtl.locations[0].state != \"\")\r",
                    "     storeState = rtl.locations[0].state  ;\r",
                    "\r",
                    "    if(rtl.locations[0].zip != \"\")\r",
                    "     strZip = rtl.locations[0].zip ;\r",
                    "}\r",
                    "\r",
                    "  Ext.ComponentQuery.query('#rtGenSetStoreNameFld')[0].setValue( rtl.store_name);\r",
                    "\r",
                    "  Ext.ComponentQuery.query('#rtGenSetPhoneFld')[0].setValue(storePhone);\r",
                    "\r",
                    "  Ext.ComponentQuery.query('#rtGenSetAddressFld')[0].setValue(storeAddress);\r",
                    "\r",
                    "  Ext.ComponentQuery.query('#rtGenSetSuiteFld')[0].setValue(storeSuite);\r",
                    "\r",
                    "  Ext.ComponentQuery.query('#rtGenSetCityFld')[0].setValue(storeCity);\r",
                    "\r",
                    "  Ext.ComponentQuery.query('#rtGenSetStateFld')[0].setValue(storeState);\r",
                    "\r",
                    "  Ext.ComponentQuery.query('#rtGenSetZipFld')[0].setValue(strZip);\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "  Ext.ComponentQuery.query('#rtMngPaymentAddrLbl')[0].setHtml(storeAddress);\r",
                    " Ext.ComponentQuery.query('#rtMngPaymentAddrCityLbl')[0].setHtml(storeCity);\r",
                    " Ext.ComponentQuery.query('#rtMngPaymentAddrStateLbl')[0].setHtml(storeState);\r",
                    " Ext.ComponentQuery.query('#rtMngPaymentAddrZipLbl')[0].setHtml(strZip);"
                ]
            },
            "designerId": "4687b53e-9de5-4df9-98ae-d133b28198d1"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "updateRtAddressFlds",
                "implHandler": [
                    "\r",
                    "var LoginHandler = RMdatalink.app.getController('LoginHandler');\r",
                    "\r",
                    "\r",
                    "var rtl = LoginHandler.config.logedInUserRecord ;\r",
                    "\r",
                    "\r",
                    "var dataToUpdate = {\r",
                    "\r",
                    "    \"store_name\":rtl.store_name,\r",
                    "    \"locations\":rtl.locations ? rtl.locations : []\r",
                    "};\r",
                    "\r",
                    "    dataToUpdate.store_name =   Ext.ComponentQuery.query('#rtGenSetStoreNameFld')[0].getValue();\r",
                    "\r",
                    "    if(dataToUpdate.locations.length > 0){\r",
                    "\r",
                    "        dataToUpdate.locations[0].phone\t=\tExt.ComponentQuery.query('#rtGenSetPhoneFld')[0].getValue() ;\r",
                    "        dataToUpdate.locations[0].address\t=\tExt.ComponentQuery.query('#rtGenSetAddressFld')[0].getValue() ;\r",
                    "        dataToUpdate.locations[0].suit\t=\tExt.ComponentQuery.query('#rtGenSetSuiteFld')[0].getValue() ;\r",
                    "        dataToUpdate.locations[0].city\t=\tExt.ComponentQuery.query('#rtGenSetCityFld')[0].getValue() ;\r",
                    "        dataToUpdate.locations[0].state\t=\tExt.ComponentQuery.query('#rtGenSetStateFld')[0].getValue() ;\r",
                    "        dataToUpdate.locations[0].zip\t\t=\tExt.ComponentQuery.query('#rtGenSetZipFld')[0].getValue() ;\r",
                    "\r",
                    "\r",
                    "\r",
                    "    }\r",
                    "    else{\r",
                    "\r",
                    "\r",
                    "        var location ={\r",
                    "\r",
                    "            phone\t:\tExt.ComponentQuery.query('#rtGenSetPhoneFld')[0].getValue(),\r",
                    "            address\t:\tExt.ComponentQuery.query('#rtGenSetAddressFld')[0].getValue(),\r",
                    "            suit\t:\tExt.ComponentQuery.query('#rtGenSetSuiteFld')[0].getValue(),\r",
                    "            city\t:\tExt.ComponentQuery.query('#rtGenSetCityFld')[0].getValue(),\r",
                    "            state\t:\tExt.ComponentQuery.query('#rtGenSetStateFld')[0].getValue(),\r",
                    "            zip\t\t:\tExt.ComponentQuery.query('#rtGenSetZipFld')[0].getValue()\r",
                    "\r",
                    "        };\r",
                    "\r",
                    "        dataToUpdate.locations.push(location);\r",
                    "\r",
                    "    }\r",
                    "\r",
                    "\r",
                    "\r",
                    "  Ext.ComponentQuery.query('#rtMngPaymentAddrLbl')[0].setHtml(Ext.ComponentQuery.query('#rtGenSetAddressFld')[0].getValue());\r",
                    " Ext.ComponentQuery.query('#rtMngPaymentAddrCityLbl')[0].setHtml(Ext.ComponentQuery.query('#rtGenSetCityFld')[0].getValue());\r",
                    " Ext.ComponentQuery.query('#rtMngPaymentAddrStateLbl')[0].setHtml(Ext.ComponentQuery.query('#rtGenSetStateFld')[0].getValue());\r",
                    " Ext.ComponentQuery.query('#rtMngPaymentAddrZipLbl')[0].setHtml(Ext.ComponentQuery.query('#rtGenSetZipFld')[0].getValue());\r",
                    "\r",
                    "this.updateRetailer(dataToUpdate) ;"
                ]
            },
            "designerId": "cc683876-675f-4f5a-be43-5c4c0e4c4e61"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "updateRtPassword",
                "implHandler": [
                    "\r",
                    "            var LoginHandler = RMdatalink.app.getController('LoginHandler');\r",
                    "\r",
                    "\r",
                    "            var rtl = LoginHandler.config.logedInUserRecord ;\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "            var prevPwd = Ext.ComponentQuery.query('#rtGenSetprevPawdFld')[0].getValue() ;\r",
                    "            var newPwd = Ext.ComponentQuery.query('#rtGenSetNewPawdFld')[0].getValue() ;\r",
                    "            var confNewPwd = Ext.ComponentQuery.query('#rtGenSetConfNewPawdFld')[0].getValue() ;\r",
                    "\r",
                    "\r",
                    "\r",
                    "var validationResult = true ;\r",
                    "var html = \"\";\r",
                    "if(prevPwd != rtl.store_password ){\r",
                    "\r",
                    "     html = '<div style=\"color:red;font-size: 0.74em;\">The password you gave is incorrect.</div>';\r",
                    "     Ext.ComponentQuery.query('#rtGenSetprevPawdFld')[0].setHtml(html);\r",
                    "\r",
                    "    validationResult = false ;\r",
                    "\r",
                    "}else{\r",
                    "\r",
                    "     Ext.ComponentQuery.query('#rtGenSetprevPawdFld')[0].setHtml(\"\");\r",
                    "}\r",
                    "\r",
                    "if(!newPwd || newPwd.length < 6 ){\r",
                    "     html = '<div style=\"color:red;font-size: 0.74em;\">Must have at least 6 characters.</div>';\r",
                    "     Ext.ComponentQuery.query('#rtGenSetNewPawdFld')[0].setHtml(html);\r",
                    "\r",
                    "    validationResult = false ;\r",
                    "}else{\r",
                    "\r",
                    "     Ext.ComponentQuery.query('#rtGenSetNewPawdFld')[0].setHtml(\"\");\r",
                    "}\r",
                    "\r",
                    "if(newPwd != confNewPwd ){\r",
                    "\r",
                    "    html = '<div style=\"color:red;font-size: 0.74em;\">The password you gave is incorrect.</div>';\r",
                    "     Ext.ComponentQuery.query('#rtGenSetConfNewPawdFld')[0].setHtml(html);\r",
                    "      validationResult = false ;\r",
                    "\r",
                    "}else{\r",
                    "\r",
                    "     Ext.ComponentQuery.query('#rtGenSetConfNewPawdFld')[0].setHtml(\"\");\r",
                    "}\r",
                    "\r",
                    "if(validationResult)\r",
                    "{\r",
                    "\r",
                    "        var dataToUpdate = {\r",
                    "            store_password : confNewPwd\r",
                    "        };\r",
                    "\r",
                    "       this.updateRetailer(dataToUpdate) ;\r",
                    "\r",
                    "       Ext.ComponentQuery.query('#rtGenSetprevPawdFld')[0].setValue(\"\") ;\r",
                    "       Ext.ComponentQuery.query('#rtGenSetNewPawdFld')[0].setValue(\"\") ;\r",
                    "       Ext.ComponentQuery.query('#rtGenSetConfNewPawdFld')[0].setValue(\"\") ;\r",
                    "\r",
                    "}\r",
                    ""
                ]
            },
            "designerId": "3709580d-67df-497c-a390-b9686344bab4"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "dataToUpdate"
                ],
                "fn": "updateRetailer",
                "implHandler": [
                    "\r",
                    "            var LoginHandler = RMdatalink.app.getController('LoginHandler');\r",
                    "\r",
                    "\r",
                    "            var rtl = LoginHandler.config.logedInUserRecord ;\r",
                    "\r",
                    "            var masterStore = Ext.getStore('retailersMaster');\r",
                    "\r",
                    "            Ext.Viewport.setMasked( {\r",
                    "                xtype: 'loadmask'\r",
                    "            });\r",
                    "\r",
                    "           RMdatalink.iwa.rdl.doUpdateCollection(masterStore, dataToUpdate , rtl._id, suc, err);\r",
                    "\r",
                    "\r",
                    "            function suc(){\r",
                    "\r",
                    "                for(var key in dataToUpdate) {\r",
                    "\r",
                    "                    LoginHandler.config.logedInUserRecord[key] = dataToUpdate[key] ;\r",
                    "                }\r",
                    "\r",
                    "                Ext.Viewport.setMasked(false);\r",
                    "\r",
                    "                Ext.Msg.alert(\"Success\", \"Information updated successfully.\");\r",
                    "\r",
                    "            }\r",
                    "            function err(){\r",
                    "                    Ext.Viewport.setMasked(false);\r",
                    "                 Ext.Msg.alert(\"Failuer\", \"Failed to update information, please try again.\");\r",
                    "            }\r",
                    "\r",
                    ""
                ]
            },
            "designerId": "0d1c9661-56a9-422c-9595-1f2c228e481b"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button[itemId=rtGenSetSaveAddrBtn]",
                "designer|targetType": "Ext.Button",
                "fn": "onrtGenSetSaveAddrBtnTap",
                "implHandler": [
                    "this.updateRtAddressFlds() ;"
                ],
                "name": "tap"
            },
            "designerId": "04efb508-4bfb-4b4d-8afb-a45ac97dd6c7"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button[itemId=rtGenSetUpdatePwdBtn]",
                "designer|targetType": "Ext.Button",
                "fn": "onrtGenSetUpdatePwdBtnTap",
                "implHandler": [
                    "this.updateRtPassword();"
                ],
                "name": "tap"
            },
            "designerId": "f2a80203-3115-4009-95f0-e2020ed2affc"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "initProductDatalink",
                "implHandler": [
                    "    var LoginHandler = RMdatalink.app.getController('LoginHandler');\r",
                    "\r",
                    "    var rtl = LoginHandler.config.logedInUserRecord ;\r",
                    "\r",
                    "    var parentPanel = Ext.ComponentQuery.query('#rtuProductDatalinkTab')[0] ;\r",
                    "\r",
                    "\r",
                    "    var billingData = rtl.product_billng.product_datalink ;\r",
                    "\r",
                    "if(!billingData){\r",
                    "    return ;\r",
                    "}\r",
                    "\r",
                    "    var html =\"\";\r",
                    "\r",
                    "    html = \"Product <br/> RM Datalink<br/> \"+billingData.product_modules.length + \" Add-ons\";\r",
                    "\r",
                    "    parentPanel.down('#rtuModuleSummaryLbl').setHtml(html);\r",
                    "\r",
                    "    html = \"Due Date <br/>\"+ billingData.due_date;\r",
                    "\r",
                    "     parentPanel.down('#rtuDueDateLbl').setHtml(html);\r",
                    "\r",
                    "    parentPanel.down('#rtuPaymentPrdTermSlctFld').setValue(billingData.payment_period);\r",
                    "\r",
                    "    html = \"Unit price/month<br/>\"+ billingData.monthly_membership;\r",
                    "\r",
                    "     parentPanel.down('#rtuTotalPricePerMonthLbl').setHtml(html);\r",
                    "\r",
                    "\r",
                    "    html = '<div style= \"margin-left: -106px;\"> Your current Datalink billing invoice.<span style=\"float:right;\">#invoice  :' + billingData.invoice_number+ '</span> </div>';\r",
                    "\r",
                    "   parentPanel.down('#rtuBillHeaderLbl').setHtml(html) ;"
                ]
            },
            "designerId": "dbe32648-4641-41dc-b1e0-aa703e3d3cdd"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "initProductRMPRO",
                "implHandler": [
                    "    var LoginHandler = RMdatalink.app.getController('LoginHandler');\r",
                    "\r",
                    "    var rtl = LoginHandler.config.logedInUserRecord ;\r",
                    "\r",
                    "    var parentPanel = Ext.ComponentQuery.query('#rtuProductRMPROTab')[0] ;\r",
                    "\r",
                    "\r",
                    "    var billingData = rtl.product_billng.product_rmpro ;\r",
                    "\r",
                    "if(!billingData){\r",
                    "    return ;\r",
                    "}\r",
                    "\r",
                    "    var html =\"\";\r",
                    "\r",
                    "    html = \"Product <br/> RMPro- Package Name<br/> \"+billingData.product_modules.length + \" Add-ons\";\r",
                    "\r",
                    "    parentPanel.down('#rtuModuleSummaryLbl').setHtml(html);\r",
                    "\r",
                    "    html = \"Due Date <br/>\"+ billingData.due_date;\r",
                    "\r",
                    "     parentPanel.down('#rtuDueDateLbl').setHtml(html);\r",
                    "\r",
                    "    parentPanel.down('#rtuPaymentPrdTermSlctFld').setValue(billingData.payment_period);\r",
                    "\r",
                    "    html = \"Unit price/month<br/>\"+ billingData.monthly_membership;\r",
                    "\r",
                    "     parentPanel.down('#rtuTotalPricePerMonthLbl').setHtml(html);\r",
                    "\r",
                    "\r",
                    "    html = '<div style= \"margin-left: -106px;\"> Your current RM-PRO billing invoice.<span style=\"float:right;\">#invoice  :' + billingData.invoice_number+ '</span> </div>';\r",
                    "\r",
                    "   parentPanel.down('#rtuBillHeaderLbl').setHtml(html) ;\r",
                    "\r",
                    "\r",
                    "\r",
                    ""
                ]
            },
            "designerId": "16172757-d00a-4612-9d4d-6d2c37132012"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "initialiseAppForRtUser",
                "implHandler": [
                    "\r",
                    "            function loadStore(){\r",
                    "                      if(! RMdatalink.app.getController('PaginationController').config.storesLoadedFirstTime[RMdatalink.app.getController('PaginationController').getCurrentActiveStoreId()]){\r",
                    "                             RMdatalink.app.getController('PaginationController').loadStore(1,RMdatalink.util.DataLoader.getPageSize(),false);\r",
                    "                  }\r",
                    "            }\r",
                    "\r",
                    "\r",
                    "          RMdatalink.app.getController('PaginationController').setCurrentActiveStoreId('products.DatalinkMain') ;\r",
                    "           loadStore();\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "          RMdatalink.app.getController('PaginationController').setCurrentActiveStoreId('billingMasterStore') ;\r",
                    "          loadStore();\r",
                    "\r",
                    "\r",
                    "\r",
                    "        RMdatalink.app.getController('RMProController').initRMproStore() ;\r",
                    "\r",
                    "\r",
                    ""
                ]
            },
            "designerId": "27333314-83d1-4fbd-b6e2-975509ccde4a"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "calculateRMPRODiscountAndTotal",
                "implHandler": [
                    " var LoginHandler = RMdatalink.app.getController('LoginHandler');\r",
                    "\r",
                    "    var rtl = LoginHandler.config.logedInUserRecord ;\r",
                    "\r",
                    "    var parentPanel = Ext.ComponentQuery.query('#rtuProductRMPROTab')[0] ;\r",
                    "\r",
                    "\r",
                    "    var billingData = rtl.product_billng.product_rmpro ;\r",
                    "\r",
                    "if(!billingData){\r",
                    "    return ;\r",
                    "}\r",
                    "\r",
                    "\r",
                    "  var monthlyUnitPrice = 0 ;\r",
                    "\r",
                    " monthlyUnitPrice = parseInt(billingData.monthly_membership,0) ;\r",
                    "\r",
                    " var paymentPeriod = parentPanel.down('#rtuPaymentPrdTermSlctFld').getValue() ;\r",
                    "\r",
                    " var totalAmmount = monthlyUnitPrice * paymentPeriod ;\r",
                    "\r",
                    " var discount = 0 ;\r",
                    "\r",
                    "var rmProPricing = RMdatalink.app.getController('BillingDetailsController').config.pricingData[3] ;\r",
                    "\r",
                    "\r",
                    "\r",
                    "for(var i = 0 ; i < rmProPricing.discount_policy.length; i++ ){\r",
                    "\r",
                    "    var duration = parseInt(rmProPricing.discount_policy[i].discount_duration,0 ) * 12 ;\r",
                    "\r",
                    "    if(paymentPeriod >= duration && discount < parseInt(rmProPricing.discount_policy[i].discount_value,0 ) ){\r",
                    "        discount = parseInt(rmProPricing.discount_policy[i].discount_value,0 ) ;\r",
                    "    }\r",
                    "\r",
                    "\r",
                    "}\r",
                    "\r",
                    "// billingData.payment_period_start + \" to \" +   billingData.payment_period_end + \"( \" + billingData.payment_period\r",
                    "//paymentPeriod\r",
                    "\r",
                    "var pStartDate = new Date( billingData.payment_period_start);\r",
                    "if(pStartDate){\r",
                    "\r",
                    "    var pEndDate = pStartDate.setMonth(pStartDate.getMonth() + parseInt(paymentPeriod,0));\r",
                    "\r",
                    "     billingData.payment_period_end = RMdatalink.util.globalMethods.getAMDate(pEndDate);\r",
                    "     billingData.payment_period =paymentPeriod ;\r",
                    "\r",
                    "}\r",
                    "\r",
                    "var totalDiscount = (totalAmmount / 100 )*discount ;\r",
                    "\r",
                    "totalDiscount = Math.round(totalDiscount) ;\r",
                    "\r",
                    "var finalPayble = totalAmmount - totalDiscount ;\r",
                    "\r",
                    "\r",
                    "parentPanel.down('#rtuDiscountValueLbl').setHtml(\"$ \" + totalDiscount);\r",
                    "\r",
                    "parentPanel.down('#rtuTotalPaybleNoDiscountLbl').setHtml(\"Account<br/> $ \"+totalAmmount);\r",
                    "\r",
                    "parentPanel.down('#rtuTotalPaybleAfterDiscountLbl').setHtml( \"$ \" + finalPayble);\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "var masterStore = Ext.getStore('retailersMaster');\r",
                    "masterStore.removeAll();\r",
                    "masterStore.sync();\r",
                    "\r",
                    "masterStore.setData([rtl]);\r",
                    "masterStore.sync() ;\r",
                    "\r",
                    "var varibleToSet = {\r",
                    "    record:masterStore.getAt(0)\r",
                    "};\r",
                    "\r",
                    "RMdatalink.util.globalConfig.setDataToShowInSettingWindow(varibleToSet) ;\r",
                    "\r",
                    "/*\r",
                    "\r",
                    "rtUserPaymentFreqFld\r",
                    "\r",
                    "rtUserAdvancePaymentFld\r",
                    "rtUserDiscountAppliedFld\r",
                    "rtUserTotalPaybleFld\r",
                    "rtUserTotalSavingFld\r",
                    "\r",
                    "contract_period\r",
                    "\r",
                    "*/\r",
                    "\r",
                    "if(billingData.payment_frequency )\r",
                    "{\r",
                    "        Ext.ComponentQuery.query('#rtUserPaymentFreqFld')[0].setValue(billingData.payment_frequency + \"Months\");\r",
                    "}else{\r",
                    "    Ext.ComponentQuery.query('#rtUserPaymentFreqFld')[0].setValue(\"\");\r",
                    "}\r",
                    "\r",
                    "if(billingData.advance_payment_period)\r",
                    "{\r",
                    "    Ext.ComponentQuery.query('#rtUserAdvancePaymentFld')[0].setValue(billingData.advance_payment_period+ \"Months\");\r",
                    "}else{\r",
                    "\r",
                    "    Ext.ComponentQuery.query('#rtUserAdvancePaymentFld')[0].setValue(\"\");\r",
                    "}\r",
                    "\r",
                    "Ext.ComponentQuery.query('#rtUserDiscountAppliedFld')[0].setValue(billingData.discount + \" %\");\r",
                    "Ext.ComponentQuery.query('#rtUserTotalPaybleFld')[0].setValue( \"$ \" + finalPayble  );\r",
                    "// Ext.ComponentQuery.query('#rtUserTotalSavingFld')[0].setValue(billingData  + \" $\");\r",
                    "\r",
                    "\r",
                    "var ProductBillingController = RMdatalink.app.getController('ProductBillingController');\r",
                    "    ProductBillingController.intRMPROBilling() ;\r",
                    "    ProductBillingController.displayRMPROBillig();\r",
                    "\r",
                    "var contractLbl = Ext.ComponentQuery.query('#rtUserContractTermLbl')[0] ;\r",
                    "if(billingData.contract_period){\r",
                    "    var cTerm = parseInt(billingData.contract_period,0) / 12 ;\r",
                    "\r",
                    "    var cEndDate = new Date(billingData.contract_start_date );\r",
                    "\r",
                    "    cEndDate = cEndDate.setMonth(cEndDate.getMonth() + parseInt(billingData.contract_period,0)) ;\r",
                    "\r",
                    "    cEndDate = RMdatalink.util.globalMethods.getAMDate(cEndDate);\r",
                    "\r",
                    "    var cHtml = billingData.payment_period_start + \" to \" +   billingData.payment_period_end + \"  ( \" + billingData.payment_period + \" Month )\";\r",
                    "    contractLbl.setHtml('<div style=\"margin-left:20px;padding-top:5px !important;\">Payment Term : '+cHtml+'</div>');\r",
                    "}else{\r",
                    "    contractLbl.setHtml(\"\");\r",
                    "}\r",
                    ""
                ]
            },
            "designerId": "16eb66fa-cfc9-4eb8-9ff7-a45517e6fe4e"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "calculateDatalinkDiscountAndTotal",
                "implHandler": [
                    " var LoginHandler = RMdatalink.app.getController('LoginHandler');\r",
                    "\r",
                    "    var rtl = LoginHandler.config.logedInUserRecord ;\r",
                    "\r",
                    "    var parentPanel = Ext.ComponentQuery.query('#rtuProductDatalinkTab')[0] ;\r",
                    "\r",
                    "\r",
                    "    var billingData = rtl.product_billng.product_datalink ;\r",
                    "\r",
                    "if(!billingData){\r",
                    "    return ;\r",
                    "}\r",
                    "\r",
                    "\r",
                    "  var monthlyUnitPrice = 0 ;\r",
                    "\r",
                    " monthlyUnitPrice = parseInt(billingData.monthly_membership,0) ;\r",
                    "\r",
                    " var paymentPeriod = parentPanel.down('#rtuPaymentPrdTermSlctFld').getValue() ;\r",
                    "\r",
                    " var totalAmmount = monthlyUnitPrice * paymentPeriod ;\r",
                    "\r",
                    " var discount = 0 ;\r",
                    "\r",
                    "var rmProPricing = RMdatalink.app.getController('BillingDetailsController').config.pricingData[0] ;\r",
                    "\r",
                    "\r",
                    "\r",
                    "for(var i = 0 ; i < rmProPricing.advance_payment_discounts.length; i++ ){\r",
                    "\r",
                    "    var duration = parseInt(rmProPricing.advance_payment_discounts[i].discount_duration,0 ) * 12 ;\r",
                    "\r",
                    "    if(paymentPeriod >= duration && discount < parseInt(rmProPricing.advance_payment_discounts[i].discount_value,0 ) ){\r",
                    "        discount = parseInt(rmProPricing.advance_payment_discounts[i].discount_value,0 ) ;\r",
                    "    }\r",
                    "\r",
                    "\r",
                    "\r",
                    "}\r",
                    "\r",
                    "\r",
                    "var totalDiscount = (totalAmmount / 100 )*discount ;\r",
                    "\r",
                    "totalDiscount = Math.round(totalDiscount) ;\r",
                    "\r",
                    "var finalPayble = totalAmmount - totalDiscount ;\r",
                    "\r",
                    "\r",
                    "parentPanel.down('#rtuDiscountValueLbl').setHtml(totalDiscount);\r",
                    "\r",
                    "parentPanel.down('#rtuTotalPaybleNoDiscountLbl').setHtml(\"Account<br/>\"+totalAmmount);\r",
                    "\r",
                    "parentPanel.down('#rtuTotalPaybleAfterDiscountLbl').setHtml(finalPayble);\r",
                    "\r",
                    ""
                ]
            },
            "designerId": "41ee6b6e-efcf-4eb3-a3e1-97b0f480878a"
        }
    ]
}