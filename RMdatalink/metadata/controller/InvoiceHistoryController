{
    "type": "Ext.app.Controller",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "designer|userClassName": "InvoiceHistoryController",
        "displayGeneratedInvoice": false,
        "inVoiceSearchTimeOut": 1000,
        "invoiceSearchTime": 0,
        "isSearchForInvoice": false
    },
    "configAlternates": {
        "displayGeneratedInvoice": "boolean",
        "isSearchForInvoice": "boolean",
        "invoiceSearchTime": "number",
        "inVoiceSearchTimeOut": "number"
    },
    "designerId": "2927d79e-2877-4790-b91c-cd414de7a94d",
    "customConfigs": [
        {
            "group": "(Custom Properties)",
            "name": "displayGeneratedInvoice",
            "type": "string"
        },
        {
            "group": "(Custom Properties)",
            "name": "isSearchForInvoice",
            "type": "string"
        },
        {
            "group": "(Custom Properties)",
            "name": "invoiceSearchTime",
            "type": "string"
        },
        {
            "group": "(Custom Properties)",
            "name": "inVoiceSearchTimeOut",
            "type": "string"
        }
    ],
    "cn": [
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "initInvoiceHistory",
                "implHandler": [
                    "\r",
                    "\r",
                    "var retailer = RMdatalink.app.getController('InvoiceController').config.selectedRetailer ;\r",
                    "\r",
                    "var retailer_id = retailer.get(\"_id\");\r",
                    "\r",
                    "this.searchInvoicesForRt(\"\",1,50,retailer_id);"
                ]
            },
            "designerId": "830bdaba-acf8-447f-a833-f29f526788a6"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "searchText",
                    "page_no",
                    "pageSize",
                    "retailer_id"
                ],
                "fn": "searchInvoicesForRt",
                "implHandler": [
                    "\r",
                    "\r",
                    "    var searchQuery ={'$or':[\r",
                    "                                            { \"invoice_product\": { $regex: searchText , $options: 'i' } },\r",
                    "                                            { \"due_date\": { $regex: searchText  , $options: 'i' } },\r",
                    "                                            { \"invoice_number\": { $regex: searchText  , $options: 'i' } }\r",
                    "                     ]};\r",
                    "\r",
                    "        var tquery = {'$and':[\r",
                    "\r",
                    "              {\"retailer_id\" : retailer_id},\r",
                    "               searchQuery\r",
                    "\r",
                    "        ]};\r",
                    "\r",
                    "\r",
                    "         RMdatalink.iwa.rdl.queryDB({collection: dbEnv + \"rdl_invoice_history\",pageNo:page_no ,pageSize: 50 ,sortBy:{},\r",
                    "         query:tquery,\r",
                    "         fields:{}},success,error);\r",
                    "\r",
                    "\r",
                    "\r",
                    "function success(){\r",
                    "\r",
                    "   console.log(arguments[0].items) ;\r",
                    "\r",
                    "     if(page_no > 1 && arguments[0].items.length == 0 ){\r",
                    "\r",
                    "\r",
                    "        rollBackPageNo() ;\r",
                    "        Ext.Msg.alert(\"Alert\",\"Next page is not available.\",Ext.emptyFn);\r",
                    "        return;\r",
                    "    }\r",
                    "\r",
                    "    setInvoiceHistoryStore(arguments[0].items) ;\r",
                    "\r",
                    "\r",
                    "     Ext.Viewport.setMasked(false) ;\r",
                    "\r",
                    "\r",
                    "}\r",
                    "\r",
                    "function error(){\r",
                    "      Ext.Viewport.setMasked(false) ;\r",
                    "\r",
                    "}\r",
                    "\r",
                    "\r",
                    "function setInvoiceHistoryStore(data){\r",
                    "\r",
                    "    var InvoiceHistoryStore = Ext.getStore('InvoiceHistoryStore') ;\r",
                    "    InvoiceHistoryStore.removeAll();\r",
                    "    InvoiceHistoryStore.sync();\r",
                    "\r",
                    "    InvoiceHistoryStore.setData(data);\r",
                    "    InvoiceHistoryStore.sync() ;\r",
                    "\r",
                    "}\r",
                    "\r",
                    "\r",
                    "function rollBackPageNo(){\r",
                    "     var store = Ext.getStore('InvoiceHistoryStore');\r",
                    "    store.setPageNo( parseInt(page_no) - 1 ) ;\r",
                    "}\r",
                    ""
                ]
            },
            "designerId": "6015e705-443a-4bbc-bb44-c81803b02a66"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "invoice"
                ],
                "fn": "generateInvoiceForRt",
                "implHandler": [
                    "var that = this ;\r",
                    "\r",
                    "Ext.Viewport.setMasked( {\r",
                    "                xtype: 'loadmask',message:'Generating Invoice'\r",
                    "            });\r",
                    "\r",
                    "\r",
                    "var InvoiceHistoryStore = Ext.getStore('InvoiceHistoryStore') ;\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "RMdatalink.util.DataLoader.sendNewRecordForRetailerToServer(invoice,InvoiceHistoryStore,success,error) ;\r",
                    "\r",
                    "\r",
                    "function success(){\r",
                    "\r",
                    "    console.log(arguments) ;\r",
                    "      Ext.Viewport.setMasked(false);\r",
                    "    goForPrinting() ;\r",
                    "    RMdatalink.app.getController('InvoiceHistoryController').initInvoiceHistory() ;\r",
                    "\r",
                    "}\r",
                    "\r",
                    "\r",
                    "function error(){\r",
                    "     Ext.Viewport.setMasked(false);\r",
                    "}\r",
                    "\r",
                    "\r",
                    "\r",
                    "function goForPrinting(){\r",
                    "\r",
                    "    if(invoice.invoice_product == \"product_datalink\"){\r",
                    "\r",
                    "         if(Ext.ComponentQuery.query('#InvoicePage')[0]){\r",
                    "\r",
                    "                Ext.ComponentQuery.query('#InvoicePage')[0].destroy() ;\r",
                    "            }\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "            var printTimeout = setTimeout(function(){\r",
                    "\r",
                    "\r",
                    "                                           Ext.widget('InvoicePage').show();\r",
                    "\r",
                    "\r",
                    "               RMdatalink.app.getController('InvoiceController').setDatalinkInvoiceToPrint();\r",
                    "\r",
                    "                            that.setUpNextInvoice(invoice) ;\r",
                    "\r",
                    "                                            clearTimeout(printTimeout);\r",
                    "\r",
                    "\r",
                    "            },100);\r",
                    "\r",
                    "    }else if(invoice.invoice_product == \"product_rmpro\"){\r",
                    "\r",
                    "\r",
                    "           if(Ext.ComponentQuery.query('#InvoicePage')[0]){\r",
                    "\r",
                    "                Ext.ComponentQuery.query('#InvoicePage')[0].destroy() ;\r",
                    "            }\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "            var printTimeout = setTimeout(function(){\r",
                    "\r",
                    "\r",
                    "                                               Ext.widget('InvoicePage').show();\r",
                    "                                               RMdatalink.app.getController('InvoiceController').setRMproInvoiceToPrint();\r",
                    "                                               that.setUpNextInvoice(invoice) ;\r",
                    "                                               clearTimeout(printTimeout);\r",
                    "\r",
                    "\r",
                    "            },100);\r",
                    "\r",
                    "    }\r",
                    "}"
                ]
            },
            "designerId": "ce160ab8-6628-4372-b8ad-c5c5dc23bcf5"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "updateInvoice",
                "implHandler": [
                    "var that = this ;\r",
                    "Ext.Msg.confirm(\"Confirm\",\"Are you sure you want to update invoice ?\",onMessageAns ,this);\r",
                    "\r",
                    "\r",
                    "function onMessageAns(action,opt,confirmBox){\r",
                    "\r",
                    "\r",
                    "    if(action == \"yes\"){\r",
                    "\r",
                    "         Ext.Viewport.setMasked({\r",
                    "                                    xtype: 'loadmask'\r",
                    "                                });\r",
                    "\r",
                    "\r",
                    "        updateInvoiceConfirm() ;\r",
                    "\r",
                    "    }else{\r",
                    "        return ;\r",
                    "    }\r",
                    "\r",
                    "\r",
                    "}\r",
                    "\r",
                    " var dataToUpdateWId = new Object();\r",
                    "\r",
                    "var invoiceRec ;\r",
                    "\r",
                    "function updateInvoiceConfirm(){\r",
                    "\r",
                    "     invoiceRec = Ext.ComponentQuery.query('#billingDtHistoryListPanel')[0].down('#mainList').getSelection()[0] ;\r",
                    "    var invoiceHistoryStore = Ext.getStore('InvoiceHistoryStore') ;\r",
                    "\r",
                    "\r",
                    "    var dataToupdate = new Object() ;\r",
                    "\r",
                    "    if(invoiceRec.data.invoice_product == \"product_datalink\"){\r",
                    "         dataToupdate = that.getDatalinkInvoice() ;\r",
                    "    }else if(invoiceRec.data.invoice_product == \"product_rmpro\"){\r",
                    "        dataToupdate = that.getRmPRoInvoice() ;\r",
                    "    }\r",
                    "\r",
                    "    if(!dataToupdate){\r",
                    "          Ext.Viewport.setMasked(false);\r",
                    "          return ;\r",
                    "    }\r",
                    "\r",
                    "\r",
                    "    for(var t in dataToupdate){\r",
                    "\r",
                    "        if( t != \"_id\" )\r",
                    "        {\r",
                    "            dataToUpdateWId[t] = dataToupdate[t] ;\r",
                    "        }\r",
                    "\r",
                    "        console.log(t);\r",
                    "    }\r",
                    "\r",
                    "\r",
                    "\r",
                    "  //delete dataToupdate._id ;\r",
                    "\r",
                    "   RMdatalink.iwa.rdl.doUpdateCollection(invoiceHistoryStore, dataToUpdateWId , invoiceRec.get('_id'), suc, err);\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "}\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "            function suc(){\r",
                    "\r",
                    "\r",
                    "\r",
                    "                invoiceRec.set(dataToUpdateWId);\r",
                    "                invoiceRec.dirty= true;\r",
                    "\r",
                    "                Ext.Viewport.setMasked(false);\r",
                    "\r",
                    "\r",
                    "\r",
                    "            }\r",
                    "            function err(){\r",
                    "                \r",
                    "                console.error(arguments);\r",
                    "                    Ext.Viewport.setMasked(false);\r",
                    "            }"
                ]
            },
            "designerId": "1994da9e-d41c-4993-ab4d-f91996fb1980"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "product_name"
                ],
                "fn": "validateInvoiceForGenerarion",
                "implHandler": [
                    "    var that = this ;\r",
                    "    var retailer = RMdatalink.app.getController('InvoiceController').config.selectedRetailer ;\r",
                    "\r",
                    "    var retailer_id = retailer.get(\"_id\");\r",
                    "\r",
                    "    var product_billng =  retailer.get(\"product_billng\");\r",
                    "\r",
                    "    var inititialActivationData = product_billng[product_name] ?  product_billng[product_name].initial_activation_date : \"\" ;\r",
                    "\r",
                    "    var invoice_id= \"\";\r",
                    "\r",
                    "    var invoice_product = product_name ;\r",
                    "\r",
                    "    var retailer_details = {\r",
                    "\r",
                    "    };\r",
                    "\r",
                    "    var invoice_product = \"\";\r",
                    "\r",
                    "    var invoice_number = that.getInvoiceNo();\r",
                    "\r",
                    "    var due_date = \"\" ;\r",
                    "\r",
                    "    var invoice =   product_billng[product_name] ;\r",
                    "\r",
                    "    invoice.retailer_id = retailer_id ;\r",
                    "\r",
                    "if(!invoice.invoice_number)\r",
                    "{\r",
                    "    invoice.invoice_number = invoice_number ;\r",
                    "}\r",
                    "\r",
                    "if(!invoice.invoice_id)\r",
                    "{\r",
                    "    invoice.invoice_id = invoice_id ;\r",
                    "}\r",
                    "    invoice.invoice_product = product_name ;\r",
                    "\r",
                    "\r",
                    "    invoice.retailer_details = retailer_details ;\r",
                    "\r",
                    "\r",
                    "\r",
                    "    var validationResult = true ;\r",
                    "\r",
                    "    var msg = \"invalid invoice due to <break/>\" ;\r",
                    "\r",
                    "    if(! invoice.initial_activation_date){\r",
                    "        validationResult =false ;\r",
                    "        msg += \"Initial activation date is not set.<break/>\";\r",
                    "    }\r",
                    "\r",
                    "    if(! invoice.payment_period ){\r",
                    "\r",
                    "        invoice.payment_period =1 ;\r",
                    "    }\r",
                    "\r",
                    "\r",
                    "    if(! invoice.payment_period_start && invoice.initial_activation_date ){\r",
                    "\r",
                    "         invoice.payment_period_start = invoice.initial_activation_date ;\r",
                    "\r",
                    "         invoice.payment_period_end = that.getAMDateByAddingMonths(invoice.initial_activation_date , invoice.payment_period) ;\r",
                    "\r",
                    "\r",
                    "    }\r",
                    "\r",
                    "\r",
                    "if(validationResult){\r",
                    "\r",
                    "    that.generateInvoiceForRt(invoice) ;\r",
                    "\r",
                    "}else{\r",
                    "\r",
                    "    Ext.Msg.alert(\"Alert\", msg);\r",
                    "}"
                ]
            },
            "designerId": "73667239-20a9-4790-8682-914ec351fbd4"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "invoice"
                ],
                "fn": "setUpNextInvoice",
                "implHandler": [
                    "\r",
                    "\r",
                    "\r",
                    "    var that = this ;\r",
                    "    var invoiceController = RMdatalink.app.getController('InvoiceController') ;\r",
                    "    var product_name = invoice.invoice_product ;\r",
                    "\r",
                    "    var masterStore = Ext.getStore('retailersMaster');\r",
                    "\r",
                    "\r",
                    " var invoiceBackup = new Object(invoice) ;\r",
                    "\r",
                    "\r",
                    "     invoice.payment_period_start = invoice.payment_period_end ;\r",
                    "\r",
                    "if(invoice.payment_frequency){\r",
                    "\r",
                    "    invoice.payment_period_end  = that.getAMDateByAddingMonths( invoice.payment_period_end,invoice.payment_frequency );\r",
                    "\r",
                    "    invoice.payment_period = invoice.payment_frequency;\r",
                    "\r",
                    "\r",
                    "}else{\r",
                    "\r",
                    "    invoice.payment_period_end  = that.getAMDateByAddingMonths( invoice.payment_period_end,invoice.payment_period);\r",
                    "}\r",
                    "\r",
                    "     invoice.advance_payment_period = null ;\r",
                    "\r",
                    "     invoice.invoice_number = that.getInvoiceNo() ;\r",
                    "     invoice.invoice_id = RMdatalink.util.globalMethods.getAmToday() ;\r",
                    "     invoice.due_date = invoice.payment_period_start  ;\r",
                    "     invoice.ammount_paying = 0 ;\r",
                    "\r",
                    "     invoice.payments = [] ;\r",
                    "    var rtRecord = invoiceController.config.selectedRetailer ;\r",
                    "\r",
                    "    var dataToUpdate = {\r",
                    "\r",
                    "        product_billng : rtRecord.data.product_billng\r",
                    "    };\r",
                    "\r",
                    "    var productData = dataToUpdate.product_billng[product_name] ;\r",
                    "\r",
                    "\r",
                    "    dataToUpdate.product_billng[product_name] = invoice ;\r",
                    "\r",
                    "\r",
                    "    console.error(dataToUpdate) ;\r",
                    "\r",
                    "\r",
                    "\r",
                    "    Ext.Viewport.setMasked( {\r",
                    "                    xtype: 'loadmask'\r",
                    "                });\r",
                    "\r",
                    "   RMdatalink.iwa.rdl.doUpdateCollection(masterStore, dataToUpdate , rtRecord.get('_id'), suc, err);\r",
                    "\r",
                    "\r",
                    "            function suc(){\r",
                    "\r",
                    "                rtRecord.set('product_billng',dataToUpdate.product_billng);\r",
                    "                 Ext.Function.defer(resetView, 1000, that);\r",
                    "                Ext.Viewport.setMasked(false);\r",
                    "\r",
                    "            }\r",
                    "            function err(){\r",
                    "                    Ext.Viewport.setMasked(false);\r",
                    "            }\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "function resetView(){\r",
                    "\r",
                    "    RMdatalink.app.getController('InvoiceController').initInvoice(rtRecord);\r",
                    "\r",
                    "}"
                ]
            },
            "designerId": "d9ef8cab-0748-4b88-817f-4b1b6b9dca53"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "date",
                    "months"
                ],
                "fn": "getAMDateByAddingMonths",
                "implHandler": [
                    "                var today = new Date(date) ;\r",
                    "\r",
                    "                months = parseInt(months,0) ;\r",
                    "\r",
                    "                today.setMonth(today.getMonth() + months) ;\r",
                    "\r",
                    "\r",
                    "                var dd = today.getDate();\r",
                    "                var mm = today.getMonth()+1; //January is 0!\r",
                    "\r",
                    "                var yyyy = today.getFullYear();\r",
                    "                if(dd<10)\r",
                    "                {\r",
                    "                    dd='0'+dd ;\r",
                    "                }\r",
                    "                if(mm<10)\r",
                    "                {\r",
                    "                    mm='0'+mm ;\r",
                    "                }\r",
                    "\r",
                    "                return (mm+'/'+dd+'/'+yyyy);"
                ]
            },
            "designerId": "59bdc2e8-8c81-4970-bc03-6bfd88ec4ff5"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "getInvoiceNo",
                "implHandler": [
                    "\r",
                    "                var today = new Date();\r",
                    "                var dd = today.getDate();\r",
                    "                var mm = today.getMonth()+1; //January is 0!\r",
                    "\r",
                    "                var yyyy = today.getFullYear();\r",
                    "                if(dd<10)\r",
                    "                {\r",
                    "                    dd='0'+dd ;\r",
                    "                }\r",
                    "                if(mm<10)\r",
                    "                {\r",
                    "                    mm='0'+mm ;\r",
                    "                }\r",
                    "\r",
                    "                var hr = today.getHours();\r",
                    "\r",
                    "                var min = today.getMinutes();\r",
                    "\r",
                    "                var sec = today.getSeconds();\r",
                    "\r",
                    "\r",
                    "\r",
                    "                var rt = \"\"+ mm+dd+yyyy+hr+min+sec+\"\";\r",
                    "                rt = parseInt(rt,0);\r",
                    "\r",
                    "                return rt ;"
                ]
            },
            "designerId": "57c17a8a-cf69-4aa1-9fc8-7d0a26da6e04"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "list",
                    "record",
                    "eOpts"
                ],
                "fn": "onHistoryInvoiceSelect",
                "implHandler": [
                    "console.log(record);\r",
                    "\r",
                    "\r",
                    "this.config.displayGeneratedInvoice = true ;\r",
                    "\r",
                    " var invoiceController = RMdatalink.app.getController('InvoiceController') ;\r",
                    "invoiceController.config.product_billing_rec = {} ;\r",
                    "    invoiceController.config.product_billing_rec[record.data.invoice_product] = record.raw ;\r",
                    "\r",
                    "invoiceController.config.isManualChange = false ;\r",
                    "\r",
                    "if(record.data.invoice_product  == \"product_rmpro\"){\r",
                    "\r",
                    "\r",
                    "\r",
                    "          Ext.ComponentQuery.query('#productRmproInvoicePanel')[0].setHidden(false);\r",
                    "\r",
                    "          Ext.ComponentQuery.query('#productDatalinkInvoicePanel')[0].setHidden(true);\r",
                    "\r",
                    "         initRMpro() ;\r",
                    "\r",
                    "\r",
                    "}else if(record.data.invoice_product  == \"product_datalink\"){\r",
                    "\r",
                    "          Ext.ComponentQuery.query('#productRmproInvoicePanel')[0].setHidden(true);\r",
                    "\r",
                    "          Ext.ComponentQuery.query('#productDatalinkInvoicePanel')[0].setHidden(false);\r",
                    "\r",
                    "         initDataLink() ;\r",
                    "}\r",
                    "\r",
                    " invoiceController.config.isManualChange = true ;\r",
                    "\r",
                    "function initRMpro()\r",
                    "{\r",
                    "\r",
                    "\r",
                    "      invoiceController.resetRmproInvoice() ;\r",
                    "\r",
                    "        invoiceController.setRMProBillInVoice() ;\r",
                    "\r",
                    "        invoiceController.setRMProBillingModules() ;\r",
                    "\r",
                    "\r",
                    "\r",
                    "invoiceController.setInvoiceRmproDiscount(Ext.ComponentQuery.query('#invoiceRmProPaymentPrdSlFld')[0].getValue(),true);\r",
                    "\r",
                    "\r",
                    "}\r",
                    "\r",
                    "///////////////////////init datalink\r",
                    "\r",
                    "\r",
                    "function initDataLink(){\r",
                    "\r",
                    "\r",
                    "       invoiceController.resetDatalinkInvoice() ;\r",
                    "\r",
                    "\r",
                    "\r",
                    "        invoiceController.setDatalinkBillInVoice() ;\r",
                    "\r",
                    "        invoiceController.setDatalinkBillingModules() ;\r",
                    "\r",
                    "       invoiceController.setInvoiceDatalinkDiscount(Ext.ComponentQuery.query('#invoiceDatalinkPaymentPrdSlFld')[0].getValue(),true);\r",
                    "\r",
                    "\r",
                    "}"
                ]
            },
            "designerId": "f3a1e465-b652-4f3d-b051-1d0238533c43"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button[itemId=billingDtlsViewCurrentSubBtn]",
                "designer|targetType": "Ext.Button",
                "fn": "onbillingDtlsViewCurrentSubBtnTap",
                "implHandler": [
                    " var invoiceController = RMdatalink.app.getController('InvoiceController') ;\r",
                    "    var rtRecord = invoiceController.config.selectedRetailer ;\r",
                    " invoiceController.initInvoice(rtRecord);"
                ],
                "name": "tap"
            },
            "designerId": "399e5aec-2720-4eb6-814e-30aecaefd1a6"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "searchfield[itemId=biilingInvoiceSearchForRtTxtFld]",
                "designer|targetType": "Ext.field.Search",
                "fn": "onbiilingInvoiceSearchForRtTxtFldKeyup",
                "implHandler": [
                    "this.initSearchForInvlice() ;"
                ],
                "name": "keyup"
            },
            "designerId": "12dbf5c0-ba66-4d9e-9444-27b63bbf6726"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "startInstantSearch"
                ],
                "fn": "initSearchForInvlice",
                "implHandler": [
                    "var that = this ;\r",
                    "\r",
                    "if(startInstantSearch){\r",
                    "  startSearch() ;\r",
                    "}\r",
                    "\r",
                    "if(! that.config.isSearchForInvoice ){\r",
                    "\r",
                    "    createTimeOut() ;\r",
                    "\r",
                    "}else{\r",
                    "\r",
                    "     that.config.invoiceSearchTime = 100 ;\r",
                    "}\r",
                    "\r",
                    "function createTimeOut(){\r",
                    "\r",
                    "    that.config.isSearchForInvoice = true ;\r",
                    "\r",
                    "    Ext.Function.defer( onInterval , 100, that);\r",
                    "\r",
                    "\r",
                    "}\r",
                    "\r",
                    "function onInterval(){\r",
                    "\r",
                    "    that.config.invoiceSearchTime += 100 ;\r",
                    "\r",
                    "    if(that.config.invoiceSearchTime < that.config.inVoiceSearchTimeOut)  {\r",
                    "        createTimeOut() ;\r",
                    "    } else{\r",
                    "\r",
                    "        that.config.invoiceSearchTime = 0 ;\r",
                    "        startSearch() ;\r",
                    "    }\r",
                    "\r",
                    "}\r",
                    "\r",
                    "\r",
                    "\r",
                    "function startSearch(){\r",
                    "\r",
                    "        that.config.isSearchForInvoice = false ;\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "        var searchText =  Ext.ComponentQuery.query('#biilingInvoiceSearchForRtTxtFld')[0].getValue() ;\r",
                    "\r",
                    "        var retailer = RMdatalink.app.getController('InvoiceController').config.selectedRetailer ;\r",
                    "\r",
                    "        var retailer_id = retailer.get(\"_id\");\r",
                    "\r",
                    "        that.searchInvoicesForRt(searchText,1,50,retailer_id);\r",
                    "}"
                ]
            },
            "designerId": "dda6cf8b-8241-4f6d-877a-f321a3ba65d9"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button[itemId=biilingInvoiceSearchForRtBtn]",
                "designer|targetType": "Ext.Button",
                "fn": "onbiilingInvoiceSearchForRtBtnTap",
                "implHandler": [
                    "this.initSearchForInvlice(true) ;"
                ],
                "name": "tap"
            },
            "designerId": "070d37ea-4ad1-4dec-a5c6-6b8998fbc969"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "getRmPRoInvoice",
                "implHandler": [
                    "\r",
                    "var that = this ;\r",
                    "\r",
                    "var invoiceController = RMdatalink.app.getController('InvoiceController') ;\r",
                    "\r",
                    "\r",
                    "var rmProInvoicePanel = Ext.ComponentQuery.query('#productRmproInvoicePanel')[0] ;\r",
                    "var dataToUpdate = {\r",
                    "\r",
                    "    product_billng : invoiceController.config.product_billing_rec   //rtRecord.data.product_billng\r",
                    "};\r",
                    "\r",
                    "var product_rmpro = dataToUpdate.product_billng.product_rmpro ;\r",
                    "\r",
                    "\r",
                    "product_rmpro.commission_percent = rmProInvoicePanel.down('#invoiceCommissionPercentFld').getValue() ;\r",
                    "product_rmpro.commissionable_ammount = rmProInvoicePanel.down('#invoiceCommissionableAmtFld').getValue() ;\r",
                    "\r",
                    "product_rmpro.sales_persons = getSalesPersons() ;\r",
                    "\r",
                    "product_rmpro.total_payble = rmProInvoicePanel.down('#invoiceTotalPaybleFld').getValue() ;\r",
                    "product_rmpro.payment_period = rmProInvoicePanel.down('#invoiceRmProPaymentPrdSlFld').getValue() ;\r",
                    "\r",
                    "\r",
                    "product_rmpro.past_due = rmProInvoicePanel.down('#invoicePastDueFld').getValue() ;\r",
                    "product_rmpro.balance_due = rmProInvoicePanel.down('#invoiceBalanceDueFld').getValue() ;\r",
                    "\r",
                    "product_rmpro.pay_date = rmProInvoicePanel.down('#invoicePayDateFld').getValue() ;\r",
                    "product_rmpro.paid_by = rmProInvoicePanel.down('#invoicePaidByFld').getValue() ;\r",
                    "product_rmpro.payment_method_detail = rmProInvoicePanel.down('#invoicePaymentDetailFld').getValue() ;\r",
                    "product_rmpro.cc_approval = rmProInvoicePanel.down('#invoiceCCApprovalFld').getValue() ;\r",
                    "\r",
                    "product_rmpro.proccessed_by = rmProInvoicePanel.down('#invoiceProcessedByFld').getValue() ;\r",
                    "product_rmpro.date = rmProInvoicePanel.down('#invoiceRMProDateFld').getValue() ;\r",
                    "\r",
                    "product_rmpro.ammount_paying = rmProInvoicePanel.down('#invoiceAmmountFld').getValue() ;\r",
                    "\r",
                    "\r",
                    "product_rmpro.payment_period_start = rmProInvoicePanel.down('#rmProSubscrPaymentStartDateFld').getValue() ;\r",
                    "\r",
                    "product_rmpro.payment_period_end  =  rmProInvoicePanel.down('#rmProSubscrPaymentEndDateFld').getValue() ;\r",
                    "\r",
                    "product_rmpro.due_date  = rmProInvoicePanel.down('#rmProSubscrPaymentDueDateFld').getValue() ;\r",
                    "\r",
                    "product_rmpro.payment_note = rmProInvoicePanel.down('#rmProPaymentNoteFld').getValue() ;\r",
                    "\r",
                    "console.error(product_rmpro) ;\r",
                    "\r",
                    "\r",
                    "return product_rmpro ;\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "    function getSalesPersons(){\r",
                    "        return getArrayDataFromStore(Ext.getStore('products.RtSalesPersonStore'));\r",
                    "    }\r",
                    "\r",
                    "\r",
                    "\r",
                    "    function getArrayDataFromStore(store){\r",
                    "\r",
                    "        var data = new Array();\r",
                    "        data = store.getData().items;\r",
                    "\r",
                    "        var dataToReturn = new Array();\r",
                    "\r",
                    "        for(var i=0; i < data.length ; i++){\r",
                    "\r",
                    "            dataToReturn.push(data[i].data);\r",
                    "        }\r",
                    "\r",
                    "        return dataToReturn ;\r",
                    "\r",
                    "    }"
                ]
            },
            "designerId": "5b405efd-6550-498c-9050-31394a6c3bc2"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "getDatalinkInvoice",
                "implHandler": [
                    "var that = this ;\r",
                    "var invoiceController = RMdatalink.app.getController('InvoiceController') ;\r",
                    "\r",
                    "\r",
                    "var rmProInvoicePanel = Ext.ComponentQuery.query('#productDatalinkInvoicePanel')[0] ;\r",
                    "\r",
                    "\r",
                    "var dataToUpdate = {\r",
                    "\r",
                    "    product_billng : invoiceController.config.product_billing_rec // rtRecord.data.product_billng\r",
                    "};\r",
                    "\r",
                    "var product_datalink = dataToUpdate.product_billng.product_datalink ;\r",
                    "\r",
                    "\r",
                    "product_datalink.commission_percent = rmProInvoicePanel.down('#invoiceDatalinkCommissionPercentFld').getValue() ;\r",
                    "product_datalink.commissionable_ammount = rmProInvoicePanel.down('#invoiceDatalinkCommissionableAmtFld').getValue() ;\r",
                    "\r",
                    "product_datalink.sales_persons = getSalesPersons() ;\r",
                    "\r",
                    "product_datalink.total_payble = rmProInvoicePanel.down('#invoiceDatalinkTotalPaybleFld').getValue() ;\r",
                    "product_datalink.payment_period = rmProInvoicePanel.down('#invoiceDatalinkPaymentPrdSlFld').getValue() ;\r",
                    "\r",
                    "\r",
                    "product_datalink.past_due = rmProInvoicePanel.down('#invoiceDatalinkPastDueFld').getValue() ;\r",
                    "product_datalink.balance_due = rmProInvoicePanel.down('#invoiceDatalinkBalanceDueFld').getValue() ;\r",
                    "\r",
                    "product_datalink.pay_date = rmProInvoicePanel.down('#invoiceDatalinkPayDateFld').getValue() ;\r",
                    "product_datalink.paid_by = rmProInvoicePanel.down('#invoiceDatalinkPaidByFld').getValue() ;\r",
                    "product_datalink.payment_method_detail = rmProInvoicePanel.down('#invoiceDatalinkPaymentDetailFld').getValue() ;\r",
                    "product_datalink.cc_approval = rmProInvoicePanel.down('#invoiceDatalinkCCApprovalFld').getValue() ;\r",
                    "\r",
                    "product_datalink.proccessed_by = rmProInvoicePanel.down('#invoiceDatalinkProcessedByFld').getValue() ;\r",
                    "product_datalink.date = rmProInvoicePanel.down('#invoiceDatalinkDateFld').getValue() ;\r",
                    "\r",
                    "product_datalink.ammount_paying = rmProInvoicePanel.down('#invoiceDatalinkAmmountFld').getValue() ;\r",
                    "\r",
                    "\r",
                    "\r",
                    "product_datalink.payment_period_start = rmProInvoicePanel.down('#datalinkSubscrPaymentStartDateFld').getValue() ;\r",
                    "\r",
                    "product_datalink.payment_period_end  =  rmProInvoicePanel.down('#datalinkSubscrPaymentEndDateFld').getValue() ;\r",
                    "\r",
                    "product_datalink.due_date  = rmProInvoicePanel.down('#datalinkSubscrPaymentDueDateFld').getValue() ;\r",
                    "\r",
                    "\r",
                    "product_datalink.payment_note = rmProInvoicePanel.down('#datalinkPaymentNoteFld').getValue() ;\r",
                    "\r",
                    "\r",
                    "\r",
                    "console.error(product_datalink) ;\r",
                    "\r",
                    "return product_datalink ;\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "function getSalesPersons(){\r",
                    "    return getArrayDataFromStore(Ext.getStore('invoice.RtDatalinkSalesPersonStore'));\r",
                    "}\r",
                    "\r",
                    "\r",
                    "\r",
                    "  function getArrayDataFromStore(store){\r",
                    "\r",
                    "        var data = new Array();\r",
                    "        data = store.getData().items;\r",
                    "\r",
                    "        var dataToReturn = new Array();\r",
                    "\r",
                    "        for(var i=0; i < data.length ; i++){\r",
                    "\r",
                    "            dataToReturn.push(data[i].data);\r",
                    "        }\r",
                    "\r",
                    "        return dataToReturn ;\r",
                    "\r",
                    "    }\r",
                    "\r",
                    ""
                ]
            },
            "designerId": "cb22c96e-83f3-4c3b-b9ef-678e6800a481"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button[itemId=biilingInvoiceDeleteBtn]",
                "designer|targetType": "Ext.Button",
                "fn": "onbiilingInvoiceDeleteBtnTap",
                "implHandler": [
                    "RMdatalink.app.getController('DeleteRecords').deleteInvoiceFromHistory() ;"
                ],
                "name": "tap"
            },
            "designerId": "02f87aac-c4e7-4f6a-82b3-289d2c58ec01"
        }
    ]
}