{
    "type": "Ext.app.Controller",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "designer|userClassName": "GMapController",
        "gmap": [
            "null"
        ],
        "isFirstTime": true,
        "markers": [
            "[]"
        ]
    },
    "configAlternates": {
        "gmap": "object",
        "markers": "array",
        "isFirstTime": "boolean"
    },
    "designerId": "3f9cde60-f98d-415b-a6d4-e149148dbe20",
    "customConfigs": [
        {
            "group": "(Custom Properties)",
            "name": "gmap",
            "type": "string"
        },
        {
            "group": "(Custom Properties)",
            "name": "markers",
            "type": "string"
        },
        {
            "group": "(Custom Properties)",
            "name": "isFirstTime",
            "type": "string"
        }
    ],
    "cn": [
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "latitude",
                    "longitude",
                    "description",
                    "store_status"
                ],
                "fn": "addMarker",
                "implHandler": [
                    "\r",
                    "\r",
                    "var base_path = \"resources/images/\" ;\r",
                    "var icon = \"inactive.png\";\r",
                    "\r",
                    "if(store_status){\r",
                    "\r",
                    "    switch(store_status){\r",
                    "\r",
                    "        case \"ACTIVE\":\r",
                    "            icon = \"active.png\";\r",
                    "            break;\r",
                    "\r",
                    "        case \"PROSPECTS\":\r",
                    "            icon = \"prospect.png\";\r",
                    "            break;\r",
                    "\r",
                    "         case \"HOT_PROSPECTS\":\r",
                    "            icon = \"hot_prospect.png\";\r",
                    "            break;\r",
                    "\r",
                    "        case \"INACTIVE\":\r",
                    "            icon = \"inactive.png\";\r",
                    "            break;\r",
                    "\r",
                    "        case \"PENDING\":\r",
                    "            icon = \"pending.png\";\r",
                    "            break;\r",
                    "        case \"NO_STATUS\":\r",
                    "             icon = \"inactive.png\";\r",
                    "            break;\r",
                    "    }\r",
                    "\r",
                    "}\r",
                    "\r",
                    "\r",
                    "\r",
                    "var gMap = Ext.ComponentQuery.query('#googleMapView')[0].getMap();\r",
                    "\r",
                    "if(store_status == \"NO_STATUS\")\r",
                    "{\r",
                    "\r",
                    "    var marker = new google.maps.Marker({\r",
                    "\t\t\t\t\tposition : new google.maps.LatLng( latitude ,longitude),\r",
                    "\t\t\t\t\ttitle : description,\r",
                    "\t\t\t\t\tanimation : false,//google.maps.Animation.DROP,\r",
                    "\t\t\t\t\tmap : gMap\r",
                    "\t\t\t\t});\r",
                    "\r",
                    "\r",
                    "}else{\r",
                    "\r",
                    "    var marker = new google.maps.Marker({\r",
                    "\t\t\t\t\tposition : new google.maps.LatLng( latitude ,longitude),\r",
                    "\t\t\t\t\ttitle : description,\r",
                    "\t\t\t\t\tanimation : false,//google.maps.Animation.DROP,\r",
                    "\t\t\t\t\tmap : gMap,\r",
                    "                    icon:base_path+icon\r",
                    "\t\t\t\t});\r",
                    "\r",
                    "\r",
                    "}\r",
                    "\r",
                    "this.config.markers.push(marker);"
                ]
            },
            "designerId": "bda7e706-ca7d-496c-a698-54dd1d7825b7"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "deleteAllMarkers",
                "implHandler": [
                    "\r",
                    "for(var i=0; i< this.config.markers.length; i++){\r",
                    "\r",
                    "    this.deleteMarker(this.config.markers[i]);\r",
                    "}\r",
                    "\r",
                    "this.config.markers = [] ;"
                ]
            },
            "designerId": "209d3115-8129-4469-b357-dee55ee88895"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "marker"
                ],
                "fn": "deleteMarker",
                "implHandler": [
                    "\r",
                    "\r",
                    "marker.setMap(null);"
                ]
            },
            "designerId": "d99fbead-73c6-41d4-9073-c4d6e322f89f"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "setDefaultMarkers",
                "implHandler": [
                    "return ;\r",
                    "this.deleteAllMarkers() ;\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "var masterStore = Ext.getStore('retailersMaster');\r",
                    "\r",
                    "var data = masterStore.getData().all ;\r",
                    "\r",
                    "for(var i =0 ;i <data.length; i++){\r",
                    "\r",
                    "    this.addMarker(data[i].data.Latitude, data[i].data.Longitude ,data[i].data.store_name + \" , \"+data[i].data.store_address_line1);\r",
                    "\r",
                    "}\r",
                    "\r",
                    "Ext.ComponentQuery.query('#googleMapView')[0].setMapCenter({ latitude: 40.903454, longitude: -73.789113 });"
                ]
            },
            "designerId": "8496aa9d-9586-4d45-a374-b769b71647da"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "radiofield[name=searchRtOnMapFor]",
                "designer|targetType": "Ext.field.Radio",
                "fn": "onRadiofieldCheck",
                "implHandler": [
                    "\r",
                    "\r",
                    "switch(checkboxfield.getItemId()){\r",
                    "\r",
                    "    case \"rtMapCityRadioBtn\":\r",
                    "\r",
                    "                Ext.ComponentQuery.query('#rtMapCityFld')[0].setHidden(false);\r",
                    "                Ext.ComponentQuery.query('#rtMapZipFld')[0].setHidden(true);\r",
                    "                Ext.ComponentQuery.query('#rtMapStateFld')[0].setHidden(true);\r",
                    "\r",
                    "        break;\r",
                    "\r",
                    "\r",
                    "    case \"rtMapZipRadioBtn\":\r",
                    "                Ext.ComponentQuery.query('#rtMapCityFld')[0].setHidden(true);\r",
                    "                Ext.ComponentQuery.query('#rtMapZipFld')[0].setHidden(false);\r",
                    "                Ext.ComponentQuery.query('#rtMapStateFld')[0].setHidden(true);\r",
                    "\r",
                    "        break;\r",
                    "\r",
                    "\r",
                    "    case \"rtMapStateRadioBtn\":\r",
                    "                Ext.ComponentQuery.query('#rtMapCityFld')[0].setHidden(true);\r",
                    "                Ext.ComponentQuery.query('#rtMapZipFld')[0].setHidden(true);\r",
                    "                Ext.ComponentQuery.query('#rtMapStateFld')[0].setHidden(false);\r",
                    "\r",
                    "        break;\r",
                    "\r",
                    "}\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    ""
                ],
                "name": "check"
            },
            "designerId": "b69a84de-7103-49f3-931b-06a2e5cebeef"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "doSearchRetailers",
                "implHandler": [
                    " var that =this ;\r",
                    "\r",
                    " var searchString = \"\" ;\r",
                    " var searchFld = \"store_city\" ;\r",
                    "\r",
                    "Ext.ComponentQuery.query('#gmapSearchFormPanel')[0].setMasked({\r",
                    "                                    xtype: 'loadmask'\r",
                    "                                });\r",
                    "\r",
                    "\r",
                    "\r",
                    "if(! Ext.ComponentQuery.query('#rtMapCityFld')[0].getHidden()){\r",
                    "\r",
                    " searchString =  Ext.ComponentQuery.query('#rtMapCityFld')[0].getValue() ;\r",
                    " searchFld = \"store_city\" ;\r",
                    "\r",
                    "}else if(! Ext.ComponentQuery.query('#rtMapZipFld')[0].getHidden()){\r",
                    "\r",
                    " searchString =  Ext.ComponentQuery.query('#rtMapZipFld')[0].getValue() ;\r",
                    " searchFld = \"store_zip\" ;\r",
                    "\r",
                    "}else if(! Ext.ComponentQuery.query('#rtMapStateFld')[0].getHidden()){\r",
                    "\r",
                    " searchString =  Ext.ComponentQuery.query('#rtMapStateFld')[0].getValue() ;\r",
                    " searchFld = \"store_state\" ;\r",
                    "\r",
                    "}\r",
                    "\r",
                    "var storeStatusQuery = {\r",
                    "    '$or':[\r",
                    "\r",
                    "    ]\r",
                    "    };\r",
                    "\r",
                    "// {'store_status':{}}\r",
                    "\r",
                    "var ps =[] ;\r",
                    "\r",
                    "var  at = true ;\r",
                    "if( Ext.ComponentQuery.query('#activeCheckFldongMap')[0].getChecked()){\r",
                    "\r",
                    "    storeStatusQuery['$or'].push({'store_status': \"ACTIVE\"});\r",
                    "      ps.push({'$or':\r",
                    "                [\r",
                    "                 {\"store_products.datalink_status\" : \"ACTIVE\"},\r",
                    "                 {\"store_products.ecatalog_status\" : \"ACTIVE\"},\r",
                    "                 {\"store_products.ecommerce_status\" :\"ACTIVE\"},\r",
                    "                 {\"store_products.irugs_status\" : \"ACTIVE\"},\r",
                    "                 {\"store_products.rmpro_status\" : \"ACTIVE\"}\r",
                    "                 ]}) ;\r",
                    "}else{\r",
                    "\r",
                    "    at =false ;\r",
                    "}\r",
                    "\r",
                    "\r",
                    "if( Ext.ComponentQuery.query('#prospectCheckFldongMap')[0].getChecked()){\r",
                    "\r",
                    "    storeStatusQuery['$or'].push({'store_status': \"PROSPECTS\"});\r",
                    "      ps.push({'$or':\r",
                    "                [\r",
                    "                 {\"store_products.datalink_status\" : \"PROSPECT\"},\r",
                    "                 {\"store_products.ecatalog_status\" : \"PROSPECT\"},\r",
                    "                 {\"store_products.ecommerce_status\" :\"PROSPECT\"},\r",
                    "                 {\"store_products.irugs_status\" : \"PROSPECT\"},\r",
                    "                 {\"store_products.rmpro_status\" : \"PROSPECT\"}\r",
                    "                 ]}) ;\r",
                    "}else{\r",
                    "\r",
                    "    at =false ;\r",
                    "}\r",
                    "\r",
                    "\r",
                    "\r",
                    "if( Ext.ComponentQuery.query('#inActiveCheckFldongMap')[0].getChecked()){\r",
                    "\r",
                    "    storeStatusQuery['$or'].push({'store_status': \"INACTIVE\"});\r",
                    "\r",
                    "    ps.push({'$and':\r",
                    "              [\r",
                    "                 {\"store_products.datalink_status\" : \"INACTIVE\"},\r",
                    "                 {\"store_products.ecatalog_status\" : \"INACTIVE\"},\r",
                    "                 {\"store_products.ecommerce_status\" :\"INACTIVE\"},\r",
                    "                 {\"store_products.irugs_status\" : \"INACTIVE\"},\r",
                    "                 {\"store_products.rmpro_status\" : \"INACTIVE\"}\r",
                    "              ]}) ;\r",
                    "}else{\r",
                    "\r",
                    "    at =false ;\r",
                    "}\r",
                    "\r",
                    "\r",
                    "\r",
                    "if( Ext.ComponentQuery.query('#pendingCheckFldongMap')[0].getChecked()){\r",
                    "\r",
                    "    storeStatusQuery['$or'].push({'store_status': \"PENDING\"});\r",
                    "      ps.push({'$or':\r",
                    "                [\r",
                    "                 {\"store_products.datalink_status\" : \"PENDING\"},\r",
                    "                 {\"store_products.ecatalog_status\" : \"PENDING\"},\r",
                    "                 {\"store_products.ecommerce_status\" :\"PENDING\"},\r",
                    "                 {\"store_products.irugs_status\" : \"PENDING\"},\r",
                    "                 {\"store_products.rmpro_status\" : \"PENDING\"}\r",
                    "                 ]}) ;\r",
                    "\r",
                    "}else{\r",
                    "\r",
                    "    at =false ;\r",
                    "}\r",
                    "\r",
                    "\r",
                    "if( Ext.ComponentQuery.query('#hotProspectCheckFldongMap')[0].getChecked()){\r",
                    "\r",
                    "    storeStatusQuery['$or'].push({'store_status': \"HOT_PROSPECTS\"});\r",
                    "\r",
                    "    ps.push({'$or':\r",
                    "                [\r",
                    "                 {\"store_products.datalink_status\" : \"HOT_PROSPECT\"},\r",
                    "                 {\"store_products.ecatalog_status\" : \"HOT_PROSPECT\"},\r",
                    "                 {\"store_products.ecommerce_status\" :\"HOT_PROSPECT\"},\r",
                    "                 {\"store_products.irugs_status\" : \"HOT_PROSPECT\"},\r",
                    "                 {\"store_products.rmpro_status\" : \"HOT_PROSPECT\"}\r",
                    "                 ]}) ;\r",
                    "}else{\r",
                    "\r",
                    "    at =false ;\r",
                    "}\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "var query = {'$and':[\r",
                    "\r",
                    "             //{ \"store_status\": store_status }\r",
                    "\r",
                    "        ]};\r",
                    "\r",
                    "var obj ={};\r",
                    "obj[searchFld] = { $regex: searchString , $options: 'i' };\r",
                    "query.$and.push(obj) ;\r",
                    "\r",
                    "if(storeStatusQuery.$or.length > 0 && !at){\r",
                    "    //query.$and.push(storeStatusQuery );\r",
                    "    query.$and.push({'$and':ps} );\r",
                    "\r",
                    "}\r",
                    "\r",
                    "\r",
                    "            RMdatalink.iwa.rdl.queryDB({collection: dbEnv + \"rdl_masterretailerrecords\",pageNo:1 ,pageSize: 20000 ,sortBy:{},\r",
                    "         query:query,\r",
                    "         fields:{\r",
                    "\r",
                    "\r",
                    "             Latitude: 1,\r",
                    "             Longitude: 1,\r",
                    "\r",
                    "             store_address_line1:1,\r",
                    "             store_city: 1,\r",
                    "             store_name: 1,\r",
                    "             store_phone: 1,\r",
                    "             store_state: 1,\r",
                    "             store_status: 1,\r",
                    "             store_website: 1,\r",
                    "             store_zip: 1,\r",
                    "             store_products:1,\r",
                    "             locations:1\r",
                    "\r",
                    "         }\r",
                    "         },success,error);\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "function success(){\r",
                    "\r",
                    "\r",
                    "    console.log(arguments) ;\r",
                    "    setMarkers(arguments[0].items  ) ;\r",
                    "}\r",
                    "\r",
                    "function error(){\r",
                    "\r",
                    "\r",
                    "}\r",
                    "\r",
                    "\r",
                    "function setMarkers(data){\r",
                    "\r",
                    "        that.deleteAllMarkers() ;\r",
                    "\r",
                    "  if(data.length > 0)\r",
                    "  {\r",
                    "    for(var i =0 ;i <data.length; i++){\r",
                    "\r",
                    "        if(data[i].Latitude && data[i].Longitude)\r",
                    "        {\r",
                    "            var storeStatus = \"NO_STATUS\";\r",
                    "\r",
                    "              storeStatus =  getStroeStatus(data[i].store_products) ;\r",
                    "\r",
                    "\r",
                    "\r",
                    "            var address= data[i].store_address_line1 ;\r",
                    "            var city = data[i].store_city ;\r",
                    "            var zip = data[i].store_zip ;\r",
                    "\r",
                    "\r",
                    "            if(data[i].locations && data[i].locations[0] ){\r",
                    "\r",
                    "                if(data[i].locations[0].address){\r",
                    "\r",
                    "                    address = data[i].locations[0].address ;\r",
                    "                }\r",
                    "\r",
                    "                if(data[i].locations[0].city){\r",
                    "\r",
                    "                    city = data[i].locations[0].city ;\r",
                    "                }\r",
                    "\r",
                    "                if(data[i].locations[0].zip){\r",
                    "\r",
                    "                    zip = data[i].locations[0].zip ;\r",
                    "                }\r",
                    "\r",
                    "            }\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "            that.addMarker(data[i].Latitude, data[i].Longitude ,data[i].store_name + \" , \"+address + \" , \" + city,storeStatus);\r",
                    "        }\r",
                    "    }\r",
                    "    if(data[0].Latitude && data[0].Longitude)\r",
                    "    {\r",
                    "        Ext.ComponentQuery.query('#googleMapView')[0].setMapCenter({ latitude: data[0].Latitude, longitude: data[0].Longitude });\r",
                    "    }\r",
                    "  }\r",
                    "    Ext.ComponentQuery.query('#gmapSearchFormPanel')[0].setMasked(false);\r",
                    "}\r",
                    "\r",
                    "\r",
                    "\r",
                    "function getStroeStatus(store_products){\r",
                    "    try{\r",
                    "    if(store_products)\r",
                    "    {\r",
                    "            if(\r",
                    "                Ext.ComponentQuery.query('#activeCheckFldongMap')[0].isChecked() &&\r",
                    "               (store_products.datalink_status == \"ACTIVE\" || store_products.ecatalog_status == \"ACTIVE\" ||\r",
                    "               store_products.ecommerce_status == \"ACTIVE\"  ||\r",
                    "               store_products.irugs_status == \"ACTIVE\" ||store_products.rmpro_status == \"ACTIVE\")\r",
                    "              ){\r",
                    "\r",
                    "\r",
                    "                return \"ACTIVE\" ;\r",
                    "            }\r",
                    "\r",
                    "\r",
                    "            if(\r",
                    "                 Ext.ComponentQuery.query('#pendingCheckFldongMap')[0].isChecked() &&\r",
                    "               (store_products.datalink_status == \"PENDING\" || store_products.ecatalog_status == \"PENDING\" ||\r",
                    "               store_products.ecommerce_status == \"PENDING\"  ||\r",
                    "               store_products.irugs_status == \"PENDING\" ||store_products.rmpro_status == \"PENDING\")\r",
                    "              ){\r",
                    "\r",
                    "\r",
                    "                return \"PENDING\" ;\r",
                    "            }\r",
                    "\r",
                    "\r",
                    "            if(\r",
                    "               Ext.ComponentQuery.query('#hotProspectCheckFldongMap')[0].isChecked() &&\r",
                    "              (store_products.datalink_status == \"HOT_PROSPECT\" || store_products.ecatalog_status == \"HOT_PROSPECT\" ||\r",
                    "               store_products.ecommerce_status == \"HOT_PROSPECT\"  ||\r",
                    "               store_products.irugs_status == \"HOT_PROSPECT\" ||store_products.rmpro_status == \"HOT_PROSPECT\")\r",
                    "              ){\r",
                    "\r",
                    "\r",
                    "                return \"HOT_PROSPECTS\" ;\r",
                    "            }\r",
                    "\r",
                    "            if(\r",
                    "                 Ext.ComponentQuery.query('#prospectCheckFldongMap')[0].isChecked() &&\r",
                    "               (store_products.datalink_status == \"PROSPECT\" || store_products.ecatalog_status == \"PROSPECT\" ||\r",
                    "               store_products.ecommerce_status == \"PROSPECT\"  ||\r",
                    "               store_products.irugs_status == \"PROSPECT\" ||store_products.rmpro_status == \"PROSPECT\")\r",
                    "              ){\r",
                    "\r",
                    "\r",
                    "                return \"PROSPECTS\" ;\r",
                    "            }\r",
                    "\r",
                    "             if(\r",
                    "                Ext.ComponentQuery.query('#inActiveCheckFldongMap')[0].isChecked() &&\r",
                    "               (store_products.datalink_status == \"INACTIVE\" || store_products.ecatalog_status == \"INACTIVE\" ||\r",
                    "               store_products.ecommerce_status == \"INACTIVE\"  ||\r",
                    "               store_products.irugs_status == \"INACTIVE\" ||store_products.rmpro_status == \"INACTIVE\")\r",
                    "              ){\r",
                    "\r",
                    "\r",
                    "                return \"INACTIVE\" ;\r",
                    "            }\r",
                    "    }\r",
                    "    return \"NO_STATUS\" ;\r",
                    "    }catch(ex){\r",
                    "\r",
                    "        console.error(ex);\r",
                    "         return \"NO_STATUS\" ;\r",
                    "    }\r",
                    "}"
                ]
            },
            "designerId": "ae9fa106-d122-45af-bd73-c7ac2af44229"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button[itemId=gMapSearchButton]",
                "designer|targetType": "Ext.Button",
                "fn": "ongMapSearchButtonTap",
                "implHandler": [
                    "this.doSearchRetailers() ;"
                ],
                "name": "tap"
            },
            "designerId": "1d261e57-05c8-48b9-965c-1ce739cd5547"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "searchKey",
                    "record",
                    "recordKey"
                ],
                "fn": "openMapWith",
                "implHandler": [
                    "\r",
                    "  RMdatalink.app.getController('GMapController').config.isFirstTime = false ;\r",
                    "\r",
                    "Ext.ComponentQuery.query('#googleMapView')[0].setMapOptions(\r",
                    "{\r",
                    "    zoom: 3 ,\r",
                    "    center:new google.maps.LatLng(49.9026669,-119.4478125)\r",
                    "}\r",
                    ");\r",
                    "\r",
                    "var that =this;\r",
                    "if(Ext.ComponentQuery.query('#RMContentPanel')[0].getActiveItem().getItemId() == 'card-retailers')\r",
                    "{\r",
                    "\r",
                    "\r",
                    "     setMapView() ;\r",
                    "\r",
                    "\r",
                    "}\r",
                    "\r",
                    "\r",
                    "\r",
                    "function setMapView(){\r",
                    "\r",
                    "    Ext.ComponentQuery.query('#retailersTabPanel')[0].setActiveItem(6);\r",
                    "\r",
                    "    switch(searchKey){\r",
                    "\r",
                    "\r",
                    "        case \"store_state\":\r",
                    "            if(record.get(recordKey))\r",
                    "            {\r",
                    "                Ext.ComponentQuery.query('#rtMapStateRadioBtn')[0].setChecked(true);\r",
                    "                Ext.ComponentQuery.query('#rtMapStateFld')[0].setValue(record.get(recordKey));\r",
                    "            }else{\r",
                    "                return ;\r",
                    "            }\r",
                    "            break;\r",
                    "\r",
                    "        case \"store_city\":\r",
                    "            if(record.get(recordKey))\r",
                    "            {\r",
                    "                Ext.ComponentQuery.query('#rtMapCityRadioBtn')[0].setChecked(true);\r",
                    "                Ext.ComponentQuery.query('#rtMapCityFld')[0].setValue(record.get(recordKey));\r",
                    "            }else{\r",
                    "                return ;\r",
                    "            }\r",
                    "\r",
                    "            break;\r",
                    "\r",
                    "        case \"store_zip\":\r",
                    "            if(record.get(recordKey))\r",
                    "            {\r",
                    "                Ext.ComponentQuery.query('#rtMapZipRadioBtn')[0].setChecked(true);\r",
                    "                Ext.ComponentQuery.query('#rtMapZipFld')[0].setValue(record.get(recordKey));\r",
                    "            }else{\r",
                    "                return ;\r",
                    "            }\r",
                    "\r",
                    "            break;\r",
                    "    }\r",
                    "\r",
                    "    that.doSearchRetailers() ;\r",
                    "}\r",
                    "\r",
                    ""
                ]
            },
            "designerId": "e4ddcac5-a3c1-41bb-874e-b815636050b7"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button[itemId=gMapAssignLatLongBtn]",
                "designer|targetType": "Ext.Button",
                "fn": "ongMapAssignLatLongBtnTap",
                "implHandler": [
                    "\r",
                    "\r",
                    "\r",
                    "Ext.Msg.confirm(\"Confirm\",\"This may take very long time. do you want to continue ?\",onMessageAns ,this);\r",
                    "\r",
                    "\r",
                    "function onMessageAns(action,opt,confirmBox){\r",
                    "\r",
                    "\r",
                    "    if(action == \"yes\"){\r",
                    "\r",
                    "         Ext.Viewport.setMasked({\r",
                    "                                    xtype: 'loadmask'\r",
                    "        });\r",
                    "\r",
                    "\r",
                    "        refreshRetailers() ;\r",
                    "\r",
                    "\r",
                    "    }else{\r",
                    "\r",
                    "\r",
                    "        return ;\r",
                    "    }\r",
                    "\r",
                    "\r",
                    "}\r",
                    "\r",
                    "\r",
                    "\r",
                    "function refreshRetailers(){\r",
                    "\r",
                    "    doSearchForRetailers() ;\r",
                    "}\r",
                    "\r",
                    "var retailers = [] ;\r",
                    "var index = 0 ;\r",
                    "\r",
                    "function doSearchForRetailers(){\r",
                    "\r",
                    "\r",
                    "\r",
                    "            RMdatalink.iwa.rdl.queryDB({collection: dbEnv + \"rdl_masterretailerrecords\",pageNo:1 ,pageSize: 20000 ,sortBy:{},\r",
                    "                                        query:{\r",
                    "\r",
                    "                                             \"Latitude\": { $exists: false }\r",
                    "                                        },\r",
                    "         fields:{\r",
                    "\r",
                    "\r",
                    "             Latitude: 1,\r",
                    "             Longitude: 1,\r",
                    "\r",
                    "             store_address_line1:1,\r",
                    "             store_city: 1,\r",
                    "             store_name: 1,\r",
                    "             store_phone: 1,\r",
                    "             store_state: 1,\r",
                    "             store_status: 1,\r",
                    "             store_website: 1,\r",
                    "             store_zip: 1,\r",
                    "             store_products:1,\r",
                    "             locations:1\r",
                    "\r",
                    "         }\r",
                    "         },success,error);\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "        function success(){\r",
                    "\r",
                    "\r",
                    "            console.log(arguments) ;\r",
                    "            retailers = arguments[0].items ;\r",
                    "\r",
                    "            updateRetailerWithLatLang();\r",
                    "\r",
                    "\r",
                    "        }\r",
                    "\r",
                    "        function error(){\r",
                    "\r",
                    "            Ext.Viewport.setMasked(false) ;\r",
                    "        }\r",
                    "}\r",
                    "\r",
                    "function updateRetailerWithLatLang(){\r",
                    "\r",
                    "\r",
                    "    if(index < retailers.length){\r",
                    "\r",
                    "        if(retailers[index].Latitude){\r",
                    "\r",
                    "            index++;\r",
                    "\r",
                    "            updateRetailerWithLatLang() ;\r",
                    "\r",
                    "            return;\r",
                    "\r",
                    "        }else{\r",
                    "\r",
                    "            var address= retailers[index].store_address_line1 ;\r",
                    "            var city = retailers[index].store_city ;\r",
                    "            var zip = retailers[index].store_zip ;\r",
                    "\r",
                    "\r",
                    "            if(retailers[index].locations && retailers[index].locations[0] ){\r",
                    "\r",
                    "                if(retailers[index].locations[0].address){\r",
                    "\r",
                    "                    address = retailers[index].locations[0].address ;\r",
                    "                }\r",
                    "\r",
                    "                if(retailers[index].locations[0].city){\r",
                    "\r",
                    "                    city = retailers[index].locations[0].city ;\r",
                    "                }\r",
                    "\r",
                    "                if(retailers[index].locations[0].zip){\r",
                    "\r",
                    "                    zip = retailers[index].locations[0].zip ;\r",
                    "                }\r",
                    "\r",
                    "            }\r",
                    "\r",
                    "\r",
                    "\r",
                    "            getLatLng(address,city,zip);\r",
                    "\r",
                    "\r",
                    "        }\r",
                    "\r",
                    "\r",
                    "    }else{\r",
                    "\r",
                    "        Ext.Viewport.setMasked(false) ;\r",
                    "    }\r",
                    "\r",
                    "}\r",
                    "\r",
                    "\r",
                    "function getLatLng(address,city,zip){\r",
                    "\r",
                    "    //http://maps.googleapis.com/maps/api/geocode/json?address=7310MiramarRd+SanDiego+92126\r",
                    "\r",
                    "    var baseURL = 'http://maps.googleapis.com/maps/api/geocode/json?address=' ;\r",
                    "\r",
                    "    var url = baseURL + address +'+'+city+'+'+zip ;\r",
                    "\r",
                    "    Ext.Ajax.request({\r",
                    "    url: url,\r",
                    "    success: function(response){\r",
                    "    var res = Ext.JSON.decode(response.responseText ) ;\r",
                    "    console.log(res);\r",
                    "\r",
                    "\r",
                    "        updateWithLatLang(res);\r",
                    "\r",
                    "    }\r",
                    "});\r",
                    "\r",
                    "}\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "var masterStore = Ext.getStore('retailersMaster');\r",
                    "\r",
                    "function updateWithLatLang(latLongRes){\r",
                    "\r",
                    "\r",
                    "    var dataToUpdate = {} ;\r",
                    "\r",
                    "    if(latLongRes  && latLongRes.status == \"OK\"  && latLongRes.results  && latLongRes.results[0]  && latLongRes.results[0].geometry  && latLongRes.results[0].geometry.location.lat)\r",
                    "    {\r",
                    "\r",
                    "        dataToUpdate = {\r",
                    "\r",
                    "             Latitude: latLongRes.results[0].geometry.location.lat,\r",
                    "             Longitude: latLongRes.results[0].geometry.location.lng,\r",
                    "             LatLangFromAddress: true\r",
                    "        };\r",
                    "\r",
                    "\r",
                    "    }else{\r",
                    "\r",
                    "        updateError();\r",
                    "\r",
                    "        return ;\r",
                    "    }\r",
                    "\r",
                    "\r",
                    "\r",
                    "    RMdatalink.iwa.rdl.doUpdateCollection(masterStore, dataToUpdate ,retailers[index]._id , updateSuccess, updateError );\r",
                    "\r",
                    "\r",
                    "}\r",
                    "\r",
                    "\r",
                    "function updateSuccess(){\r",
                    "\r",
                    "    index++;\r",
                    "    updateRetailerWithLatLang() ;\r",
                    "}\r",
                    "\r",
                    "\r",
                    "function updateError(){\r",
                    "\r",
                    "    index++;\r",
                    "    updateRetailerWithLatLang() ;\r",
                    "\r",
                    "}"
                ],
                "name": "tap"
            },
            "designerId": "2c0293a4-9445-4055-b374-18ea34777f4d"
        }
    ]
}