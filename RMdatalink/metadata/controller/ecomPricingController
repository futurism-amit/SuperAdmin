{
    "type": "Ext.app.Controller",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "designer|userClassName": "ecomPricingController",
        "isPricingUpdated": false
    },
    "configAlternates": {
        "isPricingUpdated": "boolean"
    },
    "designerId": "e03e38c4-63f6-4044-8428-47d1756f76a8",
    "customConfigs": [
        {
            "group": "(Custom Properties)",
            "name": "isPricingUpdated",
            "type": "string"
        }
    ],
    "cn": [
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "shouldShowInputClass"
                ],
                "fn": "resetPricingListTemplate",
                "implHandler": [
                    "\r",
                    "\r",
                    "\r",
                    "var ecompolicySelectVendors  = Ext.ComponentQuery.query(\"#ecompolicySelectVendors\")[0];\r",
                    "var ecompricingPolicySkuIncrementSelectFld  = Ext.ComponentQuery.query(\"#ecompricingPolicySkuIncrementSelectFld\")[0];\r",
                    "var ecompricingPolicySkuAddlImgsIncrementSelectFld  = Ext.ComponentQuery.query(\"#ecompricingPolicySkuAddlImgsIncrementSelectFld\")[0];\r",
                    "\r",
                    "\r",
                    "\r",
                    "if(ecompolicySelectVendors.getValue() ){\r",
                    "    setVdrPolicyTpl();\r",
                    "}\r",
                    "else{\r",
                    "    this.setDefaultTpl();\r",
                    "}\r",
                    "\r",
                    "  RMdatalink.app.getController('BillingDetailsController').loadVendorTotalCountDataForEcommerce();\r",
                    "function setVdrPolicyTpl(){\r",
                    "    var component = Ext.ComponentQuery.query('#productsecomPricingTab')[0] ;\r",
                    "\r",
                    "    var list = component.down('#pricingList');\r",
                    "\r",
                    "    list.setItemTpl(\r",
                    "        Ext.create('Ext.XTemplate',\r",
                    "                   '<div class=\"x-rm-listtpl-main\" style=\"width: 100%;padding:0 0px 0 0px !important;\">',\r",
                    "\r",
                    "                   '    <div style=\"width: 4%;\">',\r",
                    "                   '        <div style=\"width: 19px; height:19px;\"    {[RMdatalink.util.globalConfig.getListAttrForDelHandling()]} =\"onCartTap\" ></div>',\r",
                    "                   '    </div>',\r",
                    "\r",
                    "                   '    <div class=\"rightBorderDiv boldText\" style=\"width: 8%;padding-left:10px;\" >{vendor_name}</div>',\r",
                    "                   '    <div class=\"rightBorderDiv\" style=\"width: 6.4%;text-align: center;\" >{[formatNormalNum(values.SKU)]}</div>',\r",
                    "                   '    <div class=\"rightBorderDiv\" style=\"width: 6.4%;text-align: center;\" >{[formatNormalNum(values.collections)]}</div>',\r",
                    "                   '    <div class=\"rightBorderDiv\" style=\"width: 6.4%;text-align: center;\" >{[formatNormalNum(values.design)]}</div>',\r",
                    "\r",
                    "                   '    <div class=\"rightBorderDiv\" style=\"width: 6.4%;text-align: center;\" >{[formatNormalNum(values.no_of_images)]}</div>',\r",
                    "                   '    <div class=\"rightBorderDiv\" style=\"width: 6.4%;text-align: center;\" >{[formatNormalNum(values.no_of_additional_images)]}</div>',\r",
                    "\r",
                    "                   '    <div class=\"rightBorderDiv\" style=\"width: 6.98%;text-align: center;\" >{[this.calHrsBySkuImages(values)]}</div>',\r",
                    "                   '    <div class=\"rightBorderDiv\" style=\"width: 6.98%;text-align: center;\" >{[this.calDaysBySkuImages(values)]}</div>',\r",
                    "\r",
                    "                   '    <div class=\"rightBorderDiv\" style=\"width: 6.98%;text-align: center;\" > $ {[formatNum(values.ecom_std)]} </div>',\r",
                    "                   '    <div class=\"rightBorderDiv\" style=\"width: 6.98%;text-align: center;\" > $ {[formatNum(values.ecom_promo)]} </div>',\r",
                    "\r",
                    "\r",
                    "\r",
                    "                   '    <div class=\"rightBorderDiv\" style=\"width: 6.98%;text-align: center;\" >{[this.calHrsBySkuImagesAddlImages(values)]}</div>',\r",
                    "                   '    <div class=\"rightBorderDiv\" style=\"width: 6.98%;text-align: center;\" >{[this.calDaysBySkuImagesAddlImages(values)]}</div>',\r",
                    "\r",
                    "                   '    <div class=\"rightBorderDiv\" style=\"width: 6.98%;text-align: center;\" > $ {[formatNum(values.ecom_std_addl)]} </div>',\r",
                    "                   '    <div class=\"rightBorderDiv\" style=\"width: 6.98%;text-align: center;\" > $ {[formatNum(values.ecom_promo_addl)]} </div>',\r",
                    "\r",
                    "\r",
                    "\r",
                    "                   '</div>',\r",
                    "                   {\r",
                    "                       getCalculatedValue: function(sku){\r",
                    "                           if(sku)\r",
                    "                           {\r",
                    "                               var  result = (sku * 5)/60 ;\r",
                    "                               result =    Math.round(result * 100) / 100 ;\r",
                    "                               return result ;\r",
                    "                           }\r",
                    "\r",
                    "                           return 0 ;\r",
                    "\r",
                    "                       },\r",
                    "\r",
                    "                       calHrsBySkuImages: function(values){\r",
                    "\r",
                    "\r",
                    "                           var pricingData = RMdatalink.app.getController('BillingDetailsController').config.pricingData ;\r",
                    "                           var time_taken_images = 5 ;\r",
                    "                           var time_taken_images_addl_images = 10 ;\r",
                    "\r",
                    "\r",
                    "                           if(pricingData && pricingData[2]){\r",
                    "\r",
                    "                               time_taken_images = pricingData[2].time_taken_images  ;\r",
                    "                               time_taken_images_addl_images = pricingData[2].time_taken_images_addl_images ;\r",
                    "\r",
                    "\r",
                    "                           }\r",
                    "\r",
                    "\r",
                    "                           if(values.SKU && values.no_of_images)\r",
                    "                           {\r",
                    "                               var sku = parseInt(values.SKU) + parseInt(values.no_of_images) ;\r",
                    "                               var  result = (sku * time_taken_images)/60 ;\r",
                    "                               result =    Math.round(result * 100) / 100 ;\r",
                    "                               return result ;\r",
                    "                           }\r",
                    "\r",
                    "                           return 0 ;\r",
                    "\r",
                    "                       },\r",
                    "\r",
                    "\r",
                    "                       calDaysBySkuImages: function(values){\r",
                    "\r",
                    "                           var pricingData = RMdatalink.app.getController('BillingDetailsController').config.pricingData ;\r",
                    "                           var time_taken_images = 5 ;\r",
                    "                           var time_taken_images_addl_images = 10 ;\r",
                    "\r",
                    "\r",
                    "                           if(pricingData && pricingData[2]){\r",
                    "\r",
                    "                               time_taken_images = pricingData[2].time_taken_images  ;\r",
                    "                               time_taken_images_addl_images = pricingData[2].time_taken_images_addl_images ;\r",
                    "\r",
                    "\r",
                    "                           }\r",
                    "\r",
                    "\r",
                    "                           if(values.SKU && values.no_of_images)\r",
                    "                           {\r",
                    "                               var sku = parseInt(values.SKU) + parseInt(values.no_of_images) ;\r",
                    "                               var  result = (sku * time_taken_images)/60 ;\r",
                    "                               result = result / 8 ;\r",
                    "                               result =    Math.round(result * 100) / 100 ;\r",
                    "                               return result ;\r",
                    "                           }\r",
                    "\r",
                    "                           return 0 ;\r",
                    "\r",
                    "                       },\r",
                    "\r",
                    "                       calHrsBySkuImagesAddlImages: function(values){\r",
                    "\r",
                    "                           var pricingData = RMdatalink.app.getController('BillingDetailsController').config.pricingData ;\r",
                    "                           var time_taken_images = 5 ;\r",
                    "                           var time_taken_images_addl_images = 10 ;\r",
                    "\r",
                    "\r",
                    "                           if(pricingData && pricingData[2]){\r",
                    "\r",
                    "                               time_taken_images = pricingData[2].time_taken_images  ;\r",
                    "                               time_taken_images_addl_images = pricingData[2].time_taken_images_addl_images ;\r",
                    "\r",
                    "\r",
                    "                           }\r",
                    "\r",
                    "\r",
                    "                           if(values.SKU && values.no_of_images && values.no_of_additional_images )\r",
                    "                           {\r",
                    "                               var sku = parseInt(values.SKU) + parseInt(values.no_of_images) +parseInt(values.no_of_additional_images) ;\r",
                    "                               var  result = (sku * time_taken_images_addl_images)/60 ;\r",
                    "                               result =    Math.round(result * 100) / 100 ;\r",
                    "                               return result ;\r",
                    "                           }\r",
                    "\r",
                    "                           return 0 ;\r",
                    "\r",
                    "                       },\r",
                    "\r",
                    "                       calDaysBySkuImagesAddlImages: function(values){\r",
                    "\r",
                    "\r",
                    "                           var pricingData = RMdatalink.app.getController('BillingDetailsController').config.pricingData ;\r",
                    "                           var time_taken_images = 5 ;\r",
                    "                           var time_taken_images_addl_images = 10 ;\r",
                    "\r",
                    "\r",
                    "                           if(pricingData && pricingData[2]){\r",
                    "\r",
                    "                               time_taken_images = pricingData[2].time_taken_images  ;\r",
                    "                               time_taken_images_addl_images = pricingData[2].time_taken_images_addl_images ;\r",
                    "\r",
                    "\r",
                    "                           }\r",
                    "\r",
                    "                           if(values.SKU && values.no_of_images && values.no_of_additional_images )\r",
                    "                           {\r",
                    "                               var sku = parseInt(values.SKU) + parseInt(values.no_of_images) +parseInt(values.no_of_additional_images) ;\r",
                    "                               var  result = (sku * time_taken_images_addl_images)/60 ;\r",
                    "                               result = result / 8 ;\r",
                    "                               result =    Math.round(result * 100) / 100 ;\r",
                    "                               return result ;\r",
                    "                           }\r",
                    "\r",
                    "                           return 0 ;\r",
                    "\r",
                    "                       }\r",
                    "\r",
                    "                   }\r",
                    "\r",
                    "                  )\r",
                    "    );\r",
                    "\r",
                    "    list.setItemHeight(22);\r",
                    "    list.setMode('MULTI');\r",
                    "    list.addCls('x-rm-rdvendorslist');\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "}\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    ""
                ]
            },
            "designerId": "9d027809-1526-42d8-8b39-9823c5ede1f6"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "shouldShowInputClass"
                ],
                "fn": "setPricingListTemplate",
                "implHandler": [
                    "\r",
                    "\r",
                    "\r",
                    "var ecompolicySelectVendors  = Ext.ComponentQuery.query(\"#ecompolicySelectVendors\")[0];\r",
                    "var ecompricingPolicySkuIncrementSelectFld  = Ext.ComponentQuery.query(\"#ecompricingPolicySkuIncrementSelectFld\")[0];\r",
                    "var ecompricingPolicySkuAddlImgsIncrementSelectFld  = Ext.ComponentQuery.query(\"#ecompricingPolicySkuAddlImgsIncrementSelectFld\")[0];\r",
                    "\r",
                    "\r",
                    "\r",
                    "if(ecompolicySelectVendors.getValue() ){\r",
                    "    //setVdrPolicyTpl();\r",
                    "  var tempVal =   ecompolicySelectVendors.getValue();\r",
                    "        ecompolicySelectVendors.fireEvent(\"change\" ,  ecompolicySelectVendors,  tempVal , tempVal);\r",
                    "\r",
                    "}\r",
                    "else{\r",
                    "    this.setDefaultTpl();\r",
                    "}\r",
                    "\r",
                    "\r",
                    "function setVdrPolicyTpl(){\r",
                    "    var component = Ext.ComponentQuery.query('#productsecomPricingTab')[0] ;\r",
                    "\r",
                    "    var list = component.down('#pricingList');\r",
                    "\r",
                    "    list.setItemTpl(\r",
                    "        Ext.create('Ext.XTemplate',\r",
                    "                   '<div class=\"x-rm-listtpl-main\" style=\"width: 100%;padding:0 0px 0 0px !important;\">',\r",
                    "\r",
                    "                   '    <div style=\"width: 4%;\">',\r",
                    "                   '        <div style=\"width: 19px; height:19px;\"    {[RMdatalink.util.globalConfig.getListAttrForDelHandling()]} =\"onCartTap\" ></div>',\r",
                    "                   '    </div>',\r",
                    "\r",
                    "                   '    <div class=\"rightBorderDiv boldText\" style=\"width: 8%;padding-left:10px;\" >{vendor_name}</div>',\r",
                    "                   '    <div class=\"rightBorderDiv\" style=\"width: 6.4%;text-align: center;\" >{[formatNormalNum(values.SKU)]}</div>',\r",
                    "                   '    <div class=\"rightBorderDiv\" style=\"width: 6.4%;text-align: center;\" >{[formatNormalNum(values.collections)]}</div>',\r",
                    "                   '    <div class=\"rightBorderDiv\" style=\"width: 6.4%;text-align: center;\" >{[formatNormalNum(values.design)]}</div>',\r",
                    "\r",
                    "                   '    <div class=\"rightBorderDiv\" style=\"width: 6.4%;text-align: center;\" >{[formatNormalNum(values.no_of_images)]}</div>',\r",
                    "                   '    <div class=\"rightBorderDiv\" style=\"width: 6.4%;text-align: center;\" >{[formatNormalNum(values.no_of_additional_images)]}</div>',\r",
                    "\r",
                    "                   '    <div class=\"rightBorderDiv\" style=\"width: 6.98%;text-align: center;\" >{[this.calHrsBySkuImages(values)]}</div>',\r",
                    "                   '    <div class=\"rightBorderDiv\" style=\"width: 6.98%;text-align: center;\" >{[this.calDaysBySkuImages(values)]}</div>',\r",
                    "\r",
                    "                   '    <div class=\"rightBorderDiv\" style=\"width: 6.98%;text-align: center;\" > $ {[formatNum(values.ecom_std)]} </div>',\r",
                    "                   '    <div class=\"rightBorderDiv\" style=\"width: 6.98%;text-align: center;\" > $ {[formatNum(values.ecom_promo)]} </div>',\r",
                    "\r",
                    "\r",
                    "\r",
                    "                   '    <div class=\"rightBorderDiv\" style=\"width: 6.98%;text-align: center;\" >{[this.calHrsBySkuImagesAddlImages(values)]}</div>',\r",
                    "                   '    <div class=\"rightBorderDiv\" style=\"width: 6.98%;text-align: center;\" >{[this.calDaysBySkuImagesAddlImages(values)]}</div>',\r",
                    "\r",
                    "                   '    <div class=\"rightBorderDiv\" style=\"width: 6.98%;text-align: center;\" > $ {[formatNum(values.ecom_std_addl)]} </div>',\r",
                    "                   '    <div class=\"rightBorderDiv\" style=\"width: 6.98%;text-align: center;\" > $ {[formatNum(values.ecom_promo_addl)]} </div>',\r",
                    "\r",
                    "\r",
                    "\r",
                    "                   '</div>',\r",
                    "                   {\r",
                    "                       getCalculatedValue: function(sku){\r",
                    "                           if(sku)\r",
                    "                           {\r",
                    "                               var  result = (sku * 5)/60 ;\r",
                    "                               result =    Math.round(result * 100) / 100 ;\r",
                    "                               return result ;\r",
                    "                           }\r",
                    "\r",
                    "                           return 0 ;\r",
                    "\r",
                    "                       },\r",
                    "\r",
                    "                       calHrsBySkuImages: function(values){\r",
                    "\r",
                    "\r",
                    "                           var pricingData = RMdatalink.app.getController('BillingDetailsController').config.pricingData ;\r",
                    "                           var time_taken_images = 5 ;\r",
                    "                           var time_taken_images_addl_images = 10 ;\r",
                    "\r",
                    "\r",
                    "                           if(pricingData && pricingData[2]){\r",
                    "\r",
                    "                               time_taken_images = pricingData[2].time_taken_images  ;\r",
                    "                               time_taken_images_addl_images = pricingData[2].time_taken_images_addl_images ;\r",
                    "\r",
                    "\r",
                    "                           }\r",
                    "\r",
                    "\r",
                    "                           if(values.SKU && values.no_of_images)\r",
                    "                           {\r",
                    "                               var sku = parseInt(values.SKU) + parseInt(values.no_of_images) ;\r",
                    "                               var  result = (sku * time_taken_images)/60 ;\r",
                    "                               result =    Math.round(result * 100) / 100 ;\r",
                    "                               return result ;\r",
                    "                           }\r",
                    "\r",
                    "                           return 0 ;\r",
                    "\r",
                    "                       },\r",
                    "\r",
                    "\r",
                    "                       calDaysBySkuImages: function(values){\r",
                    "\r",
                    "                           var pricingData = RMdatalink.app.getController('BillingDetailsController').config.pricingData ;\r",
                    "                           var time_taken_images = 5 ;\r",
                    "                           var time_taken_images_addl_images = 10 ;\r",
                    "\r",
                    "\r",
                    "                           if(pricingData && pricingData[2]){\r",
                    "\r",
                    "                               time_taken_images = pricingData[2].time_taken_images  ;\r",
                    "                               time_taken_images_addl_images = pricingData[2].time_taken_images_addl_images ;\r",
                    "\r",
                    "\r",
                    "                           }\r",
                    "\r",
                    "\r",
                    "                           if(values.SKU && values.no_of_images)\r",
                    "                           {\r",
                    "                               var sku = parseInt(values.SKU) + parseInt(values.no_of_images) ;\r",
                    "                               var  result = (sku * time_taken_images)/60 ;\r",
                    "                               result = result / 8 ;\r",
                    "                               result =    Math.round(result * 100) / 100 ;\r",
                    "                               return result ;\r",
                    "                           }\r",
                    "\r",
                    "                           return 0 ;\r",
                    "\r",
                    "                       },\r",
                    "\r",
                    "                       calHrsBySkuImagesAddlImages: function(values){\r",
                    "\r",
                    "                           var pricingData = RMdatalink.app.getController('BillingDetailsController').config.pricingData ;\r",
                    "                           var time_taken_images = 5 ;\r",
                    "                           var time_taken_images_addl_images = 10 ;\r",
                    "\r",
                    "\r",
                    "                           if(pricingData && pricingData[2]){\r",
                    "\r",
                    "                               time_taken_images = pricingData[2].time_taken_images  ;\r",
                    "                               time_taken_images_addl_images = pricingData[2].time_taken_images_addl_images ;\r",
                    "\r",
                    "\r",
                    "                           }\r",
                    "\r",
                    "\r",
                    "                           if(values.SKU && values.no_of_images && values.no_of_additional_images )\r",
                    "                           {\r",
                    "                               var sku = parseInt(values.SKU) + parseInt(values.no_of_images) +parseInt(values.no_of_additional_images) ;\r",
                    "                               var  result = (sku * time_taken_images_addl_images)/60 ;\r",
                    "                               result =    Math.round(result * 100) / 100 ;\r",
                    "                               return result ;\r",
                    "                           }\r",
                    "\r",
                    "                           return 0 ;\r",
                    "\r",
                    "                       },\r",
                    "\r",
                    "                       calDaysBySkuImagesAddlImages: function(values){\r",
                    "\r",
                    "\r",
                    "                           var pricingData = RMdatalink.app.getController('BillingDetailsController').config.pricingData ;\r",
                    "                           var time_taken_images = 5 ;\r",
                    "                           var time_taken_images_addl_images = 10 ;\r",
                    "\r",
                    "\r",
                    "                           if(pricingData && pricingData[2]){\r",
                    "\r",
                    "                               time_taken_images = pricingData[2].time_taken_images  ;\r",
                    "                               time_taken_images_addl_images = pricingData[2].time_taken_images_addl_images ;\r",
                    "\r",
                    "\r",
                    "                           }\r",
                    "\r",
                    "                           if(values.SKU && values.no_of_images && values.no_of_additional_images )\r",
                    "                           {\r",
                    "                               var sku = parseInt(values.SKU) + parseInt(values.no_of_images) +parseInt(values.no_of_additional_images) ;\r",
                    "                               var  result = (sku * time_taken_images_addl_images)/60 ;\r",
                    "                               result = result / 8 ;\r",
                    "                               result =    Math.round(result * 100) / 100 ;\r",
                    "                               return result ;\r",
                    "                           }\r",
                    "\r",
                    "                           return 0 ;\r",
                    "\r",
                    "                       }\r",
                    "\r",
                    "                   }\r",
                    "\r",
                    "                  )\r",
                    "    );\r",
                    "\r",
                    "    list.setItemHeight(22);\r",
                    "    list.setMode('MULTI');\r",
                    "    list.addCls('x-rm-rdvendorslist');\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "}\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    ""
                ]
            },
            "designerId": "90eaa3da-0218-461c-96b2-9fdee8b797fb"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "updateVendorPricing",
                "implHandler": [
                    "\r",
                    "\r",
                    "\r",
                    "var dataToUpdate = {\r",
                    "\r",
                    "    vendor_pricing_vendors:[]\r",
                    "};\r",
                    "\r",
                    "\r",
                    "var form = Ext.ComponentQuery.query('#ecomVdrPricingbyVendorsPanel')[0] ;\r",
                    "\r",
                    "var fieldStore = form.down('#ecompolicySelectVendors').getStore() ;\r",
                    "\r",
                    "var policyText = form.down('#policyText').getValue() ;\r",
                    "\r",
                    "var isAddNew = form.down('#addUpdate').getText() == \"Add\" ;\r",
                    "\r",
                    "var options = RMdatalink.util.globalMethods.getArrayDataFromStore(fieldStore) ;\r",
                    "var curOptVal =  form.down('#ecompolicySelectVendors').getValue();\r",
                    "\r",
                    "if(!options || options.length === 0 ){\r",
                    "\r",
                    "\r",
                    "    options = [] ;\r",
                    "}\r",
                    "\r",
                    "\r",
                    "var tempRec = {\r",
                    "\r",
                    "        text :policyText,\r",
                    "        value: policyText,\r",
                    "        policy:getPolicyArray()\r",
                    "\r",
                    "\r",
                    "    };\r",
                    "\r",
                    "if(isAddNew){\r",
                    "\r",
                    "    if(policyText){\r",
                    "\r",
                    "\r",
                    "\r",
                    "    }else{\r",
                    "\r",
                    "        console.warn(\"NO POLICY TEXT ENTERERD\");\r",
                    "        Ext.Msg.alert(\"Warning\" , \"Please Enter Policy Name\");\r",
                    "        return;\r",
                    "\r",
                    "    }\r",
                    "    options.push(tempRec);\r",
                    "\r",
                    "    fieldStore.add(tempRec);\r",
                    "}else{\r",
                    "\r",
                    "    var opIndex = 0 ;\r",
                    "    while(opIndex < options.length && curOptVal !== options[opIndex].value){\r",
                    "        opIndex++;\r",
                    "    }\r",
                    "\r",
                    "    if(opIndex == options.length){\r",
                    "        opIndex--;\r",
                    "    }\r",
                    "\r",
                    "     options[opIndex]= tempRec ;\r",
                    "\r",
                    "    fieldStore.getAt(opIndex).set(tempRec) ;\r",
                    "\r",
                    "\r",
                    "}\r",
                    "//  Ext.ComponentQuery.query('#productDatalinkMainPanel')[0].setMasked( {\r",
                    "//                 xtype: 'loadmask'\r",
                    "//             });\r",
                    "var store = Ext.getStore('pricing.MainStore') ;\r",
                    "\r",
                    "//this.config.isPricingUpdated = true ;\r",
                    "\r",
                    "dataToUpdate.vendor_pricing_vendors = options ;\r",
                    "\r",
                    "var _id = RMdatalink.app.getController('BillingDetailsController').config.pricingData[2]._id ;\r",
                    "\r",
                    "this.updatePricingStore(_id,'vendor_pricing_vendors',dataToUpdate.vendor_pricing_vendors );\r",
                    "\r",
                    " RMdatalink.iwa.rdl.doUpdateCollection(store, dataToUpdate , _id, success, error);\r",
                    "\r",
                    "if(isAddNew){\r",
                    "\r",
                    "    form.down('#policyText').setValue(\"\");\r",
                    "\r",
                    "    form.down('#addUpdate').setText(\"Add\");\r",
                    "\r",
                    "    form.down('#ecompolicySelectVendors').reset();\r",
                    "}\r",
                    "\r",
                    "function success(){\r",
                    "    Ext.Viewport.setMasked(false);\r",
                    "\r",
                    "\r",
                    "\r",
                    "}\r",
                    "\r",
                    "function error(){\r",
                    "    Ext.Viewport.setMasked(false);\r",
                    "    alert(\"priceing update error\");\r",
                    "}\r",
                    "\r",
                    "\r",
                    "function getPolicyArray(){\r",
                    "    var policy = [] ;\r",
                    "\r",
                    "    var vdrStore = Ext.getStore('vendors.Master');\r",
                    "   var tarr = RMdatalink.util.globalMethods.getArrayDataFromStore(vdrStore) ;\r",
                    "\r",
                    "    for(var i=0; i < tarr.length ; i++){\r",
                    "\r",
                    "\r",
                    "        var temp = {\r",
                    "            vendor_id:tarr[i]._id\r",
                    "\r",
                    "        };\r",
                    "\r",
                    "            temp.ecom_std =tarr[i].ecom_std ;\r",
                    "            temp.ecom_promo=tarr[i].ecom_promo ;\r",
                    "            temp.ecom_std_addl=tarr[i].ecom_std_addl ;\r",
                    "            temp.ecom_promo_addl=tarr[i].ecom_promo_addl ;\r",
                    "        policy.push(temp) ;\r",
                    "    }\r",
                    "\r",
                    "\r",
                    "    return policy ;\r",
                    "\r",
                    "\r",
                    "}\r",
                    "\r",
                    "/*\r",
                    "\r",
                    "product_price.ecom.standard_price\r",
                    "product_price.ecom.promotional_price\r",
                    "\r",
                    "product_price.ecom.standard_price_addlimg\r",
                    "product_price.ecom.promotional_price_addlimg\r",
                    "\r",
                    "*/"
                ]
            },
            "designerId": "9903f273-67ce-441a-817d-9cf7b38495fb"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "setDefaultTpl",
                "implHandler": [
                    " Ext.ComponentQuery.query('#ecompolicySelectVendors')[0].reset() ;\r",
                    "\r",
                    "var component = Ext.ComponentQuery.query('#productsecomPricingTab')[0] ;\r",
                    "var list = component.down('#pricingList');\r",
                    "     list.setItemTpl(\r",
                    "        Ext.create(\r",
                    "            \r",
                    "            'Ext.XTemplate',\r",
                    "                   '<div class=\"x-rm-listtpl-main\" style=\"width: 100%;padding:0 0px 0 0px !important;\">',\r",
                    "\r",
                    "                   '    <div style=\"width: 4%;\">',\r",
                    "                   '        <div style=\"width: 19px; height:19px;\"    {[RMdatalink.util.globalConfig.getListAttrForDelHandling()]} =\"onCartTap\" ></div>',\r",
                    "                   '    </div>',\r",
                    "\r",
                    "                   '    <div class=\"rightBorderDiv\" style=\"width: 8%;padding-left:10px;\" >{vendor_name}</div>',\r",
                    "                   '    <div class=\"rightBorderDiv\" style=\"width: 6.4%;text-align: center;\" >{[formatNormalNum(values.SKU)]}</div>',\r",
                    "                   '    <div class=\"rightBorderDiv\" style=\"width: 6.4%;text-align: center;\" >{[formatNormalNum(values.collections)]}</div>',\r",
                    "                   '    <div class=\"rightBorderDiv\" style=\"width: 6.4%;text-align: center;\" >{[formatNormalNum(values.design)]}</div>',\r",
                    "\r",
                    "                   '    <div class=\"rightBorderDiv\" style=\"width: 6.4%;text-align: center;\" >{[formatNormalNum(values.no_of_images)]}</div>',\r",
                    "                   '    <div class=\"rightBorderDiv\" style=\"width: 6.4%;text-align: center;\" >{[formatNormalNum(values.no_of_additional_images)]}</div>',\r",
                    "\r",
                    "                   '    <div class=\"rightBorderDiv\" style=\"width: 6.98%;text-align: center;\" >{[this.calHrsBySkuImages(values)]}</div>',\r",
                    "                   '    <div class=\"rightBorderDiv\" style=\"width: 6.98%;text-align: center;\" >{[this.calDaysBySkuImages(values)]}</div>',\r",
                    "\r",
                    "                 '    <div class=\"rightBorderDiv\" style=\"width: 6.98%;text-align: center;\" > $ {[formatNum(values.product_price.datalink.standard_price)]} </div>',\r",
                    "                   '    <div class=\"rightBorderDiv\" style=\"width: 6.98%;text-align: center;\" > $ {[formatNum(values.product_price.datalink.promotional_price)]} </div>',\r",
                    "\r",
                    "\r",
                    "\r",
                    "                   '    <div class=\"rightBorderDiv\" style=\"width: 6.98%;text-align: center;\" >{[this.calHrsBySkuImagesAddlImages(values)]}</div>',\r",
                    "                   '    <div class=\"rightBorderDiv\" style=\"width: 6.98%;text-align: center;\" >{[this.calDaysBySkuImagesAddlImages(values)]}</div>',\r",
                    "\r",
                    "                   '    <div class=\"rightBorderDiv\" style=\"width: 6.98%;text-align: center;\" > $ {[formatNum(values.product_price.datalink.standard_price_addlimg)]} </div>',\r",
                    "                   '    <div class=\"rightBorderDiv\" style=\"width: 6.98%;text-align: center;\" > $ {[formatNum(values.product_price.datalink.promotional_price_addlimg)]} </div>',\r",
                    "\r",
                    "\r",
                    "\r",
                    "                   '</div>'\r",
                    "            \r",
                    "//                  'Ext.XTemplate',\r",
                    "//                    '<div class=\"x-rm-listtpl-main\" style=\"width: 100%;padding:0 0px 0 0px !important;\">',\r",
                    "\r",
                    "//                    '    <div style=\"width: 4%;\">',\r",
                    "//                    '        <div style=\"width: 19px; height:19px;\"    {[RMdatalink.util.globalConfig.getListAttrForDelHandling()]} =\"onCartTap\" ></div>',\r",
                    "//                    '    </div>',\r",
                    "\r",
                    "//                    '    <div class=\"rightBorderDiv boldText\" style=\"width: 8%;padding-left:10px;\" >{vendor_name}</div>',\r",
                    "//                    '    <div class=\"rightBorderDiv\" style=\"width: 6.4%;text-align: center;\" >{[formatNormalNum(values.SKU)]}</div>',\r",
                    "//                    '    <div class=\"rightBorderDiv\" style=\"width: 6.4%;text-align: center;\" >{[formatNormalNum(values.collections)]}</div>',\r",
                    "//                    '    <div class=\"rightBorderDiv\" style=\"width: 6.4%;text-align: center;\" >{[formatNormalNum(values.design)]}</div>',\r",
                    "\r",
                    "//                    '    <div class=\"rightBorderDiv\" style=\"width: 6.4%;text-align: center;\" >{[formatNormalNum(values.no_of_images)]}</div>',\r",
                    "//                    '    <div class=\"rightBorderDiv\" style=\"width: 6.4%;text-align: center;\" >{[formatNormalNum(values.no_of_additional_images)]}</div>',\r",
                    "\r",
                    "//                    '    <div class=\"rightBorderDiv\" style=\"width: 6.98%;text-align: center;\" >{[this.calHrsBySkuImages(values)]}</div>',\r",
                    "//                    '    <div class=\"rightBorderDiv\" style=\"width: 6.98%;text-align: center;\" >{[this.calDaysBySkuImages(values)]}</div>',\r",
                    "\r",
                    "//                  '    <div class=\"rightBorderDiv\" style=\"width: 6.98%;text-align: center;\" > $ {[formatNum(values.ecom_std)]} </div>',\r",
                    "//                    '    <div class=\"rightBorderDiv\" style=\"width: 6.98%;text-align: center;\" > $ {[formatNum(values.ecom_promo)]} </div>',\r",
                    "\r",
                    "\r",
                    "\r",
                    "//                    '    <div class=\"rightBorderDiv\" style=\"width: 6.98%;text-align: center;\" >{[this.calHrsBySkuImagesAddlImages(values)]}</div>',\r",
                    "//                    '    <div class=\"rightBorderDiv\" style=\"width: 6.98%;text-align: center;\" >{[this.calDaysBySkuImagesAddlImages(values)]}</div>',\r",
                    "\r",
                    "//                    '    <div class=\"rightBorderDiv\" style=\"width: 6.98%;text-align: center;\" > $ {[formatNum(values.ecom_std_addl)]} </div>',\r",
                    "//                    '    <div class=\"rightBorderDiv\" style=\"width: 6.98%;text-align: center;\" > $ {[formatNum(values.ecom_promo_addl)]} </div>',\r",
                    "\r",
                    "\r",
                    "\r",
                    "//                    '</div>'\r",
                    "            ,            \r",
                    "                    {\r",
                    "                       getCalculatedValue: function(sku){\r",
                    "                           if(sku)\r",
                    "                           {\r",
                    "                               var  result = (sku * 5)/60 ;\r",
                    "                               result =    Math.round(result * 100) / 100 ;\r",
                    "                               return result ;\r",
                    "                           }\r",
                    "\r",
                    "                               return 0 ;\r",
                    "\r",
                    "                       },\r",
                    "\r",
                    "                         calHrsBySkuImages: function(values){\r",
                    "\r",
                    "                           var pricingData = RMdatalink.app.getController('BillingDetailsController').config.pricingData ;\r",
                    "                            var time_taken_images = 5 ;\r",
                    "                            var time_taken_images_addl_images = 10 ;\r",
                    "\r",
                    "\r",
                    "                            if(pricingData && pricingData[2]){\r",
                    "\r",
                    "                                 time_taken_images = pricingData[2].time_taken_images  ;\r",
                    "                                 time_taken_images_addl_images = pricingData[2].time_taken_images_addl_images ;\r",
                    "\r",
                    "\r",
                    "                            }\r",
                    "\r",
                    "\r",
                    "                           if(values.SKU && values.no_of_images)\r",
                    "                           {\r",
                    "                               var sku = parseInt(values.SKU) + parseInt(values.no_of_images) ;\r",
                    "                               var  result = (sku * time_taken_images)/60 ;\r",
                    "                               result =    Math.round(result * 100) / 100 ;\r",
                    "                               return result ;\r",
                    "                           }\r",
                    "\r",
                    "                               return 0 ;\r",
                    "\r",
                    "                       },\r",
                    "\r",
                    "\r",
                    "                         calDaysBySkuImages: function(values){\r",
                    "\r",
                    "                           var pricingData = RMdatalink.app.getController('BillingDetailsController').config.pricingData ;\r",
                    "                            var time_taken_images = 5 ;\r",
                    "                            var time_taken_images_addl_images = 10 ;\r",
                    "\r",
                    "\r",
                    "                            if(pricingData && pricingData[2]){\r",
                    "\r",
                    "                                 time_taken_images = pricingData[2].time_taken_images  ;\r",
                    "                                 time_taken_images_addl_images = pricingData[2].time_taken_images_addl_images ;\r",
                    "\r",
                    "\r",
                    "                            }\r",
                    "\r",
                    "\r",
                    "                           if(values.SKU && values.no_of_images)\r",
                    "                           {\r",
                    "                               var sku = parseInt(values.SKU) + parseInt(values.no_of_images) ;\r",
                    "                               var  result = (sku * time_taken_images)/60 ;\r",
                    "                               result = result / 8 ;\r",
                    "                               result =    Math.round(result * 100) / 100 ;\r",
                    "                               return result ;\r",
                    "                           }\r",
                    "\r",
                    "                               return 0 ;\r",
                    "\r",
                    "                       },\r",
                    "\r",
                    "                         calHrsBySkuImagesAddlImages: function(values){\r",
                    "\r",
                    "                            var pricingData = RMdatalink.app.getController('BillingDetailsController').config.pricingData ;\r",
                    "                            var time_taken_images = 5 ;\r",
                    "                            var time_taken_images_addl_images = 10 ;\r",
                    "\r",
                    "\r",
                    "                            if(pricingData && pricingData[2]){\r",
                    "\r",
                    "                                 time_taken_images = pricingData[2].time_taken_images  ;\r",
                    "                                 time_taken_images_addl_images = pricingData[2].time_taken_images_addl_images ;\r",
                    "\r",
                    "\r",
                    "                            }\r",
                    "\r",
                    "\r",
                    "                           if(values.SKU && values.no_of_images && values.no_of_additional_images )\r",
                    "                           {\r",
                    "                               var sku = parseInt(values.SKU) + parseInt(values.no_of_images) +parseInt(values.no_of_additional_images) ;\r",
                    "                               var  result = (sku * time_taken_images_addl_images)/60 ;\r",
                    "                               result =    Math.round(result * 100) / 100 ;\r",
                    "                               return result ;\r",
                    "                           }\r",
                    "\r",
                    "                               return 0 ;\r",
                    "\r",
                    "                       },\r",
                    "\r",
                    "                          calDaysBySkuImagesAddlImages: function(values){\r",
                    "\r",
                    "\r",
                    "                             var pricingData = RMdatalink.app.getController('BillingDetailsController').config.pricingData ;\r",
                    "                            var time_taken_images = 5 ;\r",
                    "                            var time_taken_images_addl_images = 10 ;\r",
                    "\r",
                    "\r",
                    "                            if(pricingData && pricingData[2]){\r",
                    "\r",
                    "                                 time_taken_images = pricingData[2].time_taken_images  ;\r",
                    "                                 time_taken_images_addl_images = pricingData[2].time_taken_images_addl_images ;\r",
                    "\r",
                    "\r",
                    "                            }\r",
                    "\r",
                    "                           if(values.SKU && values.no_of_images && values.no_of_additional_images )\r",
                    "                           {\r",
                    "                               var sku = parseInt(values.SKU) + parseInt(values.no_of_images) +parseInt(values.no_of_additional_images) ;\r",
                    "                               var  result = (sku * time_taken_images_addl_images)/60 ;\r",
                    "                                result = result / 8 ;\r",
                    "                               result =    Math.round(result * 100) / 100 ;\r",
                    "                               return result ;\r",
                    "                           }\r",
                    "\r",
                    "                               return 0 ;\r",
                    "\r",
                    "                       }\r",
                    "\r",
                    "                   }\r",
                    "\r",
                    "                  )\r",
                    "    );"
                ]
            },
            "designerId": "0028dcf6-2f46-4d36-8c7b-27d1fae8b21b"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "inputFld",
                    "record_key"
                ],
                "fn": "onupdateVdr",
                "implHandler": [
                    "console.log(record_key);\r",
                    "\r",
                    "var list =   Ext.ComponentQuery.query('#productsecomPricingTab')[0].down(\"#pricingList\");\r",
                    "\r",
                    "var store = list.getStore();\r",
                    "\r",
                    "var _id = inputFld.attributes['data-id'].value ;\r",
                    "var value = inputFld.value ;\r",
                    "value = value.replace(\",\",\"\");\r",
                    "\r",
                    "var recIndex = store.findExact('_id',_id) ;\r",
                    "\r",
                    "if(recIndex == -1){\r",
                    "    return ;\r",
                    "}\r",
                    "\r",
                    "\r",
                    "var record = store.getAt(recIndex) ;\r",
                    "\r",
                    "record.set(record_key,value) ;\r",
                    "\r",
                    ""
                ]
            },
            "designerId": "dc9e7ebb-b2b2-4a6d-8cb1-6bce6edad07a"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "initialsePricingList",
                "implHandler": [
                    "var that = this ;\r",
                    "\r",
                    "var headers =  Ext.ComponentQuery.query('#ecompricingPolicySkuImgsAddImgsListPnl')[0].down(\"#headerList\");\r",
                    "    headers.setData([{}]);\r",
                    "    headers.setItemTpl(\r",
                    "        Ext.create('Ext.XTemplate',\r",
                    "                   '<div class=\"x-rm-listtpl-main\" style=\"width: 100%;border-bottom: 1px solid #9b9b9b; background-color: gainsboro;font-weight: bold;color: #555;font-size: 0.8em;\">',\r",
                    "                   '    <div style=\"width: 22%;margin-left:10px;\" data-name=\"from_sku\">',\r",
                    "                   '        FROM&nbsp;<img src=\"resources/images/button_icons/downArrow.png\"/>',\r",
                    "                   '    </div>',\r",
                    "                   '    <div style=\"width: 22%;\" data-name=\"to_sku\">',\r",
                    "                   '        TO&nbsp;<img src=\"resources/images/button_icons/downArrow.png\"/>',\r",
                    "                   '    </div>',\r",
                    "                   '    <div style=\" width: 27%;\" data-name=\"standard\">',\r",
                    "                   '        STANDARD&nbsp;<img src=\"resources/images/button_icons/downArrow.png\"/>',\r",
                    "                   '    </div>',\r",
                    "                   '    <div style=\" width: 27%;\" data-name=\"promotional\">',\r",
                    "                   '        PROMOTIONAL&nbsp;<img src=\"resources/images/button_icons/downArrow.png\"/>',\r",
                    "                   '    </div>',\r",
                    "                   '</div>'\r",
                    "                  )\r",
                    "    );\r",
                    "    headers.refresh();\r",
                    "    // ** MAIN LIST ****\r",
                    "    var list =   Ext.ComponentQuery.query('#ecompricingPolicySkuImgsAddImgsListPnl')[0].down(\"#mainList\");\r",
                    "\r",
                    "    // list.setStore(Ext.getStore(\"pricing.datalink_pricing\"));\r",
                    "\r",
                    "    list.setItemTpl(\r",
                    "        Ext.create('Ext.XTemplate',\r",
                    "                   '<div class=\"x-rm-listtpl-main\" style=\"width: 100%;\">',\r",
                    "                   '    <div style=\"width: 22%;text-align: center;\" >{from}</div>',\r",
                    "                   '    <div style=\"width: 22%;text-align: center;\" >{to}</div>',\r",
                    "                   '  <div style=\"width: 26%;\" > <div style=\"float: left;\">$</div>  <input type=\"text\" style=\"width: 80%;text-align: right;height: 18px;\" class=\"x-rm-pricing-input-field prodDlSetupFlds\" data-id=\"{id}\" value=\"{[formatNum(values.std)]}\" field=\"standardPricingPolicy\" maxlength=\"8\"',\r",
                    "\r",
                    "                   '      onchange=\"RMdatalink.app.getController(\\'ecomPricingController\\').onUpdateSkuImgAddlImgs(this,\\'std\\');\" /></div>',\r",
                    "                   '  <div style=\"width: 26%;\" > <div style=\"float: left;\">$</div>  <input type=\"text\" style=\"width: 80%;text-align: right;height: 18px;\" class=\"x-rm-pricing-input-field prodDlSetupFlds\" data-id=\"{id}\" value=\"{[formatNum(values.promo)]}\" field=\"promotionalPricingPolicy\" maxlength=\"8\"',\r",
                    "\r",
                    "                   '      onchange=\"RMdatalink.app.getController(\\'ecomPricingController\\').onUpdateSkuImgAddlImgs(this,\\'promo\\');\" /></div>',\r",
                    "                   '</div>'\r",
                    "\r",
                    "                  )\r",
                    "    );\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "  var headers1 =  Ext.ComponentQuery.query('#ecompricingPolicy2ndList')[0].down(\"#headerList\"); //component.innerItems[1].innerItems[0];\r",
                    "    headers1.setData([{}]);\r",
                    "    headers1.setItemTpl(\r",
                    "        Ext.create('Ext.XTemplate',\r",
                    "                   '<div class=\"x-rm-listtpl-main\" style=\"width: 100%;border-bottom: 1px solid #9b9b9b; background-color: gainsboro;font-weight: bold;color: #555;font-size: 0.92em;\">',\r",
                    "                   '    <div style=\"width: 30%;text-align: center;\" data-name=\"of_vendors\">',\r",
                    "                   '        From&nbsp;<img src=\"resources/images/button_icons/downArrow.png\"/>',\r",
                    "                   '    </div>',\r",
                    "                   '    <div style=\"width: 30%;text-align: center;\" data-name=\"discount_level\">',\r",
                    "                   '       To&nbsp;<img src=\"resources/images/button_icons/downArrow.png\"/>',\r",
                    "                   '    </div>',\r",
                    "                   '    <div style=\"width: 35%;text-align: center;\" data-name=\"discount_level\">',\r",
                    "                   '       %&nbsp;<img src=\"resources/images/button_icons/downArrow.png\"/>',\r",
                    "                   '    </div>',\r",
                    "                   '</div>'\r",
                    "                  )\r",
                    "    );\r",
                    "    headers1.refresh();\r",
                    "    // ** MAIN LIST ****\r",
                    "    var list1 =  Ext.ComponentQuery.query('#ecompricingPolicy2ndList')[0].down(\"#mainList\"); //component.innerItems[1].innerItems[1];\r",
                    "\r",
                    "    list1.setItemTpl(\r",
                    "        Ext.create('Ext.XTemplate',\r",
                    "                   '<div class=\"x-rm-listtpl-main\" style=\"width: 100%;\">',\r",
                    "                    '    <div style=\"width: 30%;text-align: center;\" >{from}</div>',\r",
                    "                   '    <div style=\"width: 30%;text-align: center;\" >{to}</div>',\r",
                    "\r",
                    "                   '  <div style=\"width: 35%;\" > <div style=\"float: left;\">%</div>  <input type=\"text\" style=\"width: 60%;margin-left: 12%;text-align: center;height: 18px;\" class=\"x-rm-pricing-input-field prodDlSetupFlds\" data-id=\"{id}\" value=\"{disc}\" field=\"discountPricingPolicy\" maxlength=\"4\"',\r",
                    "\r",
                    "                   '      onchange=\"RMdatalink.app.getController(\\'ecomPricingController\\').onUpdateVdrDiscount(this,\\'disc\\');\"  /></div>',\r",
                    "\r",
                    "\r",
                    "                   '</div>'\r",
                    "\r",
                    "                  )\r",
                    "    );\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "  var headers2 =  Ext.ComponentQuery.query('#ecompricingPolicySKUDiscountList')[0].down(\"#headerList\"); //component.innerItems[1].innerItems[0];\r",
                    "    headers2.setData([{}]);\r",
                    "    headers2.setItemTpl(\r",
                    "        Ext.create('Ext.XTemplate',\r",
                    "                   '<div class=\"x-rm-listtpl-main\" style=\"width: 100%;border-bottom: 1px solid #9b9b9b; background-color: gainsboro;font-weight: bold;color: #555;font-size: 0.92em;\">',\r",
                    "                   '    <div style=\"width: 30%;text-align: center;\" data-name=\"of_vendors\">',\r",
                    "                   '        From&nbsp;<img src=\"resources/images/button_icons/downArrow.png\"/>',\r",
                    "                   '    </div>',\r",
                    "                   '    <div style=\"width: 30%;text-align: center;\" data-name=\"discount_level\">',\r",
                    "                   '       To&nbsp;<img src=\"resources/images/button_icons/downArrow.png\"/>',\r",
                    "                   '    </div>',\r",
                    "                   '    <div style=\"width: 35%;text-align: center;\" data-name=\"discount_level\">',\r",
                    "                   '       %&nbsp;<img src=\"resources/images/button_icons/downArrow.png\"/>',\r",
                    "                   '    </div>',\r",
                    "                   '</div>'\r",
                    "                  )\r",
                    "    );\r",
                    "    headers2.refresh();\r",
                    "    // ** MAIN LIST ****\r",
                    "    var list2 =  Ext.ComponentQuery.query('#ecompricingPolicySKUDiscountList')[0].down(\"#mainList\"); //component.innerItems[1].innerItems[1];\r",
                    "\r",
                    "    list2.setItemTpl(\r",
                    "        Ext.create('Ext.XTemplate',\r",
                    "                   '<div class=\"x-rm-listtpl-main\" style=\"width: 100%;\">',\r",
                    "                    '    <div style=\"width: 30%;text-align: center;\" >{from}</div>',\r",
                    "                   '    <div style=\"width: 30%;text-align: center;\" >{to}</div>',\r",
                    "\r",
                    "                   '  <div style=\"width: 35%;\" > <div style=\"float: left;\">%</div>  <input type=\"text\" style=\"width: 60%;margin-left: 12%;text-align: center;height: 18px;\" class=\"x-rm-pricing-input-field prodDlSetupFlds\" data-id=\"{id}\" value=\"{disc}\" field=\"discountPricingPolicy\" maxlength=\"4\"',\r",
                    "\r",
                    "                   '      onchange=\"RMdatalink.app.getController(\\'ecomPricingController\\').onUpdateSKUDiscount(this,\\'disc\\');\"  /></div>',\r",
                    "\r",
                    "\r",
                    "                   '</div>'\r",
                    "\r",
                    "                  )\r",
                    "    );\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "var headers4 =  Ext.ComponentQuery.query('#ecompricingPolicy1stList')[0].down(\"#headerList\"); //   //(this is bad coding thats why i removed it (From Yury))component.innerItems[0].innerItems[0];\r",
                    "    headers4.setData([{}]);\r",
                    "    headers4.setItemTpl(\r",
                    "        Ext.create('Ext.XTemplate',\r",
                    "                   '<div class=\"x-rm-listtpl-main\" style=\"width: 100%;border-bottom: 1px solid #9b9b9b; background-color: gainsboro;font-weight: bold;color: #555;font-size: 0.8em;\">',\r",
                    "                   '    <div style=\"width: 22%;margin-left:10px;\" data-name=\"from_sku\">',\r",
                    "                   '        FROM&nbsp;<img src=\"resources/images/button_icons/downArrow.png\"/>',\r",
                    "                   '    </div>',\r",
                    "                   '    <div style=\"width: 22%;\" data-name=\"to_sku\">',\r",
                    "                   '        TO&nbsp;<img src=\"resources/images/button_icons/downArrow.png\"/>',\r",
                    "                   '    </div>',\r",
                    "                   '    <div style=\" width: 27%;\" data-name=\"standard\">',\r",
                    "                   '        STANDARD&nbsp;<img src=\"resources/images/button_icons/downArrow.png\"/>',\r",
                    "                   '    </div>',\r",
                    "                   '    <div style=\" width: 27%;\" data-name=\"promotional\">',\r",
                    "                   '        PROMOTIONAL&nbsp;<img src=\"resources/images/button_icons/downArrow.png\"/>',\r",
                    "                   '    </div>',\r",
                    "                   '</div>'\r",
                    "                  )\r",
                    "    );\r",
                    "    headers4.refresh();\r",
                    "    // ** MAIN LIST ****\r",
                    "    var list4 =   Ext.ComponentQuery.query('#ecompricingPolicy1stList')[0].down(\"#mainList\");//component.innerItems[0].innerItems[1];\r",
                    "\r",
                    "    // list.setStore(Ext.getStore(\"pricing.datalink_pricing\"));\r",
                    "\r",
                    "    list4.setItemTpl(\r",
                    "        Ext.create('Ext.XTemplate',\r",
                    "                   '<div class=\"x-rm-listtpl-main\" style=\"width: 100%;\">',\r",
                    "                   '    <div style=\"width: 22%;text-align: center;\" >{from}</div>',\r",
                    "                   '    <div style=\"width: 22%;text-align: center;\" >{to}</div>',\r",
                    "                   '  <div style=\"width: 26%;\" > <div style=\"float: left;\">$</div>  <input type=\"text\" style=\"width: 80%;text-align: right;height: 18px;\" class=\"x-rm-pricing-input-field\" data-id=\"{id}\" value=\"{[formatNum(values.std)]}\" field=\"standardPricingPolicy\" maxlength=\"8\"',\r",
                    "\r",
                    "                   '      onchange=\"RMdatalink.app.getController(\\'ecomPricingController\\').onUpdateSkuImgsStore(this,\\'std\\');\" /></div>',\r",
                    "                   '  <div style=\"width: 26%;\" > <div style=\"float: left;\">$</div>  <input type=\"text\" style=\"width: 80%;text-align: right;height: 18px;\" class=\"x-rm-pricing-input-field\" data-id=\"{id}\" value=\"{[formatNum(values.promo)]}\" field=\"promotionalPricingPolicy\" maxlength=\"8\"',\r",
                    "\r",
                    "                   '      onchange=\"RMdatalink.app.getController(\\'ecomPricingController\\').onUpdateSkuImgsStore(this,\\'promo\\');\" /></div>',\r",
                    "                   '</div>'\r",
                    "\r",
                    "                  )\r",
                    "    );\r",
                    "\r",
                    "\r",
                    ""
                ]
            },
            "designerId": "fb4a92b0-0f48-44da-8477-0afb29a3bda5"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "_id",
                    "key",
                    "value"
                ],
                "fn": "updatePricingStore",
                "implHandler": [
                    "this.config.isPricingUpdated = true ;\r",
                    "\r",
                    "RMdatalink.app.getController('DlPricingController').config.isPricingUpdated = true ;\r",
                    "\r",
                    "var store = Ext.getStore('pricing.MainStore') ;\r",
                    "\r",
                    "var recIndex = store.findExact('_id',_id) ;\r",
                    "\r",
                    "if( recIndex != -1 ){\r",
                    "\r",
                    "    var record = store.getAt(recIndex) ;\r",
                    "    record.set(key,value);\r",
                    "\r",
                    "}\r",
                    "\r",
                    " RMdatalink.app.getController('BillingDetailsController').config.pricingData[2][key] = value ;"
                ]
            },
            "designerId": "bca78c7a-d1f1-419d-9a9e-56eeefb79711"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "initialseDlVdrPricing",
                "implHandler": [
                    " var pricingData = RMdatalink.app.getController('BillingDetailsController').config.pricingData ;\r",
                    "\r",
                    "if(!pricingData[2].vendor_pricing_sku_images){\r",
                    "\r",
                    "    return ;\r",
                    "}\r",
                    "\r",
                    "var DlVdPricingSkuImgsStr = Ext.getStore('ecomVdPricingSkuImgs') ;\r",
                    "\r",
                    "DlVdPricingSkuImgsStr.removeAll();\r",
                    "\r",
                    "DlVdPricingSkuImgsStr.setData(pricingData[2].vendor_pricing_sku_images);\r",
                    "\r",
                    "var DlVdPricingSkuImgsAddlImages = Ext.getStore('ecomVdPricingSkuImgsAddlImages') ;\r",
                    "\r",
                    "DlVdPricingSkuImgsAddlImages.removeAll();\r",
                    "\r",
                    "DlVdPricingSkuImgsAddlImages.setData(pricingData[2].vendor_pricing_sku_images_addl_images);\r",
                    "\r",
                    "\r",
                    "var DlVdPricingVdrDiscount = Ext.getStore('ecomVdPricingVdrDiscount') ;\r",
                    "\r",
                    "DlVdPricingVdrDiscount.removeAll();\r",
                    "\r",
                    "DlVdPricingVdrDiscount.setData(pricingData[2].vendor_pricing_vdr_discount);\r",
                    "\r",
                    "\r",
                    "var DatalinkProductBundle = Ext.getStore('ecomProductBundle') ;\r",
                    "\r",
                    "DatalinkProductBundle.removeAll();\r",
                    "\r",
                    "DatalinkProductBundle.setData(pricingData[2].datalink_vendor_bundle);\r",
                    "\r",
                    "\r",
                    "\r",
                    "var DatalinkProductBundle = Ext.getStore('ecomProductBundle') ;\r",
                    "\r",
                    "DatalinkProductBundle.removeAll();\r",
                    "\r",
                    "DatalinkProductBundle.setData(pricingData[2].datalink_bundle);\r",
                    "\r",
                    "\r",
                    "\r",
                    "var DatalinkVendors = Ext.getStore('ecomVendors') ;\r",
                    "\r",
                    "DatalinkVendors.removeAll();\r",
                    "\r",
                    "DatalinkVendors.setData(pricingData[2].datalink_vendor_bundle);\r",
                    "\r",
                    "\r",
                    "//////\r",
                    "\r",
                    "var DlVdPricingSKUDiscount = Ext.getStore('ecomVdPricingSKUDiscount') ;\r",
                    "\r",
                    "DlVdPricingSKUDiscount.removeAll();\r",
                    "\r",
                    "DlVdPricingSKUDiscount.setData(pricingData[2].vendor_pricing_sku_discount);\r",
                    "\r",
                    "\r",
                    "\r",
                    "// /\r",
                    "\r",
                    "var ecomPricingVendors = Ext.getStore('ecomPricingVendors') ;\r",
                    "\r",
                    "ecomPricingVendors.removeAll();\r",
                    "\r",
                    "ecomPricingVendors.setData(pricingData[2].vendor_pricing_vendors);\r",
                    "\r",
                    "\r",
                    "\r",
                    "var DatalinkVendors = Ext.getStore('ecomVendors') ;\r",
                    "\r",
                    "DatalinkVendors.removeAll();\r",
                    "\r",
                    "DatalinkVendors.setData(pricingData[2].datalink_vendor_bundle);\r",
                    "\r",
                    "\r",
                    "//////\r",
                    "\r",
                    "var DlVdPricingSKUDiscount = Ext.getStore('ecomVdPricingSKUDiscount') ;\r",
                    "\r",
                    "DlVdPricingSKUDiscount.removeAll();\r",
                    "\r",
                    "DlVdPricingSKUDiscount.setData(pricingData[2].vendor_pricing_sku_discount);\r",
                    "\r",
                    "\r",
                    "\r",
                    "// /\r",
                    "\r",
                    "var ecomPricingVendors = Ext.getStore('ecomPricingVendors') ;\r",
                    "\r",
                    "ecomPricingVendors.removeAll();\r",
                    "\r",
                    "ecomPricingVendors.setData(pricingData[2].vendor_pricing_vendors);\r",
                    "\r",
                    "var cmbo =Ext.ComponentQuery.query('#ecomVdrPricingbyVendorsPanel')[0].down('selectfield') ;\r",
                    "\r",
                    "var cmboStore ;\r",
                    "if(cmbo && pricingData[2].vendor_pricing_vendors_sel_policy){\r",
                    "        cmboStore = cmbo.getStore();\r",
                    "       var selectedIndex  = cmboStore.findExact('value',pricingData[2].vendor_pricing_vendors_sel_policy);\r",
                    "        if(selectedIndex >-1){\r",
                    "            \r",
                    "              window.isFlowFromInitialiseDlVdrPricing = true;  \r",
                    "              cmbo.setValue(pricingData[2].vendor_pricing_vendors_sel_policy) ;\r",
                    "\r",
                    "        }\r",
                    "    }"
                ]
            },
            "designerId": "7f43cf20-84ac-45da-8fe1-246df3aedf8a"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "getSkuImgsPolicy",
                "implHandler": [
                    "\r",
                    "if(! this.validateSkuImgs()){\r",
                    "\r",
                    "    Ext.Msg.alert(\"Error\",\"All fields are mandatory.\");\r",
                    "    return ;\r",
                    "}\r",
                    "\r",
                    "\r",
                    "var dataToUpdate = {\r",
                    "\r",
                    "    vendor_pricing_sku_images:[]\r",
                    "};\r",
                    "\r",
                    "\r",
                    "var form = Ext.ComponentQuery.query('#ecomVdrPricingSku_imgsSetUpPanel')[0] ;\r",
                    "\r",
                    "var fieldStore = form.down('#ecompolicySelectSI').getStore() ;\r",
                    "\r",
                    "\r",
                    "var range = parseFloat(form.down('#range').getValue()) ;\r",
                    "\r",
                    "var stdStart =  parseFloat(form.down('#stdStart').getValue()) ;\r",
                    "var stdIncrement =  parseFloat(form.down('#stdIncrement').getValue()) ;\r",
                    "\r",
                    "var promoStart =  parseFloat(form.down('#promoStart').getValue()) ;\r",
                    "var promoIncrement =  parseFloat(form.down('#promoIncrement').getValue()) ;\r",
                    "\r",
                    "\r",
                    "var policyText = form.down('#policyText').getValue() ;\r",
                    "\r",
                    "var isAddNew = form.down('#addUpdate').getText() == \"Add\" ;\r",
                    "\r",
                    "var options = RMdatalink.util.globalMethods.getArrayDataFromStore(fieldStore) ;\r",
                    "var curOptVal =  form.down('#ecompolicySelectSI').getValue();\r",
                    "\r",
                    "if(!options || options.length === 0 ){\r",
                    "\r",
                    "\r",
                    "    options = [] ;\r",
                    "}\r",
                    "\r",
                    "\r",
                    "var tempRec = {\r",
                    "\r",
                    "        text :policyText,\r",
                    "        value: policyText,\r",
                    "        policy:getPolicyArray(),\r",
                    "        range:range,\r",
                    "        std_start:stdStart,\r",
                    "        std_increment:stdIncrement,\r",
                    "        promo_start:promoStart,\r",
                    "        promo_increment:promoIncrement\r",
                    "\r",
                    "    };\r",
                    "\r",
                    "if(isAddNew){\r",
                    "    options.push(tempRec);\r",
                    "\r",
                    "    fieldStore.add(tempRec);\r",
                    "}else{\r",
                    "\r",
                    "    var opIndex = 0 ;\r",
                    "    while(opIndex < options.length && curOptVal !== options[opIndex].value){\r",
                    "        opIndex++;\r",
                    "    }\r",
                    "\r",
                    "    if(opIndex == options.length){\r",
                    "        opIndex--;\r",
                    "    }\r",
                    "\r",
                    "     options[opIndex]= tempRec ;\r",
                    "\r",
                    "    fieldStore.getAt(opIndex).set(tempRec) ;\r",
                    "\r",
                    "\r",
                    "}\r",
                    "//  Ext.ComponentQuery.query('#productDatalinkMainPanel')[0].setMasked( {\r",
                    "//                 xtype: 'loadmask'\r",
                    "//             });\r",
                    "var store = Ext.getStore('pricing.MainStore') ;\r",
                    "\r",
                    "dataToUpdate.vendor_pricing_sku_images = options ;\r",
                    "\r",
                    "var _id = RMdatalink.app.getController('BillingDetailsController').config.pricingData[2]._id ;\r",
                    "\r",
                    "this.updatePricingStore(_id,'vendor_pricing_sku_images',dataToUpdate.vendor_pricing_sku_images );\r",
                    "\r",
                    " RMdatalink.iwa.rdl.doUpdateCollection(store, dataToUpdate , _id, success, error);\r",
                    "\r",
                    "if(isAddNew){\r",
                    "\r",
                    "    this.clearSkuImgsFlds();\r",
                    "}\r",
                    "\r",
                    "function success(){\r",
                    "    Ext.Viewport.setMasked(false);\r",
                    "\r",
                    "\r",
                    "\r",
                    "}\r",
                    "\r",
                    "function error(){\r",
                    "    Ext.Viewport.setMasked(false);\r",
                    "    alert(\"priceing update error\");\r",
                    "}\r",
                    "\r",
                    "\r",
                    "function getPolicyArray(){\r",
                    "    var policy = [] ;\r",
                    "    var from = 0 ;\r",
                    "    var maxRange = 100000 ;\r",
                    "    var stdPrice = stdStart ;\r",
                    "    var promoPrice = promoStart ;\r",
                    "    var to = from + range ;\r",
                    "    while(to <= maxRange)\r",
                    "    {\r",
                    "        policy.push({\r",
                    "\r",
                    "            from:from,\r",
                    "            to:to ,\r",
                    "            std:stdPrice,\r",
                    "            promo:promoPrice\r",
                    "\r",
                    "        });\r",
                    "\r",
                    "        from = to + 1 ;\r",
                    "        to = to + range ;\r",
                    "        stdPrice += stdIncrement ;\r",
                    "        promoPrice += promoIncrement ;\r",
                    "\r",
                    "\r",
                    "\r",
                    "    }\r",
                    "\r",
                    "    if(to > maxRange && from < maxRange )\r",
                    "    {\r",
                    "     to = maxRange ;\r",
                    "\r",
                    "     policy.push({\r",
                    "\r",
                    "            from:from,\r",
                    "            to:to ,\r",
                    "            std:stdPrice,\r",
                    "            promo:promoPrice\r",
                    "\r",
                    "        });\r",
                    "    }\r",
                    "\r",
                    "\r",
                    "\r",
                    "    return policy ;\r",
                    "\r",
                    "\r",
                    "}"
                ]
            },
            "designerId": "8e4d5cb2-0d82-49ef-9341-f1a06cf8f5ee"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "deleteSkuImgs",
                "implHandler": [
                    "\r",
                    "var form = Ext.ComponentQuery.query('#ecomVdrPricingSku_imgsSetUpPanel')[0] ;\r",
                    "\r",
                    "var fieldStore = form.down('#ecompolicySelectSI').getStore() ;\r",
                    "var options = RMdatalink.util.globalMethods.getArrayDataFromStore(fieldStore) ;\r",
                    "var curOptVal =  form.down('#ecompolicySelectSI').getValue();\r",
                    "\r",
                    "if(!curOptVal || curOptVal == \"\"){\r",
                    "\r",
                    "    return ;\r",
                    "}\r",
                    "    var opIndex = 0 ;\r",
                    "    while(opIndex < options.length && curOptVal !== options[opIndex].value){\r",
                    "        opIndex++;\r",
                    "    }\r",
                    "\r",
                    "    if(opIndex == options.length){\r",
                    "        opIndex--;\r",
                    "    }\r",
                    "\r",
                    "fieldStore.removeAt(opIndex);\r",
                    "\r",
                    "options = RMdatalink.util.globalMethods.getArrayDataFromStore(fieldStore) ;\r",
                    "var dataToUpdate = {\r",
                    "\r",
                    "    vendor_pricing_sku_images:[]\r",
                    "};\r",
                    "\r",
                    "var store = Ext.getStore('pricing.MainStore') ;\r",
                    "\r",
                    "dataToUpdate.vendor_pricing_sku_images = options ;\r",
                    "\r",
                    "var _id = RMdatalink.app.getController('BillingDetailsController').config.pricingData[2]._id ;\r",
                    "\r",
                    "this.updatePricingStore(_id,'vendor_pricing_sku_images',dataToUpdate.vendor_pricing_sku_images );\r",
                    "\r",
                    " RMdatalink.iwa.rdl.doUpdateCollection(store, dataToUpdate , _id, success, error);\r",
                    "\r",
                    "\r",
                    "this.clearSkuImgsFlds();\r",
                    "\r",
                    "\r",
                    "function success(){\r",
                    "    Ext.Viewport.setMasked(false);\r",
                    "\r",
                    "\r",
                    "\r",
                    "}\r",
                    "\r",
                    "function error(){\r",
                    "    Ext.Viewport.setMasked(false);\r",
                    "    alert(\"priceing update error\");\r",
                    "}"
                ]
            },
            "designerId": "5eb63892-afd7-46fc-9806-63ed18ead26d"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "validateSkuImgs",
                "implHandler": [
                    "var form = Ext.ComponentQuery.query('#ecomVdrPricingSku_imgsSetUpPanel')[0] ;\r",
                    "\r",
                    "\r",
                    "\r",
                    "var result =true ;\r",
                    "\r",
                    "var temp = null ;\r",
                    "\r",
                    "// temp = form.down('#policySelectSI').getValue() ;\r",
                    "// if(!temp || temp === \"\"){\r",
                    "\r",
                    "//     result = false ;\r",
                    "// }\r",
                    "\r",
                    "temp = form.down('#policyText').getValue() ;\r",
                    "if(!temp || temp === \"\"){\r",
                    "\r",
                    "    result = false ;\r",
                    "}\r",
                    "\r",
                    "temp = form.down('#range').getValue() ;\r",
                    "if(!temp || temp === \"\"){\r",
                    "\r",
                    "    result = false ;\r",
                    "}\r",
                    "\r",
                    "temp = form.down('#stdStart').getValue() ;\r",
                    "if(!temp || temp === \"\"){\r",
                    "\r",
                    "    result = false ;\r",
                    "}\r",
                    "\r",
                    "\r",
                    "temp = form.down('#stdIncrement').getValue() ;\r",
                    "if(!temp || temp === \"\"){\r",
                    "\r",
                    "    result = false ;\r",
                    "}\r",
                    "\r",
                    "\r",
                    "temp = form.down('#promoStart').getValue() ;\r",
                    "if(!temp || temp === \"\"){\r",
                    "\r",
                    "    result = false ;\r",
                    "}\r",
                    "\r",
                    "temp = form.down('#promoIncrement').getValue() ;\r",
                    "if(!temp || temp === \"\"){\r",
                    "\r",
                    "    result = false ;\r",
                    "}\r",
                    "\r",
                    "\r",
                    "return result ;"
                ]
            },
            "designerId": "f21e34f7-77e7-41d6-a4d7-d7e986238eed"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "clearSkuImgsFlds",
                "implHandler": [
                    "\r",
                    "var form = Ext.ComponentQuery.query('#ecomVdrPricingSku_imgsSetUpPanel')[0] ;\r",
                    "\r",
                    "\r",
                    "form.down('#range').setValue(\"\") ;\r",
                    "\r",
                    "form.down('#stdStart').setValue(\"\") ;\r",
                    "form.down('#stdIncrement').setValue(\"\") ;\r",
                    "\r",
                    "form.down('#promoStart').setValue(\"\") ;\r",
                    "form.down('#promoIncrement').setValue(\"\");\r",
                    "\r",
                    "\r",
                    "form.down('#policyText').setValue(\"\") ;\r",
                    "\r",
                    "form.down('#addUpdate').setText(\"Add\");\r",
                    "\r",
                    "form.down('#ecompolicySelectSI').reset();\r",
                    "//form.down('#policySelectSI').setValue(null);"
                ]
            },
            "designerId": "f53e377a-569e-40b2-b48d-d48826ac7109"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "validateSkuImgsAddlImgs",
                "implHandler": [
                    "var form = Ext.ComponentQuery.query('#ecomVdrPricingSku_imgs_addlImgsSetUpPanel')[0] ;\r",
                    "\r",
                    "\r",
                    "\r",
                    "var result =true ;\r",
                    "\r",
                    "var temp = null ;\r",
                    "\r",
                    "// temp = form.down('#policySelectAI').getValue() ;\r",
                    "// if(!temp || temp === \"\"){\r",
                    "\r",
                    "//     result = false ;\r",
                    "// }\r",
                    "\r",
                    "temp = form.down('#policyText').getValue() ;\r",
                    "if(!temp || temp === \"\"){\r",
                    "\r",
                    "    result = false ;\r",
                    "}\r",
                    "\r",
                    "temp = form.down('#range').getValue() ;\r",
                    "if(!temp || temp === \"\"){\r",
                    "\r",
                    "    result = false ;\r",
                    "}\r",
                    "\r",
                    "temp = form.down('#stdStart').getValue() ;\r",
                    "if(!temp || temp === \"\"){\r",
                    "\r",
                    "    result = false ;\r",
                    "}\r",
                    "\r",
                    "\r",
                    "temp = form.down('#stdIncrement').getValue() ;\r",
                    "if(!temp || temp === \"\"){\r",
                    "\r",
                    "    result = false ;\r",
                    "}\r",
                    "\r",
                    "\r",
                    "temp = form.down('#promoStart').getValue() ;\r",
                    "if(!temp || temp === \"\"){\r",
                    "\r",
                    "    result = false ;\r",
                    "}\r",
                    "\r",
                    "temp = form.down('#promoIncrement').getValue() ;\r",
                    "if(!temp || temp === \"\"){\r",
                    "\r",
                    "    result = false ;\r",
                    "}\r",
                    "\r",
                    "\r",
                    "return result ;"
                ]
            },
            "designerId": "c0d98f43-4735-4a62-a9c6-31d0b9f26616"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "updateSkuImgsAddlImgs",
                "implHandler": [
                    "\r",
                    "if(! this.validateSkuImgsAddlImgs()){\r",
                    "\r",
                    "    Ext.Msg.alert(\"Error\",\"All fields are mandatory.\");\r",
                    "    return ;\r",
                    "}\r",
                    "\r",
                    "\r",
                    "var dataToUpdate = {\r",
                    "\r",
                    "    vendor_pricing_sku_images:[]\r",
                    "};\r",
                    "\r",
                    "\r",
                    "var form = Ext.ComponentQuery.query('#ecomVdrPricingSku_imgs_addlImgsSetUpPanel')[0] ;\r",
                    "\r",
                    "var fieldStore = form.down('#ecompolicySelectAI').getStore() ;\r",
                    "\r",
                    "\r",
                    "var range = parseFloat(form.down('#range').getValue()) ;\r",
                    "\r",
                    "var stdStart =  parseFloat(form.down('#stdStart').getValue()) ;\r",
                    "var stdIncrement =  parseFloat(form.down('#stdIncrement').getValue()) ;\r",
                    "\r",
                    "var promoStart =  parseFloat(form.down('#promoStart').getValue()) ;\r",
                    "var promoIncrement =  parseFloat(form.down('#promoIncrement').getValue()) ;\r",
                    "\r",
                    "\r",
                    "var policyText = form.down('#policyText').getValue() ;\r",
                    "\r",
                    "var isAddNew = form.down('#addUpdate').getText() == \"Add\" ;\r",
                    "\r",
                    "var options = RMdatalink.util.globalMethods.getArrayDataFromStore(fieldStore) ;\r",
                    "var curOptVal =  form.down('#ecompolicySelectAI').getValue();\r",
                    "\r",
                    "if(!options || options.length === 0 ){\r",
                    "\r",
                    "\r",
                    "    options = [] ;\r",
                    "}\r",
                    "\r",
                    "\r",
                    "var tempRec = {\r",
                    "\r",
                    "        text :policyText,\r",
                    "        value: policyText,\r",
                    "        policy:getPolicyArray(),\r",
                    "        range:range,\r",
                    "        std_start:stdStart,\r",
                    "        std_increment:stdIncrement,\r",
                    "        promo_start:promoStart,\r",
                    "        promo_increment:promoIncrement\r",
                    "\r",
                    "    };\r",
                    "\r",
                    "if(isAddNew){\r",
                    "    options.push(tempRec);\r",
                    "\r",
                    "    fieldStore.add(tempRec);\r",
                    "}else{\r",
                    "\r",
                    "    var opIndex = 0 ;\r",
                    "    while(opIndex < options.length && curOptVal !== options[opIndex].value){\r",
                    "        opIndex++;\r",
                    "    }\r",
                    "\r",
                    "    if(opIndex == options.length){\r",
                    "        opIndex--;\r",
                    "    }\r",
                    "\r",
                    "     options[opIndex]= tempRec ;\r",
                    "\r",
                    "    fieldStore.getAt(opIndex).set(tempRec) ;\r",
                    "\r",
                    "\r",
                    "}\r",
                    "//  Ext.ComponentQuery.query('#productDatalinkMainPanel')[0].setMasked( {\r",
                    "//                 xtype: 'loadmask'\r",
                    "//             });\r",
                    "var store = Ext.getStore('pricing.MainStore') ;\r",
                    "\r",
                    "//this.config.isPricingUpdated = true ;\r",
                    "\r",
                    "dataToUpdate.vendor_pricing_sku_images_addl_images = options ;\r",
                    "\r",
                    "var _id = RMdatalink.app.getController('BillingDetailsController').config.pricingData[2]._id ;\r",
                    "\r",
                    "this.updatePricingStore(_id,'vendor_pricing_sku_images_addl_images',dataToUpdate.vendor_pricing_sku_images_addl_images );\r",
                    "\r",
                    " RMdatalink.iwa.rdl.doUpdateCollection(store, dataToUpdate , _id, success, error);\r",
                    "\r",
                    "if(isAddNew){\r",
                    "\r",
                    "    this.clearImgsAddlImgs();\r",
                    "}\r",
                    "\r",
                    "function success(){\r",
                    "    Ext.Viewport.setMasked(false);\r",
                    "\r",
                    "\r",
                    "\r",
                    "}\r",
                    "\r",
                    "function error(){\r",
                    "    Ext.Viewport.setMasked(false);\r",
                    "    alert(\"priceing update error\");\r",
                    "}\r",
                    "\r",
                    "\r",
                    "function getPolicyArray(){\r",
                    "    var policy = [] ;\r",
                    "    var from = 0 ;\r",
                    "    var maxRange = 100000 ;\r",
                    "    var stdPrice = stdStart ;\r",
                    "    var promoPrice = promoStart ;\r",
                    "    var to = from + range ;\r",
                    "    while(to <= maxRange)\r",
                    "    {\r",
                    "        policy.push({\r",
                    "\r",
                    "            from:from,\r",
                    "            to:to ,\r",
                    "            std:stdPrice,\r",
                    "            promo:promoPrice\r",
                    "\r",
                    "        });\r",
                    "\r",
                    "        from = to + 1 ;\r",
                    "        to = to + range ;\r",
                    "        stdPrice += stdIncrement ;\r",
                    "        promoPrice += promoIncrement ;\r",
                    "\r",
                    "\r",
                    "\r",
                    "    }\r",
                    "\r",
                    "    if(to > maxRange && from < maxRange )\r",
                    "    {\r",
                    "     to = maxRange ;\r",
                    "\r",
                    "     policy.push({\r",
                    "\r",
                    "            from:from,\r",
                    "            to:to ,\r",
                    "            std:stdPrice,\r",
                    "            promo:promoPrice\r",
                    "\r",
                    "        });\r",
                    "    }\r",
                    "\r",
                    "\r",
                    "\r",
                    "    return policy ;\r",
                    "\r",
                    "\r",
                    "}"
                ]
            },
            "designerId": "1ba0dd11-a703-4354-a1da-5c4c423f6f86"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "deleteImgsAddlImgs",
                "implHandler": [
                    "\r",
                    "var form = Ext.ComponentQuery.query('#ecomVdrPricingSku_imgs_addlImgsSetUpPanel')[0] ;\r",
                    "\r",
                    "var fieldStore = form.down('#ecompolicySelectAI').getStore() ;\r",
                    "var options = RMdatalink.util.globalMethods.getArrayDataFromStore(fieldStore) ;\r",
                    "var curOptVal =  form.down('#ecompolicySelectAI').getValue();\r",
                    "\r",
                    "if(!curOptVal || curOptVal == \"\"){\r",
                    "\r",
                    "    return ;\r",
                    "}\r",
                    "    var opIndex = 0 ;\r",
                    "    while(opIndex < options.length && curOptVal !== options[opIndex].value){\r",
                    "        opIndex++;\r",
                    "    }\r",
                    "\r",
                    "    if(opIndex == options.length){\r",
                    "        opIndex--;\r",
                    "    }\r",
                    "\r",
                    "fieldStore.removeAt(opIndex);\r",
                    "\r",
                    "options = RMdatalink.util.globalMethods.getArrayDataFromStore(fieldStore) ;\r",
                    "var dataToUpdate = {\r",
                    "\r",
                    "    vendor_pricing_sku_images_addl_images:[]\r",
                    "};\r",
                    "\r",
                    "var store = Ext.getStore('pricing.MainStore') ;\r",
                    "\r",
                    "dataToUpdate.vendor_pricing_sku_images_addl_images = options ;\r",
                    "\r",
                    "var _id = RMdatalink.app.getController('BillingDetailsController').config.pricingData[2]._id ;\r",
                    "this.updatePricingStore(_id,'vendor_pricing_sku_images_addl_images',dataToUpdate.vendor_pricing_sku_images_addl_images );\r",
                    "\r",
                    " RMdatalink.iwa.rdl.doUpdateCollection(store, dataToUpdate , _id, success, error);\r",
                    "\r",
                    "\r",
                    "this.clearImgsAddlImgs();\r",
                    "\r",
                    "\r",
                    "function success(){\r",
                    "    Ext.Viewport.setMasked(false);\r",
                    "\r",
                    "\r",
                    "\r",
                    "}\r",
                    "\r",
                    "function error(){\r",
                    "    Ext.Viewport.setMasked(false);\r",
                    "    alert(\"priceing update error\");\r",
                    "}"
                ]
            },
            "designerId": "6cc743b1-c836-4e9b-9b8e-898a7ad41956"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "clearImgsAddlImgs",
                "implHandler": [
                    "\r",
                    "var form = Ext.ComponentQuery.query('#ecomVdrPricingSku_imgs_addlImgsSetUpPanel')[0] ;\r",
                    "\r",
                    "\r",
                    "form.down('#range').setValue(\"\") ;\r",
                    "\r",
                    "form.down('#stdStart').setValue(\"\") ;\r",
                    "form.down('#stdIncrement').setValue(\"\") ;\r",
                    "\r",
                    "form.down('#promoStart').setValue(\"\") ;\r",
                    "form.down('#promoIncrement').setValue(\"\");\r",
                    "\r",
                    "\r",
                    "form.down('#policyText').setValue(\"\") ;\r",
                    "\r",
                    "form.down('#addUpdate').setText(\"Add\");\r",
                    "\r",
                    "form.down('#ecompolicySelectAI').reset();\r",
                    "//form.down('#policySelectAI').setValue(null);"
                ]
            },
            "designerId": "3fc9ab47-61f7-4aa4-bcb5-6b700be6a94d"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "validateVdrDiscountPolicy",
                "implHandler": [
                    "var form = Ext.ComponentQuery.query('#ecomVdrPricingVdrDiscountSetUpPanel')[0] ;\r",
                    "\r",
                    "\r",
                    "\r",
                    "var result =true ;\r",
                    "\r",
                    "var temp = null ;\r",
                    "\r",
                    "\r",
                    "\r",
                    "temp = form.down('#discountPolicySlctTxt').getValue() ;\r",
                    "if(!temp || temp === \"\"){\r",
                    "\r",
                    "    result = false ;\r",
                    "}\r",
                    "\r",
                    "temp = form.down('#range').getValue() ;\r",
                    "if(!temp || temp === \"\"){\r",
                    "\r",
                    "    result = false ;\r",
                    "}\r",
                    "\r",
                    "temp = form.down('#start').getValue() ;\r",
                    "if(!temp || temp === \"\"){\r",
                    "\r",
                    "    result = false ;\r",
                    "}\r",
                    "\r",
                    "\r",
                    "temp = form.down('#increment').getValue() ;\r",
                    "if(!temp || temp === \"\"){\r",
                    "\r",
                    "    result = false ;\r",
                    "}\r",
                    "\r",
                    "return result ;"
                ]
            },
            "designerId": "a0f66a81-e854-4fce-b841-578782290270"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "updateVdrDiscount",
                "implHandler": [
                    "\r",
                    "if(! this.validateVdrDiscountPolicy()){\r",
                    "\r",
                    "    Ext.Msg.alert(\"Error\",\"All fields are mandatory.\");\r",
                    "    return ;\r",
                    "}\r",
                    "\r",
                    "\r",
                    "var dataToUpdate = {\r",
                    "\r",
                    "    vendor_pricing_vdr_discount:[]\r",
                    "};\r",
                    "\r",
                    "\r",
                    "var form = Ext.ComponentQuery.query('#ecomVdrPricingVdrDiscountSetUpPanel')[0] ;\r",
                    "\r",
                    "var fieldStore = form.down('#ecomdiscountPolicySlct').getStore() ;\r",
                    "\r",
                    "\r",
                    "var range = parseFloat(form.down('#range').getValue()) ;\r",
                    "\r",
                    "var start =  parseFloat(form.down('#start').getValue()) ;\r",
                    "var increment =  parseFloat(form.down('#increment').getValue()) ;\r",
                    "\r",
                    "\r",
                    "var policyText = form.down('#discountPolicySlctTxt').getValue() ;\r",
                    "\r",
                    "var isAddNew = form.down('#addUpdate').getText() == \"Add\" ;\r",
                    "\r",
                    "var options = RMdatalink.util.globalMethods.getArrayDataFromStore(fieldStore) ;\r",
                    "\r",
                    "var curOptVal =  form.down('#ecomdiscountPolicySlct').getValue();\r",
                    "\r",
                    "if(!options || options.length === 0 ){\r",
                    "\r",
                    "\r",
                    "    options = [] ;\r",
                    "}\r",
                    "\r",
                    "\r",
                    "var tempRec = {\r",
                    "\r",
                    "        text :policyText,\r",
                    "        value: policyText,\r",
                    "        policy:getPolicyArray(),\r",
                    "        range:range,\r",
                    "        disc_start:start,\r",
                    "        disc_increment:increment\r",
                    "\r",
                    "    };\r",
                    "\r",
                    "if(isAddNew){\r",
                    "    options.push(tempRec);\r",
                    "\r",
                    "    fieldStore.add(tempRec);\r",
                    "}else{\r",
                    "\r",
                    "    var opIndex = 0 ;\r",
                    "    while(opIndex < options.length && curOptVal !== options[opIndex].value){\r",
                    "        opIndex++;\r",
                    "    }\r",
                    "\r",
                    "    if(opIndex == options.length){\r",
                    "        opIndex--;\r",
                    "    }\r",
                    "\r",
                    "     options[opIndex]= tempRec ;\r",
                    "\r",
                    "    fieldStore.getAt(opIndex).set(tempRec) ;\r",
                    "\r",
                    "\r",
                    "}\r",
                    "//  Ext.ComponentQuery.query('#productDatalinkMainPanel')[0].setMasked( {\r",
                    "//                 xtype: 'loadmask'\r",
                    "//             });\r",
                    "var store = Ext.getStore('pricing.MainStore') ;\r",
                    "\r",
                    "dataToUpdate.vendor_pricing_vdr_discount = options ;\r",
                    "\r",
                    "var _id = RMdatalink.app.getController('BillingDetailsController').config.pricingData[2]._id ;\r",
                    "\r",
                    "this.updatePricingStore(_id,'vendor_pricing_vdr_discount',dataToUpdate.vendor_pricing_vdr_discount );\r",
                    "\r",
                    " RMdatalink.iwa.rdl.doUpdateCollection(store, dataToUpdate , _id, success, error);\r",
                    "\r",
                    "if(isAddNew){\r",
                    "\r",
                    "    this.clearVdrDisc();\r",
                    "}\r",
                    "\r",
                    "function success(){\r",
                    "    Ext.Viewport.setMasked(false);\r",
                    "\r",
                    "\r",
                    "\r",
                    "}\r",
                    "\r",
                    "function error(){\r",
                    "    Ext.Viewport.setMasked(false);\r",
                    "    alert(\"priceing update error\");\r",
                    "}\r",
                    "\r",
                    "\r",
                    "function getPolicyArray(){\r",
                    "\r",
                    "    var policy = [] ;\r",
                    "    var from = 0 ;\r",
                    "    var maxRange = 100 ;\r",
                    "\r",
                    "    var dStart = start ;\r",
                    "\r",
                    "    var to = from + range ;\r",
                    "\r",
                    "    while(to <= maxRange)\r",
                    "    {\r",
                    "        policy.push({\r",
                    "\r",
                    "            from:from,\r",
                    "            to:to ,\r",
                    "            disc:dStart\r",
                    "\r",
                    "        });\r",
                    "\r",
                    "        from = to + 1 ;\r",
                    "        to = to + range ;\r",
                    "        dStart += increment ;\r",
                    "\r",
                    "\r",
                    "\r",
                    "    }\r",
                    "\r",
                    "    if(to > maxRange && from < maxRange )\r",
                    "    {\r",
                    "     to = maxRange ;\r",
                    "\r",
                    "     policy.push({\r",
                    "\r",
                    "            from:from,\r",
                    "            to:to ,\r",
                    "            disc:dStart\r",
                    "\r",
                    "        });\r",
                    "    }\r",
                    "\r",
                    "\r",
                    "\r",
                    "    return policy ;\r",
                    "\r",
                    "\r",
                    "}"
                ]
            },
            "designerId": "e374583b-55e2-47d7-9165-62eb3794a200"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "deleteVdrDisc",
                "implHandler": [
                    "\r",
                    "var form = Ext.ComponentQuery.query('#ecomVdrPricingVdrDiscountSetUpPanel')[0] ;\r",
                    "\r",
                    "var fieldStore = form.down('#ecomdiscountPolicySlct').getStore() ;\r",
                    "var options = RMdatalink.util.globalMethods.getArrayDataFromStore(fieldStore) ;\r",
                    "var curOptVal =  form.down('#ecomdiscountPolicySlct').getValue();\r",
                    "\r",
                    "if(!curOptVal || curOptVal == \"\"){\r",
                    "\r",
                    "    return ;\r",
                    "}\r",
                    "    var opIndex = 0 ;\r",
                    "    while(opIndex < options.length && curOptVal !== options[opIndex].value){\r",
                    "        opIndex++;\r",
                    "    }\r",
                    "\r",
                    "    if(opIndex == options.length){\r",
                    "        opIndex--;\r",
                    "    }\r",
                    "\r",
                    "fieldStore.removeAt(opIndex);\r",
                    "\r",
                    "options = RMdatalink.util.globalMethods.getArrayDataFromStore(fieldStore) ;\r",
                    "var dataToUpdate = {\r",
                    "\r",
                    "    vendor_pricing_vdr_discount:[]\r",
                    "};\r",
                    "\r",
                    "var store = Ext.getStore('pricing.MainStore') ;\r",
                    "\r",
                    "dataToUpdate.vendor_pricing_vdr_discount = options ;\r",
                    "\r",
                    "var _id = RMdatalink.app.getController('BillingDetailsController').config.pricingData[2]._id ;\r",
                    "this.updatePricingStore(_id,'vendor_pricing_vdr_discount',dataToUpdate.vendor_pricing_vdr_discount );\r",
                    " RMdatalink.iwa.rdl.doUpdateCollection(store, dataToUpdate , _id, success, error);\r",
                    "\r",
                    "\r",
                    "this.clearVdrDisc();\r",
                    "\r",
                    "\r",
                    "function success(){\r",
                    "    Ext.Viewport.setMasked(false);\r",
                    "\r",
                    "\r",
                    "\r",
                    "}\r",
                    "\r",
                    "function error(){\r",
                    "    Ext.Viewport.setMasked(false);\r",
                    "    alert(\"priceing update error\");\r",
                    "}"
                ]
            },
            "designerId": "9b25c2ea-30b8-44c8-83d2-c4613d5527f4"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "clearVdrDisc",
                "implHandler": [
                    "\r",
                    "var form = Ext.ComponentQuery.query('#ecomVdrPricingVdrDiscountSetUpPanel')[0] ;\r",
                    "\r",
                    "\r",
                    "form.down('#range').setValue(\"\") ;\r",
                    "\r",
                    "form.down('#start').setValue(\"\") ;\r",
                    "form.down('#increment').setValue(\"\") ;\r",
                    "\r",
                    "\r",
                    "form.down('#discountPolicySlctTxt').setValue(\"\") ;\r",
                    "\r",
                    "form.down('#addUpdate').setText(\"Add\");\r",
                    "\r",
                    "form.down('#ecomdiscountPolicySlct').reset();\r",
                    "//form.down('#discountPolicySlct').setValue(null);"
                ]
            },
            "designerId": "031bff93-37a2-4798-8f72-29be881d3e88"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "validateSkuDiscPolicy",
                "implHandler": [
                    "var form = Ext.ComponentQuery.query('#ecomVdrPricingSKUDiscountSetUpPanel')[0] ;\r",
                    "\r",
                    "\r",
                    "\r",
                    "var result =true ;\r",
                    "\r",
                    "var temp = null ;\r",
                    "\r",
                    "\r",
                    "\r",
                    "temp = form.down('#discountPolicySlctTxt').getValue() ;\r",
                    "if(!temp || temp === \"\"){\r",
                    "\r",
                    "    result = false ;\r",
                    "}\r",
                    "\r",
                    "temp = form.down('#range').getValue() ;\r",
                    "if(!temp || temp === \"\"){\r",
                    "\r",
                    "    result = false ;\r",
                    "}\r",
                    "\r",
                    "temp = form.down('#start').getValue() ;\r",
                    "if(!temp || temp === \"\"){\r",
                    "\r",
                    "    result = false ;\r",
                    "}\r",
                    "\r",
                    "\r",
                    "temp = form.down('#increment').getValue() ;\r",
                    "if(!temp || temp === \"\"){\r",
                    "\r",
                    "    result = false ;\r",
                    "}\r",
                    "\r",
                    "return result ;"
                ]
            },
            "designerId": "5ce1c39a-9ee8-4f67-b79a-4176a5fb1262"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "updateSKUDisc",
                "implHandler": [
                    "\r",
                    "if(! this.validateSkuDiscPolicy()){\r",
                    "\r",
                    "    Ext.Msg.alert(\"Error\",\"All fields are mandatory.\");\r",
                    "    return ;\r",
                    "}\r",
                    "\r",
                    "\r",
                    "var dataToUpdate = {\r",
                    "\r",
                    "    vendor_pricing_sku_discount:[]\r",
                    "};\r",
                    "\r",
                    "\r",
                    "var form = Ext.ComponentQuery.query('#ecomVdrPricingSKUDiscountSetUpPanel')[0] ;\r",
                    "\r",
                    "var fieldStore = form.down('#ecomSKUdiscountPolicySlct').getStore() ;\r",
                    "\r",
                    "\r",
                    "var range = parseFloat(form.down('#range').getValue()) ;\r",
                    "\r",
                    "var start =  parseFloat(form.down('#start').getValue()) ;\r",
                    "var increment =  parseFloat(form.down('#increment').getValue()) ;\r",
                    "\r",
                    "\r",
                    "var policyText = form.down('#discountPolicySlctTxt').getValue() ;\r",
                    "\r",
                    "var isAddNew = form.down('#addUpdate').getText() == \"Add\" ;\r",
                    "\r",
                    "var options = RMdatalink.util.globalMethods.getArrayDataFromStore(fieldStore) ;\r",
                    "\r",
                    "var curOptVal =  form.down('#ecomSKUdiscountPolicySlct').getValue();\r",
                    "\r",
                    "if(!options || options.length === 0 ){\r",
                    "\r",
                    "\r",
                    "    options = [] ;\r",
                    "}\r",
                    "\r",
                    "\r",
                    "var tempRec = {\r",
                    "\r",
                    "        text :policyText,\r",
                    "        value: policyText,\r",
                    "        policy:getPolicyArray(),\r",
                    "        range:range,\r",
                    "        disc_start:start,\r",
                    "        disc_increment:increment\r",
                    "\r",
                    "    };\r",
                    "\r",
                    "if(isAddNew){\r",
                    "    options.push(tempRec);\r",
                    "\r",
                    "    fieldStore.add(tempRec);\r",
                    "}else{\r",
                    "\r",
                    "    var opIndex = 0 ;\r",
                    "    while(opIndex < options.length && curOptVal !== options[opIndex].value){\r",
                    "        opIndex++;\r",
                    "    }\r",
                    "\r",
                    "    if(opIndex == options.length){\r",
                    "        opIndex--;\r",
                    "    }\r",
                    "\r",
                    "     options[opIndex]= tempRec ;\r",
                    "\r",
                    "    fieldStore.getAt(opIndex).set(tempRec) ;\r",
                    "\r",
                    "\r",
                    "}\r",
                    "//  Ext.ComponentQuery.query('#productDatalinkMainPanel')[0].setMasked( {\r",
                    "//                 xtype: 'loadmask'\r",
                    "//             });\r",
                    "var store = Ext.getStore('pricing.MainStore') ;\r",
                    "\r",
                    "dataToUpdate.vendor_pricing_sku_discount = options ;\r",
                    "\r",
                    "var _id = RMdatalink.app.getController('BillingDetailsController').config.pricingData[2]._id ;\r",
                    "\r",
                    "this.updatePricingStore(_id,'vendor_pricing_sku_discount',dataToUpdate.vendor_pricing_sku_discount );\r",
                    "\r",
                    " RMdatalink.iwa.rdl.doUpdateCollection(store, dataToUpdate , _id, success, error);\r",
                    "\r",
                    "if(isAddNew){\r",
                    "\r",
                    "    this.clearSKUDisc();\r",
                    "}\r",
                    "\r",
                    "function success(){\r",
                    "    Ext.Viewport.setMasked(false);\r",
                    "\r",
                    "\r",
                    "\r",
                    "}\r",
                    "\r",
                    "function error(){\r",
                    "    Ext.Viewport.setMasked(false);\r",
                    "    alert(\"priceing update error\");\r",
                    "}\r",
                    "\r",
                    "\r",
                    "function getPolicyArray(){\r",
                    "\r",
                    "    var policy = [] ;\r",
                    "    var from = 0 ;\r",
                    "    var maxRange = 10000 ;\r",
                    "\r",
                    "    var dStart = start ;\r",
                    "\r",
                    "    var to = from + range ;\r",
                    "\r",
                    "    while(to <= maxRange)\r",
                    "    {\r",
                    "        policy.push({\r",
                    "\r",
                    "            from:from,\r",
                    "            to:to ,\r",
                    "            disc:dStart\r",
                    "\r",
                    "        });\r",
                    "\r",
                    "        from = to + 1 ;\r",
                    "        to = to + range ;\r",
                    "        dStart += increment ;\r",
                    "\r",
                    "\r",
                    "\r",
                    "    }\r",
                    "\r",
                    "    if(to > maxRange && from < maxRange )\r",
                    "    {\r",
                    "     to = maxRange ;\r",
                    "\r",
                    "     policy.push({\r",
                    "\r",
                    "            from:from,\r",
                    "            to:to ,\r",
                    "            disc:dStart\r",
                    "\r",
                    "        });\r",
                    "    }\r",
                    "\r",
                    "\r",
                    "\r",
                    "    return policy ;\r",
                    "\r",
                    "\r",
                    "}"
                ]
            },
            "designerId": "1b492ffb-b397-431b-b155-051633f17f4f"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "deleteSkuDisc",
                "implHandler": [
                    "\r",
                    "var form = Ext.ComponentQuery.query('#ecomVdrPricingSKUDiscountSetUpPanel')[0] ;\r",
                    "\r",
                    "var fieldStore = form.down('#ecomSKUdiscountPolicySlct').getStore() ;\r",
                    "var options = RMdatalink.util.globalMethods.getArrayDataFromStore(fieldStore) ;\r",
                    "var curOptVal =  form.down('#ecomSKUdiscountPolicySlct').getValue();\r",
                    "\r",
                    "if(!curOptVal || curOptVal == \"\"){\r",
                    "\r",
                    "    return ;\r",
                    "}\r",
                    "    var opIndex = 0 ;\r",
                    "    while(opIndex < options.length && curOptVal !== options[opIndex].value){\r",
                    "        opIndex++;\r",
                    "    }\r",
                    "\r",
                    "    if(opIndex == options.length){\r",
                    "        opIndex--;\r",
                    "    }\r",
                    "\r",
                    "fieldStore.removeAt(opIndex);\r",
                    "\r",
                    "options = RMdatalink.util.globalMethods.getArrayDataFromStore(fieldStore) ;\r",
                    "var dataToUpdate = {\r",
                    "\r",
                    "    vendor_pricing_sku_discount:[]\r",
                    "};\r",
                    "\r",
                    "var store = Ext.getStore('pricing.MainStore') ;\r",
                    "\r",
                    "dataToUpdate.vendor_pricing_sku_discount = options ;\r",
                    "\r",
                    "var _id = RMdatalink.app.getController('BillingDetailsController').config.pricingData[2]._id ;\r",
                    "this.updatePricingStore(_id,'vendor_pricing_sku_discount',dataToUpdate.vendor_pricing_sku_discount );\r",
                    " RMdatalink.iwa.rdl.doUpdateCollection(store, dataToUpdate , _id, success, error);\r",
                    "\r",
                    "\r",
                    "this.clearSKUDisc();\r",
                    "\r",
                    "\r",
                    "function success(){\r",
                    "    Ext.Viewport.setMasked(false);\r",
                    "\r",
                    "\r",
                    "\r",
                    "}\r",
                    "\r",
                    "function error(){\r",
                    "    Ext.Viewport.setMasked(false);\r",
                    "    alert(\"priceing update error\");\r",
                    "}"
                ]
            },
            "designerId": "56de2acf-4ac5-4fa3-a5d1-0db39af1fcc0"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "clearSKUDisc",
                "implHandler": [
                    "\r",
                    "var form = Ext.ComponentQuery.query('#ecomVdrPricingSKUDiscountSetUpPanel')[0] ;\r",
                    "\r",
                    "\r",
                    "form.down('#range').setValue(\"\") ;\r",
                    "\r",
                    "form.down('#start').setValue(\"\") ;\r",
                    "form.down('#increment').setValue(\"\") ;\r",
                    "\r",
                    "\r",
                    "form.down('#discountPolicySlctTxt').setValue(\"\") ;\r",
                    "\r",
                    "form.down('#addUpdate').setText(\"Add\");\r",
                    "\r",
                    "form.down('#ecomSKUdiscountPolicySlct').reset();\r",
                    "//form.down('#discountPolicySlct').setValue(null);"
                ]
            },
            "designerId": "39bd6188-121c-466f-8de4-5aa30ae05e9b"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "updateTimeTakenFlds",
                "implHandler": [
                    "\r",
                    "\r",
                    "var form = Ext.ComponentQuery.query('#ecomVdrPricingTimeTknToUploadPanel')[0] ;\r",
                    "\r",
                    "\r",
                    "var dataToUpdate = {\r",
                    "    time_taken_images: form.down('#vdrTimeTknSkuImagsFld').getValue() ,\r",
                    "    time_taken_images_addl_images: form.down('#vdrTimeTknSkuImagsAddlImgsFld').getValue()\r",
                    "};\r",
                    "\r",
                    "\r",
                    "\r",
                    "var store = Ext.getStore('pricing.MainStore') ;\r",
                    "\r",
                    "var _id = RMdatalink.app.getController('BillingDetailsController').config.pricingData[2]._id ;\r",
                    "\r",
                    "this.updatePricingStore(_id,'time_taken_images',dataToUpdate.time_taken_images );\r",
                    "this.updatePricingStore(_id,'time_taken_images_addl_images',dataToUpdate.time_taken_images_addl_images );\r",
                    "\r",
                    " RMdatalink.iwa.rdl.doUpdateCollection(store, dataToUpdate , _id, success, error);\r",
                    "\r",
                    "var dlList = Ext.ComponentQuery.query('#ecomListItemID')[0].down('#pricingList') ;\r",
                    "dlList.refresh();\r",
                    "\r",
                    "function success(){\r",
                    "    Ext.Viewport.setMasked(false);\r",
                    "\r",
                    "\r",
                    "\r",
                    "}\r",
                    "\r",
                    "function error(){\r",
                    "    Ext.Viewport.setMasked(false);\r",
                    "    alert(\"priceing update error\");\r",
                    "}\r",
                    ""
                ]
            },
            "designerId": "0afd1cb7-0f5b-4d68-9ffc-3a39926e15b0"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "selectfield[itemId=ecomDiscountPolicyVendorsIncrementSelectFld]",
                "designer|targetType": "Ext.field.Select",
                "fn": "onecomDiscountPolicyVendorsIncrementSelectFldChange",
                "implHandler": [
                    "if(!newValue){\r",
                    "\r",
                    "    return ;\r",
                    "}\r",
                    "\r",
                    "console.log(newValue) ;\r",
                    "var slStr = Ext.getStore('ecomVdPricingVdrDiscount') ;\r",
                    "\r",
                    "var dIndex = slStr.findExact('value',newValue) ;\r",
                    "var data = slStr.getData().all[dIndex].data.policy ;\r",
                    "\r",
                    " var list =   Ext.ComponentQuery.query('#ecompricingPolicy2ndList')[0].down(\"#mainList\");\r",
                    " RMdatalink.util.globalMethods.fillListDataByListObject(list,data);\r",
                    "\r",
                    "var rec = slStr.getData().all[dIndex].data ;\r",
                    "\r",
                    "//this.updateVdrAsPolicyChange(rec);\r",
                    "  RMdatalink.app.getController('BillingDetailsController').loadVendorTotalCountDataForEcommerce();\r",
                    "\r",
                    "return ;\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "console.log(newValue) ;\r",
                    "\r",
                    "if(this.config.doNotSaveStoreData){\r",
                    "    return ;\r",
                    "}\r",
                    "\r",
                    "\r",
                    "if(! newValue){\r",
                    "\r",
                    "    return ;\r",
                    "}\r",
                    "\r",
                    "/*\r",
                    "discount_level: \"5\"\r",
                    "id: 1\r",
                    "of_vendors: \"5\"\r",
                    "*/\r",
                    "\r",
                    "/*\r",
                    "\r",
                    "       \"id\": 1,\r",
                    "            \"product_name\": \"Datalink\",\r",
                    "            \"active_pricing_policy\":\"500\",\r",
                    "            \"active_discount_policy\":\"5\",\r",
                    "            \"discount_policy\": [\r",
                    "                       {\r",
                    "                            \"text\":\"Discount Policy1\",\r",
                    "                            \"value\":\"5\",\r",
                    "                            \"data\":[\r",
                    "                                   ]\r",
                    "                       },\r",
                    "\r",
                    "*/\r",
                    "\r",
                    "////////////////////////\r",
                    "\r",
                    "var discountStore =  Ext.ComponentQuery.query('#pricingPolicy2ndList')[0].down(\"#mainList\").getStore() ;\r",
                    "var recordIndex = 0 ;\r",
                    "\r",
                    "\r",
                    "switch(discountStore.getStoreId()){\r",
                    "\r",
                    "          case 'pricing.datalink_discount':\r",
                    "\r",
                    "                        recordIndex = 0 ;\r",
                    "\r",
                    "          break;\r",
                    "           case 'pricing.ecatlog_discount':\r",
                    "\r",
                    "                        recordIndex = 1 ;\r",
                    "\r",
                    "          break;\r",
                    "           case 'pricing.smart_cart_discount':\r",
                    "\r",
                    "                        recordIndex = 2 ;\r",
                    "\r",
                    "          break;\r",
                    "\r",
                    "}\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "this.config.pricingData[recordIndex].active_discount_policy = newValue ;\r",
                    "var isRecordFoundFornewValue = false ;\r",
                    "var discountPolicyOldRecords = new Array() ;\r",
                    "\r",
                    "for(var k =0; k< this.config.pricingData[recordIndex].discount_policy.length; k++){\r",
                    "\r",
                    "    if(this.config.pricingData[recordIndex].discount_policy[k].value == oldValue && !this.config.doNotSaveStoreData ){\r",
                    "        console.log(\"SAVE\");\r",
                    "        this.config.pricingData[recordIndex].discount_policy[k].data =  getArrayDataFromStore(discountStore );\r",
                    "    }\r",
                    " //fillStore\r",
                    "    if(this.config.pricingData[recordIndex].discount_policy[k].value == newValue && this.config.pricingData[recordIndex].discount_policy[k].data.length >  2 ){\r",
                    "     discountPolicyOldRecords = this.config.pricingData[recordIndex].discount_policy[k].data ;\r",
                    "       isRecordFoundFornewValue =true ;\r",
                    "    }\r",
                    "\r",
                    "\r",
                    "}\r",
                    "\r",
                    "if(isRecordFoundFornewValue)\r",
                    "{\r",
                    "     fillStore(discountStore,discountPolicyOldRecords);\r",
                    "     isRecordFoundFornewValue = false ;\r",
                    "     return ;\r",
                    "}\r",
                    "////////////////////////////////////////\r",
                    "\r",
                    "\r",
                    "var newData = new Array() ;\r",
                    "var maxOfVendors = 80 ;\r",
                    "var minOfVendors = 0 ;\r",
                    "var increment = newValue ;\r",
                    "\r",
                    "var from = minOfVendors ;\r",
                    "\r",
                    "while(from  < maxOfVendors){\r",
                    "\r",
                    "    newData.push(\r",
                    "        {\r",
                    "                    \"of_vendors\":  from,\r",
                    "                    \"discount_level\": \"0\"\r",
                    "        }\r",
                    "    );\r",
                    "\r",
                    "    from = from + increment ;\r",
                    "\r",
                    "}\r",
                    "\r",
                    " from = maxOfVendors ;\r",
                    "\r",
                    "      newData.push(\r",
                    "            {\r",
                    "                        \"of_vendors\":  from,\r",
                    "                        \"discount_level\": \"0\"\r",
                    "            }\r",
                    "        );\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "discountStore.removeAll();\r",
                    "discountStore.sync();\r",
                    "\r",
                    "discountStore.setData(newData);\r",
                    "discountStore.sync() ;\r",
                    "\r",
                    "\r",
                    "\r",
                    "function getArrayDataFromStore(store){\r",
                    "\r",
                    "    var data = new Array();\r",
                    "    data = store.getData().all;\r",
                    "\r",
                    "    var dataToReturn = new Array();\r",
                    "\r",
                    "    for(var i=0; i < data.length ; i++){\r",
                    "\r",
                    "        dataToReturn.push(data[i].data);\r",
                    "    }\r",
                    "\r",
                    "    return dataToReturn ;\r",
                    " }\r",
                    "\r",
                    "\r",
                    "\r",
                    "function fillStore(store,data){\r",
                    "    store.removeAll();\r",
                    "    store.sync() ;\r",
                    "\r",
                    "\r",
                    "    store.setData(data) ;\r",
                    "    store.sync();\r",
                    "}\r",
                    ""
                ],
                "name": "change"
            },
            "designerId": "569b693c-0d87-4a66-9473-a8c6437db010"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "selectfield[itemId=ecomDiscountPolicySKUIncrementSelectFld]",
                "designer|targetType": "Ext.field.Select",
                "fn": "onecomDiscountPolicySKUIncrementSelectFldChange",
                "implHandler": [
                    "if(!newValue){\r",
                    "\r",
                    "    return ;\r",
                    "}\r",
                    "\r",
                    "console.log(newValue) ;\r",
                    "var slStr = Ext.getStore('ecomVdPricingSKUDiscount') ;\r",
                    "\r",
                    "var dIndex = slStr.findExact('value',newValue) ;\r",
                    "var data = slStr.getData().all[dIndex].data.policy ;\r",
                    "\r",
                    " var list =   Ext.ComponentQuery.query('#ecompricingPolicySKUDiscountList')[0].down(\"#mainList\");\r",
                    " RMdatalink.util.globalMethods.fillListDataByListObject(list,data);\r",
                    "\r",
                    "var rec = slStr.getData().all[dIndex].data ;\r",
                    "\r",
                    "//this.updateVdrAsPolicyChange(rec);\r",
                    "\r",
                    "  RMdatalink.app.getController('BillingDetailsController').loadVendorTotalCountDataForEcommerce();\r",
                    "return ;\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "console.log(newValue) ;\r",
                    "\r",
                    "if(this.config.doNotSaveStoreData){\r",
                    "    return ;\r",
                    "}\r",
                    "\r",
                    "\r",
                    "if(! newValue){\r",
                    "\r",
                    "    return ;\r",
                    "}\r",
                    "\r",
                    "/*\r",
                    "discount_level: \"5\"\r",
                    "id: 1\r",
                    "of_vendors: \"5\"\r",
                    "*/\r",
                    "\r",
                    "/*\r",
                    "\r",
                    "       \"id\": 1,\r",
                    "            \"product_name\": \"Datalink\",\r",
                    "            \"active_pricing_policy\":\"500\",\r",
                    "            \"active_discount_policy\":\"5\",\r",
                    "            \"discount_policy\": [\r",
                    "                       {\r",
                    "                            \"text\":\"Discount Policy1\",\r",
                    "                            \"value\":\"5\",\r",
                    "                            \"data\":[\r",
                    "                                   ]\r",
                    "                       },\r",
                    "\r",
                    "*/\r",
                    "\r",
                    "////////////////////////\r",
                    "\r",
                    "var discountStore =  Ext.ComponentQuery.query('#pricingPolicy2ndList')[0].down(\"#mainList\").getStore() ;\r",
                    "var recordIndex = 0 ;\r",
                    "\r",
                    "\r",
                    "switch(discountStore.getStoreId()){\r",
                    "\r",
                    "          case 'pricing.datalink_discount':\r",
                    "\r",
                    "                        recordIndex = 0 ;\r",
                    "\r",
                    "          break;\r",
                    "           case 'pricing.ecatlog_discount':\r",
                    "\r",
                    "                        recordIndex = 1 ;\r",
                    "\r",
                    "          break;\r",
                    "           case 'pricing.smart_cart_discount':\r",
                    "\r",
                    "                        recordIndex = 2 ;\r",
                    "\r",
                    "          break;\r",
                    "\r",
                    "}\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "this.config.pricingData[recordIndex].active_discount_policy = newValue ;\r",
                    "var isRecordFoundFornewValue = false ;\r",
                    "var discountPolicyOldRecords = new Array() ;\r",
                    "\r",
                    "for(var k =0; k< this.config.pricingData[recordIndex].discount_policy.length; k++){\r",
                    "\r",
                    "    if(this.config.pricingData[recordIndex].discount_policy[k].value == oldValue && !this.config.doNotSaveStoreData ){\r",
                    "        console.log(\"SAVE\");\r",
                    "        this.config.pricingData[recordIndex].discount_policy[k].data =  getArrayDataFromStore(discountStore );\r",
                    "    }\r",
                    " //fillStore\r",
                    "    if(this.config.pricingData[recordIndex].discount_policy[k].value == newValue && this.config.pricingData[recordIndex].discount_policy[k].data.length >  2 ){\r",
                    "     discountPolicyOldRecords = this.config.pricingData[recordIndex].discount_policy[k].data ;\r",
                    "       isRecordFoundFornewValue =true ;\r",
                    "    }\r",
                    "\r",
                    "\r",
                    "}\r",
                    "\r",
                    "if(isRecordFoundFornewValue)\r",
                    "{\r",
                    "     fillStore(discountStore,discountPolicyOldRecords);\r",
                    "     isRecordFoundFornewValue = false ;\r",
                    "     return ;\r",
                    "}\r",
                    "////////////////////////////////////////\r",
                    "\r",
                    "\r",
                    "var newData = new Array() ;\r",
                    "var maxOfVendors = 80 ;\r",
                    "var minOfVendors = 0 ;\r",
                    "var increment = newValue ;\r",
                    "\r",
                    "var from = minOfVendors ;\r",
                    "\r",
                    "while(from  < maxOfVendors){\r",
                    "\r",
                    "    newData.push(\r",
                    "        {\r",
                    "                    \"of_vendors\":  from,\r",
                    "                    \"discount_level\": \"0\"\r",
                    "        }\r",
                    "    );\r",
                    "\r",
                    "    from = from + increment ;\r",
                    "\r",
                    "}\r",
                    "\r",
                    " from = maxOfVendors ;\r",
                    "\r",
                    "      newData.push(\r",
                    "            {\r",
                    "                        \"of_vendors\":  from,\r",
                    "                        \"discount_level\": \"0\"\r",
                    "            }\r",
                    "        );\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "discountStore.removeAll();\r",
                    "discountStore.sync();\r",
                    "\r",
                    "discountStore.setData(newData);\r",
                    "discountStore.sync() ;\r",
                    "\r",
                    "\r",
                    "\r",
                    "function getArrayDataFromStore(store){\r",
                    "\r",
                    "    var data = new Array();\r",
                    "    data = store.getData().all;\r",
                    "\r",
                    "    var dataToReturn = new Array();\r",
                    "\r",
                    "    for(var i=0; i < data.length ; i++){\r",
                    "\r",
                    "        dataToReturn.push(data[i].data);\r",
                    "    }\r",
                    "\r",
                    "    return dataToReturn ;\r",
                    " }\r",
                    "\r",
                    "\r",
                    "\r",
                    "function fillStore(store,data){\r",
                    "    store.removeAll();\r",
                    "    store.sync() ;\r",
                    "\r",
                    "\r",
                    "    store.setData(data) ;\r",
                    "    store.sync();\r",
                    "}\r",
                    ""
                ],
                "name": "change"
            },
            "designerId": "d332d03a-68e0-4706-8a97-ed59b7260744"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "selectfield[itemId=ecompricingPolicySkuAddlImgsIncrementSelectFld]",
                "designer|targetType": "Ext.field.Select",
                "fn": "onSkuAddlImagesPolicySelectfieldChange",
                "implHandler": [
                    "if(!newValue){\r",
                    "\r",
                    "    return ;\r",
                    "}\r",
                    "\r",
                    "\r",
                    "console.log(newValue) ;\r",
                    "var that =this ;\r",
                    "var slStr = Ext.getStore('ecomVdPricingSkuImgsAddlImages') ;\r",
                    "\r",
                    "var dIndex = slStr.findExact('value',newValue) ;\r",
                    "var data = slStr.getData().all[dIndex].data.policy ;\r",
                    "\r",
                    " var list =   Ext.ComponentQuery.query('#ecompricingPolicySkuImgsAddImgsListPnl')[0].down(\"#mainList\");\r",
                    " RMdatalink.util.globalMethods.fillListDataByListObject(list,data);\r",
                    "\r",
                    "var rec = slStr.getData().all[dIndex].data ;\r",
                    "\r",
                    "\r",
                    "RMdatalink.app.getController('BillingDetailsController').updateVdrsAsAddlImgPolicyChange(rec);\r",
                    "\r",
                    "this.setDefaultTpl() ;\r",
                    "\r",
                    "var timeout = setTimeout(function(){\r",
                    "\r",
                    "                      var vndStr = Ext.getStore('vendors.Master') ;\r",
                    "                        vndStr.clearFilter();\r",
                    "\r",
                    "                        that.loadVendorTotalCountData() ;\r",
                    "\r",
                    "                        var dlList = Ext.ComponentQuery.query('#ecomListItemID')[0].down('#pricingList') ;\r",
                    "                        dlList.refresh();\r",
                    "                        clearTimeout(timeout);\r",
                    "                          RMdatalink.app.getController('BillingDetailsController').loadVendorTotalCountDataForEcommerce();\r",
                    "                    },100);"
                ],
                "name": "change"
            },
            "designerId": "0f46bc17-09d1-4eba-a5c7-ac8fb9354227"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "validateDlProductBundle",
                "implHandler": [
                    "var form = Ext.ComponentQuery.query('#ecomProductSetupSideP1')[0] ;\r",
                    "\r",
                    "\r",
                    "\r",
                    "var result =true ;\r",
                    "\r",
                    "var temp = null ;\r",
                    "\r",
                    "\r",
                    "\r",
                    "temp = form.down('#ecomPoductBundeleTextFld').getValue() ;\r",
                    "if(!temp || temp === \"\"){\r",
                    "\r",
                    "    result = false ;\r",
                    "}\r",
                    "\r",
                    "temp = form.down('#ecomPoductBundelePriceTextFld').getValue() ;\r",
                    "if(!temp || temp === \"\"){\r",
                    "\r",
                    "    result = false ;\r",
                    "}\r",
                    "\r",
                    "return result ;"
                ]
            },
            "designerId": "363130f6-f0f2-41da-9b35-83681b241898"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "updateProductBundle",
                "implHandler": [
                    "\r",
                    "if(! this.validateDlProductBundle()){\r",
                    "\r",
                    "    Ext.Msg.alert(\"Error\",\"All fields are mandatory.\");\r",
                    "    return ;\r",
                    "}\r",
                    "\r",
                    "\r",
                    "var dataToUpdate = {\r",
                    "\r",
                    "    datalink_bundle:[]\r",
                    "\r",
                    "};\r",
                    "\r",
                    "\r",
                    "var form = Ext.ComponentQuery.query('#ecomProductSetupSideP1')[0] ;\r",
                    "\r",
                    "var fieldStore = form.down('#ecomPoductBundeleSelectFld').getStore() ;\r",
                    "\r",
                    "\r",
                    "var policyText = form.down('#ecomPoductBundeleTextFld').getValue() ;\r",
                    "var price = form.down('#ecomPoductBundelePriceTextFld').getValue() ;\r",
                    "\r",
                    "\r",
                    "var isAddNew = form.down('#addUpdate').getText() == \"Add\" ;\r",
                    "\r",
                    "var options = RMdatalink.util.globalMethods.getArrayDataFromStore(fieldStore) ;\r",
                    "\r",
                    "var curOptVal =  form.down('#ecomPoductBundeleSelectFld').getValue();\r",
                    "\r",
                    "if(!options || options.length === 0 ){\r",
                    "\r",
                    "\r",
                    "    options = [] ;\r",
                    "}\r",
                    "\r",
                    "\r",
                    "var tempRec = {\r",
                    "\r",
                    "        text :policyText,\r",
                    "        value: policyText,\r",
                    "        products:getPolicyArray(),\r",
                    "        price:price\r",
                    "\r",
                    "    };\r",
                    "\r",
                    "\r",
                    "if(isAddNew){\r",
                    "    options.push(tempRec);\r",
                    "\r",
                    "    fieldStore.add(tempRec);\r",
                    "}else{\r",
                    "\r",
                    "    var opIndex = 0 ;\r",
                    "    while(opIndex < options.length && curOptVal !== options[opIndex].value){\r",
                    "        opIndex++;\r",
                    "    }\r",
                    "\r",
                    "    if(opIndex == options.length){\r",
                    "        opIndex--;\r",
                    "    }\r",
                    "\r",
                    "     options[opIndex]= tempRec ;\r",
                    "\r",
                    "     fieldStore.getAt(opIndex).set(tempRec) ;\r",
                    "\r",
                    "\r",
                    "}\r",
                    "//  Ext.ComponentQuery.query('#productDatalinkMainPanel')[0].setMasked( {\r",
                    "//                 xtype: 'loadmask'\r",
                    "//             });\r",
                    "var store = Ext.getStore('pricing.MainStore') ;\r",
                    "\r",
                    "dataToUpdate.datalink_bundle = options ;\r",
                    "\r",
                    "var _id = RMdatalink.app.getController('BillingDetailsController').config.pricingData[2]._id ;\r",
                    "\r",
                    "this.updatePricingStore(_id,'datalink_bundle',dataToUpdate.datalink_bundle );\r",
                    "\r",
                    " RMdatalink.iwa.rdl.doUpdateCollection(store, dataToUpdate , _id, success, error);\r",
                    "\r",
                    "if(isAddNew){\r",
                    "\r",
                    "    this.clearProductBundle();\r",
                    "}\r",
                    "\r",
                    "function success(){\r",
                    "    Ext.Viewport.setMasked(false);\r",
                    "\r",
                    "\r",
                    "\r",
                    "}\r",
                    "\r",
                    "function error(){\r",
                    "    Ext.Viewport.setMasked(false);\r",
                    "    alert(\"priceing update error\");\r",
                    "}\r",
                    "\r",
                    "\r",
                    "function getPolicyArray(){\r",
                    "\r",
                    "    var dlList = Ext.ComponentQuery.query('#ecomMainListContainer')[0].down('#mainList') ;\r",
                    "\r",
                    "    var selection = dlList.getSelection() ;\r",
                    "    var tArray = [] ;\r",
                    "\r",
                    "    for( var i =0 ; i < selection.length; i++ ){\r",
                    "\r",
                    "        tArray.push({\r",
                    "\r",
                    "            product_id:selection[i].data._id\r",
                    "\r",
                    "        });\r",
                    "\r",
                    "    }\r",
                    "\r",
                    "    return tArray;\r",
                    "\r",
                    "\r",
                    "}"
                ]
            },
            "designerId": "861ce4d3-e207-41f4-bf83-e83fe2f31c58"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "deleteProductBundle",
                "implHandler": [
                    "\r",
                    "var form = Ext.ComponentQuery.query('#ecomProductSetupSideP1')[0] ;\r",
                    "\r",
                    "var fieldStore = form.down('#ecomPoductBundeleSelectFld').getStore() ;\r",
                    "var options = RMdatalink.util.globalMethods.getArrayDataFromStore(fieldStore) ;\r",
                    "var curOptVal =  form.down('#ecomPoductBundeleSelectFld').getValue();\r",
                    "\r",
                    "if(!curOptVal || curOptVal == \"\"){\r",
                    "\r",
                    "    return ;\r",
                    "}\r",
                    "    var opIndex = 0 ;\r",
                    "    while(opIndex < options.length && curOptVal !== options[opIndex].value){\r",
                    "        opIndex++;\r",
                    "    }\r",
                    "\r",
                    "    if(opIndex == options.length){\r",
                    "        opIndex--;\r",
                    "    }\r",
                    "\r",
                    "fieldStore.removeAt(opIndex);\r",
                    "\r",
                    "options = RMdatalink.util.globalMethods.getArrayDataFromStore(fieldStore) ;\r",
                    "var dataToUpdate = {\r",
                    "\r",
                    "    datalink_bundle:[]\r",
                    "};\r",
                    "\r",
                    "var store = Ext.getStore('pricing.MainStore') ;\r",
                    "\r",
                    "dataToUpdate.datalink_bundle = options ;\r",
                    "\r",
                    "var _id = RMdatalink.app.getController('BillingDetailsController').config.pricingData[2]._id ;\r",
                    "this.updatePricingStore(_id,'datalink_bundle',dataToUpdate.datalink_bundle );\r",
                    " RMdatalink.iwa.rdl.doUpdateCollection(store, dataToUpdate , _id, success, error);\r",
                    "\r",
                    "\r",
                    "this.clearProductBundle();\r",
                    "\r",
                    "\r",
                    "function success(){\r",
                    "    Ext.Viewport.setMasked(false);\r",
                    "\r",
                    "\r",
                    "\r",
                    "}\r",
                    "\r",
                    "function error(){\r",
                    "    Ext.Viewport.setMasked(false);\r",
                    "    alert(\"priceing update error\");\r",
                    "}"
                ]
            },
            "designerId": "c8cdf088-1426-4dd7-9bd0-958f571ba011"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "clearProductBundle",
                "implHandler": [
                    "\r",
                    "var form = Ext.ComponentQuery.query('#ecomProductSetupSideP1')[0] ;\r",
                    "\r",
                    "\r",
                    "form.down('#ecomPoductBundeleTextFld').setValue(\"\") ;\r",
                    "\r",
                    "form.down('#ecomPoductBundelePriceTextFld').setValue(\"\") ;\r",
                    "\r",
                    "form.down('#addUpdate').setText(\"Add\");\r",
                    "\r",
                    "form.down('#ecomPoductBundeleSelectFld').reset();\r",
                    "//form.down('#discountPolicySlct').setValue(null);"
                ]
            },
            "designerId": "c14fb65d-71e7-4c27-9ba4-00123e0349b0"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "selectfield[itemId=ecompricingPolicySkuIncrementSelectFld]",
                "designer|targetType": "Ext.field.Select",
                "fn": "onecompricingPolicySkuIncrementSelectFldChange",
                "implHandler": [
                    "if(!newValue){\r",
                    "\r",
                    "    return ;\r",
                    "}\r",
                    "\r",
                    "\r",
                    "console.log(newValue) ;\r",
                    "var that =this ;\r",
                    "var slStr = Ext.getStore('ecomVdPricingSkuImgs') ;\r",
                    "\r",
                    "var dIndex = slStr.findExact('value',newValue) ;\r",
                    "var data = slStr.getData().all[dIndex].data.policy ;\r",
                    "\r",
                    " var list =   Ext.ComponentQuery.query('#ecompricingPolicy1stList')[0].down(\"#mainList\");\r",
                    " RMdatalink.util.globalMethods.fillListDataByListObject(list,data);\r",
                    "\r",
                    "var rec = slStr.getData().all[dIndex].data ;\r",
                    "\r",
                    "\r",
                    "RMdatalink.app.getController('BillingDetailsController').updateVdrAsPolicyChange(rec);\r",
                    "\r",
                    "this.setDefaultTpl() ;\r",
                    "\r",
                    "var timeout = setTimeout(function(){\r",
                    "\r",
                    "                      var vndStr = Ext.getStore('vendors.Master') ;\r",
                    "                        vndStr.clearFilter();\r",
                    "\r",
                    "                        that.loadVendorTotalCountData() ;\r",
                    "\r",
                    "                        var dlList = Ext.ComponentQuery.query('#ecomListItemID')[0].down('#pricingList') ;\r",
                    "                        dlList.refresh();\r",
                    "                        clearTimeout(timeout);\r",
                    "                        RMdatalink.app.getController('BillingDetailsController').loadVendorTotalCountDataForEcommerce();\r",
                    "                    },100);"
                ],
                "name": "change"
            },
            "designerId": "0b4147ff-890b-4f0a-9405-86e8a425cb59"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "selectfield[itemId=ecomPoductBundeleSelectFld]",
                "designer|targetType": "Ext.field.Select",
                "fn": "ondatalinkPoductBundeleSelectFldChange",
                "implHandler": [
                    "if(!newValue){\r",
                    "    return ;\r",
                    "}\r",
                    "\r",
                    "var form = Ext.ComponentQuery.query('#ecomProductSetupSideP1')[0] ;\r",
                    "\r",
                    "var store = selectfield.getStore() ;\r",
                    "\r",
                    "var data = null ;\r",
                    "var i = 0 ;\r",
                    "for(i=0 ; i < store.getData().all.length ; i++){\r",
                    "\r",
                    "    if(newValue == store.getData().all[i].data.value ){\r",
                    "        data = store.getData().all[i].data ;\r",
                    "        break ;\r",
                    "    }\r",
                    "}\r",
                    "\r",
                    "if(!data){\r",
                    "    data = store.getData().all[i-1].data ;\r",
                    "}\r",
                    "\r",
                    "form.down('#ecomPoductBundeleTextFld').setValue(data.text) ;\r",
                    "\r",
                    "form.down('#ecomPoductBundelePriceTextFld').setValue(data.price) ;\r",
                    "\r",
                    "form.down('#addUpdate').setText(\"Update\");\r",
                    "\r",
                    "\r",
                    "this.selectDlProducts(data.products) ;"
                ],
                "name": "change"
            },
            "designerId": "c661339a-9ba8-401c-8e0e-c3c318f971f8"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "selectfield[itemId=ecomVendorBundleSelectFld]",
                "designer|targetType": "Ext.field.Select",
                "fn": "ondlVendorBundleSelectFldChange",
                "implHandler": [
                    "if(!newValue){\r",
                    "    return ;\r",
                    "}\r",
                    "\r",
                    "var form = Ext.ComponentQuery.query('#ecomVendorBundleSetupPanel')[0] ;\r",
                    "\r",
                    "var store = selectfield.getStore() ;\r",
                    "\r",
                    "var data = null ;\r",
                    "var i = 0 ;\r",
                    "for(i=0 ; i < store.getData().all.length ; i++){\r",
                    "\r",
                    "    if(newValue == store.getData().all[i].data.value ){\r",
                    "        data = store.getData().all[i].data ;\r",
                    "        break ;\r",
                    "    }\r",
                    "}\r",
                    "\r",
                    "if(!data){\r",
                    "    data = store.getData().all[i-1].data ;\r",
                    "}\r",
                    "\r",
                    "form.down('#ecomVendorBundleTxtFld').setValue(data.text) ;\r",
                    "\r",
                    "form.down('#ecomVendorPriceFld').setValue(data.price) ;\r",
                    "\r",
                    "form.down('#addUpdate').setText(\"Update\");\r",
                    "\r",
                    "\r",
                    "this.selectDlVendors(data.vendors) ;"
                ],
                "name": "change"
            },
            "designerId": "3093b137-b42b-4fd4-bbf8-c0c6883f7c48"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "selectfield[itemId=ecompolicySelectSI]",
                "designer|targetType": "Ext.field.Select",
                "fn": "onpolicySelectSIChange",
                "implHandler": [
                    "if(!newValue){\r",
                    "    return ;\r",
                    "}\r",
                    "\r",
                    "var form = Ext.ComponentQuery.query('#ecomVdrPricingSku_imgsSetUpPanel')[0] ;\r",
                    "\r",
                    "var store = selectfield.getStore() ;\r",
                    "\r",
                    "var data = null ;\r",
                    "var i = 0 ;\r",
                    "for(i=0 ; i < store.getData().all.length ; i++){\r",
                    "\r",
                    "    if(newValue == store.getData().all[i].data.value ){\r",
                    "        data = store.getData().all[i].data ;\r",
                    "        break ;\r",
                    "    }\r",
                    "}\r",
                    "\r",
                    "if(!data){\r",
                    "    data = store.getData().all[i-1].data ;\r",
                    "}\r",
                    "\r",
                    "form.down('#range').setValue(data.range) ;\r",
                    "\r",
                    "form.down('#stdStart').setValue(data.std_start) ;\r",
                    "form.down('#stdIncrement').setValue(data.std_increment) ;\r",
                    "\r",
                    "form.down('#promoStart').setValue(data.promo_start) ;\r",
                    "form.down('#promoIncrement').setValue(data.promo_increment);\r",
                    "\r",
                    "\r",
                    "form.down('#policyText').setValue(data.text) ;\r",
                    "\r",
                    "form.down('#addUpdate').setText(\"Update\");"
                ],
                "name": "change"
            },
            "designerId": "afadf51d-0630-4d8c-aa88-495f534e4431"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "selectfield[itemId=ecompolicySelectAI]",
                "designer|targetType": "Ext.field.Select",
                "fn": "onpolicySelectAIChange",
                "implHandler": [
                    "\r",
                    "if(!newValue){\r",
                    "    return ;\r",
                    "}\r",
                    "\r",
                    "var form = Ext.ComponentQuery.query('#ecomVdrPricingSku_imgs_addlImgsSetUpPanel')[0] ;\r",
                    "\r",
                    "var store = selectfield.getStore() ;\r",
                    "\r",
                    "var data = null ;\r",
                    "var i = 0 ;\r",
                    "for(i=0 ; i < store.getData().all.length ; i++){\r",
                    "\r",
                    "    if(newValue == store.getData().all[i].data.value ){\r",
                    "        data = store.getData().all[i].data ;\r",
                    "        break ;\r",
                    "    }\r",
                    "}\r",
                    "\r",
                    "if(!data){\r",
                    "    data = store.getData().all[i-1].data ;\r",
                    "}\r",
                    "\r",
                    "form.down('#range').setValue(data.range) ;\r",
                    "\r",
                    "form.down('#stdStart').setValue(data.std_start) ;\r",
                    "form.down('#stdIncrement').setValue(data.std_increment) ;\r",
                    "\r",
                    "form.down('#promoStart').setValue(data.promo_start) ;\r",
                    "form.down('#promoIncrement').setValue(data.promo_increment);\r",
                    "\r",
                    "\r",
                    "form.down('#policyText').setValue(data.text) ;\r",
                    "\r",
                    "form.down('#addUpdate').setText(\"Update\");"
                ],
                "name": "change"
            },
            "designerId": "8af8a2bf-5c88-402e-bb7c-df642b380514"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "selectfield[itemId=ecomdiscountPolicySlct]",
                "designer|targetType": "Ext.field.Select",
                "fn": "ondiscountPolicySlctChange",
                "implHandler": [
                    "\r",
                    "if(!newValue){\r",
                    "    return ;\r",
                    "}\r",
                    "\r",
                    "var form = Ext.ComponentQuery.query('#ecomVdrPricingVdrDiscountSetUpPanel')[0] ;\r",
                    "\r",
                    "var store = selectfield.getStore() ;\r",
                    "\r",
                    "var data = null ;\r",
                    "var i = 0 ;\r",
                    "for(i=0 ; i < store.getData().all.length ; i++){\r",
                    "\r",
                    "    if(newValue == store.getData().all[i].data.value ){\r",
                    "        data = store.getData().all[i].data ;\r",
                    "        break ;\r",
                    "    }\r",
                    "}\r",
                    "\r",
                    "if(!data){\r",
                    "    data = store.getData().all[i-1].data ;\r",
                    "}\r",
                    "\r",
                    "form.down('#range').setValue(data.range) ;\r",
                    "\r",
                    "form.down('#start').setValue(data.disc_start) ;\r",
                    "form.down('#increment').setValue(data.disc_increment) ;\r",
                    "\r",
                    "\r",
                    "form.down('#discountPolicySlctTxt').setValue(data.text) ;\r",
                    "\r",
                    "form.down('#addUpdate').setText(\"Update\");\r",
                    "\r",
                    "\r",
                    ""
                ],
                "name": "change"
            },
            "designerId": "3bdfaecb-b92c-42d3-989c-1d2fec3fd3b2"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "selectfield[itemId=ecomSKUdiscountPolicySlct]",
                "designer|targetType": "Ext.field.Select",
                "fn": "onSKUdiscountPolicySlctChange",
                "implHandler": [
                    "\r",
                    "if(!newValue){\r",
                    "    return ;\r",
                    "}\r",
                    "\r",
                    "var form = Ext.ComponentQuery.query('#ecomVdrPricingSKUDiscountSetUpPanel')[0] ;\r",
                    "\r",
                    "var store = selectfield.getStore() ;\r",
                    "\r",
                    "var data = null ;\r",
                    "var i = 0 ;\r",
                    "for(i=0 ; i < store.getData().all.length ; i++){\r",
                    "\r",
                    "    if(newValue == store.getData().all[i].data.value ){\r",
                    "        data = store.getData().all[i].data ;\r",
                    "        break ;\r",
                    "    }\r",
                    "}\r",
                    "\r",
                    "if(!data){\r",
                    "    data = store.getData().all[i-1].data ;\r",
                    "}\r",
                    "\r",
                    "form.down('#range').setValue(data.range) ;\r",
                    "\r",
                    "form.down('#start').setValue(data.disc_start) ;\r",
                    "form.down('#increment').setValue(data.disc_increment) ;\r",
                    "\r",
                    "\r",
                    "form.down('#discountPolicySlctTxt').setValue(data.text) ;\r",
                    "\r",
                    "form.down('#addUpdate').setText(\"Update\");\r",
                    "\r",
                    "\r",
                    ""
                ],
                "name": "change"
            },
            "designerId": "e284d8b5-9e12-48f3-8a10-3d46b9d04cf2"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "selection"
                ],
                "fn": "selectDlProducts",
                "implHandler": [
                    "\r",
                    "if(!selection){\r",
                    "    return ;\r",
                    "}\r",
                    "\r",
                    "\r",
                    "var dlList = Ext.ComponentQuery.query('#ecomMainListContainer')[0].down('#mainList') ;\r",
                    "var store = dlList.getStore() ;\r",
                    "\r",
                    "dlList.deselectAll() ;\r",
                    "\r",
                    "for(var i=0 ; i < selection.length ; i ++){\r",
                    "\r",
                    "    var rIndex = store.findExact('_id',selection[i].product_id) ;\r",
                    "\r",
                    "    if(rIndex !== -1){\r",
                    "        dlList.select(store.getAt(rIndex),true,true);\r",
                    "    }\r",
                    "}\r",
                    "\r",
                    " RMdatalink.app.getController('ecomController').onRmProSelectUnselect();"
                ]
            },
            "designerId": "086b97e4-1860-4ebb-b15f-6d25484df431"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "validateDlVendorBundle",
                "implHandler": [
                    "var form = Ext.ComponentQuery.query('#ecomVendorBundleSetupPanel')[0] ;\r",
                    "\r",
                    "\r",
                    "\r",
                    "var result =true ;\r",
                    "\r",
                    "var temp = null ;\r",
                    "\r",
                    "\r",
                    "\r",
                    "temp = form.down('#ecomVendorBundleTxtFld').getValue() ;\r",
                    "if(!temp || temp === \"\"){\r",
                    "\r",
                    "    result = false ;\r",
                    "}\r",
                    "\r",
                    "temp = form.down('#ecomVendorPriceFld').getValue() ;\r",
                    "if(!temp || temp === \"\"){\r",
                    "\r",
                    "    result = false ;\r",
                    "}\r",
                    "\r",
                    "return result ;"
                ]
            },
            "designerId": "de5b52dc-4b95-4f58-811c-3369136fa3d7"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "updateVendorBundle",
                "implHandler": [
                    "\r",
                    "if(! this.validateDlVendorBundle()){\r",
                    "\r",
                    "    Ext.Msg.alert(\"Error\",\"All fields are mandatory.\");\r",
                    "    return ;\r",
                    "}\r",
                    "\r",
                    "\r",
                    "var dataToUpdate = {\r",
                    "\r",
                    "    datalink_vendor_bundle:[]\r",
                    "\r",
                    "};\r",
                    "\r",
                    "\r",
                    "var form = Ext.ComponentQuery.query('#ecomVendorBundleSetupPanel')[0] ;\r",
                    "\r",
                    "var fieldStore = form.down('#ecomVendorBundleSelectFld').getStore() ;\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "var policyText = form.down('#ecomVendorBundleTxtFld').getValue() ;\r",
                    "var price = form.down('#ecomVendorPriceFld').getValue() ;\r",
                    "\r",
                    "\r",
                    "var isAddNew = form.down('#addUpdate').getText() == \"Add\" ;\r",
                    "\r",
                    "var options = RMdatalink.util.globalMethods.getArrayDataFromStore(fieldStore) ;\r",
                    "\r",
                    "var curOptVal =  form.down('#ecomVendorBundleSelectFld').getValue();\r",
                    "\r",
                    "if(!options || options.length === 0 ){\r",
                    "\r",
                    "\r",
                    "    options = [] ;\r",
                    "}\r",
                    "\r",
                    "\r",
                    "var tempRec = {\r",
                    "\r",
                    "        text :policyText,\r",
                    "        value: policyText,\r",
                    "        vendors:getPolicyArray(),\r",
                    "        price:price\r",
                    "\r",
                    "    };\r",
                    "\r",
                    "\r",
                    "if(isAddNew){\r",
                    "    options.push(tempRec);\r",
                    "\r",
                    "    fieldStore.add(tempRec);\r",
                    "}else{\r",
                    "\r",
                    "    var opIndex = 0 ;\r",
                    "    while(opIndex < options.length && curOptVal !== options[opIndex].value){\r",
                    "        opIndex++;\r",
                    "    }\r",
                    "\r",
                    "    if(opIndex == options.length){\r",
                    "        opIndex--;\r",
                    "    }\r",
                    "\r",
                    "     options[opIndex]= tempRec ;\r",
                    "\r",
                    "     fieldStore.getAt(opIndex).set(tempRec) ;\r",
                    "\r",
                    "\r",
                    "}\r",
                    "//  Ext.ComponentQuery.query('#productDatalinkMainPanel')[0].setMasked( {\r",
                    "//                 xtype: 'loadmask'\r",
                    "//             });\r",
                    "var store = Ext.getStore('pricing.MainStore') ;\r",
                    "\r",
                    "dataToUpdate.datalink_vendor_bundle = options ;\r",
                    "\r",
                    "var _id = RMdatalink.app.getController('BillingDetailsController').config.pricingData[2]._id ;\r",
                    "\r",
                    "this.updatePricingStore(_id,'datalink_vendor_bundle',dataToUpdate.datalink_vendor_bundle );\r",
                    "\r",
                    " RMdatalink.iwa.rdl.doUpdateCollection(store, dataToUpdate , _id, success, error);\r",
                    "\r",
                    "if(isAddNew){\r",
                    "\r",
                    "    this.clearVendorBundle();\r",
                    "}\r",
                    "\r",
                    "function success(){\r",
                    "    Ext.Viewport.setMasked(false);\r",
                    "\r",
                    "\r",
                    "\r",
                    "}\r",
                    "\r",
                    "function error(){\r",
                    "    Ext.Viewport.setMasked(false);\r",
                    "    alert(\"priceing update error\");\r",
                    "}\r",
                    "\r",
                    "\r",
                    "function getPolicyArray(){\r",
                    "\r",
                    "    var dlList = Ext.ComponentQuery.query('#ecomListItemID')[0].down('#pricingList') ;\r",
                    "\r",
                    "    var selection = dlList.getSelection() ;\r",
                    "    var tArray = [] ;\r",
                    "\r",
                    "    for( var i =0 ; i < selection.length; i++ ){\r",
                    "\r",
                    "        tArray.push({\r",
                    "\r",
                    "            vendor_id:selection[i].data._id\r",
                    "\r",
                    "        });\r",
                    "\r",
                    "    }\r",
                    "\r",
                    "    return tArray;\r",
                    "\r",
                    "\r",
                    "}"
                ]
            },
            "designerId": "1a80cf71-2941-40c3-a979-c1cd499a072c"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "deleteVendorBundle",
                "implHandler": [
                    "\r",
                    "var form = Ext.ComponentQuery.query('#ecomVendorBundleSetupPanel')[0] ;\r",
                    "\r",
                    "var fieldStore = form.down('#ecomVendorBundleSelectFld').getStore() ;\r",
                    "var options = RMdatalink.util.globalMethods.getArrayDataFromStore(fieldStore) ;\r",
                    "var curOptVal =  form.down('#ecomVendorBundleSelectFld').getValue();\r",
                    "\r",
                    "if(!curOptVal || curOptVal == \"\"){\r",
                    "\r",
                    "    return ;\r",
                    "}\r",
                    "    var opIndex = 0 ;\r",
                    "    while(opIndex < options.length && curOptVal !== options[opIndex].value){\r",
                    "        opIndex++;\r",
                    "    }\r",
                    "\r",
                    "    if(opIndex == options.length){\r",
                    "        opIndex--;\r",
                    "    }\r",
                    "\r",
                    "fieldStore.removeAt(opIndex);\r",
                    "\r",
                    "options = RMdatalink.util.globalMethods.getArrayDataFromStore(fieldStore) ;\r",
                    "var dataToUpdate = {\r",
                    "\r",
                    "    datalink_vendor_bundle:[]\r",
                    "};\r",
                    "\r",
                    "var store = Ext.getStore('pricing.MainStore') ;\r",
                    "\r",
                    "dataToUpdate.datalink_vendor_bundle = options ;\r",
                    "\r",
                    "var _id = RMdatalink.app.getController('BillingDetailsController').config.pricingData[2]._id ;\r",
                    "this.updatePricingStore(_id,'datalink_vendor_bundle',dataToUpdate.datalink_vendor_bundle );\r",
                    " RMdatalink.iwa.rdl.doUpdateCollection(store, dataToUpdate , _id, success, error);\r",
                    "\r",
                    "\r",
                    "this.clearVendorBundle();\r",
                    "\r",
                    "\r",
                    "function success(){\r",
                    "    Ext.Viewport.setMasked(false);\r",
                    "\r",
                    "\r",
                    "\r",
                    "}\r",
                    "\r",
                    "function error(){\r",
                    "    Ext.Viewport.setMasked(false);\r",
                    "    alert(\"priceing update error\");\r",
                    "}"
                ]
            },
            "designerId": "854c82f7-fec7-42ca-9151-28924b7170ea"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "clearVendorBundle",
                "implHandler": [
                    "\r",
                    "var form = Ext.ComponentQuery.query('#ecomVendorBundleSetupPanel')[0] ;\r",
                    "\r",
                    "\r",
                    "form.down('#ecomVendorBundleTxtFld').setValue(\"\") ;\r",
                    "\r",
                    "form.down('#ecomVendorPriceFld').setValue(\"\") ;\r",
                    "\r",
                    "form.down('#addUpdate').setText(\"Add\");\r",
                    "\r",
                    "form.down('#ecomVendorBundleSelectFld').reset();\r",
                    "//form.down('#discountPolicySlct').setValue(null);"
                ]
            },
            "designerId": "9b6bda07-66e1-4710-aaa6-72bcd8f82a3a"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "selection"
                ],
                "fn": "selectDlVendors",
                "implHandler": [
                    "\r",
                    "if(!selection){\r",
                    "    return ;\r",
                    "}\r",
                    "\r",
                    "\r",
                    "var dlList = Ext.ComponentQuery.query('#ecomListItemID')[0].down('#pricingList') ;\r",
                    "var store = dlList.getStore() ;\r",
                    "\r",
                    "dlList.deselectAll() ;\r",
                    "\r",
                    "for(var i=0 ; i < selection.length ; i ++){\r",
                    "\r",
                    "    var rIndex = store.findExact('_id',selection[i].vendor_id) ;\r",
                    "\r",
                    "    if(rIndex !== -1){\r",
                    "        dlList.select(store.getAt(rIndex),true,true);\r",
                    "    }\r",
                    "}\r",
                    "\r",
                    "// RMdatalink.app.getController('DatalinkController').onRmProSelectUnselect();\r",
                    "\r",
                    "  this.loadVendorTotalCountData();"
                ]
            },
            "designerId": "752d28af-7291-4ae3-b83b-05b7c3c76fa9"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "onDatalinkVendorSelectUnSelect",
                "implHandler": [
                    "\r",
                    "var dlList = Ext.ComponentQuery.query('#ecomListItemID')[0].down('#pricingList') ;\r",
                    "var store = dlList.getStore() ;\r",
                    ""
                ]
            },
            "designerId": "0d5e00cb-58fb-417f-92be-3decd0b54f62"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "inputFld",
                    "record_key"
                ],
                "fn": "onUpdateSkuImgsStore",
                "implHandler": [
                    "console.log(record_key);\r",
                    "\r",
                    "var list =   Ext.ComponentQuery.query('#ecompricingPolicy1stList')[0].down(\"#mainList\");\r",
                    "\r",
                    "var store = list.getStore();\r",
                    "\r",
                    "var _id = inputFld.attributes['data-id'].value ;\r",
                    "var value = inputFld.value ;\r",
                    "value = value.replace(\",\",\"\");\r",
                    "\r",
                    "var recIndex = store.findExact('id',_id) ;\r",
                    "\r",
                    "if(recIndex == -1){\r",
                    "    return ;\r",
                    "}\r",
                    "\r",
                    "\r",
                    "var record = store.getAt(recIndex) ;\r",
                    "\r",
                    "record.set(record_key,value) ;\r",
                    "\r",
                    "\r",
                    "\r",
                    "var selectfield = Ext.ComponentQuery.query('#ecompricingPolicySkuIncrementSelectFld')[0] ;\r",
                    "\r",
                    "\r",
                    "var data = RMdatalink.util.globalMethods.getArrayDataFromStore(store) ;\r",
                    "\r",
                    "var slstore = selectfield.getStore() ;\r",
                    "\r",
                    "var slVal = selectfield.getValue() ;\r",
                    "\r",
                    "var rIndex = slstore.findExact('value',slVal) ;\r",
                    "\r",
                    "if(rIndex != -1){\r",
                    "\r",
                    "    console.log(\"record found\");\r",
                    "    var slRec = slstore.getAt(rIndex) ;\r",
                    "\r",
                    "    slRec.set('policy',data);\r",
                    "\r",
                    "}"
                ]
            },
            "designerId": "bd0b8108-f2ea-479e-bf95-2ded8ec6764d"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "inputFld",
                    "record_key"
                ],
                "fn": "onUpdateSkuImgAddlImgs",
                "implHandler": [
                    "var list =   Ext.ComponentQuery.query('#ecompricingPolicySkuImgsAddImgsListPnl')[0].down(\"#mainList\");\r",
                    "\r",
                    "var store = list.getStore();\r",
                    "\r",
                    "var _id = inputFld.attributes['data-id'].value ;\r",
                    "var value = inputFld.value ;\r",
                    "value = value.replace(\",\",\"\");\r",
                    "\r",
                    "var recIndex = store.findExact('id',_id) ;\r",
                    "\r",
                    "if(recIndex == -1){\r",
                    "    return ;\r",
                    "}\r",
                    "\r",
                    "\r",
                    "var record = store.getAt(recIndex) ;\r",
                    "\r",
                    "record.set(record_key,value) ;\r",
                    "\r",
                    "\r",
                    "\r",
                    "var selectfield = Ext.ComponentQuery.query('#ecompricingPolicySkuAddlImgsIncrementSelectFld')[0] ;\r",
                    "\r",
                    "\r",
                    "var data = RMdatalink.util.globalMethods.getArrayDataFromStore(store) ;\r",
                    "\r",
                    "var slstore = selectfield.getStore() ;\r",
                    "\r",
                    "var slVal = selectfield.getValue() ;\r",
                    "\r",
                    "var rIndex = slstore.findExact('value',slVal) ;\r",
                    "\r",
                    "if(rIndex != -1){\r",
                    "\r",
                    "    console.log(\"record found\");\r",
                    "    var slRec = slstore.getAt(rIndex) ;\r",
                    "\r",
                    "    slRec.set('policy',data);\r",
                    "\r",
                    "}"
                ]
            },
            "designerId": "194d8639-4e1c-4aff-9276-e219fff26cce"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "inputFld",
                    "record_key"
                ],
                "fn": "onUpdateVdrDiscount",
                "implHandler": [
                    "var list =   Ext.ComponentQuery.query('#ecompricingPolicy2ndList')[0].down(\"#mainList\");\r",
                    "\r",
                    "var store = list.getStore();\r",
                    "\r",
                    "var _id = inputFld.attributes['data-id'].value ;\r",
                    "var value = inputFld.value ;\r",
                    "\r",
                    "value = value.replace(\",\",\"\");\r",
                    "var recIndex = store.findExact('id',_id) ;\r",
                    "\r",
                    "if(recIndex == -1){\r",
                    "    return ;\r",
                    "}\r",
                    "\r",
                    "\r",
                    "var record = store.getAt(recIndex) ;\r",
                    "\r",
                    "record.set(record_key,value) ;\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "var selectfield = Ext.ComponentQuery.query('#ecomDiscountPolicyVendorsIncrementSelectFld')[0] ;\r",
                    "\r",
                    "\r",
                    "var data = RMdatalink.util.globalMethods.getArrayDataFromStore(store) ;\r",
                    "\r",
                    "var slstore = selectfield.getStore() ;\r",
                    "\r",
                    "var slVal = selectfield.getValue() ;\r",
                    "\r",
                    "var rIndex = slstore.findExact('value',slVal) ;\r",
                    "\r",
                    "if(rIndex != -1){\r",
                    "\r",
                    "    console.log(\"record found\");\r",
                    "    var slRec = slstore.getAt(rIndex) ;\r",
                    "\r",
                    "    slRec.set('policy',data);\r",
                    "\r",
                    "}"
                ]
            },
            "designerId": "66c6649a-843f-4553-bcfb-77a6035e7c37"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "inputFld",
                    "record_key"
                ],
                "fn": "onUpdateSKUDiscount",
                "implHandler": [
                    "var list =   Ext.ComponentQuery.query('#ecompricingPolicySKUDiscountList')[0].down(\"#mainList\");\r",
                    "\r",
                    "var store = list.getStore();\r",
                    "\r",
                    "var _id = inputFld.attributes['data-id'].value ;\r",
                    "var value = inputFld.value ;\r",
                    "\r",
                    "value = value.replace(\",\",\"\");\r",
                    "var recIndex = store.findExact('id',_id) ;\r",
                    "\r",
                    "if(recIndex == -1){\r",
                    "    return ;\r",
                    "}\r",
                    "\r",
                    "\r",
                    "var record = store.getAt(recIndex) ;\r",
                    "\r",
                    "record.set(record_key,value) ;\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "var selectfield = Ext.ComponentQuery.query('#ecomDiscountPolicySKUIncrementSelectFld')[0] ;\r",
                    "\r",
                    "\r",
                    "var data = RMdatalink.util.globalMethods.getArrayDataFromStore(store) ;\r",
                    "\r",
                    "var slstore = selectfield.getStore() ;\r",
                    "\r",
                    "var slVal = selectfield.getValue() ;\r",
                    "\r",
                    "var rIndex = slstore.findExact('value',slVal) ;\r",
                    "\r",
                    "if(rIndex != -1){\r",
                    "\r",
                    "    console.log(\"record found\");\r",
                    "    var slRec = slstore.getAt(rIndex) ;\r",
                    "\r",
                    "    slRec.set('policy',data);\r",
                    "\r",
                    "}"
                ]
            },
            "designerId": "f2a11cdf-d44a-4755-b6b7-900236f0d98b"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "SAVEDatalinkSetup",
                "implHandler": [
                    "var  vendor_pricing_vendors_sel_policy ;\r",
                    "try {\r",
                    "    vendor_pricing_vendors_sel_policy= Ext.ComponentQuery.query('#ecomVdrPricingbyVendorsPanel')[0].down('#policyText').getValue() ;\r",
                    "}catch(e){\r",
                    "    console.log(e);\r",
                    "}\r",
                    "\r",
                    "\r",
                    "var pricingData = RMdatalink.app.getController('BillingDetailsController').config.pricingData ;\r",
                    "dataToUpdate = {} ;\r",
                    "dataToUpdate.state_values = {} ;\r",
                    "\r",
                    "var selectfield = Ext.ComponentQuery.query('#ecompricingPolicySkuIncrementSelectFld')[0] ;\r",
                    "var slstore = selectfield.getStore() ;\r",
                    "var data = RMdatalink.util.globalMethods.getArrayDataFromStore(slstore) ;\r",
                    "var slVal = selectfield.getValue() ;\r",
                    "\r",
                    "dataToUpdate.vendor_pricing_sku_images = data ;\r",
                    "\r",
                    "dataToUpdate.state_values.vendor_pricing_sku_images = slVal ;\r",
                    "\r",
                    "///////////////////////////\r",
                    "\r",
                    "selectfield = Ext.ComponentQuery.query('#ecompricingPolicySkuAddlImgsIncrementSelectFld')[0] ;\r",
                    "slstore = selectfield.getStore() ;\r",
                    "data = RMdatalink.util.globalMethods.getArrayDataFromStore(slstore) ;\r",
                    "slVal = selectfield.getValue() ;\r",
                    "\r",
                    "dataToUpdate.vendor_pricing_sku_images_addl_images = data ;\r",
                    "\r",
                    "dataToUpdate.state_values.vendor_pricing_sku_images_addl_images = slVal ;\r",
                    "\r",
                    "\r",
                    "///////////////////////////\r",
                    "\r",
                    "selectfield = Ext.ComponentQuery.query('#ecomDiscountPolicyVendorsIncrementSelectFld')[0] ;\r",
                    "slstore = selectfield.getStore() ;\r",
                    "data = RMdatalink.util.globalMethods.getArrayDataFromStore(slstore) ;\r",
                    "slVal = selectfield.getValue() ;\r",
                    "\r",
                    "dataToUpdate.vendor_pricing_vdr_discount = data ;\r",
                    "\r",
                    "dataToUpdate.state_values.vendor_pricing_vdr_discount = slVal ;\r",
                    "\r",
                    "\r",
                    "///////////////////////////\r",
                    "\r",
                    "selectfield = Ext.ComponentQuery.query('#ecomVendorBundleSelectFld')[0] ;\r",
                    "\r",
                    "slVal = selectfield.getValue() ;\r",
                    "\r",
                    "dataToUpdate.state_values.datalink_vendor_bundle = slVal ;\r",
                    "\r",
                    "///////////////////////////\r",
                    "\r",
                    "\r",
                    "selectfield = Ext.ComponentQuery.query('#ecomPoductBundeleSelectFld')[0] ;\r",
                    "\r",
                    "slVal = selectfield.getValue() ;\r",
                    "\r",
                    "dataToUpdate.state_values.datalink_bundle = slVal ;\r",
                    "\r",
                    "\r",
                    "///////////////////////////\r",
                    "\r",
                    "selectfield = Ext.ComponentQuery.query('#ecomDiscountPolicySKUIncrementSelectFld')[0] ;\r",
                    "slstore = selectfield.getStore() ;\r",
                    "data = RMdatalink.util.globalMethods.getArrayDataFromStore(slstore) ;\r",
                    "slVal = selectfield.getValue() ;\r",
                    "\r",
                    "dataToUpdate.vendor_pricing_sku_discount = data ;\r",
                    "\r",
                    "dataToUpdate.state_values.vendor_pricing_sku_discount = slVal ;\r",
                    "\r",
                    "///////////////////////////////////////////////////////\r",
                    "var pricingStore = Ext.getStore('pricing.MainStore') ;\r",
                    "var _id = RMdatalink.app.getController('BillingDetailsController').config.pricingData[2]._id ;\r",
                    "\r",
                    "\r",
                    "this.updatePricingStore(_id,'vendor_pricing_sku_images',dataToUpdate.vendor_pricing_sku_images );\r",
                    "this.updatePricingStore(_id,'vendor_pricing_sku_images_addl_images',dataToUpdate.vendor_pricing_sku_images_addl_images );\r",
                    "this.updatePricingStore(_id,'vendor_pricing_vdr_discount',dataToUpdate.vendor_pricing_vdr_discount );\r",
                    "this.updatePricingStore(_id,'datalink_vendor_bundle',dataToUpdate.datalink_vendor_bundle );\r",
                    "this.updatePricingStore(_id,'datalink_bundle',dataToUpdate.datalink_bundle );\r",
                    "this.updatePricingStore(_id,'state_values',dataToUpdate.state_values );\r",
                    "\r",
                    "dataToUpdate.vendor_pricing_vendors_sel_policy = vendor_pricing_vendors_sel_policy;\r",
                    "\r",
                    "Ext.Viewport.setMasked({\r",
                    "                    xtype: 'loadmask',message:\"Loading...\"\r",
                    "                });\r",
                    "\r",
                    " RMdatalink.iwa.rdl.doUpdateCollection(pricingStore, dataToUpdate , _id, success, error);\r",
                    "\r",
                    "\r",
                    "function success(){\r",
                    "\r",
                    "\r",
                    "    Ext.Viewport.setMasked(false);\r",
                    " RMdatalink.app.getController('ecomController').enableDisableDlFlds(true);\r",
                    "  Ext.Msg.alert('Success.', \"E-commerce setup saved successfully.\", Ext.emptyFn);\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "}\r",
                    "\r",
                    "function error(){\r",
                    "    Ext.Viewport.setMasked(false);\r",
                    "    alert(\"priceing update error\");\r",
                    "}\r",
                    "\r",
                    "\r",
                    ""
                ]
            },
            "designerId": "62f02604-27c7-4615-b787-c358f656547a"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "loadVendorTotalCountData",
                "implHandler": [
                    "\r",
                    "\r",
                    "var valCal = \t{\r",
                    "                       getCalculatedValue: function(sku){\r",
                    "                           if(sku)\r",
                    "                           {\r",
                    "                               var  result = (sku * 5)/60 ;\r",
                    "                               result =    Math.round(result * 100) / 100 ;\r",
                    "                               return result ;\r",
                    "                           }\r",
                    "\r",
                    "                               return 0 ;\r",
                    "\r",
                    "                       },\r",
                    "\r",
                    "                         calHrsBySkuImages: function(values){\r",
                    "                           if(values.SKU && values.no_of_images)\r",
                    "                           {\r",
                    "                               var sku = parseInt(values.SKU) + parseInt(values.no_of_images) ;\r",
                    "                               var  result = (sku * 5)/60 ;\r",
                    "                               result =    Math.round(result * 100) / 100 ;\r",
                    "                               return result ;\r",
                    "                           }\r",
                    "\r",
                    "                               return 0 ;\r",
                    "\r",
                    "                       },\r",
                    "\r",
                    "\r",
                    "                         calDaysBySkuImages: function(values){\r",
                    "                           if(values.SKU && values.no_of_images)\r",
                    "                           {\r",
                    "                               var sku = parseInt(values.SKU) + parseInt(values.no_of_images) ;\r",
                    "                               var  result = (sku * 5)/60 ;\r",
                    "                               result = result / 8 ;\r",
                    "                               result =    Math.round(result * 100) / 100 ;\r",
                    "                               return result ;\r",
                    "                           }\r",
                    "\r",
                    "                               return 0 ;\r",
                    "\r",
                    "                       },\r",
                    "\r",
                    "                         calHrsBySkuImagesAddlImages: function(values){\r",
                    "                           if(values.SKU && values.no_of_images && values.no_of_additional_images )\r",
                    "                           {\r",
                    "                               var sku = parseInt(values.SKU) + parseInt(values.no_of_images) +parseInt(values.no_of_additional_images) ;\r",
                    "                               var  result = (sku * 5)/60 ;\r",
                    "                               result =    Math.round(result * 100) / 100 ;\r",
                    "                               return result ;\r",
                    "                           }\r",
                    "\r",
                    "                               return 0 ;\r",
                    "\r",
                    "                       },\r",
                    "\r",
                    "                          calDaysBySkuImagesAddlImages: function(values){\r",
                    "                           if(values.SKU && values.no_of_images && values.no_of_additional_images )\r",
                    "                           {\r",
                    "                               var sku = parseInt(values.SKU) + parseInt(values.no_of_images) +parseInt(values.no_of_additional_images) ;\r",
                    "                               var  result = (sku * 5)/60 ;\r",
                    "                                result = result / 8 ;\r",
                    "                               result =    Math.round(result * 100) / 100 ;\r",
                    "                               return result ;\r",
                    "                           }\r",
                    "\r",
                    "                               return 0 ;\r",
                    "\r",
                    "                       }\r",
                    "\r",
                    "                   } ;\r",
                    "\r",
                    "\r",
                    "    var dlList = Ext.ComponentQuery.query('#ecomListItemID')[0].down('#pricingList') ;\r",
                    "    var vendorsMasterStr = Ext.getStore( 'vendors.Master');\r",
                    "    var vdrs =  dlList.getSelection() ; // vendorsMasterStr.getData().all ;\r",
                    "\r",
                    "    var totalSKU = 0 ;\r",
                    "    var totalCllections = 0 ;\r",
                    "    var totalDesigns = 0 ;\r",
                    "    var totalStdPrice = 0 ;\r",
                    "    var totalPromoPrice = 0 ;\r",
                    "    var totalCalculatedVal = 0 ;\r",
                    "\r",
                    "    var totalImages = 0 ;\r",
                    "    var totalAddImages = 0 ;\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "    var total_hrs_images =0 ;\r",
                    "    var total_days_images =0 ;\r",
                    "\r",
                    "    var total_hrs_img_addlimges =0 ;\r",
                    "    var total_days_img_addlimges =0 ;\r",
                    "    var total_std_price_addlimges =0 ;\r",
                    "    var total_promo_price_addlimges =0 ;\r",
                    "\r",
                    "    for(var i=0; i < vdrs.length ; i++){\r",
                    "        if( vdrs[i].data.SKU)\r",
                    "        {\r",
                    "             totalSKU +=  parseInt(vdrs[i].data.SKU,0) ;\r",
                    "              var  result = (parseInt(vdrs[i].data.SKU,0 )  * 5)/60 ;\r",
                    "             result =    Math.round(result * 100) / 100 ;\r",
                    "\r",
                    "             totalCalculatedVal += result ;\r",
                    "        }\r",
                    "        if( vdrs[i].data.collections)\r",
                    "             totalCllections += parseInt(vdrs[i].data.collections,0)  ;\r",
                    "        if(vdrs[i].data.design )\r",
                    "             totalDesigns += parseInt(vdrs[i].data.design,0)  ;\r",
                    "        if(vdrs[i].data.product_price && vdrs[i].data.product_price.datalink )\r",
                    "        {\r",
                    "             totalStdPrice +=  parseFloat(vdrs[i].data.product_price.datalink.standard_price,0) ;\r",
                    "             totalPromoPrice +=  parseFloat(vdrs[i].data.product_price.datalink.promotional_price,0) ;\r",
                    "        }\r",
                    "\r",
                    "\r",
                    "        if( vdrs[i].data.no_of_images && vdrs[i].data.no_of_images != \"\"){\r",
                    "             totalImages += parseFloat(vdrs[i].data.no_of_images,0)  ;\r",
                    "        }\r",
                    "\r",
                    "        if( vdrs[i].data.no_of_additional_images && vdrs[i].data.no_of_additional_images != \"\"){\r",
                    "             totalAddImages += parseFloat(vdrs[i].data.no_of_additional_images,0)  ;\r",
                    "        }\r",
                    "\r",
                    "\r",
                    "           if(vdrs[i].data.product_price && vdrs[i].data.product_price.datalink )\r",
                    "        {\r",
                    "             total_std_price_addlimges +=  parseFloat(vdrs[i].data.product_price.datalink.standard_price_addlimg,0) ;\r",
                    "             total_promo_price_addlimges +=  parseFloat(vdrs[i].data.product_price.datalink.promotional_price_addlimg,0) ;\r",
                    "        }\r",
                    "\r",
                    "\r",
                    "        total_hrs_images+= valCal.calHrsBySkuImages(vdrs[i].data);\r",
                    "         total_days_images+= valCal.calDaysBySkuImages(vdrs[i].data);\r",
                    "\r",
                    "         total_hrs_img_addlimges+= valCal.calHrsBySkuImagesAddlImages(vdrs[i].data);\r",
                    "         total_days_img_addlimges+= valCal.calDaysBySkuImagesAddlImages(vdrs[i].data);\r",
                    "\r",
                    "    }\r",
                    "\r",
                    "var dataToSet = {\r",
                    "    vendor_count:  vdrs.length,\r",
                    "    collection_count:totalCllections,\r",
                    "    design_count:totalDesigns,\r",
                    "    sku_count:totalSKU,\r",
                    "    total_std_price:totalStdPrice,\r",
                    "    total_promo_price:totalPromoPrice,\r",
                    "    total_calculated_value:totalCalculatedVal,\r",
                    "    total_images:totalImages,\r",
                    "    total_addl_images:totalAddImages,\r",
                    "\r",
                    "    total_hrs_images:total_hrs_images,\r",
                    "    total_days_images:total_days_images,\r",
                    "\r",
                    "    total_hrs_img_addlimges:total_hrs_img_addlimges,\r",
                    "    total_days_img_addlimges:total_days_img_addlimges,\r",
                    "\r",
                    "    total_std_price_addlimges:total_std_price_addlimges,\r",
                    "    total_promo_price_addlimges:total_promo_price_addlimges\r",
                    "};\r",
                    "\r",
                    " var listIbj = Ext.ComponentQuery.query('#productsecomPricingTab')[0].down('#pricingTotalsList') ;\r",
                    " RMdatalink.util.globalMethods.fillListDataByListObject(listIbj,[dataToSet]);\r",
                    "\r",
                    "\r",
                    ""
                ]
            },
            "designerId": "713c88bf-829e-4c17-9020-0717512a4c99"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "selectfield[itemId=ecompolicySelectVendors]",
                "designer|targetType": "Ext.field.Select",
                "fn": "onecompolicySelectVendorsChange",
                "implHandler": [
                    "if(!newValue){\r",
                    "    return ;\r",
                    "}\r",
                    "function f1(val){\r",
                    "\r",
                    "    if(val.product_price && val.product_price.ecom && val.product_price.ecom.standard_price )\r",
                    "    {\r",
                    "        return formatNum(values.product_price.ecom.standard_price) ;\r",
                    "    }\r",
                    "\r",
                    "    return \"0.00\" ;\r",
                    "\r",
                    "\r",
                    "}\r",
                    "\r",
                    "function f2(val){\r",
                    "\r",
                    "    if(val.product_price && val.product_price.ecom && val.product_price.ecom.promotional_price )\r",
                    "    {\r",
                    "        return formatNum(values.product_price.ecom.promotional_price) ;\r",
                    "    }\r",
                    "\r",
                    "    return \"0.00\" ;\r",
                    "\r",
                    "\r",
                    "}\r",
                    "\r",
                    "\r",
                    "function f3(val){\r",
                    "\r",
                    "    if(val.product_price && val.product_price.ecom && val.product_price.ecom.standard_price_addlimg )\r",
                    "    {\r",
                    "        return formatNum(values.product_price.ecom.standard_price_addlimg) ;\r",
                    "    }\r",
                    "\r",
                    "    return \"0.00\" ;\r",
                    "\r",
                    "\r",
                    "}\r",
                    "\r",
                    "function f4(val){\r",
                    "\r",
                    "    if(val.product_price && val.product_price.ecom && val.product_price.ecom.promotional_price_addlimg )\r",
                    "    {\r",
                    "        return formatNum(values.product_price.ecom.promotional_price_addlimg) ;\r",
                    "    }\r",
                    "\r",
                    "    return \"0.00\" ;\r",
                    "\r",
                    "\r",
                    "}\r",
                    "\r",
                    "var component = Ext.ComponentQuery.query('#productsecomPricingTab')[0] ;\r",
                    "var headers = component.down(\"#pricingListHeader\");\r",
                    "headers.setData([{is_selected:false}]);\r",
                    "\r",
                    "    headers.setItemTpl(\r",
                    "        Ext.create('Ext.XTemplate',\r",
                    "                   '<div class=\"x-rm-listtpl-main\" style=\"border-bottom: 1px solid #9b9b9b; background-color: gainsboro;font-weight: bold;color: #555;font-size: 1.0em;padding:0 0px 0 0px !important;height:64px;\">',\r",
                    "                   '    <div style=\"width: 4%;padding-top: 44px;\">',\r",
                    "                   '        <div style=\"width: 19px; height:19px;{[this.getCartImage(values)]}\" {[RMdatalink.util.globalConfig.getListAttrForDelHandling()]} =\"onCartTap\" l1 = \"2123\"  ></div>',\r",
                    "                   '    </div>',\r",
                    "                   '    <div class=\"rightBorderDiv\" style=\"width: 8%;text-align: center;padding-top: 44px;\" data-name=\"vendor_name\">',\r",
                    "                   '        Vendor&nbsp;<img src=\"resources/images/button_icons/downArrow.png\"/>',\r",
                    "                   '    </div>',\r",
                    "\r",
                    "                   '    <div class=\"rightBorderDiv\" style=\"width: 6.4%;text-align: center;padding-top: 44px;\" data-name=\"SKU\">',\r",
                    "                   '        SKU&nbsp;<img src=\"resources/images/button_icons/downArrow.png\"/>',\r",
                    "                   '    </div>',\r",
                    "\r",
                    "\r",
                    "\r",
                    "                   '    <div class=\"rightBorderDiv\" style=\"width: 6.4%;text-align: center;padding-top: 44px;\" data-name=\"collections\">',\r",
                    "                   '        Collection&nbsp;<img src=\"resources/images/button_icons/downArrow.png\"/>',\r",
                    "                   '    </div>',\r",
                    "\r",
                    "\r",
                    "                   '    <div class=\"rightBorderDiv\" style=\"width: 6.4%;text-align: center;padding-top: 44px;\" data-name=\"design\">',\r",
                    "                   '        Design&nbsp;<img src=\"resources/images/button_icons/downArrow.png\"/>',\r",
                    "                   '    </div>',\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "                   '    <div class=\"rightBorderDiv\" style=\" width: 6.4%;text-align: center;padding-top: 44px;\" data-name=\"no_of_images\">',\r",
                    "                   '        Images&nbsp;<img src=\"resources/images/button_icons/downArrow.png\"/>',\r",
                    "                   '    </div>',\r",
                    "\r",
                    "                   '    <div class=\"rightBorderDiv\" style=\" width: 6.4%;text-align: center;padding-top: 24px;\" >',\r",
                    "                   '     <div style=\"width:100%;\" data-name=\"no_of_additional_images\"><p style = \"width:70%;\">Addl. Images</p><img src=\"resources/images/button_icons/downArrow.png\"/></div>   ',\r",
                    "\r",
                    "                  /* '        Addl. Images&nbsp;<img src=\"resources/images/button_icons/downArrow.png\"/>',*/\r",
                    "                   '    </div>',\r",
                    "\r",
                    "                   '    <div class=\"rightBorderDiv\" style=\" width: 28%;text-align: center;\">',\r",
                    "                   '    <div style=\"border-bottom: 1px solid #9b9b9b;\">SKUs + Images</div>     ',\r",
                    "                   '    <div style=\"border-bottom: 1px solid #9b9b9b;\"> <div style=\"width:50%;border-right: 1px solid #9b9b9b; float: left;\">Value Calculator</div><div style=\"width:100%;\">Price</div></div>     ',\r",
                    "                   '    <div> <div style=\"width:25%;border-right: 1px solid #9b9b9b; float: left;\">Hrs</div><div style=\"width:25%;border-right: 1px solid #9b9b9b; float: left;\">Days</div><div style=\"width:25%;float: left;border-right: 1px solid #9b9b9b;\">Std</div> <div style=\"width:100%;\">Promo</div></div>     ',\r",
                    "                   '    </div>',\r",
                    "\r",
                    "\r",
                    "                   '    <div class=\"rightBorderDiv\" style=\" width: 28%;text-align: center;\">',\r",
                    "                   '    <div style=\"border-bottom: 1px solid #9b9b9b;\">SKUs + Images + Addl Images</div>     ',\r",
                    "                   '    <div style=\"border-bottom: 1px solid #9b9b9b;\"> <div style=\"width:50%;border-right: 1px solid #9b9b9b; float: left;\">Value Calculator</div><div style=\"width:100%;\">Price</div></div>     ',\r",
                    "                   '    <div> <div style=\"width:25%;border-right: 1px solid #9b9b9b; float: left;\">Hrs</div><div style=\"width:25%;border-right: 1px solid #9b9b9b; float: left;\">Days</div><div style=\"width:25%;float: left;border-right: 1px solid #9b9b9b;\">Std</div> <div style=\"width:100%;\">Promo</div></div>     ',\r",
                    "                   '    </div>',\r",
                    "                   '</div>',\r",
                    "                   {\r",
                    "                       getCartImage:function(values){\r",
                    "                           if(values.is_selected){\r",
                    "                               return \"background-image: url('resources/images/retailerDetail/cart_selected.png') !important;\";\r",
                    "                           }\r",
                    "\r",
                    "                           return \"background-image: url('resources/images/retailerDetail/cart_unselected.png') !important;\" ;\r",
                    "                       },\r",
                    "                       setCartValue:function(value){\r",
                    "                           if(values.is_selected){\r",
                    "                               values.is_selected = false;\r",
                    "                           }else{\r",
                    "                               values.is_selected = true;\r",
                    "                           }\r",
                    "                           console.error(\"L!!!!!\");\r",
                    "                            headers.refresh();\r",
                    "                            // return this.getCartImage(value);\r",
                    "\r",
                    "                       }\r",
                    "                   }\r",
                    "                  ));\r",
                    "\r",
                    "\r",
                    "headers.setHeight(66);\r",
                    "headers.setMode('MULTI');\r",
                    "headers.addCls('x-rm-rdvendorslist');\r",
                    "headers.refresh();\r",
                    "var list = component.down('#pricingList');\r",
                    "\r",
                    "list.setStore('vendors.Master');\r",
                    "\r",
                    "//   list.setStore('vendorTempRecordStore');//'vendors.Master'\r",
                    "//      '    <div style=\"width: 10%;\" >{[RMdatalink.util.globalMethods.SetCommaForNumericField(SKU)]}</div>',\r",
                    "\r",
                    "\r",
                    "if(window.isFlowFromInitialiseDlVdrPricing){\r",
                    "\r",
                    "    window.isFlowFromInitialiseDlVdrPricing = false;\r",
                    "    //CCHANGE WAS CALLED BY INITAILSE VDR FUNTION.WE DO NOT NEED INPUT TEXT HERE.\r",
                    "}else{\r",
                    "\r",
                    "    list.setItemTpl(\r",
                    "        Ext.create('Ext.XTemplate',\r",
                    "                   '<div class=\"x-rm-listtpl-main\" style=\"width: 100%;padding:0 0px 0 0px !important;\">',\r",
                    "\r",
                    "                   '    <div style=\"width: 4%;\">',\r",
                    "                   '        <div style=\"width: 19px; height:19px;\"    {[RMdatalink.util.globalConfig.getListAttrForDelHandling()]} =\"onCartTap\" ></div>',\r",
                    "                   '    </div>',\r",
                    "\r",
                    "                   '    <div class=\"rightBorderDiv boldText\" style=\"width: 8%;padding-left:10px;\" >{vendor_name}</div>',\r",
                    "                   '    <div class=\"rightBorderDiv\" style=\"width: 6.4%;text-align: center;\" >{[formatNormalNum(values.SKU)]}</div>',\r",
                    "                   '    <div class=\"rightBorderDiv\" style=\"width: 6.4%;text-align: center;\" >{[formatNormalNum(values.collections)]}</div>',\r",
                    "                   '    <div class=\"rightBorderDiv\" style=\"width: 6.4%;text-align: center;\" >{[formatNormalNum(values.design)]}</div>',\r",
                    "\r",
                    "                   '    <div class=\"rightBorderDiv\" style=\"width: 6.4%;text-align: center;\" >{[formatNormalNum(values.no_of_images)]}</div>',\r",
                    "                   '    <div class=\"rightBorderDiv\" style=\"width: 6.4%;text-align: center;\" >{[formatNormalNum(values.no_of_additional_images)]}</div>',\r",
                    "\r",
                    "                   '    <div class=\"rightBorderDiv\" style=\"width: 6.98%;text-align: center;\" >{[this.calHrsBySkuImages(values)]}</div>',\r",
                    "                   '    <div class=\"rightBorderDiv\" style=\"width: 6.98%;text-align: center;\" >{[this.calDaysBySkuImages(values)]}</div>',\r",
                    "\r",
                    "                   '  <div class=\"rightBorderDiv\" style=\"width: 6.98%;\" > <div style=\"float: left;\">$</div>  <input type=\"text\" style=\"width: 80%;text-align: right;height: 18px;\" class=\"x-rm-pricing-input-field prodDlSetupFlds\" data-id=\"{_id}\" value=\"{[formatNum(values.ecom_std)]}\" field=\"standard_price\" maxlength=\"8\"',\r",
                    "                   '      onchange=\"RMdatalink.app.getController(\\'ecomPricingController\\').onupdateVdr(this,\\'ecom_std\\');\" /></div>',\r",
                    "                   '  <div class=\"rightBorderDiv\" style=\"width: 6.98%;\" > <div style=\"float: left;\">$</div>  <input type=\"text\" style=\"width: 80%;text-align: right;height: 18px;\" class=\"x-rm-pricing-input-field prodDlSetupFlds\" data-id=\"{_id}\" value=\"{[formatNum(values.ecom_promo)]}\" field=\"promotional_price\" maxlength=\"8\"',\r",
                    "                   '      onchange=\"RMdatalink.app.getController(\\'ecomPricingController\\').onupdateVdr(this,\\'ecom_promo\\');\" /></div>',\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "                   '    <div class=\"rightBorderDiv\" style=\"width: 6.98%;text-align: center;\" >{[this.calHrsBySkuImagesAddlImages(values)]}</div>',\r",
                    "                   '    <div class=\"rightBorderDiv\" style=\"width: 6.98%;text-align: center;\" >{[this.calDaysBySkuImagesAddlImages(values)]}</div>',\r",
                    "\r",
                    "                   '  <div  class=\"rightBorderDiv\" style=\"width: 6.98%;\" > <div style=\"float: left;\">$</div>  <input type=\"text\" style=\"width: 80%;text-align: right;height: 18px;\" class=\"x-rm-pricing-input-field prodDlSetupFlds\" data-id=\"{_id}\" value=\"{[formatNum(values.ecom_std_addl)]}\" field=\"standard_price_addlimg\" maxlength=\"8\"',\r",
                    "                   '      onchange=\"RMdatalink.app.getController(\\'ecomPricingController\\').onupdateVdr(this,\\'ecom_std_addl\\');\" /></div>',\r",
                    "                   '  <div  class=\"rightBorderDiv\" style=\"width: 6.98%;\" > <div style=\"float: left;\">$</div>  <input type=\"text\" style=\"width: 80%;text-align: right;height: 18px;\" class=\"x-rm-pricing-input-field prodDlSetupFlds\" data-id=\"{_id}\" value=\"{[formatNum(values.ecom_promo_addl)]}\" field=\"promotional_price_addlimg\" maxlength=\"8\"',\r",
                    "                   '      onchange=\"RMdatalink.app.getController(\\'ecomPricingController\\').onupdateVdr(this,\\'ecom_promo_addl\\');\" /></div>',\r",
                    "\r",
                    "\r",
                    "\r",
                    "                   '</div>',\r",
                    "                   {\r",
                    "                       getCalculatedValue: function(sku){\r",
                    "                           if(sku)\r",
                    "                           {\r",
                    "                               var  result = (sku * 5)/60 ;\r",
                    "                               result =    Math.round(result * 100) / 100 ;\r",
                    "                               return result ;\r",
                    "                           }\r",
                    "\r",
                    "                           return 0 ;\r",
                    "\r",
                    "                       },\r",
                    "\r",
                    "                       calHrsBySkuImages: function(values){\r",
                    "\r",
                    "                           var pricingData = RMdatalink.app.getController('BillingDetailsController').config.pricingData ;\r",
                    "                           var time_taken_images = 5 ;\r",
                    "                           var time_taken_images_addl_images = 10 ;\r",
                    "\r",
                    "\r",
                    "                           if(pricingData && pricingData[2]){\r",
                    "\r",
                    "                               time_taken_images = pricingData[2].time_taken_images  ;\r",
                    "                               time_taken_images_addl_images = pricingData[2].time_taken_images_addl_images ;\r",
                    "\r",
                    "\r",
                    "                           }\r",
                    "\r",
                    "\r",
                    "                           if(values.SKU && values.no_of_images)\r",
                    "                           {\r",
                    "                               var sku = parseInt(values.SKU) + parseInt(values.no_of_images) ;\r",
                    "                               var  result = (sku * time_taken_images)/60 ;\r",
                    "                               result =    Math.round(result * 100) / 100 ;\r",
                    "                               return result ;\r",
                    "                           }\r",
                    "\r",
                    "                           return 0 ;\r",
                    "\r",
                    "                       },\r",
                    "\r",
                    "\r",
                    "                       calDaysBySkuImages: function(values){\r",
                    "\r",
                    "                           var pricingData = RMdatalink.app.getController('BillingDetailsController').config.pricingData ;\r",
                    "                           var time_taken_images = 5 ;\r",
                    "                           var time_taken_images_addl_images = 10 ;\r",
                    "\r",
                    "\r",
                    "                           if(pricingData && pricingData[2]){\r",
                    "\r",
                    "                               time_taken_images = pricingData[2].time_taken_images  ;\r",
                    "                               time_taken_images_addl_images = pricingData[2].time_taken_images_addl_images ;\r",
                    "\r",
                    "\r",
                    "                           }\r",
                    "\r",
                    "\r",
                    "                           if(values.SKU && values.no_of_images)\r",
                    "                           {\r",
                    "                               var sku = parseInt(values.SKU) + parseInt(values.no_of_images) ;\r",
                    "                               var  result = (sku * time_taken_images)/60 ;\r",
                    "                               result = result / 8 ;\r",
                    "                               result =    Math.round(result * 100) / 100 ;\r",
                    "                               return result ;\r",
                    "                           }\r",
                    "\r",
                    "                           return 0 ;\r",
                    "\r",
                    "                       },\r",
                    "\r",
                    "                       calHrsBySkuImagesAddlImages: function(values){\r",
                    "\r",
                    "                           var pricingData = RMdatalink.app.getController('BillingDetailsController').config.pricingData ;\r",
                    "                           var time_taken_images = 5 ;\r",
                    "                           var time_taken_images_addl_images = 10 ;\r",
                    "\r",
                    "\r",
                    "                           if(pricingData && pricingData[2]){\r",
                    "\r",
                    "                               time_taken_images = pricingData[2].time_taken_images  ;\r",
                    "                               time_taken_images_addl_images = pricingData[2].time_taken_images_addl_images ;\r",
                    "\r",
                    "\r",
                    "                           }\r",
                    "\r",
                    "\r",
                    "                           if(values.SKU && values.no_of_images && values.no_of_additional_images )\r",
                    "                           {\r",
                    "                               var sku = parseInt(values.SKU) + parseInt(values.no_of_images) +parseInt(values.no_of_additional_images) ;\r",
                    "                               var  result = (sku * time_taken_images_addl_images)/60 ;\r",
                    "                               result =    Math.round(result * 100) / 100 ;\r",
                    "                               return result ;\r",
                    "                           }\r",
                    "\r",
                    "                           return 0 ;\r",
                    "\r",
                    "                       },\r",
                    "\r",
                    "                       calDaysBySkuImagesAddlImages: function(values){\r",
                    "\r",
                    "\r",
                    "                           var pricingData = RMdatalink.app.getController('BillingDetailsController').config.pricingData ;\r",
                    "                           var time_taken_images = 5 ;\r",
                    "                           var time_taken_images_addl_images = 10 ;\r",
                    "\r",
                    "\r",
                    "                           if(pricingData && pricingData[2]){\r",
                    "\r",
                    "                               time_taken_images = pricingData[2].time_taken_images  ;\r",
                    "                               time_taken_images_addl_images = pricingData[2].time_taken_images_addl_images ;\r",
                    "\r",
                    "\r",
                    "                           }\r",
                    "\r",
                    "                           if(values.SKU && values.no_of_images && values.no_of_additional_images )\r",
                    "                           {\r",
                    "                               var sku = parseInt(values.SKU) + parseInt(values.no_of_images) +parseInt(values.no_of_additional_images) ;\r",
                    "                               var  result = (sku * time_taken_images_addl_images)/60 ;\r",
                    "                               result = result / 8 ;\r",
                    "                               result =    Math.round(result * 100) / 100 ;\r",
                    "                               return result ;\r",
                    "                           }\r",
                    "\r",
                    "                           return 0 ;\r",
                    "\r",
                    "                       }\r",
                    "\r",
                    "                   }\r",
                    "\r",
                    "                  )\r",
                    "    );\r",
                    "\r",
                    "\r",
                    "}\r",
                    "\r",
                    "list.setItemHeight(22);\r",
                    "list.setMode('MULTI');\r",
                    "list.addCls('x-rm-rdvendorslist');\r",
                    "\r",
                    "\r",
                    "var form = Ext.ComponentQuery.query('#ecomVdrPricingbyVendorsPanel')[0] ;\r",
                    "form.down('#policyText').setValue(newValue);\r",
                    "\r",
                    "form.down('#addUpdate').setText(\"Update\");\r",
                    "\r",
                    "\r",
                    "\r",
                    "var vdrStr = Ext.getStore('vendors.Master') ;\r",
                    "\r",
                    "var store = selectfield.getStore() ;\r",
                    "\r",
                    "var data = null ;\r",
                    "var i = 0 ;\r",
                    "for(i=0 ; i < store.getData().all.length ; i++){\r",
                    "\r",
                    "    if(newValue == store.getData().all[i].data.value ){\r",
                    "        data = store.getData().all[i].data ;\r",
                    "        break ;\r",
                    "    }\r",
                    "}\r",
                    "\r",
                    "if(!data){\r",
                    "    data = store.getData().all[i-1].data ;\r",
                    "}\r",
                    "\r",
                    "for(var i= 0 ; i < data.policy.length ; i++){\r",
                    "\r",
                    "\r",
                    "    var vid = data.policy[i].vendor_id ;\r",
                    "\r",
                    "    var rec = getVrec(vid);\r",
                    "\r",
                    "    rec.set(\"ecom_std\",data.policy[i].ecom_std);\r",
                    "    rec.set(\"ecom_promo\",data.policy[i].ecom_promo);\r",
                    "    rec.set(\"ecom_std_addl\",data.policy[i].ecom_std_addl);\r",
                    "    rec.set(\"ecom_promo_addl\",data.policy[i].ecom_promo_addl);\r",
                    "}\r",
                    "\r",
                    "function getVrec(vid1){\r",
                    "\r",
                    "    var ss = Ext.getStore('vendors.Master');\r",
                    "\r",
                    "    for(var i=0 ; i < ss.getData().all.length; i++){\r",
                    "\r",
                    "        if(ss.getData().all[i].data._id == vid1){\r",
                    "            return ss.getData().all[i] ;\r",
                    "        }\r",
                    "\r",
                    "    }\r",
                    "    return null ;\r",
                    "}\r",
                    "//ecompricingPolicySkuIncrementSelectFld\r",
                    "//ecompolicySelectVendors\r",
                    "\r",
                    "Ext.ComponentQuery.query('#ecompricingPolicySkuIncrementSelectFld')[0].reset() ;\r",
                    "Ext.ComponentQuery.query('#ecompricingPolicySkuAddlImgsIncrementSelectFld')[0].reset() ;\r",
                    "RMdatalink.app.getController('BillingDetailsController').loadVendorTotalCountDataForEcommerce();\r",
                    "/*\r",
                    "ecompolicySelectVendors\r",
                    "\r",
                    "ecomVendorBundleSelectFld\r",
                    "ecompricingPolicySkuIncrementSelectFld\r",
                    "ecompricingPolicySkuAddlImgsIncrementSelectFld\r",
                    "ecomDiscountPolicyVendorsIncrementSelectFld\r",
                    "ecomDiscountPolicySKUIncrementSelectFld\r",
                    "\r",
                    "*/"
                ],
                "name": "change"
            },
            "designerId": "c5d42b53-d48d-4e32-86c0-d25a18f737ef"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "setDefaultTplOnPricingList",
                "implHandler": [
                    ""
                ]
            },
            "designerId": "11ae8a31-be7d-499a-8dd2-684ee2fbc71b"
        }
    ]
}