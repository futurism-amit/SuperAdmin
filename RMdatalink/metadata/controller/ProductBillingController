{
    "type": "Ext.app.Controller",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "designer|userClassName": "ProductBillingController",
        "isDatalinkProduct": false,
        "isFromVip": true,
        "isecomProduct": false,
        "needToEdit": false,
        "productKey": "product_rmpro",
        "rmProPackValue": 0
    },
    "configAlternates": {
        "rtProduct": "object",
        "rmProPackValue": "number",
        "allPackModulePrice": "number",
        "finalCalPrice": "number",
        "isDatalinkProduct": "boolean",
        "isecomProduct": "boolean",
        "needToEdit": "boolean",
        "isFromVip": "boolean"
    },
    "designerId": "ef458d59-7947-4a3d-9fde-3a71b2628f98",
    "customConfigs": [
        {
            "group": "(Custom Properties)",
            "name": "rtProduct",
            "type": "string"
        },
        {
            "group": "(Custom Properties)",
            "name": "title",
            "type": "string"
        },
        {
            "group": "(Custom Properties)",
            "name": "productKey",
            "type": "string"
        },
        {
            "group": "(Custom Properties)",
            "name": "rmProPackValue",
            "type": "string"
        },
        {
            "group": "(Custom Properties)",
            "name": "allPackModulePrice",
            "type": "string"
        },
        {
            "group": "(Custom Properties)",
            "name": "finalCalPrice",
            "type": "string"
        },
        {
            "group": "(Custom Properties)",
            "name": "isDatalinkProduct",
            "type": "string"
        },
        {
            "group": "(Custom Properties)",
            "name": "datalinkAddonsBundle",
            "type": "string"
        },
        {
            "group": "(Custom Properties)",
            "name": "tempPricePolicy",
            "type": "string"
        },
        {
            "group": "(Custom Properties)",
            "name": "isecomProduct",
            "type": "string"
        },
        {
            "group": "(Custom Properties)",
            "name": "needToEdit",
            "type": "string"
        },
        {
            "group": "(Custom Properties)",
            "name": "isFromVip",
            "type": "string"
        }
    ],
    "cn": [
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "target"
                ],
                "fn": "displayRMPROBillig",
                "implHandler": [
                    "//retailerBillingSheet\r",
                    "\r",
                    "\r",
                    "\r",
                    "// this.initProductRtBilling() ;\r",
                    "\r",
                    "\r",
                    "this.setRM_PROPackageList() ;\r",
                    "this.setRM_proModules() ;\r",
                    "\r",
                    "\r",
                    "this.initProductRtBilling() ;\r",
                    "\r",
                    "\r",
                    "//this.fillModuleLists() ;\r",
                    "\r",
                    " var that = this ;\r",
                    " var timeout = setTimeout(function(){\r",
                    "            that.calculateBillingPrices() ;\r",
                    " },100);\r",
                    "\r",
                    "\r",
                    "var record = Ext.ComponentQuery.query('#rmProSelectPackageList')[0].getSelection()[0] ;\r",
                    "var packName = '<div style=\"font-size: 14px;margin-left: 10px;\">' + record.data.text+ '</div>' ;\r",
                    "Ext.ComponentQuery.query('#rmProModulesForRtListPanel')[0].down('#productPackageNameLabel').setHtml( packName );\r",
                    "\r",
                    "\r",
                    "Ext.ComponentQuery.query('#rmProModulesForRtListPanel')[0].down('#productPackageBundlePriceLbl').setHtml( '<div style=\"margin-right: 80px;font-size: small;\"> Bundle Price ::$ '+record.data.rm_pro_bundle_price+'</div>');\r",
                    "\r",
                    "\r",
                    "var rm_pro_modules = record.data.rm_pro_modules ;\r",
                    "var addOnsList = Ext.ComponentQuery.query('#rtProductAddOnsModuleLst')[0] ;\r",
                    "\r",
                    "var adOnsStore = addOnsList.getStore() ;\r",
                    "\r",
                    "var allMoulesStore = Ext.getStore('products.AllBillingModulesStore');\r",
                    "var allModuleList = Ext.ComponentQuery.query('#productRmPRoAllModulesPanel')[0].down('#mainList') ;\r",
                    "\r",
                    "\r",
                    " for(var i =0 ; i< rm_pro_modules.length; i++){\r",
                    "\r",
                    "    var recIndex = adOnsStore.findExact('_id', rm_pro_modules[i].module_id ) ;\r",
                    "\r",
                    "    if(recIndex != -1)\r",
                    "    {\r",
                    "        addOnsList.select(adOnsStore.getAt(recIndex),true,true) ;\r",
                    "    }\r",
                    "\r",
                    "\r",
                    "      var mrIndex = allMoulesStore.findExact('_id', rm_pro_modules[i].module_id ) ;\r",
                    "\r",
                    "    if(mrIndex != -1)\r",
                    "    {\r",
                    "        allModuleList.select(allMoulesStore.getAt(mrIndex),true,true) ;\r",
                    "\r",
                    "    }\r",
                    "\r",
                    " }\r",
                    "\r",
                    "this.setRMPackageModule() ;\r",
                    "\r",
                    ""
                ]
            },
            "designerId": "9f51ea7e-cca7-449e-8d63-4dc720417221"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "record"
                ],
                "fn": "handleRecordToShowProductSetup",
                "implHandler": [
                    "\r",
                    "var that = this ;\r",
                    "var me = this;\r",
                    "//var RDEcommerce =\r",
                    "\r",
                    "//isFromVip\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "if( record.data.ProductName == \"VIP\" ){\r",
                    "\r",
                    "    try{\r",
                    "        var selectedUserRecord = RMdatalink.util.globalConfig.getDataToShowInSettingWindow().record ;\r",
                    "        if( selectedUserRecord.data.store_products.vip_status == \"ACTIVE\"  ){\r",
                    "\r",
                    "        }else{\r",
                    "\r",
                    "            return;\r",
                    "        }\r",
                    "\r",
                    "    }catch(e){\r",
                    "\r",
                    "        console.log(\"ERROR THROWN\" , e);\r",
                    "        return;\r",
                    "    }\r",
                    "    this.setIsFromVip(true);\r",
                    "    // alert(\"USER WANTS TO SEE VIP BILLING\");\r",
                    "}else{\r",
                    "    // CURRENTLY WE ARE ALLOWING FOCUSING ON VIP LIST .\r",
                    "    // CHANGE THIS VALUE TO FALSE WHEN NEEDED\r",
                    "    this.setIsFromVip(false);\r",
                    "}\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "if( record.data.ProductName == \"RMPro\" )\r",
                    "{\r",
                    "    this.config.isDatalinkProduct = false ;\r",
                    "       this.config.isecomProduct = false ;\r",
                    "\r",
                    "    this.getBillingSheet().show();\r",
                    "    this.intRMPROBilling() ;\r",
                    "    this.displayRMPROBillig();\r",
                    "\r",
                    "\r",
                    "      var timeout = setTimeout(function(){\r",
                    "\r",
                    "                        that.disableEnableComponents(true);\r",
                    "                        clearTimeout(timeout);\r",
                    "\r",
                    "                        hideShowDlComponents(true) ;\r",
                    "                        hideShowRMProComponents(false);\r",
                    "\r",
                    "                    },500);\r",
                    "\r",
                    "\r",
                    "}\r",
                    "else if( record.data.ProductName == \"Datalink\" ){\r",
                    "    this.config.isDatalinkProduct = true ;\r",
                    "       this.config.isecomProduct = false ;\r",
                    "\r",
                    "    this.getBillingSheet().show();\r",
                    "    this.initDatalinkBilling() ;\r",
                    "    this.displayDatalinkBilling();\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "      var timeoutDl = setTimeout(function(){\r",
                    "                        that.disableEnableComponents(true);\r",
                    "                        clearTimeout(timeoutDl);\r",
                    "\r",
                    "                        hideShowDlComponents(false) ;\r",
                    "                        hideShowRMProComponents(true);\r",
                    "\r",
                    "                    },500);\r",
                    "}\r",
                    "//ProductName: \"VIP\"\r",
                    "else if( record.data.ProductName == \"E-Commerce\"   || record.data.ProductName == \"VIP\"){\r",
                    "\r",
                    "\r",
                    "\r",
                    "    this.config.isDatalinkProduct = false ;\r",
                    "    this.config.isecomProduct = true ;\r",
                    "\r",
                    "    console.log(\"ECOOMERCE PRODUCT BILLING INITIATED STAEP 1\");\r",
                    "    this.getBillingSheet().show();\r",
                    "\r",
                    "\r",
                    "\r",
                    "//    debugger;\r",
                    "\r",
                    "\r",
                    "    var timeoutDl = setTimeout(function(){\r",
                    "                        that.initDatalinkBilling() ;\r",
                    "\r",
                    "\r",
                    "\r",
                    "                        that.displayDatalinkBilling();\r",
                    "\r",
                    "                        that.disableEnableComponents(true);\r",
                    "\r",
                    "\r",
                    "                        clearTimeout(timeoutDl);\r",
                    "\r",
                    "                        hideShowDlComponents(false) ;\r",
                    "\r",
                    "                        hideShowRMProComponents(true);\r",
                    "\r",
                    "                    },1500);\r",
                    "}\r",
                    "\r",
                    "\r",
                    " RMdatalink.app.getController('RetailerDeatilsDataSet').saveRTProductSetup();\r",
                    "\r",
                    "function hideShowDlComponents(value){\r",
                    "\r",
                    "     Ext.ComponentQuery.query('#productDlAddOnsSlctFld')[0].setHidden(value);\r",
                    "     Ext.ComponentQuery.query('#productDlbdlVendorsSlctFld')[0].setHidden(value);\r",
                    "\r",
                    "     Ext.ComponentQuery.query('#productDlPriceSlctFld')[0].setHidden(value);\r",
                    "     Ext.ComponentQuery.query('#productDlDiscountVdrsSlctFld')[0].setHidden(value);\r",
                    "\r",
                    "     Ext.ComponentQuery.query('#productDlPriceOptionsimgAdlImgSlctFld')[0].setHidden(value);\r",
                    "     Ext.ComponentQuery.query('#productDlDiscountSKUSlctFld')[0].setHidden(value);\r",
                    "\r",
                    "     Ext.ComponentQuery.query('#productDlAddonsPriceSlctFld')[0].setHidden(value);\r",
                    "\r",
                    "     Ext.ComponentQuery.query('#productDlVdrPricingPolicySlctFld')[0].setHidden(value);\r",
                    "\r",
                    "\r",
                    "    Ext.ComponentQuery.query('#lbl1')[0].setHidden(value);\r",
                    "    Ext.ComponentQuery.query('#lbl2')[0].setHidden(value);\r",
                    "    Ext.ComponentQuery.query('#lbl3')[0].setHidden(value);\r",
                    "\r",
                    "\r",
                    "\r",
                    "}\r",
                    "\r",
                    "function hideShowRMProComponents(value){\r",
                    "\r",
                    "     Ext.ComponentQuery.query('#productRmproPackgSlctFldBilling')[0].setHidden(value);\r",
                    "     Ext.ComponentQuery.query('#productRmproRateSlctFldBilling')[0].setHidden(value);\r",
                    "\r",
                    "}"
                ]
            },
            "designerId": "ef7cf992-aaf2-495d-8d6f-0205faed1c2a"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "getBillingSheet",
                "implHandler": [
                    "if(Ext.ComponentQuery.query(\"#retailerBillingSheet\")[0])\r",
                    "{\r",
                    "\r",
                    " return Ext.ComponentQuery.query(\"#retailerBillingSheet\")[0];\r",
                    "\r",
                    "}else{\r",
                    "\r",
                    " return Ext.widget('retailerBillingSheet');\r",
                    "}\r",
                    "\r",
                    "\r",
                    ""
                ]
            },
            "designerId": "38ae6c04-ed9a-433d-9a30-b395a95f7da6"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "list[itemId=RDStoreProductsList]",
                "designer|targetType": "Ext.dataview.List",
                "fn": "onRDStoreProductsListSelect",
                "implHandler": [
                    "console.log(record);\r",
                    "\r",
                    "//RDEcommerce\r",
                    "\r",
                    "\r",
                    "if(e.target.classList.indexOf('productSetup') >=0){\r",
                    "\r",
                    "}else{\r",
                    "\r",
                    "    var RetailerDeatilsDataSet = RMdatalink.app.getController(\"RetailerDeatilsDataSet\");\r",
                    "        RetailerDeatilsDataSet.onTapOfProductList.apply(RetailerDeatilsDataSet,arguments);\r",
                    "    return;\r",
                    "}\r",
                    "if(RMdatalink.app.getController('RetailerDeatilsDataSet').config.isEditMode){\r",
                    "\r",
                    "    return ;\r",
                    "}\r",
                    "\r",
                    "\r",
                    "\r",
                    "var selectedUserRecord = RMdatalink.util.globalConfig.getDataToShowInSettingWindow() ;\r",
                    "var store_products = selectedUserRecord.record.data.store_products;\r",
                    "var product_key ;\r",
                    "\r",
                    "switch(record.data.ProductName){\r",
                    "        case \"VIP\":product_key = 'vip_status';break;\r",
                    "        case \"RMPro\":product_key = 'rmpro_status';break;\r",
                    "        case \"Datalink\":product_key = 'datalink_status';break;\r",
                    "        case \"E-Commerce\":product_key = 'ecommerce_status';break;\r",
                    "        default:break;\r",
                    "}\r",
                    "\r",
                    "if(product_key){\r",
                    "    if(  store_products[product_key]  == \"ACTIVE\" )\r",
                    "    {\r",
                    "        \r",
                    "    }else\r",
                    "    {\r",
                    "        \r",
                    "        Ext.Msg.alert(\"Warning\" , \"The Selected Product is not activated for current retailer\");\r",
                    "        return;\r",
                    "    }\r",
                    "    \r",
                    "}else{\r",
                    "    return;\r",
                    "}\r",
                    "\r",
                    "\r",
                    "\r",
                    "/*\r",
                    "datalink_status: null\r",
                    "ecatalog_status: null\r",
                    "ecommerce_status: null\r",
                    "irugs_status: null\r",
                    "rmpro_status: null\r",
                    "vip_status: \"ACTIVE\"\r",
                    "\r",
                    "*/\r",
                    "\r",
                    "this.handleRecordToShowProductSetup(record);"
                ],
                "name": "itemtap"
            },
            "designerId": "4db98c2f-683e-4b8a-9750-33eba26f1fdc"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button[itemId=productBillingSheetCancel]",
                "designer|targetType": "Ext.Button",
                "fn": "onproductBillingSheetCancelTap",
                "implHandler": [
                    "\r",
                    "\r",
                    "if(this.config.productKey == \"product_rmpro\" )\r",
                    "{\r",
                    "\r",
                    "    var that = this ;\r",
                    "    if(button.getText() == \"Edit\"){\r",
                    "\r",
                    "\r",
                    "\r",
                    "         Ext.ComponentQuery.query('#rtBillingSaveBtn')[0].setHidden(false);\r",
                    "         button.setText(\"Cancel\") ;\r",
                    "         this.disableEnableComponents(false) ;\r",
                    "\r",
                    "\r",
                    "    }else{\r",
                    "\r",
                    "\r",
                    "         Ext.ComponentQuery.query('#rtBillMonthlyMemberShipFld')[0].setValue(\"\");\r",
                    "         Ext.ComponentQuery.query('#productRmProSlctTermNxtDueDateFld')[0].setValue(\"\");\r",
                    "         Ext.ComponentQuery.query('#productRmProSlctTermPrice')[0].setValue(\"\");\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "         Ext.ComponentQuery.query('#rtBillingSaveBtn')[0].setHidden(true);\r",
                    "         that.intRMPROBilling() ;\r",
                    "         that.displayRMPROBillig();\r",
                    "         button.setText(\"Edit\") ;\r",
                    "         this.disableEnableComponents(true) ;\r",
                    "    }\r",
                    "\r",
                    "\r",
                    "\r",
                    "}\r",
                    "else{\r",
                    "\r",
                    "       var that = this ;\r",
                    "    if(button.getText() == \"Edit\"){\r",
                    "\r",
                    "\r",
                    "\r",
                    "         Ext.ComponentQuery.query('#rtBillingSaveBtn')[0].setHidden(false);\r",
                    "         button.setText(\"Cancel\") ;\r",
                    "         this.disableEnableComponents(false) ;\r",
                    "\r",
                    "\r",
                    "    }else{\r",
                    "\r",
                    "\r",
                    "//          Ext.ComponentQuery.query('#rtBillMonthlyMemberShipFld')[0].setValue(\"\");\r",
                    "//          Ext.ComponentQuery.query('#productRmProSlctTermNxtDueDateFld')[0].setValue(\"\");\r",
                    "//          Ext.ComponentQuery.query('#productRmProSlctTermPrice')[0].setValue(\"\");\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "         Ext.ComponentQuery.query('#rtBillingSaveBtn')[0].setHidden(true);\r",
                    "//          that.intRMPROBilling() ;\r",
                    "//          that.displayRMPROBillig();\r",
                    "         button.setText(\"Edit\") ;\r",
                    "         this.disableEnableComponents(true) ;\r",
                    "    }\r",
                    "\r",
                    "\r",
                    "}\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    ""
                ],
                "name": "tap"
            },
            "designerId": "03b46548-efa4-4b4d-9259-bc3ee358e30e"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button[itemId=productBillingSheetBackBtn]",
                "designer|targetType": "Ext.Button",
                "fn": "productBillingSheetBackBtnTap",
                "implHandler": [
                    "\r",
                    "var that = this ;\r",
                    "\r",
                    "var edtViewBtn = Ext.ComponentQuery.query('#productBillingSheetCancel')[0] ;\r",
                    "if(edtViewBtn.getText() != \"Edit\" )\r",
                    "{\r",
                    "  Ext.Msg.confirm(\"Confirm\",\"View in edit mode, do you want to continue ?.\",onMessageAns ,this);\r",
                    "\r",
                    "\r",
                    "    function onMessageAns(action,opt,confirmBox){\r",
                    "\r",
                    "\r",
                    "        if(action == \"yes\"){\r",
                    "\r",
                    "         goBack() ;\r",
                    "\r",
                    "        }else{\r",
                    "\r",
                    "\r",
                    "        }\r",
                    "\r",
                    "\r",
                    "    }\r",
                    "\r",
                    "}else{\r",
                    "\r",
                    "    goBack() ;\r",
                    "}\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "function goBack(){\r",
                    "    that.hideProductBillingSheet();\r",
                    "}"
                ],
                "name": "tap"
            },
            "designerId": "2eba50ec-0ad5-4fb0-9d13-ba02a752ae30"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "setRM_PROPackageList",
                "implHandler": [
                    "\r",
                    "   var billingController =  RMdatalink.app.getController('BillingDetailsController') ;\r",
                    "\r",
                    "if(billingController.config.pricingData){\r",
                    "\r",
                    "\r",
                    "     Ext.ComponentQuery.query('#productRmproPackgSlctFldBilling')[0].setOptions(billingController.config.pricingData[3].pricing_policy);\r",
                    "\r",
                    "        RMdatalink.util.globalMethods.fillListData('#rmProSelectPackageList',billingController.config.pricingData[3].pricing_policy);\r",
                    "\r",
                    "}\r",
                    "\r",
                    "// Ext.ComponentQuery.query('#rmProSelectPackageList')[0].select(0,false,true) ;\r",
                    "// Ext.ComponentQuery.query('#rmProSelectRateList')[0].select(0,false,true) ;"
                ]
            },
            "designerId": "a5d05d26-5ed6-4a53-9b02-7a66a1c2bdb3"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "setRM_proModules",
                "implHandler": [
                    "\r",
                    "\r",
                    "var rmProBillingStore = Ext.getStore('products.BillingRmproModules') ;\r",
                    "\r",
                    "var rmproStore = Ext.getStore('products.RMProStore') ;\r",
                    "\r",
                    "\r",
                    "rmProBillingStore.removeAll();\r",
                    "rmProBillingStore.sync() ;\r",
                    "\r",
                    "var data = getArrayDataFromStore(rmproStore) ;\r",
                    "\r",
                    "var qunty = 1 ;\r",
                    "for(var i=0 ; i< data.length ; i ++){\r",
                    "\r",
                    "    qunty =   data[i].quantity ?  data[i].quantity  : 1 ;\r",
                    "    data[i].trial = \"\";\r",
                    "    data[i].quantity = qunty ;\r",
                    "    data[i].per_month = 1 ;\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "}\r",
                    "\r",
                    "rmProBillingStore.setData(data);\r",
                    "rmProBillingStore.sync() ;\r",
                    "\r",
                    "\r",
                    "\r",
                    "var rtDiscountStore = Ext.getStore('products.BillingDiscount') ;\r",
                    "var rmProDiscount = Ext.getStore('products.RMProDiscountStore');\r",
                    "\r",
                    "rtDiscountStore.removeAll();\r",
                    "rtDiscountStore.sync() ;\r",
                    "\r",
                    "rtDiscountStore.setData(getArrayDataFromStore(rmProDiscount));\r",
                    "rtDiscountStore.sync() ;\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "  function getArrayDataFromStore(store){\r",
                    "\r",
                    "        var data = new Array();\r",
                    "        data = store.getData().items;\r",
                    "\r",
                    "        var dataToReturn = new Array();\r",
                    "\r",
                    "        for(var i=0; i < data.length ; i++){\r",
                    "\r",
                    "            dataToReturn.push(data[i].data);\r",
                    "        }\r",
                    "\r",
                    "        return dataToReturn ;\r",
                    "\r",
                    "    }\r",
                    "\r",
                    "\r",
                    "var allMoulesStore = Ext.getStore('products.AllBillingModulesStore');\r",
                    "allMoulesStore.removeAll();\r",
                    "allMoulesStore.sync() ;\r",
                    "\r",
                    "allMoulesStore.setData(data);\r",
                    "allMoulesStore.sync() ;\r",
                    ""
                ]
            },
            "designerId": "656361f4-4b0d-4009-aa40-a716e246e5cc"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "updateBillPrices",
                "implHandler": [
                    "\r",
                    "var moduleList = Ext.ComponentQuery.query('#rmProModulesForRtListPanel')[0].down('#mainList') ;\r",
                    "\r",
                    "var rateList = Ext.ComponentQuery.query('#rmProSelectRateList')[0] ;\r",
                    "\r",
                    ""
                ]
            },
            "designerId": "d20b2f8f-983a-4c9b-90c9-05174b72de9b"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "inputFld",
                    "record_key"
                ],
                "fn": "updateModuleList",
                "implHandler": [
                    "console.log(inputFld.attributes['data-id'].value) ;\r",
                    "\r",
                    "var _id = inputFld.attributes['data-id'].value ;\r",
                    "var value = inputFld.value ;\r",
                    "\r",
                    "var rmProBillingStore = Ext.getStore('products.BillingRmproModules') ;\r",
                    "var recIndex = rmProBillingStore.findExact('_id',_id) ;\r",
                    "\r",
                    "if(recIndex == -1){\r",
                    "    return ;\r",
                    "}\r",
                    "\r",
                    "\r",
                    "var record = rmProBillingStore.getAt(recIndex) ;\r",
                    "\r",
                    "record.set(record_key,value) ;\r",
                    "\r",
                    "\r",
                    "this.calculateBillingPrices() ;"
                ]
            },
            "designerId": "d755cb79-2205-44a1-9d30-99eba3811a58"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "inputFld",
                    "record_key"
                ],
                "fn": "updateRmproAllModuleList",
                "implHandler": [
                    "console.log(inputFld.attributes['data-id'].value) ;\r",
                    "\r",
                    "var _id = inputFld.attributes['data-id'].value ;\r",
                    "var value = inputFld.value ;\r",
                    "\r",
                    "var rmProBillingStore = Ext.getStore('products.AllBillingModulesStore') ;\r",
                    "var recIndex = rmProBillingStore.findExact('_id',_id) ;\r",
                    "\r",
                    "if(recIndex == -1){\r",
                    "    return ;\r",
                    "}\r",
                    "\r",
                    "\r",
                    "var record = rmProBillingStore.getAt(recIndex) ;\r",
                    "\r",
                    "record.set(record_key,value) ;\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "var packageStore = Ext.getStore('products.BillingFromPackages') ;\r",
                    "\r",
                    "var addOnsList = Ext.ComponentQuery.query('#rtProductAddOnsModuleLst')[0] ;\r",
                    "\r",
                    "var adOnsStore = addOnsList.getStore() ;\r",
                    "\r",
                    "\r",
                    "recIndex = adOnsStore.findExact('_id',_id) ;\r",
                    "\r",
                    "\r",
                    "if( recIndex != -1 ){\r",
                    "     record = adOnsStore.getAt(recIndex) ;\r",
                    "     record.set(record_key,value) ;\r",
                    "}\r",
                    "\r",
                    "\r",
                    "\r",
                    "if( record_key == \"remark_val\" )\r",
                    "{\r",
                    "    var productList = Ext.ComponentQuery.query('#productRmPRoAllModulesPanel')[0].down('#mainList');\r",
                    "    if(value >= 2)\r",
                    "    {\r",
                    "\r",
                    "      productList.select(record,true,false) ;\r",
                    "//       record.set('quantity',1 );\r",
                    "\r",
                    "\r",
                    "      addOnsList.select(record,true,false) ;\r",
                    "      record.set('quantity',1 );\r",
                    "\r",
                    "    }else{\r",
                    "\r",
                    "      productList.deselect(record,false) ;\r",
                    "//       record.set('quantity',0 );\r",
                    "\r",
                    "      addOnsList.select(record,true,false) ;\r",
                    "      record.set('quantity',0 );\r",
                    "\r",
                    "    }\r",
                    "\r",
                    "    if(record.get('module_sku') != \"DL-DATA\" && value == 1){\r",
                    "\r",
                    "         record.set('remark_val',0 );\r",
                    "\r",
                    "    }\r",
                    "\r",
                    "}\r",
                    "\r",
                    "\r",
                    "if(record_key == \"quantity\"  )\r",
                    "{\r",
                    "     var productList = Ext.ComponentQuery.query('#productRmPRoAllModulesPanel')[0].down('#mainList');\r",
                    "    if(value >= 1)\r",
                    "    {\r",
                    "\r",
                    "      productList.select(record,true,false) ;\r",
                    "      addOnsList.select(record,true,false) ;\r",
                    "\r",
                    "        record.set('remark_val',2 );\r",
                    "\r",
                    "    }else{\r",
                    "\r",
                    "      productList.deselect(record,false) ;\r",
                    "      addOnsList.select(record,true,false) ;\r",
                    "\r",
                    "       record.set('remark_val', 0 );\r",
                    "    }\r",
                    "}\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "this.calculateBillingPrices() ;"
                ]
            },
            "designerId": "1faa1b7c-f545-49cd-9853-83000dba649f"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "calculateBillingPrices",
                "implHandler": [
                    "\r",
                    "    if(this.config.productKey == \"product_datalink\" || this.config.isecomProduct )\r",
                    "    {\r",
                    "       this.calculateDatalinkBillingPrices() ;\r",
                    "        return ;\r",
                    "    }\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "var rmProBillingStore = Ext.getStore('products.BillingRmproModules') ;\r",
                    "var moduleList = Ext.ComponentQuery.query('#rmProModulesForRtListPanel')[0].down('#mainList') ;\r",
                    "var addOnsList = Ext.ComponentQuery.query('#rtProductAddOnsModuleLst')[0] ;\r",
                    "\r",
                    "\r",
                    "var rateKey = Ext.ComponentQuery.query('#rmProSelectRateList')[0].getSelection()[0].data.value ;\r",
                    "var packagePrice =0 ;\r",
                    "/*\r",
                    "\r",
                    "module_standard_price\r",
                    "module_promotional_price\r",
                    "\r",
                    "*/\r",
                    "var addOnsBundlePrice = 0 ;\r",
                    "\r",
                    "\r",
                    "for(var i=0; i < rmProBillingStore.getData().all.length; i++){\r",
                    "\r",
                    "    var tRec = rmProBillingStore.getAt(i);\r",
                    "\r",
                    "    var qty = tRec.get(\"quantity\") ? parseInt(tRec.get(\"quantity\"),0) : 1 ;\r",
                    "    var rate = tRec.get(rateKey) ? parseInt(tRec.get(rateKey),0) : 1 ;\r",
                    "\r",
                    "    var stdRate = tRec.get(\"module_standard_price\") ? parseInt(tRec.get(\"module_standard_price\"),0) : 1 ;\r",
                    "    var promoRate = tRec.get(\"module_promotional_price\") ? parseInt(tRec.get(\"module_promotional_price\"),0) : 1 ;\r",
                    "\r",
                    "\r",
                    "\r",
                    "    if(this.config.productKey == \"product_datalink\" &&  tRec.data.module_sku == \"DL-DATA\")\r",
                    "    {\r",
                    "        qty = 1 ;\r",
                    "    }\r",
                    "\r",
                    "    var per_month = qty * rate ;\r",
                    "\r",
                    "    var stdPerMonth = qty * stdRate ;\r",
                    "\r",
                    "    var promoPerMonth = qty * promoRate ;\r",
                    "\r",
                    "    tRec.set(\"per_month\",per_month);\r",
                    "\r",
                    "    tRec.set(\"standard_total\",stdPerMonth);\r",
                    "    tRec.set(\"promotional_total\",promoPerMonth);\r",
                    "\r",
                    "\r",
                    "    tRec.dirty = true ;\r",
                    "\r",
                    "}\r",
                    "\r",
                    "rmProBillingStore.sync() ;\r",
                    "\r",
                    "\r",
                    "\r",
                    "var selectedModules = addOnsList.getSelection() ;\r",
                    "\r",
                    "var totalMonthlyMemberShip = 0 ;\r",
                    "\r",
                    "var totalStandardMonthlyMbrShip = 0 ;\r",
                    "var totalPromotionalMonthlyMbrShip = 0 ;\r",
                    "\r",
                    "for(var i=0 ; i <selectedModules.length ; i++){\r",
                    "\r",
                    "    totalMonthlyMemberShip +=  parseFloat(selectedModules[i].get('per_month'),0)  ;\r",
                    "\r",
                    "    totalStandardMonthlyMbrShip +=  parseFloat(selectedModules[i].get('standard_total'),0)  ;\r",
                    "    totalPromotionalMonthlyMbrShip +=  parseFloat(selectedModules[i].get('promotional_total'),0)  ;\r",
                    "\r",
                    "}\r",
                    "\r",
                    "////if product RM-PRO\r",
                    "if(this.config.productKey == \"product_rmpro\")\r",
                    "{\r",
                    "    var record = Ext.ComponentQuery.query('#rmProSelectPackageList')[0].getSelection()[0] ;\r",
                    "\r",
                    "    if(record.data.rm_pro_bundle_price)\r",
                    "    {\r",
                    "        totalMonthlyMemberShip += parseFloat(record.data.rm_pro_bundle_price,0) ;\r",
                    "\r",
                    "        totalStandardMonthlyMbrShip += parseFloat(record.data.rm_pro_bundle_price,0) ;\r",
                    "        totalPromotionalMonthlyMbrShip += parseFloat(record.data.rm_pro_bundle_price,0) ;\r",
                    "\r",
                    "        packagePrice = parseFloat(record.data.rm_pro_bundle_price,0) ;\r",
                    "    }\r",
                    "}\r",
                    "\r",
                    "\r",
                    "Ext.ComponentQuery.query('#rtBillTotalMonthlyMbrShipFld')[0].setValue(totalMonthlyMemberShip) ;\r",
                    "\r",
                    "\r",
                    "//if(this.config.productKey == \"product_rmpro\"){\r",
                    "    this.calculateBillingDiscount();\r",
                    "//}\r",
                    "\r",
                    "//textThroughLine\r",
                    "/*\r",
                    "var discounList = Ext.ComponentQuery.query('#rmProDiscountsForRtListPanel')[0].down('#mainList');\r",
                    "\r",
                    "var yrlyDiscount = discounList.getSelection();\r",
                    "\r",
                    "if(yrlyDiscount.length > 0){\r",
                    "\r",
                    "    yrlyDiscount = yrlyDiscount[0] ;\r",
                    "}\r",
                    "*/\r",
                    "\r",
                    " Ext.ComponentQuery.query('#rmProStdPriceTotalLbl')[0].setHtml(\"$ \"+totalStandardMonthlyMbrShip);\r",
                    "Ext.ComponentQuery.query('#rmProPrmotionalPriceTotalLbl')[0].setHtml(\"$ \"+totalPromotionalMonthlyMbrShip);\r",
                    "\r",
                    "if(rateKey == \"module_standard_price\" )\r",
                    "{\r",
                    " Ext.ComponentQuery.query('#rmProPrmotionalPriceTotalLbl')[0].setHidden(true);\r",
                    "\r",
                    "  Ext.ComponentQuery.query('#rmProStdPriceTotalLbl')[0].setWidth(\"20%\");\r",
                    "\r",
                    "     Ext.ComponentQuery.query('#rmProStdPriceTotalLbl')[0].removeCls('textThroughLine');\r",
                    "}else{\r",
                    "\r",
                    "     Ext.ComponentQuery.query('#rmProPrmotionalPriceTotalLbl')[0].setHidden(false);\r",
                    "\r",
                    "  Ext.ComponentQuery.query('#rmProStdPriceTotalLbl')[0].setWidth(\"10%\");\r",
                    "\r",
                    "     Ext.ComponentQuery.query('#rmProStdPriceTotalLbl')[0].setCls('textThroughLine');\r",
                    "}\r",
                    "\r",
                    "\r",
                    "\r",
                    "/////////////////////////////New total and discount calculation for rmpro\r",
                    "\r",
                    "var productList = Ext.ComponentQuery.query('#productRmPRoAllModulesPanel')[0].down('#mainList');\r",
                    "var selectedRec = productList.getSelection() ;\r",
                    "     totalMonthlyMemberShip  = 0 ;\r",
                    "\r",
                    "    totalStandardMonthlyMbrShip = 0 ;\r",
                    "    totalPromotionalMonthlyMbrShip = 0 ;\r",
                    "\r",
                    "var allPackModulePrice = 0 ;\r",
                    "var additionalPackPrice = 0 ;\r",
                    "\r",
                    "for(var i=0; i< selectedRec.length; i++){\r",
                    "\r",
                    "    totalMonthlyMemberShip +=  parseFloat(selectedRec[i].get('per_month'),0)  ;\r",
                    "    totalStandardMonthlyMbrShip +=  parseFloat(selectedRec[i].get('standard_total'),0)  ;\r",
                    "    totalPromotionalMonthlyMbrShip +=  parseFloat(selectedRec[i].get('promotional_total'),0)  ;\r",
                    "\r",
                    "    if(selectedRec[i].get('remark_val') == 1)\r",
                    "    {\r",
                    "        allPackModulePrice +=  parseFloat(selectedRec[i].get('per_month'),0)  ;\r",
                    "    }else{\r",
                    "        additionalPackPrice +=  parseFloat(selectedRec[i].get('per_month'),0)  ;\r",
                    "    }\r",
                    "\r",
                    "}\r",
                    "//packagePrice\r",
                    "\r",
                    "this.config.allPackModulePrice = allPackModulePrice ;\r",
                    "\r",
                    "this.config.totalMonthlyMemberShip = totalMonthlyMemberShip ;\r",
                    "\r",
                    "Ext.ComponentQuery.query('#rtBillTotalMonthlyMbrShipMainFld')[0].setValue(formatNum(totalMonthlyMemberShip));\r",
                    "var packageDiscount = allPackModulePrice - packagePrice ;\r",
                    "\r",
                    "Ext.ComponentQuery.query('#rtBillBundleDiscountTxtFld')[0].setValue(formatNum(packageDiscount)) ;\r",
                    "this.config.packageDiscount =packageDiscount ;\r",
                    "this.config.finalCalPrice = packagePrice + additionalPackPrice ;\r",
                    "//Ext.ComponentQuery.query('#rtBillMonthlyMemberShipFld')[0].setValue(packagePrice + additionalPackPrice ) ;\r",
                    "var addDiscount =  totalMonthlyMemberShip - packageDiscount - (Ext.ComponentQuery.query('#rtBillMonthlyMemberShipFld')[0].getValue()) ;//allPackModulePrice - (packagePrice + additionalPackPrice) ;\r",
                    "Ext.ComponentQuery.query('#rtBillAdditionalDiscountTxtFld')[0].setValue(formatNum(addDiscount) ) ;\r",
                    ""
                ]
            },
            "designerId": "a7e91fe5-5017-41fd-a4d5-618eb9ad366f"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "calculateDatalinkBillingPrices",
                "implHandler": [
                    "\r",
                    "var rmProBillingStore = Ext.getStore('products.BillingRmproModules') ;\r",
                    "\r",
                    "var moduleList = Ext.ComponentQuery.query('#rmProModulesForRtListPanel')[0].down('#mainList') ;\r",
                    "var addOnsList = Ext.ComponentQuery.query('#rtProductAddOnsModuleLst')[0] ;\r",
                    "\r",
                    "\r",
                    "var rateKey = Ext.ComponentQuery.query('#rmProSelectRateList')[0].getSelection()[0].data.value ;\r",
                    "var packagePrice =0 ;\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "var addOnsBundlePrice = 0 ;\r",
                    "\r",
                    "\r",
                    "for(var i=0; i < rmProBillingStore.getData().all.length; i++){\r",
                    "\r",
                    "    var tRec = rmProBillingStore.getAt(i);\r",
                    "\r",
                    "    var qty = tRec.get(\"quantity\") != undefined ? parseInt(tRec.get(\"quantity\"),0) : 1 ;\r",
                    "    var rate = tRec.get(rateKey) != undefined ? parseInt(tRec.get(rateKey),0) : 1 ;\r",
                    "\r",
                    "    var stdRate = tRec.get(\"module_standard_price\") != undefined  ? parseInt(tRec.get(\"module_standard_price\"),0) : 1 ;\r",
                    "    var promoRate = tRec.get(\"module_promotional_price\") != undefined ? parseInt(tRec.get(\"module_promotional_price\"),0) : 1 ;\r",
                    "\r",
                    "\r",
                    "  // ALTHOUGH WE ARE SHOWING THE QUANTITY OF VENDORS SELECTED IN ADDITIONAL VENDORS  , WE CANNOT MULTIPLY\r",
                    "  // IT TO THE PRICE. THIS IS BECAUSE THE PRICE SHOW IS ALREADY SUMMATION OF PRICE OF VENDORS SELECTED.\r",
                    "  // NOTE THAT PRICE OF TWO DIFFERENT VENDOR MAY NOT BE SAME. SO MULTIPLYING IT WITH QUANTITY MAKES NO SENSE.\r",
                    "  // THE NUMBER PRESENT THERE IS JUST A SHOW OFF.\r",
                    "\r",
                    "\r",
                    "    if(  ( (this.config.productKey == \"product_datalink\" ||this.config.isecomProduct ) &&  tRec.data.module_sku == \"DL-DATA\" ) ||\r",
                    "         ( tRec.data.module_name == \"Additional Vendors\"  && this.getIsFromVip() )\r",
                    "      )\r",
                    "    {\r",
                    "        qty = 1 ;\r",
                    "        \r",
                    "    }\r",
                    "\r",
                    "    var per_month = qty * rate ;\r",
                    "\r",
                    "    var stdPerMonth = qty * stdRate ;\r",
                    "\r",
                    "    var promoPerMonth = qty * promoRate ;\r",
                    "\r",
                    "    tRec.set(\"per_month\",per_month);\r",
                    "\r",
                    "    tRec.set(\"standard_total\",stdPerMonth);\r",
                    "    tRec.set(\"promotional_total\",promoPerMonth);\r",
                    "\r",
                    "\r",
                    "    tRec.dirty = true ;\r",
                    "\r",
                    "}\r",
                    "\r",
                    "rmProBillingStore.sync() ;\r",
                    "\r",
                    "\r",
                    "\r",
                    "var selectedModules = addOnsList.getSelection() ;\r",
                    "\r",
                    "var totalMonthlyMemberShip = 0 ;\r",
                    "var totalStandardMonthlyMbrShip = 0 ;\r",
                    "var totalPromotionalMonthlyMbrShip = 0 ;\r",
                    "\r",
                    "for(var i=0 ; i <selectedModules.length ; i++){\r",
                    "\r",
                    "    totalMonthlyMemberShip +=  parseFloat(selectedModules[i].get('per_month'),0)  ;\r",
                    "\r",
                    "    totalStandardMonthlyMbrShip +=  parseFloat(selectedModules[i].get('standard_total'),0)  ;\r",
                    "    totalPromotionalMonthlyMbrShip +=  parseFloat(selectedModules[i].get('promotional_total'),0)  ;\r",
                    "\r",
                    "}\r",
                    "\r",
                    "////if product RM-PRO\r",
                    "if(this.config.productKey == \"product_rmpro\")\r",
                    "{\r",
                    "    var record = Ext.ComponentQuery.query('#rmProSelectPackageList')[0].getSelection()[0] ;\r",
                    "\r",
                    "    if(record.data.rm_pro_bundle_price)\r",
                    "    {\r",
                    "        totalMonthlyMemberShip += parseFloat(record.data.rm_pro_bundle_price,0) ;\r",
                    "\r",
                    "        totalStandardMonthlyMbrShip += parseFloat(record.data.rm_pro_bundle_price,0) ;\r",
                    "        totalPromotionalMonthlyMbrShip += parseFloat(record.data.rm_pro_bundle_price,0) ;\r",
                    "\r",
                    "        packagePrice = parseFloat(record.data.rm_pro_bundle_price,0) ;\r",
                    "    }\r",
                    "}\r",
                    "\r",
                    "if(this.config.datalinkAddonsBundle )\r",
                    "{\r",
                    "   packagePrice = this.config.datalinkAddonsBundle.price ;\r",
                    "}\r",
                    "\r",
                    "Ext.ComponentQuery.query('#rtBillTotalMonthlyMbrShipFld')[0].setValue(totalMonthlyMemberShip) ;\r",
                    "\r",
                    "\r",
                    "//if(this.config.productKey == \"product_rmpro\"){\r",
                    "    this.calculateBillingDiscount();\r",
                    "//}\r",
                    "\r",
                    "\r",
                    "/*\r",
                    "var discounList = Ext.ComponentQuery.query('#rmProDiscountsForRtListPanel')[0].down('#mainList');\r",
                    "\r",
                    "var yrlyDiscount = discounList.getSelection();\r",
                    "\r",
                    "if(yrlyDiscount.length > 0){\r",
                    "\r",
                    "    yrlyDiscount = yrlyDiscount[0] ;\r",
                    "}\r",
                    "*/\r",
                    "\r",
                    " Ext.ComponentQuery.query('#rmProStdPriceTotalLbl')[0].setHtml(\"$ \"+totalStandardMonthlyMbrShip);\r",
                    "Ext.ComponentQuery.query('#rmProPrmotionalPriceTotalLbl')[0].setHtml(\"$ \"+totalPromotionalMonthlyMbrShip);\r",
                    "\r",
                    "if(rateKey == \"module_standard_price\" )\r",
                    "{\r",
                    " Ext.ComponentQuery.query('#rmProPrmotionalPriceTotalLbl')[0].setHidden(true);\r",
                    "\r",
                    "  Ext.ComponentQuery.query('#rmProStdPriceTotalLbl')[0].setWidth(\"20%\");\r",
                    "\r",
                    "     Ext.ComponentQuery.query('#rmProStdPriceTotalLbl')[0].removeCls('textThroughLine');\r",
                    "}else{\r",
                    "\r",
                    "     Ext.ComponentQuery.query('#rmProPrmotionalPriceTotalLbl')[0].setHidden(false);\r",
                    "     Ext.ComponentQuery.query('#rmProStdPriceTotalLbl')[0].setWidth(\"10%\");\r",
                    "     Ext.ComponentQuery.query('#rmProStdPriceTotalLbl')[0].setCls('textThroughLine');\r",
                    "}\r",
                    "\r",
                    "\r",
                    "\r",
                    "/////////////////////////////New total and discount calculation for rmpro\r",
                    "\r",
                    "var productList = Ext.ComponentQuery.query('#productRmPRoAllModulesPanel')[0].down('#mainList');\r",
                    "var selectedRec = productList.getSelection() ;\r",
                    "\r",
                    "    totalMonthlyMemberShip  = 0 ;\r",
                    "    totalStandardMonthlyMbrShip = 0 ;\r",
                    "    totalPromotionalMonthlyMbrShip = 0 ;\r",
                    "\r",
                    "var allPackModulePrice = 0 ;\r",
                    "var additionalPackPrice = 0 ;\r",
                    "\r",
                    "for(var i=0; i< selectedRec.length; i++){\r",
                    "\r",
                    "    totalMonthlyMemberShip +=  parseFloat(selectedRec[i].get('per_month'),0)  ;\r",
                    "    totalStandardMonthlyMbrShip +=  parseFloat(selectedRec[i].get('standard_total'),0)  ;\r",
                    "    totalPromotionalMonthlyMbrShip +=  parseFloat(selectedRec[i].get('promotional_total'),0)  ;\r",
                    "\r",
                    "    if(selectedRec[i].get('remark_val') == 1  && selectedRec[i].get('module_sku') != \"DL-DATA\" )\r",
                    "    {\r",
                    "        allPackModulePrice +=  parseFloat(selectedRec[i].get('per_month'),0)  ;\r",
                    "    }else{\r",
                    "        additionalPackPrice +=  parseFloat(selectedRec[i].get('per_month'),0)  ;\r",
                    "    }\r",
                    "\r",
                    "}\r",
                    "\r",
                    "\r",
                    "this.config.allPackModulePrice = allPackModulePrice ;\r",
                    "this.config.totalMonthlyMemberShip = totalMonthlyMemberShip ;\r",
                    "\r",
                    "\r",
                    "Ext.ComponentQuery.query('#rtBillTotalMonthlyMbrShipMainFld')[0].setValue(formatNum(totalMonthlyMemberShip));\r",
                    "var packageDiscount = allPackModulePrice - packagePrice ;\r",
                    "\r",
                    "Ext.ComponentQuery.query('#rtBillBundleDiscountTxtFld')[0].setValue(formatNum(packageDiscount)) ;\r",
                    "this.config.packageDiscount =packageDiscount ;\r",
                    "this.config.finalCalPrice = packagePrice + additionalPackPrice ;\r",
                    "//Ext.ComponentQuery.query('#rtBillMonthlyMemberShipFld')[0].setValue(packagePrice + additionalPackPrice ) ;\r",
                    "var addDiscount =  totalMonthlyMemberShip - packageDiscount - (Ext.ComponentQuery.query('#rtBillMonthlyMemberShipFld')[0].getValue()) ;//allPackModulePrice - (packagePrice + additionalPackPrice) ;\r",
                    "Ext.ComponentQuery.query('#rtBillAdditionalDiscountTxtFld')[0].setValue(formatNum(addDiscount) ) ;\r",
                    ""
                ]
            },
            "designerId": "61da0570-6b3e-4c0f-bc9e-29dd797dd27f"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "onModuleListSelectUnSelect",
                "implHandler": [
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    " var that = this ;\r",
                    " var timeout = setTimeout(function(){\r",
                    "            that.calculateBillingPrices() ;\r",
                    " },100);"
                ]
            },
            "designerId": "f9734e53-87db-486d-97a4-26befbbd8e87"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "list[itemId=rmProSelectPackageList]",
                "designer|targetType": "Ext.dataview.List",
                "fn": "onrmProSelectPackageListSelect",
                "implHandler": [
                    "console.log(record);\r",
                    "      //     Ext.ComponentQuery.query('#productRmproPackgSlctFldBilling')[0].setValue( record.data.value );\r",
                    "      // RMdatalink.app.getController('BillingDetailsController').config.pricingData[3].active_pricing_policy = parseInt(record.data.value,0) ;\r",
                    "\r",
                    "this.config.rmProPackValue =  record.data.value ;\r",
                    "\r",
                    "\r",
                    "if(record.data.value == \"5\")\r",
                    "{\r",
                    "    Ext.ComponentQuery.query('#rmProModulesForRtList')[0].setFlex(0.14);\r",
                    "}else{\r",
                    "\r",
                    "    Ext.ComponentQuery.query('#rmProModulesForRtList')[0].setFlex( 1 );\r",
                    "}\r",
                    "\r",
                    "\r",
                    "var packName = '<div style=\"font-size: 14px;margin-left: 10px;\">' + record.data.text+ '</div>' ;\r",
                    "Ext.ComponentQuery.query('#rmProModulesForRtListPanel')[0].down('#productPackageNameLabel').setHtml( packName );\r",
                    "\r",
                    "Ext.ComponentQuery.query('#rmProModulesForRtListPanel')[0].down('#productPackageBundlePriceLbl').setHtml( '<div style=\"margin-right: 38px;font-size: small;\"> Bundle Price ::'+record.data.rm_pro_bundle_price+'</div>');\r",
                    "\r",
                    "this.fillModuleLists() ;\r",
                    "var moduleList = Ext.ComponentQuery.query('#rmProModulesForRtListPanel')[0].down('#mainList') ;\r",
                    "\r",
                    "//var moduleStore = moduleList.getStore() ;\r",
                    "var moduleStore = Ext.getStore('products.BillingRmproModules') ;\r",
                    "\r",
                    "var addOnsList = Ext.ComponentQuery.query('#rtProductAddOnsModuleLst')[0] ;\r",
                    "\r",
                    "var rm_pro_modules = record.data.rm_pro_modules ;\r",
                    "\r",
                    "//this.fillModuleLists() ;\r",
                    "\r",
                    "\r",
                    "//moduleList.selectAll();\r",
                    "\r",
                    "//module_listed_order\r",
                    "// for(var i = 0 ; i < moduleStore.getData().all.length; i++ ){\r",
                    "\r",
                    "//     var rec = moduleStore.getAt(i) ;\r",
                    "//     rec.set('module_listed_order',(100+ i));\r",
                    "\r",
                    "// }\r",
                    "\r",
                    "\r",
                    "\r",
                    "var allMoulesStore = Ext.getStore('products.AllBillingModulesStore');\r",
                    "var allModuleList = Ext.ComponentQuery.query('#productRmPRoAllModulesPanel')[0].down('#mainList') ;\r",
                    "\r",
                    "\r",
                    "allModuleList.deselectAll() ;\r",
                    "\r",
                    "\r",
                    "var adOnsStore = addOnsList.getStore() ;\r",
                    " for(var i =0 ; i< rm_pro_modules.length; i++){\r",
                    "\r",
                    "    var recIndex = adOnsStore.findExact('_id', rm_pro_modules[i].module_id ) ;\r",
                    "\r",
                    "    if(recIndex != -1)\r",
                    "    {\r",
                    "\r",
                    "        addOnsList.select(adOnsStore.getAt(recIndex),true,true) ;\r",
                    "\r",
                    "\r",
                    "    }\r",
                    "\r",
                    "\r",
                    "\r",
                    "        var mrIndex = allMoulesStore.findExact('_id', rm_pro_modules[i].module_id ) ;\r",
                    "\r",
                    "    if(mrIndex != -1)\r",
                    "    {\r",
                    "\r",
                    "        allModuleList.select(allMoulesStore.getAt(mrIndex),true,true) ;\r",
                    "\r",
                    "\r",
                    "    }\r",
                    "\r",
                    " }\r",
                    "\r",
                    "\r",
                    "// for(var i =0 ; i< rm_pro_modules.length; i++){\r",
                    "\r",
                    "//     var recIndex = moduleStore.findExact('_id', rm_pro_modules[i].module_id ) ;\r",
                    "\r",
                    "//     if(recIndex != -1)\r",
                    "//     {\r",
                    "\r",
                    "//         moduleStore.getAt(recIndex).set('module_listed_order',i );\r",
                    "\r",
                    "\r",
                    "\r",
                    "//     }\r",
                    "// }\r",
                    "\r",
                    "this.calculateBillingPrices() ;\r",
                    "\r",
                    "//\r",
                    " Ext.ComponentQuery.query('#productRmproPackgSlctFldBilling')[0].setValue( record.data.value );\r",
                    "\r",
                    "this.setRMPackageModule() ;\r",
                    "\r",
                    "\r",
                    "//productRmproRateSlctFldBilling\r",
                    "\r",
                    ""
                ],
                "name": "select"
            },
            "designerId": "7873e30b-dde4-4c0d-bd3f-63871e28ca94"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "textfield[itemId=rtBillMonthlyMemberShipFld]",
                "designer|targetType": "Ext.field.Text",
                "fn": "onrtBillMonthlyMemberShipFldChange",
                "implHandler": [
                    "if( ( this.config.allPackModulePrice && this.config.finalCalPrice ) ||( this.config.allPackModulePrice == 0  )  )\r",
                    "{\r",
                    "    var addDiscount = this.config.totalMonthlyMemberShip - this.config.packageDiscount - parseFloat(newValue) ;//this.config.allPackModulePrice - parseFloat(newValue) ;\r",
                    "    Ext.ComponentQuery.query('#rtBillAdditionalDiscountTxtFld')[0].setValue(formatNum(addDiscount) ) ;\r",
                    "}\r",
                    "\r",
                    "this.calculateBillingDiscount() ;\r",
                    "\r",
                    "var freq =  Ext.ComponentQuery.query('#productRmproSlctTermBillFrqSlctFld')[0].getValue() ;\r",
                    "if( !freq || !newValue ){\r",
                    "    return ;\r",
                    "}\r",
                    "var contractPrice =parseFloat(newValue) * parseInt(freq) ;\r",
                    "\r",
                    "var advacePaymentBenList = Ext.ComponentQuery.query('#rmProDiscountsForRtList')[0].down('#mainList');\r",
                    "\r",
                    "var selction = advacePaymentBenList.getSelection() ;\r",
                    "\r",
                    "if(selction && selction.length > 0){\r",
                    "    \r",
                    "    contractPrice =  selction[0].get('discount_total');\r",
                    "}\r",
                    "\r",
                    "\r",
                    "Ext.ComponentQuery.query('#productRmProSlctTermPrice')[0].setValue(formatNum(contractPrice));"
                ],
                "name": "change"
            },
            "designerId": "f0cf66a3-5080-483d-a7e6-f2c69ee0ab3d"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "calculateBillingDiscount",
                "implHandler": [
                    "var newValue = Ext.ComponentQuery.query('#rtBillMonthlyMemberShipFld')[0].getValue() ;\r",
                    "\r",
                    "if(!newValue && newValue == \"\"){\r",
                    "\r",
                    "    return ;\r",
                    "}\r",
                    "\r",
                    "var discFldValue = (Ext.ComponentQuery.query('#rtBillTotalMonthlyMbrShipFld')[0].getValue() - parseFloat(newValue) ).toFixed(2);\r",
                    "\r",
                    "Ext.ComponentQuery.query('#rtBillDiscountTxtFld')[0].setValue(discFldValue);\r",
                    "\r",
                    "var yrlyMbrShip = (parseFloat(newValue) * 12).toFixed(2) ;\r",
                    "\r",
                    "Ext.ComponentQuery.query('#rtBillYearlyMemberShipFld')[0].setValue( formatNum(yrlyMbrShip) );\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "var rtDiscountStore = Ext.getStore('products.BillingDiscount') ;\r",
                    "\r",
                    "//var yrlyMbrShip = Ext.ComponentQuery.query('#rtBillYearlyMemberShipFld')[0].getValue() ;\r",
                    "\r",
                    "if( !yrlyMbrShip || yrlyMbrShip == \"\"){\r",
                    "    return ;\r",
                    "}\r",
                    "\r",
                    "\r",
                    "var arrayToIterate = rtDiscountStore.getData().all;\r",
                    "for(var i = 0 ; i < arrayToIterate.length; i++ ){\r",
                    "\r",
                    "    var rec = arrayToIterate[i] ;\r",
                    "    var discount_total = (yrlyMbrShip * (100 - rec.get('discount_value')) )/100 ;\r",
                    "    var discount_saving = yrlyMbrShip - discount_total ;\r",
                    "    var discount_per_month = discount_total / 12 ;\r",
                    "\r",
                    "    var duration = rec.get('discount_duration') ;\r",
                    "\r",
                    "    if(! duration){\r",
                    "        duration = i + 1;\r",
                    "    }\r",
                    "\r",
                    "        discount_total =   discount_total.toFixed(2) ; //Math.round(discount_total) ;\r",
                    "        discount_saving = discount_saving.toFixed(2) ; // Math.round(discount_saving) ;\r",
                    "        discount_per_month = discount_per_month.toFixed(2) ; // Math.round(discount_per_month) ;\r",
                    "\r",
                    "    rec.set('discount_total',discount_total * duration );\r",
                    "    rec.set('discount_saving',discount_saving * duration  );\r",
                    "    rec.set('discount_per_month',discount_per_month);\r",
                    "\r",
                    "    rec.dirty = true;\r",
                    "}\r",
                    "\r",
                    "rtDiscountStore.sync() ;"
                ]
            },
            "designerId": "92b8f9ac-01de-4586-a2eb-49aa7a5be5b8"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "initProductRtBilling",
                "implHandler": [
                    "//Retailer RM-PRO Billing\r",
                    "\r",
                    "Ext.ComponentQuery.query('#productRmPRoAllModulesPanel')[0].setHidden(false);\r",
                    "Ext.ComponentQuery.query('#rtProductAddOnsModuleLst')[0].setHidden(true);\r",
                    "Ext.ComponentQuery.query('#rtDatalinkTotalFldsLbl')[0].setHidden(true);\r",
                    "Ext.ComponentQuery.query('#rmProModulesForRtList')[0].setHidden(true);\r",
                    "\r",
                    "var rtRecord =  RMdatalink.util.globalConfig.getDataToShowInSettingWindow().record ;\r",
                    "\r",
                    "if(Ext.ComponentQuery.query('#rtBillingHeaderLabel')[0])\r",
                    "{\r",
                    "    Ext.ComponentQuery.query('#rtBillingHeaderLabel')[0].setHtml(rtRecord.get('store_name') + \" : RMPro product setup\");\r",
                    "}\r",
                    "\r",
                    "\r",
                    "this.config.rtProduct = rtRecord.get('products');\r",
                    "\r",
                    "\r",
                    "var product_billng = rtRecord.get('product_billng') ;\r",
                    "\r",
                    "console.log(product_billng) ;\r",
                    "\r",
                    "if(!product_billng || ! product_billng.product_rmpro){\r",
                    "\r",
                    "\r",
                    "    Ext.ComponentQuery.query('#rmProSelectRateList')[0].select(0,false,true) ;\r",
                    "    Ext.ComponentQuery.query('#rmProSelectPackageList')[0].select(0,false,false) ;\r",
                    "\r",
                    "     Ext.ComponentQuery.query('#productRmproSlctTermBillFrqSlctFld')[0].setValue(1) ;\r",
                    "     Ext.ComponentQuery.query('#productRmproRateSlctFldBilling')[0].setValue('module_standard_price') ;\r",
                    "\r",
                    "\r",
                    "   // Ext.ComponentQuery.query('#rmProSelectRateList')[0].select(0,false,true) ;\r",
                    "\r",
                    "    return ;\r",
                    "}\r",
                    "\r",
                    "\r",
                    "console.log(product_billng) ;\r",
                    "\r",
                    "\r",
                    "var selectedPackage = product_billng.product_rmpro.selected_package ;\r",
                    "var selectedRate = product_billng.product_rmpro.selected_rate == \"module_standard_price\" ? 0 : 1 ;\r",
                    "var monthlyMbrShip = product_billng.product_rmpro.monthly_membership ;\r",
                    "var intActDate =  product_billng.product_rmpro.initial_activation_date ;\r",
                    "\r",
                    "\r",
                    "\r",
                    "if(! intActDate)\r",
                    "{\r",
                    "    intActDate = RMdatalink.util.globalMethods.getAmToday();\r",
                    "}\r",
                    "Ext.ComponentQuery.query('#rmProSelectPackageList')[0].select((selectedPackage-1),false,true) ;\r",
                    "\r",
                    "var rtVal = 'module_promotional_price';\r",
                    "if(selectedRate == \"0\" ){\r",
                    "    rtVal = 'module_standard_price';\r",
                    "}\r",
                    "\r",
                    "Ext.ComponentQuery.query('#rmProSelectRateList')[0].select(selectedRate,false,false) ;\r",
                    "\r",
                    "  Ext.ComponentQuery.query('#productRmproPackgSlctFldBilling')[0].setValue( selectedPackage );\r",
                    "Ext.ComponentQuery.query('#productRmproRateSlctFldBilling')[0].setValue( rtVal );\r",
                    "\r",
                    "\r",
                    "\r",
                    "if(Ext.ComponentQuery.query('#rtProductBillIntActDateFld')[0])\r",
                    "{\r",
                    "    Ext.ComponentQuery.query('#rtProductBillIntActDateFld')[0].setValue(intActDate) ;\r",
                    "}\r",
                    "Ext.ComponentQuery.query('#rtBillMonthlyMemberShipFld')[0].setValue(formatNum(monthlyMbrShip)) ;\r",
                    "\r",
                    "var modules = product_billng.product_rmpro.product_modules ;\r",
                    "\r",
                    "this.fillModuleLists() ;\r",
                    "\r",
                    "this.selectModulefrmModuleId(modules) ;\r",
                    "\r",
                    "Ext.ComponentQuery.query('#rtBillingCommissionableAmtFld')[0].setValue( product_billng.product_rmpro.commissionable_ammount);\r",
                    "Ext.ComponentQuery.query('#rtBillingCommissionPercentFld')[0].setValue( product_billng.product_rmpro.commission_percent) ;\r",
                    "\r",
                    "var salesPersonsStore = Ext.getStore('products.RtSalesPersonStore') ;\r",
                    "\r",
                    "salesPersonsStore.removeAll();\r",
                    "salesPersonsStore.sync();\r",
                    "\r",
                    "salesPersonsStore.setData(product_billng.product_rmpro.sales_persons);\r",
                    "salesPersonsStore.sync();\r",
                    "\r",
                    "\r",
                    "\r",
                    " var paymentPrdList = Ext.ComponentQuery.query('#rmProPaymentFreqList')[0];\r",
                    "\r",
                    " var paymentPrd = 1;\r",
                    "\r",
                    "if(product_billng.product_rmpro.payment_frequency){\r",
                    "\r",
                    "     paymentPrd = parseInt(product_billng.product_rmpro.payment_frequency, 0);\r",
                    "\r",
                    "}else{\r",
                    "\r",
                    "    paymentPrd = parseInt(product_billng.product_rmpro.payment_period, 0);\r",
                    "}\r",
                    "\r",
                    "\r",
                    "if(!paymentPrd){\r",
                    "\r",
                    "    paymentPrdList.select(0);\r",
                    "}else{\r",
                    "\r",
                    "    var paymentPrdStore = paymentPrdList.getStore() ;\r",
                    "     var searchValForPayPrd = paymentPrd.toString() ;\r",
                    "\r",
                    "    var recIndexForPayPrd = paymentPrdStore.findExact('value',searchValForPayPrd);\r",
                    "\r",
                    "    if(recIndexForPayPrd != -1){\r",
                    "\r",
                    "        paymentPrdList.select(recIndexForPayPrd) ;\r",
                    "    }\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "}\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "var discountList = Ext.ComponentQuery.query('#rmProDiscountsForRtListPanel')[0].down('#mainList');\r",
                    "\r",
                    " var discountValue =  parseInt(product_billng.product_rmpro.advance_payment_period, 0);\r",
                    "var discountStore = discountList.getStore() ;\r",
                    "\r",
                    "// if(!contractPeriod){\r",
                    "\r",
                    "\r",
                    "// }else{\r",
                    "\r",
                    "\r",
                    "    var searchVal = (discountValue/12).toString() ;\r",
                    "\r",
                    "    var recIndex = discountStore.findExact('discount_duration',searchVal);\r",
                    "\r",
                    "    if(recIndex != -1){\r",
                    "\r",
                    "        discountList.select(recIndex) ;\r",
                    "    }\r",
                    "\r",
                    "//}\r",
                    "\r",
                    " Ext.ComponentQuery.query('#productRmProSlctTermStrtDtFld')[0].setValue(product_billng.product_rmpro.contract_start_date ) ;\r",
                    "\r",
                    "/*\r",
                    " commissionable_ammount:Ext.ComponentQuery.query('#rtBillingCommissionableAmtFld')[0].getValue(),\r",
                    "    commission_percent:Ext.ComponentQuery.query('#rtBillingCommissionPercentFld')[0].getValue(),\r",
                    "    sales_persons:getSalesPersons()\r",
                    "*/\r",
                    "\r",
                    "var temp =product_billng.product_rmpro ;\r",
                    "  Ext.ComponentQuery.query('#productRmProSlctTermEndDate')[0].setValue(temp.payment_period_end) ;  ;\r",
                    "  \r",
                    "//  debugger;  \r",
                    "\r",
                    "  Ext.ComponentQuery.query('#productRmProSlctTermNxtDueDateFld')[0].setValue(temp.due_date) ;\r",
                    "  Ext.ComponentQuery.query('#productRmProSlctTermPrice')[0].setValue(temp.contract_price) ;\r",
                    "  Ext.ComponentQuery.query('#productRmproContractSentDateFld')[0].setValue(temp.contract_sent_date) ;\r",
                    "  Ext.ComponentQuery.query('#productRmproContractSignedDateFld')[0].setValue(temp.contract_signed_date) ;\r",
                    "// Ext.ComponentQuery.query('#productRmproContractRenewalDateFld')[0].setValue(temp.contract_renewal_date) ;\r",
                    "  Ext.ComponentQuery.query('#productRmproContractSendNewFld')[0].setValue(temp.contract_send_date) ;\r",
                    "\r",
                    "Ext.ComponentQuery.query('#productRmproSlctTermBillFrqSlctFld')[0].setValue(temp.payment_frequency) ;\r",
                    "\r",
                    "var contractTermList = Ext.ComponentQuery.query('#rmProSlctTermList')[0];\r",
                    "\r",
                    " var contractPeriod =  parseInt(product_billng.product_rmpro.contract_period, 0);\r",
                    "\r",
                    "\r",
                    "\r",
                    "if(!contractPeriod){\r",
                    "\r",
                    "    Ext.ComponentQuery.query('#productRmproSlctContractTerms')[0].setValue(12) ;\r",
                    "    contractTermList.select(0);\r",
                    "}else{\r",
                    "\r",
                    "    Ext.ComponentQuery.query('#productRmproSlctContractTerms')[0].setValue(contractPeriod) ;\r",
                    "        var contractStore = contractTermList.getStore() ;\r",
                    "\r",
                    "     var searchValForContract = contractPeriod.toString() ;\r",
                    "\r",
                    "    var recIndexForContract = contractStore.findExact('value',searchValForContract);\r",
                    "\r",
                    "    if(recIndexForContract != -1){\r",
                    "\r",
                    "        contractTermList.select(recIndexForContract) ;\r",
                    "    }\r",
                    "\r",
                    "\r",
                    "}\r",
                    ""
                ]
            },
            "designerId": "471bbf2a-49e7-42ce-84fc-dd0641fda392"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "showSubscription"
                ],
                "fn": "saveRtProductBilling",
                "implHandler": [
                    "//this.config.rtProduct = rtRecord.get('products');\r",
                    "\r",
                    "/*\r",
                    "\r",
                    "\r",
                    "rtBillDiscountTxtFld\r",
                    "rtBillMonthlyMemberShipFld\r",
                    "rtBillYearlyMemberShipFld\r",
                    "\r",
                    "\r",
                    "product_billng\r",
                    "{\r",
                    "    product_rmpro\r",
                    "    {\r",
                    "    initial_activation_date\r",
                    "    selected_package:\r",
                    "    selected_rate:\r",
                    "    monthly_membership\r",
                    "    product_modules:[\r",
                    "    {\r",
                    "        module_id:\r",
                    "        trial:\r",
                    "        quantity:\r",
                    "    }\r",
                    "    ]\r",
                    "    }\r",
                    "}\r",
                    "*/\r",
                    "\r",
                    "var that = this ;\r",
                    "var rtRecord =  RMdatalink.util.globalConfig.getDataToShowInSettingWindow().record ;\r",
                    "\r",
                    "var recToUpdate ={product_billng : rtRecord.get('product_billng') ? rtRecord.get('product_billng') : {} };\r",
                    "\r",
                    "var rateKey = Ext.ComponentQuery.query('#rmProSelectRateList')[0].getSelection()[0].data.value ;\r",
                    "var monthlyMbrShip = Ext.ComponentQuery.query('#rtBillMonthlyMemberShipFld')[0].getValue() ;\r",
                    "var masterStore = Ext.getStore('retailersMaster');\r",
                    "\r",
                    "var initActData = Ext.ComponentQuery.query('#rtProductBillIntActDateFld')[0].getValue() ;\r",
                    "\r",
                    "var temp = recToUpdate.product_billng ? ( recToUpdate.product_billng.product_rmpro ? recToUpdate.product_billng.product_rmpro : {} ) : {} ;\r",
                    "\r",
                    "console.log(\"*******************************\");\r",
                    "console.log(temp);\r",
                    "\r",
                    "\r",
                    "    temp.initial_activation_date = initActData;\r",
                    "    temp.selected_package = getSelectedPackage() ;\r",
                    "    temp.selected_rate = rateKey ;\r",
                    "    temp.monthly_membership  = monthlyMbrShip ;\r",
                    "    temp.product_modules = that.getSelectedModules() ;\r",
                    "    temp.commissionable_ammount = Ext.ComponentQuery.query('#rtBillingCommissionableAmtFld')[0].getValue() ;\r",
                    "    temp.commission_percent = Ext.ComponentQuery.query('#rtBillingCommissionPercentFld')[0].getValue() ;\r",
                    "    temp.sales_persons = getSalesPersons() ;\r",
                    "\r",
                    "    temp.payment_period = getPayemntPeriod() ;\r",
                    "\r",
                    "    temp.advance_payment_period = getAdvancePaymentPeriod() ;\r",
                    "\r",
                    "    temp.contract_period = getContractPeriod() ;\r",
                    "\r",
                    "    temp.payment_frequency = getPayemntPeriod() ;\r",
                    "\r",
                    "    temp.payment_status = \"unpaid\" ;\r",
                    "\r",
                    "if(!temp.due_date && false)\r",
                    "{\r",
                    "\r",
                    "    temp.due_date =  Ext.ComponentQuery.query('#productRmProSlctTermStrtDtFld')[0].getValue() ;\r",
                    "\r",
                    "/*\r",
                    "\r",
                    "    if(!initActData){\r",
                    "\r",
                    "        Ext.Msg.alert(\"Initial Activation date required to save product setup.\");\r",
                    "        return ;\r",
                    "    }\r",
                    "\r",
                    "\r",
                    "\r",
                    "    var todaysDate = new Date() ;\r",
                    "    var tempDate = new Date() ;\r",
                    "\r",
                    "    tempDate.setDate(\"01\");\r",
                    "\r",
                    "\r",
                    "    var actDateObj = new Date(initActData) ;\r",
                    "\r",
                    "    if(actDateObj < tempDate )\r",
                    "    {\r",
                    "\r",
                    "            temp.due_date = (todaysDate.getMonth() + 2) + \"/\"+ (actDateObj.getDate())+\"/\" + todaysDate.getFullYear();\r",
                    "\r",
                    "            temp.payment_period_start =  (todaysDate.getMonth() + 1 ) + \"/\"+ (actDateObj.getDate())+\"/\" + todaysDate.getFullYear(); // temp.due_date ;\r",
                    "\r",
                    "             todaysDate.setMonth(todaysDate.getMonth()+1);\r",
                    "\r",
                    "             temp.payment_period_end = (todaysDate.getMonth() + 1 ) + \"/\"+ (actDateObj.getDate())+\"/\" + todaysDate.getFullYear();\r",
                    "    }\r",
                    "    else{\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "             temp.due_date = (actDateObj.getMonth() + 2) + \"/\"+ (actDateObj.getDate())+\"/\" + actDateObj.getFullYear();\r",
                    "\r",
                    "             temp.payment_period_start = temp.due_date ;\r",
                    "\r",
                    "             actDateObj.setMonth(actDateObj.getMonth()+1);\r",
                    "\r",
                    "             temp.payment_period_end = (actDateObj.getMonth() + 1 ) + \"/\"+ (actDateObj.getDate())+\"/\" + actDateObj.getFullYear();\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "    }\r",
                    "\r",
                    "*/\r",
                    "}\r",
                    "\r",
                    "\r",
                    "            var paymentInterval = 1 ;\r",
                    "            if( temp.advance_payment_period){\r",
                    "\r",
                    "                paymentInterval = temp.advance_payment_period ;\r",
                    "\r",
                    "                temp.payment_period = paymentInterval ;\r",
                    "\r",
                    "            }else{\r",
                    "\r",
                    "                paymentInterval =  temp.payment_period ;\r",
                    "            }\r",
                    "\r",
                    "           temp.total_payble = Ext.ComponentQuery.query('#productRmProSlctTermPrice')[0].getValue() ;\r",
                    "\r",
                    "            paymentInterval = parseInt(paymentInterval,0) ;\r",
                    "\r",
                    "            if( true ||! temp.payment_period_start ||   temp.payment_period_start == \"\")\r",
                    "            {\r",
                    "             temp.payment_period_start =  Ext.ComponentQuery.query('#productRmProSlctTermNxtDueDateFld')[0].getValue() ;\r",
                    "            }\r",
                    "\r",
                    "            temp.contract_start_date =  Ext.ComponentQuery.query('#productRmProSlctTermStrtDtFld')[0].getValue() ;\r",
                    "\r",
                    "             var tempEndDate = new Date(temp.payment_period_start) ;\r",
                    "\r",
                    "\r",
                    "             tempEndDate.setMonth(tempEndDate.getMonth() + paymentInterval) ;\r",
                    "\r",
                    "             temp.payment_period_end = (tempEndDate.getMonth() + 1 ) + \"/\"+ (tempEndDate.getDate())+\"/\" + tempEndDate.getFullYear(); // Ext.ComponentQuery.query('#productRmProSlctTermEndDate')[0].getValue() ;  //(tempEndDate.getMonth() + 1 ) + \"/\"+ (tempEndDate.getDate())+\"/\" + tempEndDate.getFullYear();\r",
                    "\r",
                    "            temp.due_date =  Ext.ComponentQuery.query('#productRmProSlctTermNxtDueDateFld')[0].getValue() ;\r",
                    "            temp.contract_price =  Ext.ComponentQuery.query('#productRmProSlctTermPrice')[0].getValue() ;\r",
                    "            temp.contract_sent_date =  Ext.ComponentQuery.query('#productRmproContractSentDateFld')[0].getValue() ;\r",
                    "            temp.contract_signed_date =  Ext.ComponentQuery.query('#productRmproContractSignedDateFld')[0].getValue() ;\r",
                    "            temp.contract_renewal_date =  Ext.ComponentQuery.query('#productRmproContractRenewalDateFld')[0].getValue() ;\r",
                    "            temp.contract_send_date =  Ext.ComponentQuery.query('#productRmproContractSendNewFld')[0].getValue() ;\r",
                    "\r",
                    "            temp.payment_frequency = Ext.ComponentQuery.query('#productRmproSlctTermBillFrqSlctFld')[0].getValue() ;\r",
                    "\r",
                    "if(temp.delete_status){\r",
                    "    delete invoice.delete_status ;\r",
                    "}\r",
                    "\r",
                    "             recToUpdate.product_billng.product_rmpro =  temp ;\r",
                    "\r",
                    "\r",
                    "// recToUpdate.product_billng.product_rmpro = {\r",
                    "//     initial_activation_date:initActData,\r",
                    "//     selected_package: getSelectedPackage() ,\r",
                    "//     selected_rate:rateKey,\r",
                    "//     monthly_membership:monthlyMbrShip ,\r",
                    "//     product_modules:that.getSelectedModules(),\r",
                    "//     commissionable_ammount:Ext.ComponentQuery.query('#rtBillingCommissionableAmtFld')[0].getValue(),\r",
                    "//     commission_percent:Ext.ComponentQuery.query('#rtBillingCommissionPercentFld')[0].getValue(),\r",
                    "//     sales_persons:getSalesPersons()\r",
                    "// };\r",
                    "\r",
                    "console.log(recToUpdate) ;\r",
                    "\r",
                    "Ext.Viewport.setMasked( {\r",
                    "                xtype: 'loadmask'\r",
                    "            });\r",
                    "\r",
                    "   RMdatalink.iwa.rdl.doUpdateCollection(masterStore, recToUpdate , rtRecord.get('_id'), suc, err);\r",
                    "\r",
                    "\r",
                    "            function suc(){\r",
                    "\r",
                    "\r",
                    "                   RMdatalink.app.getController('Main').updateRetailerRecords(\"product_billng\",recToUpdate.product_billng, rtRecord.get('_id')) ;\r",
                    "\r",
                    "                   rtRecord.set(\"product_billng\",recToUpdate.product_billng);\r",
                    "                Ext.Viewport.setMasked(false);\r",
                    "               // that.hideProductBillingSheet();\r",
                    "\r",
                    "                if(showSubscription){\r",
                    "                    that.hideProductBillingSheet();\r",
                    "                    RMdatalink.app.getController('InvoiceController').showSubscriptionPage();\r",
                    "                }\r",
                    "\r",
                    "\r",
                    "            }\r",
                    "            function err(){\r",
                    "                    Ext.Viewport.setMasked(false);\r",
                    "            }\r",
                    "\r",
                    "function getSelectedPackage(){\r",
                    "\r",
                    "    var recs = Ext.ComponentQuery.query('#rmProSelectPackageList')[0].getSelection() ;\r",
                    "\r",
                    "    return recs[0].data.value ;\r",
                    "\r",
                    "}\r",
                    "\r",
                    "\r",
                    "function getSalesPersons(){\r",
                    "    return getArrayDataFromStore(Ext.getStore('products.RtSalesPersonStore'));\r",
                    "}\r",
                    "\r",
                    "\r",
                    "\r",
                    "  function getArrayDataFromStore(store){\r",
                    "\r",
                    "        var data = new Array();\r",
                    "        data = store.getData().items;\r",
                    "\r",
                    "        var dataToReturn = new Array();\r",
                    "\r",
                    "        for(var i=0; i < data.length ; i++){\r",
                    "\r",
                    "            dataToReturn.push(data[i].data);\r",
                    "        }\r",
                    "\r",
                    "        return dataToReturn ;\r",
                    "\r",
                    "    }\r",
                    "\r",
                    "\r",
                    "\r",
                    "function getPayemntPeriod(){\r",
                    "\r",
                    "\r",
                    "    var paymentPrdList = Ext.ComponentQuery.query('#rmProPaymentFreqList')[0];\r",
                    "\r",
                    "    if(paymentPrdList.getSelection().length == 0 ){\r",
                    "        return 1;\r",
                    "    }\r",
                    "\r",
                    "    var paymentPrd = paymentPrdList.getSelection()[0];\r",
                    "\r",
                    "    return  paymentPrd.data.value ;\r",
                    "}\r",
                    "\r",
                    "function getAdvancePaymentPeriod(){\r",
                    "\r",
                    "    var discounList = Ext.ComponentQuery.query('#rmProDiscountsForRtListPanel')[0].down('#mainList');\r",
                    "\r",
                    "    if(discounList.getSelection().length == 0 ){\r",
                    "        return null;\r",
                    "    }\r",
                    "\r",
                    "    var yrlyDiscount = discounList.getSelection()[0];\r",
                    "    var tempPrd = parseInt(yrlyDiscount.data.discount_duration,0 ) * 12 ;\r",
                    "    return   tempPrd ;\r",
                    "\r",
                    "}\r",
                    "\r",
                    "\r",
                    "function getContractPeriod(){\r",
                    "\r",
                    "    return Ext.ComponentQuery.query('#productRmproSlctContractTerms')[0].getValue() ;\r",
                    "\r",
                    "    var contractTermList = Ext.ComponentQuery.query('#rmProSlctTermList')[0];\r",
                    "\r",
                    "    if(contractTermList.getSelection().length == 0 ){\r",
                    "        return 12;\r",
                    "    }\r",
                    "\r",
                    "    var contract = contractTermList.getSelection()[0];\r",
                    "\r",
                    "    return  contract.data.value ;\r",
                    "}"
                ]
            },
            "designerId": "e8b151d1-e97a-49fc-9765-388563f3edaf"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "getSelectedModules",
                "implHandler": [
                    "\r",
                    "\r",
                    "var moduleList = Ext.ComponentQuery.query('#rmProModulesForRtListPanel')[0].down('#mainList') ;\r",
                    "\r",
                    "var addOnsList = Ext.ComponentQuery.query('#rtProductAddOnsModuleLst')[0] ;\r",
                    "var records = moduleList.getSelection().concat(addOnsList.getSelection()) ;\r",
                    "//concat\r",
                    "\r",
                    "\r",
                    "var dataToReturn = [] ;\r",
                    "for(var i =0 ; i < records.length; i++){\r",
                    "\r",
                    "    dataToReturn.push(\r",
                    "        {\r",
                    "            module_id:records[i].get('_id'),\r",
                    "            trial:records[i].get('trial'),\r",
                    "            quantity:records[i].get('quantity'),\r",
                    "            remark_val:records[i].get('remark_val')\r",
                    "        }\r",
                    "    );\r",
                    "}\r",
                    "\r",
                    "return dataToReturn ;"
                ]
            },
            "designerId": "c2412999-fa94-4c0b-a126-71261395143f"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button[itemId=rtBillingSaveBtn]",
                "designer|targetType": "Ext.Button",
                "fn": "onrtBillingSaveBtnTap",
                "implHandler": [
                    "//     var initActData = Ext.ComponentQuery.query('#rtProductBillIntActDateFld')[0].getValue() ;\r",
                    "\r",
                    "//disableEnableComponents\r",
                    "//     if(!initActData && initActData == \"\" ){\r",
                    "\r",
                    "//         Ext.Msg.alert(\"Alert\",\"Initial Activation date required to save product setup.\",Ext.emptyFn );\r",
                    "//         return ;\r",
                    "//     }\r",
                    "\r",
                    "\r",
                    "   Ext.ComponentQuery.query('#productBillingSheetCancel')[0].setText(\"Edit\") ;\r",
                    "    this.disableEnableComponents(true) ;\r",
                    "\r",
                    "\r",
                    "if(this.config.productKey == \"product_rmpro\" )\r",
                    "{\r",
                    "\r",
                    "        this.saveRtProductBilling() ;\r",
                    "\r",
                    "}\r",
                    "else{\r",
                    "\r",
                    "        this.saveProductDatalinkBilling() ;\r",
                    "\r",
                    "}\r",
                    "\r",
                    "\r",
                    "button.setHidden(true);"
                ],
                "name": "tap"
            },
            "designerId": "78754b3f-f00d-4ce0-8dee-3ddfdb5b453d"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "modules"
                ],
                "fn": "selectModulefrmModuleId",
                "implHandler": [
                    "try{\r",
                    "\r",
                    "var moduleList = Ext.ComponentQuery.query('#rmProModulesForRtListPanel')[0].down('#mainList') ;\r",
                    "\r",
                    "var moduleStore = moduleList.getStore() ;\r",
                    "\r",
                    "var addOnsList = Ext.ComponentQuery.query('#rtProductAddOnsModuleLst')[0] ;\r",
                    "\r",
                    "var adOnsStore = addOnsList.getStore() ;\r",
                    "\r",
                    "for(var i = 0 ; i < modules.length; i++){\r",
                    "\r",
                    "\r",
                    "    var recIndex = moduleStore.findExact(\"_id\",modules[i].module_id);\r",
                    "\r",
                    "    if(recIndex != -1){\r",
                    "\r",
                    "        var record = moduleStore.getAt(recIndex) ;\r",
                    "\r",
                    "//         if(modules[i].remark_val)\r",
                    "//         {\r",
                    "//           record.set('remark_val',modules[i].remark_val);\r",
                    "//         }\r",
                    "          record.set('trial',modules[i].trial);\r",
                    "\r",
                    "        moduleList.select(record,true,true ) ;\r",
                    "\r",
                    "\r",
                    "    }\r",
                    "}\r",
                    "\r",
                    "for(var i = 0 ; i < modules.length; i++){\r",
                    "\r",
                    "\r",
                    "    var recIndex = adOnsStore.findExact(\"_id\",modules[i].module_id);\r",
                    "\r",
                    "    if(recIndex != -1){\r",
                    "\r",
                    "        var record = adOnsStore.getAt(recIndex) ;\r",
                    "\r",
                    "          record.set('quantity',modules[i].quantity);\r",
                    "          record.set('trial',modules[i].trial);\r",
                    "        if(modules[i].remark_val)\r",
                    "        {\r",
                    "          record.set('remark_val',modules[i].remark_val);\r",
                    "        }\r",
                    "        addOnsList.select(record,true,true ) ;\r",
                    "\r",
                    "\r",
                    "    }\r",
                    "}\r",
                    "\r",
                    "\r",
                    "if(RMdatalink.app.getController('LoginHandler').config.isRetailerLogin)\r",
                    "{\r",
                    "    var selectedAddOns = addOnsList.getSelection() ;\r",
                    "\r",
                    "    var rtAddons = [] ;\r",
                    "\r",
                    "    for(var i =0 ; i < selectedAddOns.length ; i ++ ){\r",
                    "\r",
                    "        rtAddons.push(selectedAddOns[i].data) ;\r",
                    "    }\r",
                    "\r",
                    "    adOnsStore.removeAll();\r",
                    "    adOnsStore.sync() ;\r",
                    "\r",
                    "    adOnsStore.setData(rtAddons);\r",
                    "    adOnsStore.sync() ;\r",
                    "\r",
                    "    addOnsList.selectAll() ;\r",
                    "}\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "}catch(ex){\r",
                    "    console.error(ex);\r",
                    "}"
                ]
            },
            "designerId": "3a3c4014-f78e-4340-9e03-f51bf441f585"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "hideProductBillingSheet",
                "implHandler": [
                    "this.getBillingSheet().hide();\r",
                    "this.getBillingSheet().destroy() ;"
                ]
            },
            "designerId": "1099cd1c-48fa-4a72-a917-17a51e8b3432"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "fillModuleLists",
                "implHandler": [
                    "var rmProBillingStore = Ext.getStore('products.BillingRmproModules') ;\r",
                    "\r",
                    "\r",
                    "/*\r",
                    "RMdatalink.util.globalMethods.fillListData('#rmProSelectPackageList',billingController.config.pricingData[3].pricing_policy);\r",
                    "\r",
                    "products.BillingFromPackages\r",
                    "products.BillingModuleAddons\r",
                    "\r",
                    "  var recs = Ext.ComponentQuery.query('#rmProSelectPackageList')[0].getSelection() ;\r",
                    "\r",
                    "    return recs[0].data.value ;\r",
                    "\r",
                    "*/\r",
                    " var recs = Ext.ComponentQuery.query('#rmProSelectPackageList')[0].getSelection() ;\r",
                    " var modules = recs[0].data.rm_pro_modules ;\r",
                    "\r",
                    "var allModules = recs[0].data.data ;\r",
                    "\r",
                    "var packageStore = Ext.getStore('products.BillingFromPackages') ;\r",
                    "var addOnsStore = Ext.getStore('products.BillingModuleAddons') ;\r",
                    "\r",
                    "addOnsStore.removeAll();\r",
                    "addOnsStore.sync();\r",
                    "\r",
                    "packageStore.removeAll();\r",
                    "packageStore.sync();\r",
                    "\r",
                    "for(var i= 0 ; i < rmProBillingStore.getData().all.length; i++){\r",
                    "\r",
                    "    var tRec = rmProBillingStore.getAt(i) ;\r",
                    "\r",
                    "    var dataTOUpdate  = getQtyStdPromoPrice(tRec.get(\"_id\"));\r",
                    "\r",
                    "    var dataToUpdateForAddOns = getStdPromoPriceForAddons(tRec.get(\"_id\"));\r",
                    "\r",
                    "\r",
                    "     if(dataTOUpdate)\r",
                    "        {\r",
                    "            tRec.set(dataTOUpdate) ;\r",
                    "        }\r",
                    "\r",
                    "\r",
                    "    if(chckForPackageModule(tRec.get(\"_id\")))\r",
                    "    {\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "        // tRec.set(\"quantity\",tempQty ? tempQty : 1);\r",
                    "        packageStore.addData(tRec.data) ;\r",
                    "\r",
                    "    }else\r",
                    "    {\r",
                    "\r",
                    "//               if(dataToUpdateForAddOns)\r",
                    "//               {\r",
                    "//                     tRec.set(dataToUpdateForAddOns) ;\r",
                    "//               }\r",
                    "\r",
                    "\r",
                    "         //tRec.set(\"quantity\",tempQty ? tempQty : 1);\r",
                    "         addOnsStore.addData(tRec.data) ;\r",
                    "\r",
                    "    }\r",
                    "\r",
                    "}\r",
                    "addOnsStore.sync();\r",
                    "\r",
                    "packageStore.sync();\r",
                    "\r",
                    "var moduleList = Ext.ComponentQuery.query('#rmProModulesForRtListPanel')[0].down('#mainList') ;\r",
                    "moduleList.selectAll() ;\r",
                    "\r",
                    "function chckForPackageModule(_id){\r",
                    "\r",
                    " //   var recs = Ext.ComponentQuery.query('#rmProSelectPackageList')[0].getSelection() ;\r",
                    "  //  var modules = recs[0].data.rm_pro_modules ;\r",
                    "\r",
                    "    for(var i =0 ; i < modules.length ; i++){\r",
                    "\r",
                    "        if(_id == modules[i].module_id){\r",
                    "            return true ;\r",
                    "        }\r",
                    "    }\r",
                    "\r",
                    "    return false ;\r",
                    "}\r",
                    "\r",
                    "/*\r",
                    "promotional_price: \"50\"\r",
                    "quantity: \"3\"\r",
                    "standard_price: \"85\"\r",
                    "*/\r",
                    "\r",
                    "\r",
                    "function getQtyStdPromoPrice(m_id){\r",
                    "\r",
                    "    for(var i =0 ; i < allModules.length ; i++){\r",
                    "\r",
                    "        if(allModules[i].product_id == m_id){\r",
                    "\r",
                    "            return {\r",
                    "                module_promotional_price: allModules[i].promotional_price,\r",
                    "                module_standard_price :allModules[i].standard_price,\r",
                    "                quantity : allModules[i].quantity\r",
                    "            };\r",
                    "        }\r",
                    "    }\r",
                    "\r",
                    "    return null ;\r",
                    "}\r",
                    "\r",
                    "\r",
                    "function getStdPromoPriceForAddons(m_id){\r",
                    "\r",
                    "    for(var i =0 ; i < allModules.length ; i++){\r",
                    "\r",
                    "        if(allModules[i].product_id == m_id){\r",
                    "\r",
                    "            return {\r",
                    "                module_promotional_price: allModules[i].promotional_price,\r",
                    "                module_standard_price :allModules[i].standard_price\r",
                    "            };\r",
                    "        }\r",
                    "    }\r",
                    "\r",
                    "    return null ;\r",
                    "}\r",
                    "\r",
                    "this.setAllModuleHeight() ;"
                ]
            },
            "designerId": "a3ed19bf-1ec0-45ce-b795-5531794b2d6d"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "getBillingSheetDatalink",
                "implHandler": [
                    "if(Ext.ComponentQuery.query(\"#retailerBillingSheetDatalink\")[0])\r",
                    "{\r",
                    "\r",
                    " return Ext.ComponentQuery.query(\"#retailerBillingSheetDatalink\")[0];\r",
                    "\r",
                    "}else{\r",
                    "\r",
                    " return Ext.widget('retailerBillingSheetDatalink');\r",
                    "}\r",
                    ""
                ]
            },
            "designerId": "05b90280-9624-4090-9a5c-178856383d58"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "initDatalinkBilling",
                "implHandler": [
                    "\r",
                    "\r",
                    "var functionTOExecute = function(){\r",
                    "\r",
                    "    var productKey = \"product_datalink\" ;\r",
                    "\r",
                    "\r",
                    "    console.log(\"STEP TWO DEBUG\");\r",
                    "\r",
                    "    if(this.config.isecomProduct){\r",
                    "\r",
                    "        this.config.productKey = \"product_ecom\" ;\r",
                    "        productKey = \"product_ecom\" ;\r",
                    "        if( this.getIsFromVip() ){\r",
                    "\r",
                    "            productKey = \"product_vip\" ;\r",
                    "        }\r",
                    "        console.log(\"STEP TWO ECOMM\");\r",
                    "    }else{\r",
                    "\r",
                    "        console.log(\"STEP  TWO DATALINK DEBUG\");\r",
                    "        this.config.productKey = \"product_datalink\" ;\r",
                    "        productKey = \"product_datalink\" ;\r",
                    "    }\r",
                    "\r",
                    "    ///////////////////////////////////////////\r",
                    "\r",
                    "\r",
                    "    var form = Ext.ComponentQuery.query('#allProductsRtBillingSetupPanel')[0] ;\r",
                    "\r",
                    "    var ProductBillingController = RMdatalink.app.getController('ProductBillingController') ;\r",
                    "\r",
                    "    if( this.config.isecomProduct || this.getIsFromVip() ){\r",
                    "\r",
                    "\r",
                    "        console.log(\"STEP THREE DEBUG\");\r",
                    "        form.down('#productDlbdlVendorsSlctFld').setStore('ecomVendors');\r",
                    "        var ecomOpt = [\r",
                    "\r",
                    "            {\r",
                    "                text:\"SKUs + Images\",\r",
                    "                value:\"sku_images\"\r",
                    "            },\r",
                    "            {\r",
                    "                text:\"SKUs + Images + Addl Images\",\r",
                    "                value:\"sku_images_addlimages\"\r",
                    "            },\r",
                    "            {\r",
                    "                text:\"Vendors SKUs + Images\",\r",
                    "                value:\"vendors\"\r",
                    "            },\r",
                    "            {\r",
                    "                text:\"Vendors SKUs + Images + Addl Images\",\r",
                    "                value:\"vendorsAddl\"\r",
                    "            }\r",
                    "\r",
                    "        ];\r",
                    "        form.down('#productDlPriceOptionsimgAdlImgSlctFld').setOptions(ecomOpt);\r",
                    "\r",
                    "        form.down('#productDlVdrPricingPolicySlctFld').setStore('ecomVdPricingSkuImgs');\r",
                    "\r",
                    "\r",
                    "        if( this.getIsFromVip()){\r",
                    "\r",
                    "            // ADDON BUNDLE FOR VIP ARE DIFFERENT THAN ADDON BUNDLE OF ECOM\r",
                    "            // DIFFERENTIATING PARAMENTER ARE THRE PRODUCTS\r",
                    "            // IF THE PRODCUTS ARE VIP PRODUCT THEN , ADDON IS VIP ADDON\r",
                    "            // ELSE THE PRODUCTS IS ECOM ADDON\r",
                    "           var options =  getOptionsForAddOnsSelectFieledVIP(2);\r",
                    "\r",
                    "        }else{\r",
                    "           var options =  getOptionsForAddOnsSelectFieledVIP(1);\r",
                    "        }\r",
                    "\r",
                    "        form.down('#productDlAddOnsSlctFld').setOptions(options);\r",
                    "\r",
                    "\r",
                    "\r",
                    "        form.down('#productDlDiscountSKUSlctFld').setStore('ecomVdPricingSKUDiscount');\r",
                    "\r",
                    "        form.down('#productDlDiscountVdrsSlctFld').setStore('ecomVdPricingVdrDiscount');\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "    }else if(this.config.isDatalinkProduct){\r",
                    "\r",
                    "        form.down('#productDlbdlVendorsSlctFld').setStore('DatalinkVendors');\r",
                    "        var datalinkOpt = [\r",
                    "\r",
                    "            {\r",
                    "                text:\"SKUs + Images\",\r",
                    "                value:\"sku_images\"\r",
                    "            },\r",
                    "            {\r",
                    "                text:\"SKUs + Images + Addl Images\",\r",
                    "                value:\"sku_images_addlimages\"\r",
                    "            },\r",
                    "            {\r",
                    "                text:\"Vendors SKUs + Images\",\r",
                    "                value:\"vendors\"\r",
                    "            },\r",
                    "            {\r",
                    "                text:\"Vendors SKUs + Images + Addl Images\",\r",
                    "                value:\"vendorsAddl\"\r",
                    "            }\r",
                    "\r",
                    "        ];\r",
                    "        form.down('#productDlPriceOptionsimgAdlImgSlctFld').setOptions(datalinkOpt);\r",
                    "\r",
                    "        form.down('#productDlVdrPricingPolicySlctFld').setStore('DlVdPricingSkuImgs');\r",
                    "        form.down('#productDlAddOnsSlctFld').setStore('DatalinkProductBundle');\r",
                    "        form.down('#productDlDiscountSKUSlctFld').setStore('DlVdPricingSKUDiscount');\r",
                    "\r",
                    "        form.down('#productDlDiscountVdrsSlctFld').setStore('DlVdPricingVdrDiscount');\r",
                    "\r",
                    "\r",
                    "\r",
                    "    }\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "    /////////////////////////////////////////\r",
                    "\r",
                    "    var retailerBillingSheet = Ext.ComponentQuery.query('#retailerBillingSheet')[0] ;\r",
                    "\r",
                    "    retailerBillingSheet.down('#rtBillingSlctPackLbl').setHidden(true);\r",
                    "    retailerBillingSheet.down('#rmProSelectPackageList').setHidden(true);\r",
                    "\r",
                    "    retailerBillingSheet.down('#rmProModulesForRtList').setHeight(30);\r",
                    "\r",
                    "\r",
                    "    retailerBillingSheet.down('#productDatalinkVdrDiscTtlLbl').setHidden(true);\r",
                    "    retailerBillingSheet.down('#productDatalinkVdrDiscLst').setHidden(true);\r",
                    "\r",
                    "\r",
                    "    this.resetProductBillingView() ;\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "    var rtRecord =  RMdatalink.util.globalConfig.getDataToShowInSettingWindow().record ;\r",
                    "\r",
                    "    if(Ext.ComponentQuery.query('#rtBillingHeaderLabel')[0])\r",
                    "    {\r",
                    "        if(this.config.isecomProduct){\r",
                    "\r",
                    "            var statement = \"E-Commerce product setup\";\r",
                    "            if( this.getIsFromVip()  )\r",
                    "            {\r",
                    "                statement = \"VIP product setup\";\r",
                    "            }\r",
                    "            else{\r",
                    "                statement = \"E-Commerce product setup\";\r",
                    "            }\r",
                    "\r",
                    "            Ext.ComponentQuery.query('#rtBillingHeaderLabel')[0].setHtml(rtRecord.get('store_name') + statement);\r",
                    "            // Ext.ComponentQuery.query('#skusTotalInHeader')[0].setHtml(' SKU = ' + this.getSKUTotat() );\r",
                    "        }else{\r",
                    "            Ext.ComponentQuery.query('#rtBillingHeaderLabel')[0].setHtml(rtRecord.get('store_name') + \" : Datalink product setup\");\r",
                    "        }\r",
                    "\r",
                    "    }\r",
                    "\r",
                    "\r",
                    "    this.config.rtProduct = rtRecord.get('products');\r",
                    "\r",
                    "\r",
                    "    var product_billng = rtRecord.get('product_billng') ;\r",
                    "\r",
                    "    console.log(product_billng) ;\r",
                    "\r",
                    "\r",
                    "    if(this.config.isecomProduct)\r",
                    "    {\r",
                    "\r",
                    "        if(this.getIsFromVip())\r",
                    "        {\r",
                    "\r",
                    "            if(!product_billng || ! product_billng.product_vip )\r",
                    "            {\r",
                    "                return ;\r",
                    "            }\r",
                    "        }\r",
                    "        else if(!product_billng || ! product_billng.product_ecom)\r",
                    "        {\r",
                    "\r",
                    "            return ;\r",
                    "        }\r",
                    "\r",
                    "    }\r",
                    "    else\r",
                    "    {\r",
                    "\r",
                    "        if(!product_billng || ! product_billng.product_datalink){\r",
                    "\r",
                    "            return ;\r",
                    "        }\r",
                    "    }\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "    var monthlyMbrShip;\r",
                    "    var intActDate;\r",
                    "    if(product_billng[productKey]){\r",
                    "\r",
                    "        monthlyMbrShip = product_billng[productKey].monthly_membership ;\r",
                    "\r",
                    "\r",
                    "        intActDate =  product_billng[productKey].initial_activation_date ;\r",
                    "\r",
                    "    }\r",
                    "\r",
                    "\r",
                    "\r",
                    "    if(! intActDate)\r",
                    "    {\r",
                    "        intActDate = RMdatalink.util.globalMethods.getAmToday();\r",
                    "    }\r",
                    "\r",
                    "\r",
                    "    var rtVal = 'module_promotional_price';\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "    if(Ext.ComponentQuery.query('#rtProductBillIntActDateFld')[0])\r",
                    "    {\r",
                    "        Ext.ComponentQuery.query('#rtProductBillIntActDateFld')[0].setValue(intActDate) ;\r",
                    "    }\r",
                    "    if( monthlyMbrShip ){\r",
                    "\r",
                    "        Ext.ComponentQuery.query('#rtBillMonthlyMemberShipFld')[0].setValue(formatNum(monthlyMbrShip )) ;\r",
                    "    }\r",
                    "    var modules;\r",
                    "    if(product_billng[productKey]){\r",
                    "\r",
                    "        modules = product_billng[productKey].product_modules ;\r",
                    "    }\r",
                    "\r",
                    "\r",
                    "    var salesPersonsStore = Ext.getStore('products.RtSalesPersonStore') ;\r",
                    "\r",
                    "    salesPersonsStore.removeAll();\r",
                    "    salesPersonsStore.sync();\r",
                    "\r",
                    "    if(product_billng[productKey] ){\r",
                    "        Ext.ComponentQuery.query('#rtBillingCommissionableAmtFld')[0].setValue( product_billng[productKey].commissionable_ammount);\r",
                    "        Ext.ComponentQuery.query('#rtBillingCommissionPercentFld')[0].setValue( product_billng[productKey].commission_percent) ;\r",
                    "        salesPersonsStore.setData(product_billng[productKey].sales_persons);\r",
                    "        salesPersonsStore.sync();\r",
                    "\r",
                    "    }\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "    var paymentPrdList = Ext.ComponentQuery.query('#rmProPaymentFreqList')[0];\r",
                    "\r",
                    "    var paymentPrd = 1;\r",
                    "\r",
                    "    if( product_billng[productKey] &&  product_billng[productKey].payment_frequency){\r",
                    "\r",
                    "        paymentPrd = parseInt(product_billng[productKey].payment_frequency, 0);\r",
                    "\r",
                    "    }else if(product_billng[productKey]){\r",
                    "\r",
                    "        paymentPrd = parseInt(  product_billng[productKey].payment_period, 0);\r",
                    "    }\r",
                    "\r",
                    "\r",
                    "    if(!paymentPrd){\r",
                    "\r",
                    "        paymentPrdList.select(0);\r",
                    "    }else{\r",
                    "\r",
                    "        var paymentPrdStore = paymentPrdList.getStore() ;\r",
                    "        var searchValForPayPrd = paymentPrd.toString() ;\r",
                    "\r",
                    "        var recIndexForPayPrd = paymentPrdStore.findExact('value',searchValForPayPrd);\r",
                    "\r",
                    "        if(recIndexForPayPrd != -1){\r",
                    "\r",
                    "            paymentPrdList.select(recIndexForPayPrd) ;\r",
                    "        }\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "    }\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "    var discountList = Ext.ComponentQuery.query('#rmProDiscountsForRtListPanel')[0].down('#mainList');\r",
                    "    if( product_billng[productKey])\r",
                    "    {\r",
                    "        var discountValue =  parseInt(  product_billng[productKey] .advance_payment_period, 0);\r",
                    "    }else{\r",
                    "        var discountValue =  0 ; //parseInt(  product_billng[productKey] .advance_payment_period, 0);\r",
                    "    }\r",
                    "\r",
                    "    var discountStore = discountList.getStore() ;\r",
                    "\r",
                    "\r",
                    "\r",
                    "    var searchVal = (discountValue/12).toString() ;\r",
                    "\r",
                    "    var recIndex = discountStore.findExact('discount_duration',searchVal);\r",
                    "\r",
                    "    if(recIndex != -1){\r",
                    "\r",
                    "        discountList.select(recIndex) ;\r",
                    "    }\r",
                    "\r",
                    "\r",
                    "\r",
                    "    if(product_billng[productKey])\r",
                    "        Ext.ComponentQuery.query('#productRmProSlctTermStrtDtFld')[0].setValue(  product_billng[productKey].contract_start_date ) ;\r",
                    "\r",
                    "\r",
                    "\r",
                    "    var temp = product_billng[productKey] ;\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "    if(temp)  {\r",
                    "        Ext.ComponentQuery.query('#productRmProSlctTermEndDate')[0].setValue(temp.payment_period_end) ;\r",
                    "        Ext.ComponentQuery.query('#productRmProSlctTermNxtDueDateFld')[0].setValue(temp.due_date) ;\r",
                    "        Ext.ComponentQuery.query('#productRmProSlctTermPrice')[0].setValue(temp.contract_price) ;\r",
                    "        Ext.ComponentQuery.query('#productRmproContractSentDateFld')[0].setValue(temp.contract_sent_date) ;\r",
                    "        Ext.ComponentQuery.query('#productRmproContractSignedDateFld')[0].setValue(temp.contract_signed_date) ;\r",
                    "        // Ext.ComponentQuery.query('#productRmproContractRenewalDateFld')[0].setValue(temp.contract_renewal_date) ;\r",
                    "        Ext.ComponentQuery.query('#productRmproContractSendNewFld')[0].setValue(temp.contract_send_date) ;\r",
                    "        Ext.ComponentQuery.query('#productRmproSlctTermBillFrqSlctFld')[0].setValue(temp.payment_frequency) ;\r",
                    "\r",
                    "    }\r",
                    "\r",
                    "    var contractTermList = Ext.ComponentQuery.query('#rmProSlctTermList')[0];\r",
                    "\r",
                    "    var contractPeriod =  product_billng[productKey] ?   parseInt(product_billng[productKey].contract_period, 0) :1;\r",
                    "\r",
                    "\r",
                    "\r",
                    "    if(!contractPeriod){\r",
                    "\r",
                    "        Ext.ComponentQuery.query('#productRmproSlctContractTerms')[0].setValue(12) ;\r",
                    "        contractTermList.select(0);\r",
                    "    }else{\r",
                    "\r",
                    "        Ext.ComponentQuery.query('#productRmproSlctContractTerms')[0].setValue(contractPeriod) ;\r",
                    "        var contractStore = contractTermList.getStore() ;\r",
                    "\r",
                    "        var searchValForContract = contractPeriod.toString() ;\r",
                    "\r",
                    "        var recIndexForContract = contractStore.findExact('value',searchValForContract);\r",
                    "\r",
                    "        if(recIndexForContract != -1){\r",
                    "\r",
                    "            contractTermList.select(recIndexForContract) ;\r",
                    "        }\r",
                    "\r",
                    "\r",
                    "    }\r",
                    "\r",
                    "\r",
                    "    if(temp){\r",
                    "        Ext.ComponentQuery.query('#productDlAddOnsSlctFld')[0].setValue(temp.bundle_addons );\r",
                    "        Ext.ComponentQuery.query('#productDlbdlVendorsSlctFld')[0].setValue(temp.bundle_vendors);\r",
                    "        Ext.ComponentQuery.query('#productDlPriceOptionsimgAdlImgSlctFld')[0].setValue(temp.pricing_policy_option );\r",
                    "        Ext.ComponentQuery.query('#productDlPriceSlctFld')[0].setValue(temp.vendors_rate );\r",
                    "        Ext.ComponentQuery.query('#productDlVdrPricingPolicySlctFld')[0].setValue(temp.vendor_pricing_policy);\r",
                    "\r",
                    "        Ext.ComponentQuery.query('#productDlAddonsPriceSlctFld')[0].setValue(temp.products_rate );\r",
                    "        Ext.ComponentQuery.query('#productDlDiscountSKUSlctFld')[0].setValue(temp.vendor_sku_discount);\r",
                    "        Ext.ComponentQuery.query('#productDlDiscountVdrsSlctFld')[0].setValue(temp.vendor_count_discount );\r",
                    "\r",
                    "    }\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "    var timeout = setTimeout(function(){\r",
                    "\r",
                    "\r",
                    "        RMdatalink.app.getController('ProductBillingController').setDlDataPrice() ;\r",
                    "\r",
                    "        clearTimeout(timeout);\r",
                    "    },1000);\r",
                    "\r",
                    "\r",
                    "};\r",
                    "\r",
                    "\r",
                    "functionTOExecute.call(this);\r",
                    "\r",
                    "\r",
                    "\r",
                    "function getOptionsForAddOnsSelectFieledVIP(state){\r",
                    "\r",
                    "\r",
                    "    var ecomProductBundle = Ext.getStore(\"ecomProductBundle\");\r",
                    "    var vipArray = [];\r",
                    "    var ecomMainStore = Ext.getStore('products.ecomMain') ;\r",
                    "\r",
                    "    var productBundlesData = ecomProductBundle.getData().all;\r",
                    "\r",
                    "    for(var i=0;i<productBundlesData.length; i++){\r",
                    "\r",
                    "        var products = productBundlesData[i].data.products;\r",
                    "        var isThisVIPBundle = true;\r",
                    "\r",
                    "        products.forEach(function(obj){\r",
                    "\r",
                    "            var productId = obj.product_id;\r",
                    "            var recordInMainStore = ecomMainStore .findRecord(\"_id\",productId);\r",
                    "            if(recordInMainStore){\r",
                    "\r",
                    "                if(   recordInMainStore.get(\"product_type\") == state ){\r",
                    "\r",
                    "                    //THIS IS ECOMMERECE PRODUCT.\r",
                    "                    // SO THE BUNDLE IS ECOMMERCE\r",
                    "\r",
                    "                    isThisVIPBundle =false;\r",
                    "                }else{\r",
                    "\r",
                    "\r",
                    "                }\r",
                    "            }else{\r",
                    "                return;\r",
                    "            }\r",
                    "        });\r",
                    "\r",
                    "\r",
                    "        console.log( productBundlesData[i].raw  , isThisVIPBundle);\r",
                    "\r",
                    "\r",
                    "        //products\r",
                    "        if(isThisVIPBundle /*&& productBundlesData[i].raw.products && productBundlesData[i].raw.products.length*/){\r",
                    "\r",
                    "          var objToPush =   productBundlesData[i].raw;\r",
                    "            delete objToPush.id;\r",
                    "          vipArray.push(  productBundlesData[i].raw);\r",
                    "        }\r",
                    "\r",
                    "\r",
                    "    }\r",
                    "    return vipArray;\r",
                    "\r",
                    "}\r",
                    ""
                ]
            },
            "designerId": "a4a796e4-47e5-4857-87a4-6739ba3a3374"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "target"
                ],
                "fn": "displayDatalinkBilling",
                "implHandler": [
                    "\r",
                    "this.setDatalinkModules() ;\r",
                    "\r",
                    "\r",
                    "this.initProductDatalinkModuleSelection() ;\r",
                    "\r",
                    "\r",
                    " var that = this ;\r",
                    " var timeout = setTimeout(function(){\r",
                    "            that.calculateBillingPrices() ;\r",
                    " },500);\r",
                    "\r",
                    "\r",
                    "\r",
                    "var packName = '' ;\r",
                    "Ext.ComponentQuery.query('#rmProModulesForRtListPanel')[0].down('#productPackageNameLabel').setHtml( packName );\r",
                    "\r",
                    "\r",
                    "Ext.ComponentQuery.query('#rmProModulesForRtListPanel')[0].down('#productPackageBundlePriceLbl').setHtml('');\r",
                    ""
                ]
            },
            "designerId": "0355e70d-7e3a-4516-9b39-46b0e42a0f6e"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "setDatalinkModules",
                "implHandler": [
                    "function getArrayDataFromStore(store){\r",
                    "\r",
                    "    var data = new Array();\r",
                    "    data = store.getData().items;\r",
                    "    var dataToReturn = new Array();\r",
                    "    for(var i=0; i < data.length ; i++){\r",
                    "\r",
                    "        dataToReturn.push(data[i].data);\r",
                    "    }\r",
                    "\r",
                    "    return dataToReturn ;\r",
                    "\r",
                    "}\r",
                    "var productKey = this.config.productKey ;\r",
                    "\r",
                    "\r",
                    "\r",
                    "var rmProBillingStore = Ext.getStore('products.BillingRmproModules') ;\r",
                    "\r",
                    "\r",
                    "\r",
                    "var datalinkStore = Ext.getStore('products.DatalinkMain') ;\r",
                    "\r",
                    "if(this.config.isecomProduct){\r",
                    "    datalinkStore = Ext.getStore('products.ecomMain') ;\r",
                    "}else{\r",
                    "    datalinkStore = Ext.getStore('products.DatalinkMain') ;\r",
                    "}\r",
                    "\r",
                    "rmProBillingStore.removeAll();\r",
                    "rmProBillingStore.sync() ;\r",
                    "\r",
                    "\r",
                    "var data = getArrayDataFromStore(datalinkStore) ;\r",
                    "\r",
                    "var vendorPricing = this.getSumVendorsPromotionalStandardPrice();\r",
                    "\r",
                    "\r",
                    "console.error(\"THIS IS VENODR PROCIED\" ,  vendorPricing);\r",
                    "\r",
                    "\r",
                    "var isModuleForVIP = this.getIsFromVip();\r",
                    "\r",
                    "\r",
                    "var me = this;\r",
                    "function setHeaderInformation(string){\r",
                    "\r",
                    "    me.setHeaderInformation(string);\r",
                    "\r",
                    "}\r",
                    "setHeaderInformation('Description');\r",
                    "// setIsFromVip\r",
                    "for(var i=0 ; i< data.length ; i ++){\r",
                    "\r",
                    "    data[i].trial = \"\";\r",
                    "    data[i].quantity = 1;\r",
                    "    data[i].per_month = 1 ;\r",
                    "\r",
                    "    //data[i].module_listed_order = i + 1 ;\r",
                    "\r",
                    "    if( data[i].module_sku == \"DL-DATA\"  && this.getIsFromVip() )\r",
                    "    {\r",
                    "        var   datalinkStore = Ext.getStore('products.ecomMain') ;\r",
                    "        var recordOfConcern =  datalinkStore.findRecord({\"module_name\":\"Vendor Internet Program\" ,\r",
                    "                                                         product_type: \"1\" } );\r",
                    "\r",
                    "        console.log(recordOfConcern);\r",
                    "\r",
                    "        var selectedRow = RMdatalink.util.globalConfig.getDataInRetailerScreenForSaveOrCancel();\r",
                    "        var recordInMasterStore = selectedRow.record ;\r",
                    "        var vip_vendor = recordInMasterStore.data.e_commerce_info.vip_vendor;\r",
                    "\r",
                    "        data[i].module_standard_price = recordOfConcern.get('module_standard_price') ;\r",
                    "        data[i].module_promotional_price = recordOfConcern.get('module_promotional_price') ;\r",
                    "        data[i].quantity = 1;\r",
                    "        data[i].test = 1;\r",
                    "        data[i].total_sku = 0;\r",
                    "        try{\r",
                    "\r",
                    "           var stringToAttch =  \"Description \" +\"(  Vendor Partner: \" + vip_vendor + \" , \"   + \" Total SKU's :\"   + formatNormalNum( this.getSKUTotat() ) + \" )\";\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "            setHeaderInformation(stringToAttch);\r",
                    "           // data[i].module_description = data[i].module_description.split(\"(\").shift() +  stringToAttch ;\r",
                    "            //data[i].module_description +=   \"(\" + vip_vendor + \")\";\r",
                    "\r",
                    "\r",
                    "        }catch(e){\r",
                    "            //data[i].module_description +=   \"(\" + vip_vendor + \")\";\r",
                    "            setHeaderInformation(\"Description \" +  \"(  Vendor Partner: \" + vip_vendor + \")\"  );\r",
                    "        }\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "    }else if( data[i].module_sku == \"DL-DATA\" )     {\r",
                    "        data[i].module_standard_price = vendorPricing.standard_price ;\r",
                    "        data[i].module_promotional_price = vendorPricing.promotional_price ;\r",
                    "        data[i].quantity = vendorPricing.quantity;\r",
                    "\r",
                    "\r",
                    "    }\r",
                    "}\r",
                    "\r",
                    "//debugger;\r",
                    "\r",
                    "\r",
                    "function handleDataForVip(data){\r",
                    "    var isModuleForVIP = this.getIsFromVip();   // setIsFromVip\r",
                    "    var newData = [];\r",
                    "    if(this.config.isecomProduct)\r",
                    "    {\r",
                    "\r",
                    "        //             prodcutType = 2   THIS IS THE VALUE OF E_COMMERECE\r",
                    "        //             prodcutType = 1   THIS IS THE VALUE OF VIP\r",
                    "\r",
                    "        var prodcutType = 2;\r",
                    "        if(isModuleForVIP){\r",
                    "\r",
                    "            prodcutType = 1;\r",
                    "\r",
                    "        }else{\r",
                    "            prodcutType =2;\r",
                    "        }\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "        //COLLECTING THE PRODUCT OF VIP OR ECOMM\r",
                    "        for(var i = 0;i <data.length; i++){\r",
                    "\r",
                    "            if(  data[i]. product_type == prodcutType){\r",
                    "\r",
                    "                newData.push(data[i]);\r",
                    "            }\r",
                    "        }\r",
                    "         return newData;\r",
                    "\r",
                    "    }else{\r",
                    "\r",
                    "        return data;\r",
                    "    }\r",
                    "\r",
                    "\r",
                    "}\r",
                    "\r",
                    "\r",
                    "function getArrayFromDataforSelectedAdons(data){\r",
                    "    var vipVendorProgramListInEComm = Ext.ComponentQuery.query(\"#vipVendorProgramListInEComm\")[0];\r",
                    "    if( vipVendorProgramListInEComm && this.getIsFromVip()){\r",
                    "\r",
                    "        var store =  vipVendorProgramListInEComm.getStore();\r",
                    "        if(true || store){\r",
                    "\r",
                    "            for(var i =2; i <data.length ; i++){\r",
                    "\r",
                    "                if(store){\r",
                    "                    var module_name  = data[i].module_name;\r",
                    "                    var index = store.find('module_name' , module_name);\r",
                    "                    console.log(module_name);\r",
                    "                    if( index == -1){\r",
                    "                        data[i].quantity = 0;\r",
                    "                    }\r",
                    "\r",
                    "                }else{\r",
                    "                    data[i].quantity = 0;\r",
                    "\r",
                    "                }\r",
                    "                //if(  )\r",
                    "            }\r",
                    "\r",
                    "\r",
                    "        }else{\r",
                    "\r",
                    "                    return data;\r",
                    "        }\r",
                    "    }else{\r",
                    "\r",
                    "        return data;\r",
                    "    }\r",
                    "    return data;\r",
                    "}\r",
                    "\r",
                    "\r",
                    "function getAdditionalVendorsObjectForVIP(data){\r",
                    "\r",
                    "    var vendorsOfVIPSum  = this.getSumVendorsPromotionalStandardPrice(true);\r",
                    "            var string = \"\";\r",
                    "            try{\r",
                    "                (function(){\r",
                    "                    vendorsOfVIPSum.quantity.forEach(function(vendor){\r",
                    "\r",
                    "                        var vendorName = vendor.get(\"vendor_name\");\r",
                    "                        string +=vendorName ;\r",
                    "                        string += \" , \";\r",
                    "                    });\r",
                    "                })();\r",
                    "            }catch(e){\r",
                    "                console.log(\"ERRROR THROWN\" , e);\r",
                    "            }\r",
                    "\r",
                    "\r",
                    "\r",
                    "    for( var i = 0; i < data.length ; i++){\r",
                    "\r",
                    "\r",
                    "        if(  data[i].module_name == \"Additional Vendors\" &&  data[i].product_type == 1    ){\r",
                    "\r",
                    "\r",
                    "\r",
                    "            console.warn( vendorsOfVIPSum );\r",
                    "            console.warn( data[i]);\r",
                    "            data[i].module_promotional_price = vendorsOfVIPSum.promotional_price;\r",
                    "            data[i].quantity = vendorsOfVIPSum.quantity.length ? vendorsOfVIPSum.quantity.length -1 : 0;\r",
                    "            data[i].module_standard_price = vendorsOfVIPSum.standard_price;\r",
                    "            data[i].test = vendorsOfVIPSum.test;\r",
                    "            data[i].total_sku = vendorsOfVIPSum.total_sku ;\r",
                    "\r",
                    "\r",
                    "            data[i].module_description += string;\r",
                    "\r",
                    "//ata[i].module_description +=\r",
                    "\r",
                    "            break;\r",
                    "        }\r",
                    "\r",
                    "\r",
                    "    }\r",
                    "    /*\r",
                    "    module_standard_price: \"\"per_month: 1\r",
                    "\r",
                    "    */\r",
                    "\r",
                    "   return data;\r",
                    "\r",
                    "\r",
                    "}\r",
                    "\r",
                    "data = handleDataForVip.call(this , data);\r",
                    "data = getAdditionalVendorsObjectForVIP.call(this , data);\r",
                    "data = getArrayFromDataforSelectedAdons.call(this , data);\r",
                    "\r",
                    "\r",
                    "console.error(data);\r",
                    "\r",
                    "rmProBillingStore.setData(data);\r",
                    "rmProBillingStore.sync() ;\r",
                    "\r",
                    "\r",
                    "\r",
                    "var rtDiscountStore = Ext.getStore('products.BillingDiscount') ;\r",
                    "\r",
                    "var rmProDiscount = Ext.getStore('products.DatalinkDiscountStore');\r",
                    "\r",
                    "if(this.config.isecomProduct){\r",
                    "    rmProDiscount = Ext.getStore('products.ecomDiscountStore');\r",
                    "}else{\r",
                    "    rmProDiscount = Ext.getStore('products.DatalinkDiscountStore');\r",
                    "}\r",
                    "\r",
                    "\r",
                    "\r",
                    "rtDiscountStore.removeAll();\r",
                    "rtDiscountStore.sync() ;\r",
                    "\r",
                    "\r",
                    "\r",
                    "rtDiscountStore.setData(getArrayDataFromStore(rmProDiscount));\r",
                    "rtDiscountStore.sync() ;\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "///////////////////////////////////////////\r",
                    "\r",
                    "\r",
                    "\r",
                    "var allMoulesStore = Ext.getStore('products.AllBillingModulesStore');\r",
                    "allMoulesStore.removeAll();\r",
                    "allMoulesStore.sync() ;\r",
                    "\r",
                    "allMoulesStore.setData(data);\r",
                    "allMoulesStore.sync() ;\r",
                    "\r",
                    "\r",
                    "RMdatalink.app.getController('ProductBillingController').removeDLDataOptions() ;\r",
                    "\r",
                    "\r",
                    "var me =this;\r",
                    "var id = setTimeout(\r",
                    "    function(){\r",
                    "         var retailerBillingSheetList  = Ext.ComponentQuery.query(\"#retailerBillingSheet #allProductsRtBillingSetupPanel #productRmPRoAllModulesPanel #mainList\")[0];\r",
                    "        if(retailerBillingSheetList) {\r",
                    "\r",
                    "        }else{\r",
                    "            console.log(5);\r",
                    "            return;\r",
                    "        }\r",
                    "        var store =retailerBillingSheetList.getStore();\r",
                    "        if(store ){\r",
                    "\r",
                    "            var selectedRow = RMdatalink.util.globalConfig.getDataInRetailerScreenForSaveOrCancel();\r",
                    "            var record = selectedRow.record;\r",
                    "            var product =  record.get('product_billng');\r",
                    "            if(  product && me.getIsFromVip() )\r",
                    "            {\r",
                    "                var product_vip  = product.product_vip;\r",
                    "                if(product_vip){\r",
                    "\r",
                    "                    var product_modules = product_vip.product_modules;\r",
                    "                    if(product_modules){\r",
                    "\r",
                    "                    }else\r",
                    "                    {\r",
                    "                        console.log(1);\r",
                    "                        return;\r",
                    "                    }\r",
                    "                    console.log(6);\r",
                    "\r",
                    "                    var productList = retailerBillingSheetList;\r",
                    "\r",
                    "                    var status = false;\r",
                    "\r",
                    "                    productList.setDisableSelection(status) ;\r",
                    "                    for(var i = 0 ;i < product_modules.length ; i++){\r",
                    "\r",
                    "                        var _id  = product_modules[i]._id;\r",
                    "                        var recordInStore = store.find(\"_id\" ,_id );\r",
                    "\r",
                    "                        console.log(7);\r",
                    "\r",
                    "                        if( recordInStore >= 0){\r",
                    "                           var recordforStore  = store.getAt(recordInStore) ;\r",
                    "                                console.log(recordforStore);\r",
                    "                               retailerBillingSheetList.select(recordforStore , true ,false);\r",
                    "                               recordforStore.set('remark_val' , 2);\r",
                    "                               if( recordforStore.get('module_name')   == \"Additional Vendors\"){\r",
                    "\r",
                    "                               }else{\r",
                    "\r",
                    "                                 recordforStore.set('quantity', 1 );\r",
                    "                               }\r",
                    "\r",
                    "                               if( recordforStore.get('module_name')   == \"Vendor Internet Program\"){\r",
                    "                                        recordforStore.set('remark_val' , 1);\r",
                    "                               }\r",
                    "\r",
                    "                        }\r",
                    "\r",
                    "                    }\r",
                    "                    var status = true;\r",
                    "                    productList.setDisableSelection(status) ;\r",
                    "\r",
                    "\r",
                    "                }else{\r",
                    "                    console.log(2);\r",
                    "                    return;\r",
                    "                }\r",
                    "\r",
                    "\r",
                    "            }else{\r",
                    "                console.log(3);\r",
                    "\r",
                    "            }\r",
                    "\r",
                    "        }else{\r",
                    "            console.log(4);\r",
                    "            return;\r",
                    "        }\r",
                    "\r",
                    "\r",
                    "\r",
                    "    } , 600\r",
                    ");"
                ]
            },
            "designerId": "9397170b-7b23-454b-b862-11f0c66dddf3"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "string"
                ],
                "fn": "setHeaderInformation",
                "implHandler": [
                    "var productRmPRoAllModulesPanel = Ext.ComponentQuery.query('#productRmPRoAllModulesPanel')[0];\r",
                    "var headers = productRmPRoAllModulesPanel.down(\"#headerList\");\r",
                    "var storeofHeader = headers.getStore();\r",
                    "if(storeofHeader){\r",
                    "    storeofHeader.setData([{\r",
                    "        \"Description\":string||'Description'\r",
                    "\r",
                    "    }]);\r",
                    "\r",
                    "}else{\r",
                    "    headers.setData([{\r",
                    "        \"Description\":string||'Description'\r",
                    "\r",
                    "    }]);\r",
                    "\r",
                    "}"
                ]
            },
            "designerId": "f6043b66-1b3b-4173-b2f9-3a4c73a9d645"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "initProductDatalinkModuleSelection",
                "implHandler": [
                    "var productKey = this.config.productKey ;\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "var rtRecord =  RMdatalink.util.globalConfig.getDataToShowInSettingWindow().record ;\r",
                    "\r",
                    "\r",
                    "\r",
                    "if(this.config.isecomProduct){\r",
                    "       var statement = \"E-Commerce product setup\";\r",
                    "        if( this.getIsFromVip()  )\r",
                    "        {\r",
                    "            statement = \"VIP product setup\";\r",
                    "            productKey = \"product_vip\";\r",
                    "        }\r",
                    "        else{\r",
                    "            statement = \"E-Commerce product setup\";\r",
                    "        }\r",
                    "     Ext.ComponentQuery.query('#rtBillingHeaderLabel')[0].setHtml(rtRecord.get('store_name') + \" : \" + statement);\r",
                    "    // Ext.ComponentQuery.query('#skusTotalInHeader')[0].setHtml('  SKU =' + this.getSKUTotat() );\r",
                    "}else{\r",
                    "    Ext.ComponentQuery.query('#rtBillingHeaderLabel')[0].setHtml(rtRecord.get('store_name') + \" : Datalink product setup\");\r",
                    "}\r",
                    "\r",
                    "\r",
                    "this.config.rtProduct = rtRecord.get('products');\r",
                    "\r",
                    "var product_billng = rtRecord.get('product_billng') ;\r",
                    "\r",
                    "console.log(product_billng) ;\r",
                    "\r",
                    "this.fillDatalinkModuleList() ;\r",
                    "\r",
                    "if(!product_billng || ! product_billng[productKey]){\r",
                    "\r",
                    "\r",
                    "    Ext.ComponentQuery.query('#rmProSelectRateList')[0].select(0,false,true) ;\r",
                    "\r",
                    "\r",
                    "    return ;\r",
                    "}\r",
                    "\r",
                    "\r",
                    "console.log(product_billng) ;\r",
                    "\r",
                    "\r",
                    "var selectedRate = product_billng[productKey].selected_rate == \"module_standard_price\" ? 0 : 1 ;\r",
                    "var monthlyMbrShip = product_billng[productKey].monthly_membership ;\r",
                    "var intActDate =  product_billng[productKey].initial_activation_date ;\r",
                    "\r",
                    "if(! intActDate)\r",
                    "{\r",
                    "    intActDate = RMdatalink.util.globalMethods.getAmToday();\r",
                    "}\r",
                    "\r",
                    "Ext.ComponentQuery.query('#rmProSelectRateList')[0].select(selectedRate,false,false) ;\r",
                    "\r",
                    "Ext.ComponentQuery.query('#rtProductBillIntActDateFld')[0].setValue(intActDate) ;\r",
                    "\r",
                    "Ext.ComponentQuery.query('#rtBillMonthlyMemberShipFld')[0].setValue(monthlyMbrShip) ;\r",
                    "\r",
                    "var modules = product_billng[productKey].product_modules ;\r",
                    "\r",
                    "// this.fillDatalinkModuleList() ;\r",
                    "\r",
                    "this.selectModulefrmModuleId(modules) ;\r",
                    "\r",
                    "\r",
                    "///New Product setup implementation\r",
                    "\r",
                    "\r",
                    " var paymentPrdList = Ext.ComponentQuery.query('#rmProPaymentFreqList')[0];\r",
                    "\r",
                    " var paymentPrd = 1;\r",
                    "\r",
                    "if(product_billng[productKey].payment_frequency){\r",
                    "\r",
                    "     paymentPrd = parseInt(product_billng[productKey].payment_frequency, 0);\r",
                    "\r",
                    "}else{\r",
                    "\r",
                    "    paymentPrd = parseInt(product_billng[productKey].payment_period, 0);\r",
                    "}\r",
                    "\r",
                    "\r",
                    "if(!paymentPrd){\r",
                    "\r",
                    "    paymentPrdList.select(0);\r",
                    "}else{\r",
                    "\r",
                    "    var paymentPrdStore = paymentPrdList.getStore() ;\r",
                    "     var searchValForPayPrd = paymentPrd.toString() ;\r",
                    "\r",
                    "    var recIndexForPayPrd = paymentPrdStore.findExact('value',searchValForPayPrd);\r",
                    "\r",
                    "    if(recIndexForPayPrd != -1){\r",
                    "\r",
                    "        paymentPrdList.select(recIndexForPayPrd) ;\r",
                    "    }\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "}\r",
                    "\r",
                    "\r",
                    "var contractTermList = Ext.ComponentQuery.query('#rmProSlctTermList')[0];\r",
                    "\r",
                    " var contractPeriod =  parseInt(product_billng[productKey].contract_period, 0);\r",
                    "\r",
                    "if(!contractPeriod){\r",
                    "\r",
                    "    contractTermList.select(0);\r",
                    "}else{\r",
                    "        var contractStore = contractTermList.getStore() ;\r",
                    "\r",
                    "     var searchValForContract = contractPeriod.toString() ;\r",
                    "\r",
                    "    var recIndexForContract = contractStore.findExact('value',searchValForContract);\r",
                    "\r",
                    "    if(recIndexForContract != -1){\r",
                    "\r",
                    "        contractTermList.select(recIndexForContract) ;\r",
                    "    }\r",
                    "\r",
                    "\r",
                    "}\r",
                    "\r",
                    "\r",
                    "var discountList = Ext.ComponentQuery.query('#rmProDiscountsForRtListPanel')[0].down('#mainList');\r",
                    "\r",
                    " var discountValue =  parseInt(product_billng[productKey].advance_payment_period, 0);\r",
                    "var discountStore = discountList.getStore() ;\r",
                    "\r",
                    "if(!contractPeriod){\r",
                    "\r",
                    "\r",
                    "}else{\r",
                    "\r",
                    "\r",
                    "    var searchVal = (discountValue/12).toString() ;\r",
                    "\r",
                    "    var recIndex = discountStore.findExact('discount_duration',searchVal);\r",
                    "\r",
                    "    if(recIndex != -1){\r",
                    "\r",
                    "        discountList.select(recIndex) ;\r",
                    "    }\r",
                    "\r",
                    "}\r",
                    "\r",
                    " Ext.ComponentQuery.query('#productRmProSlctTermStrtDtFld')[0].setValue(product_billng[productKey].contract_start_date ) ;\r",
                    "\r",
                    "\r",
                    ""
                ]
            },
            "designerId": "a3dd1f04-99d4-4f2c-a46b-6623a45d2e2f"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "fillDatalinkModuleList",
                "implHandler": [
                    "var rmProBillingStore = Ext.getStore('products.BillingRmproModules') ;\r",
                    "\r",
                    "\r",
                    "\r",
                    "var packageStore = Ext.getStore('products.BillingFromPackages') ;\r",
                    "var addOnsStore = Ext.getStore('products.BillingModuleAddons') ;\r",
                    "\r",
                    "addOnsStore.removeAll();\r",
                    "addOnsStore.sync();\r",
                    "\r",
                    "packageStore.removeAll();\r",
                    "packageStore.sync();\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "for(var i= 0 ; i < rmProBillingStore.getData().all.length; i++){\r",
                    "\r",
                    "    var tRec = rmProBillingStore.getAt(i) ;\r",
                    "\r",
                    "\r",
                    "    addOnsStore.add(tRec) ;\r",
                    "\r",
                    "\r",
                    "}\r",
                    "\r",
                    "\r",
                    "addOnsStore.sync();\r",
                    "\r",
                    "\r",
                    ""
                ]
            },
            "designerId": "ee3c7e92-02b5-4406-a725-76ae7b85a89d"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "intRMPROBilling",
                "implHandler": [
                    "/*\r",
                    "\r",
                    "productKey\r",
                    "\r",
                    "\r",
                    "recToUpdate.product_billng.product_rmpro = {\r",
                    "    initial_activation_date:initActData,\r",
                    "    selected_package: getSelectedPackage() ,\r",
                    "    selected_rate:rateKey,\r",
                    "    monthly_membership:monthlyMbrShip ,\r",
                    "    product_modules:that.getSelectedModules(),\r",
                    "    commissionable_ammount:Ext.ComponentQuery.query('#rtBillingCommissionableAmtFld')[0].getValue(),\r",
                    "    commission_percent:Ext.ComponentQuery.query('#rtBillingCommissionPercentFld')[0].getValue(),\r",
                    "    sales_persons:getSalesPersons()\r",
                    "};\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "rtBillingSlctPackLbl\r",
                    "rmProSelectPackageList\r",
                    "\r",
                    "*/\r",
                    "\r",
                    "this.config.productKey = \"product_rmpro\" ;\r",
                    "\r",
                    "var retailerBillingSheet = Ext.ComponentQuery.query('#retailerBillingSheet')[0] ;\r",
                    "\r",
                    "retailerBillingSheet.down('#productDatalinkVdrDiscTtlLbl').setHidden(true);\r",
                    "retailerBillingSheet.down('#productDatalinkVdrDiscLst').setHidden(true);"
                ]
            },
            "designerId": "6c042c78-6e1e-4e13-9678-a2ec735ee0bb"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "resetProductBillingView",
                "implHandler": [
                    "var rmProBillingStore = Ext.getStore('products.BillingRmproModules') ;\r",
                    "\r",
                    "\r",
                    "\r",
                    "var packageStore = Ext.getStore('products.BillingFromPackages') ;\r",
                    "var addOnsStore = Ext.getStore('products.BillingModuleAddons') ;\r",
                    "\r",
                    "addOnsStore.removeAll();\r",
                    "addOnsStore.sync();\r",
                    "\r",
                    "packageStore.removeAll();\r",
                    "packageStore.sync();\r",
                    "\r",
                    "rmProBillingStore.removeAll();\r",
                    "rmProBillingStore.sync();"
                ]
            },
            "designerId": "a2ddc7ce-e171-48e7-9aa5-a19dcbc0c515"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "showSubscription"
                ],
                "fn": "saveProductDatalinkBilling",
                "implHandler": [
                    "var productKey = this.config.productKey ;\r",
                    "if( this.getIsFromVip() ){\r",
                    "    productKey = 'product_vip';\r",
                    "}\r",
                    "\r",
                    "var that = this ;\r",
                    "var rtRecord =  RMdatalink.util.globalConfig.getDataToShowInSettingWindow().record ;\r",
                    "\r",
                    "var recToUpdate ={ product_billng : rtRecord.get('product_billng') ? rtRecord.get('product_billng') : {} };\r",
                    "\r",
                    "var rateKey = Ext.ComponentQuery.query('#rmProSelectRateList')[0].getSelection()[0].data.value ;\r",
                    "\r",
                    "var monthlyMbrShip = Ext.ComponentQuery.query('#rtBillMonthlyMemberShipFld')[0].getValue() ;\r",
                    "\r",
                    "var masterStore = Ext.getStore('retailersMaster');\r",
                    "\r",
                    "var initActData = Ext.ComponentQuery.query('#rtProductBillIntActDateFld')[0].getValue() ;\r",
                    "\r",
                    "var temp = recToUpdate.product_billng ? ( recToUpdate.product_billng[productKey] ? recToUpdate.product_billng[productKey] : {} ) : {} ;\r",
                    "\r",
                    "console.log(\"*******************************\");\r",
                    "console.log(temp);\r",
                    "\r",
                    "\r",
                    "    temp.initial_activation_date = initActData;\r",
                    "\r",
                    "    temp.bundle_addons =  Ext.ComponentQuery.query('#productDlAddOnsSlctFld')[0].getValue();\r",
                    "    temp.bundle_vendors =  Ext.ComponentQuery.query('#productDlbdlVendorsSlctFld')[0].getValue();\r",
                    "    temp.pricing_policy_option =  Ext.ComponentQuery.query('#productDlPriceOptionsimgAdlImgSlctFld')[0].getValue();\r",
                    "    temp.vendors_rate =  Ext.ComponentQuery.query('#productDlPriceSlctFld')[0].getValue();\r",
                    "    temp.vendor_pricing_policy =  Ext.ComponentQuery.query('#productDlVdrPricingPolicySlctFld')[0].getValue();\r",
                    "\r",
                    "    temp.products_rate =  Ext.ComponentQuery.query('#productDlAddonsPriceSlctFld')[0].getValue();\r",
                    "    temp.vendor_sku_discount =  Ext.ComponentQuery.query('#productDlDiscountSKUSlctFld')[0].getValue();\r",
                    "    temp.vendor_count_discount =  Ext.ComponentQuery.query('#productDlDiscountVdrsSlctFld')[0].getValue();\r",
                    "\r",
                    "\r",
                    "//     temp.selected_rate = rateKey ;\r",
                    "    temp.monthly_membership  = monthlyMbrShip ;\r",
                    "    temp.product_modules = that.getDatalinkSelectedModules() ;\r",
                    "    temp.commissionable_ammount = Ext.ComponentQuery.query('#rtBillingCommissionableAmtFld')[0].getValue() ;\r",
                    "    temp.commission_percent = Ext.ComponentQuery.query('#rtBillingCommissionPercentFld')[0].getValue() ;\r",
                    "    temp.sales_persons = getSalesPersons() ;\r",
                    "\r",
                    "    temp.payment_period = getPayemntPeriod() ;\r",
                    "\r",
                    "    temp.advance_payment_period = getAdvancePaymentPeriod() ;\r",
                    "\r",
                    "    temp.contract_period = getContractPeriod() ;\r",
                    "\r",
                    "    temp.payment_frequency = getPayemntPeriod() ;\r",
                    "\r",
                    "    temp.payment_status = \"unpaid\" ;\r",
                    "\r",
                    "if(!temp.due_date && false)\r",
                    "{\r",
                    "\r",
                    "    temp.due_date =  Ext.ComponentQuery.query('#productRmProSlctTermStrtDtFld')[0].getValue() ;\r",
                    "\r",
                    "}\r",
                    "\r",
                    "\r",
                    "            var paymentInterval = 1 ;\r",
                    "            if( temp.advance_payment_period){\r",
                    "\r",
                    "                paymentInterval = temp.advance_payment_period ;\r",
                    "\r",
                    "                temp.payment_period = paymentInterval ;\r",
                    "\r",
                    "            }else{\r",
                    "\r",
                    "                paymentInterval =  temp.payment_period ;\r",
                    "            }\r",
                    "\r",
                    "           temp.total_payble = Ext.ComponentQuery.query('#productRmProSlctTermPrice')[0].getValue() ;\r",
                    "\r",
                    "            paymentInterval = parseInt(paymentInterval,0) ;\r",
                    "\r",
                    "            if( true ||! temp.payment_period_start ||   temp.payment_period_start == \"\")\r",
                    "            {\r",
                    "             temp.payment_period_start =  Ext.ComponentQuery.query('#productRmProSlctTermNxtDueDateFld')[0].getValue() ;\r",
                    "            }\r",
                    "\r",
                    "            temp.contract_start_date =  Ext.ComponentQuery.query('#productRmProSlctTermStrtDtFld')[0].getValue() ;\r",
                    "\r",
                    "             var tempEndDate = new Date(temp.payment_period_start) ;\r",
                    "\r",
                    "\r",
                    "             tempEndDate.setMonth(tempEndDate.getMonth() + paymentInterval) ;\r",
                    "\r",
                    "             temp.payment_period_end = (tempEndDate.getMonth() + 1 ) + \"/\"+ (tempEndDate.getDate())+\"/\" + tempEndDate.getFullYear(); // Ext.ComponentQuery.query('#productRmProSlctTermEndDate')[0].getValue() ;  //(tempEndDate.getMonth() + 1 ) + \"/\"+ (tempEndDate.getDate())+\"/\" + tempEndDate.getFullYear();\r",
                    "\r",
                    "            temp.due_date =  Ext.ComponentQuery.query('#productRmProSlctTermNxtDueDateFld')[0].getValue() ;\r",
                    "            temp.contract_price =  Ext.ComponentQuery.query('#productRmProSlctTermPrice')[0].getValue() ;\r",
                    "            temp.contract_sent_date =  Ext.ComponentQuery.query('#productRmproContractSentDateFld')[0].getValue() ;\r",
                    "            temp.contract_signed_date =  Ext.ComponentQuery.query('#productRmproContractSignedDateFld')[0].getValue() ;\r",
                    "            temp.contract_renewal_date =  Ext.ComponentQuery.query('#productRmproContractRenewalDateFld')[0].getValue() ;\r",
                    "            temp.contract_send_date =  Ext.ComponentQuery.query('#productRmproContractSendNewFld')[0].getValue() ;\r",
                    "\r",
                    "            temp.payment_frequency = Ext.ComponentQuery.query('#productRmproSlctTermBillFrqSlctFld')[0].getValue() ;\r",
                    "\r",
                    "if(temp.delete_status){\r",
                    "    delete invoice.delete_status ;\r",
                    "}\r",
                    "\r",
                    "             recToUpdate.product_billng[productKey] =  temp ;\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "console.log(recToUpdate) ;\r",
                    "\r",
                    "Ext.Viewport.setMasked( {\r",
                    "                xtype: 'loadmask'\r",
                    "            });\r",
                    "\r",
                    "   RMdatalink.iwa.rdl.doUpdateCollection(masterStore, recToUpdate , rtRecord.get('_id'), suc, err);\r",
                    "\r",
                    "\r",
                    "            function suc(){\r",
                    "\r",
                    "                   //recToUpdate.product_billng\r",
                    "                   //debugger;  \r",
                    "                   RMdatalink.app.getController('Main').updateRetailerRecords(\"product_billng\",recToUpdate.product_billng, rtRecord.get('_id')) ;\r",
                    "\r",
                    "                   rtRecord.set(\"product_billng\",recToUpdate.product_billng);\r",
                    "                    Ext.Viewport.setMasked(false);\r",
                    "               // that.hideProductBillingSheet();\r",
                    "\r",
                    "                if(showSubscription){\r",
                    "                    that.hideProductBillingSheet();\r",
                    "                    RMdatalink.app.getController('InvoiceController').showSubscriptionPage();\r",
                    "                }\r",
                    "\r",
                    "\r",
                    "            }\r",
                    "            function err(){\r",
                    "                    Ext.Viewport.setMasked(false);\r",
                    "            }\r",
                    "\r",
                    "function getSelectedPackage(){\r",
                    "\r",
                    "    var recs = Ext.ComponentQuery.query('#rmProSelectPackageList')[0].getSelection() ;\r",
                    "\r",
                    "    return recs[0].data.value ;\r",
                    "\r",
                    "}\r",
                    "\r",
                    "\r",
                    "function getSalesPersons(){\r",
                    "    return getArrayDataFromStore(Ext.getStore('products.RtSalesPersonStore'));\r",
                    "}\r",
                    "\r",
                    "\r",
                    "\r",
                    "  function getArrayDataFromStore(store){\r",
                    "\r",
                    "        var data = new Array();\r",
                    "        data = store.getData().items;\r",
                    "\r",
                    "        var dataToReturn = new Array();\r",
                    "\r",
                    "        for(var i=0; i < data.length ; i++){\r",
                    "\r",
                    "            dataToReturn.push(data[i].data);\r",
                    "        }\r",
                    "\r",
                    "        return dataToReturn ;\r",
                    "\r",
                    "    }\r",
                    "\r",
                    "\r",
                    "\r",
                    "function getPayemntPeriod(){\r",
                    "\r",
                    "\r",
                    "    var paymentPrdList = Ext.ComponentQuery.query('#rmProPaymentFreqList')[0];\r",
                    "\r",
                    "    if(paymentPrdList.getSelection().length == 0 ){\r",
                    "        return 1;\r",
                    "    }\r",
                    "\r",
                    "    var paymentPrd = paymentPrdList.getSelection()[0];\r",
                    "\r",
                    "    return  paymentPrd.data.value ;\r",
                    "}\r",
                    "\r",
                    "function getAdvancePaymentPeriod(){\r",
                    "\r",
                    "    var discounList = Ext.ComponentQuery.query('#rmProDiscountsForRtListPanel')[0].down('#mainList');\r",
                    "\r",
                    "    if(discounList.getSelection().length == 0 ){\r",
                    "        return null;\r",
                    "    }\r",
                    "\r",
                    "    var yrlyDiscount = discounList.getSelection()[0];\r",
                    "    var tempPrd = parseInt(yrlyDiscount.data.discount_duration,0 ) * 12 ;\r",
                    "    return   tempPrd ;\r",
                    "\r",
                    "}\r",
                    "\r",
                    "\r",
                    "function getContractPeriod(){\r",
                    "\r",
                    "    return Ext.ComponentQuery.query('#productRmproSlctContractTerms')[0].getValue() ;\r",
                    "\r",
                    "    var contractTermList = Ext.ComponentQuery.query('#rmProSlctTermList')[0];\r",
                    "\r",
                    "    if(contractTermList.getSelection().length == 0 ){\r",
                    "        return 12;\r",
                    "    }\r",
                    "\r",
                    "    var contract = contractTermList.getSelection()[0];\r",
                    "\r",
                    "    return  contract.data.value ;\r",
                    "}"
                ]
            },
            "designerId": "438512d6-08cc-4594-86d2-91957be36d92"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "useVipList"
                ],
                "fn": "getSumVendorsPromotionalStandardPrice",
                "implHandler": [
                    "var isVendorPolicy  = false ;\r",
                    "var isAddlVendorPolicy  = false ;\r",
                    "\r",
                    "if( Ext.ComponentQuery.query('#productDlPriceOptionsimgAdlImgSlctFld')[0].getValue() == \"vendors\"){\r",
                    "    isVendorPolicy = true ;\r",
                    "}\r",
                    "\r",
                    "if( Ext.ComponentQuery.query('#productDlPriceOptionsimgAdlImgSlctFld')[0].getValue() == \"vendorsAddl\"){\r",
                    "    isAddlVendorPolicy = true ;\r",
                    "}\r",
                    "\r",
                    "\r",
                    "\r",
                    "var tpolicy = this.config.tempPricePolicy  ;\r",
                    "\r",
                    "var pricingPolicyIncrementValue = 100 ;\r",
                    "\r",
                    "function getVrec(vendor_name1)\r",
                    "{\r",
                    "\r",
                    "    var ss = Ext.getStore('vendors.Master');\r",
                    "\r",
                    "    for(var i=0 ; i < ss.getData().all.length; i++){\r",
                    "\r",
                    "        if(ss.getData().all[i].data.vendor_name == vendor_name1)\r",
                    "        {\r",
                    "            return ss.getData().all[i] ;\r",
                    "        }\r",
                    "\r",
                    "    }\r",
                    "    return null ;\r",
                    "}\r",
                    "\r",
                    "function getVendorPrices(vdr_id)\r",
                    "{\r",
                    "    var pc = tpolicy.policy ;\r",
                    "    for(var i=0; i < pc.length ; i++){\r",
                    "\r",
                    "        if(pc[i].vendor_id == vdr_id){\r",
                    "            return pc[i] ;\r",
                    "        }\r",
                    "\r",
                    "    }\r",
                    "    return null;\r",
                    "}\r",
                    "\r",
                    "\r",
                    "\r",
                    "if(tpolicy && tpolicy.range)\r",
                    "{\r",
                    "    pricingPolicyIncrementValue = parseInt(tpolicy.range) ;\r",
                    "}\r",
                    "try{\r",
                    "\r",
                    "\r",
                    "\r",
                    "    var optionSlFld = Ext.ComponentQuery.query('#productDlPriceOptionsimgAdlImgSlctFld')[0];\r",
                    "    var newValue = optionSlFld.getValue() ;\r",
                    "    var stdPriceKey = \"standard_price\" ;\r",
                    "    var promoPriceKey = \"promotional_price\" ;\r",
                    "\r",
                    "    if(newValue == \"sku_images\"){\r",
                    "        stdPriceKey = \"standard_price\" ;\r",
                    "        promoPriceKey = \"promotional_price\" ;\r",
                    "\r",
                    "    }else{\r",
                    "        stdPriceKey = \"standard_price_addlimg\" ;\r",
                    "        promoPriceKey = \"promotional_price_addlimg\" ;\r",
                    "    }\r",
                    "\r",
                    "\r",
                    "\r",
                    "    console.log(stdPriceKey);\r",
                    "    console.log(promoPriceKey);\r",
                    "\r",
                    "    //RDStoreSideTabPanel\r",
                    "\r",
                    "    var prospectList  = Ext.ComponentQuery.query('#RDInStoreVendorsTab')[0].down(\"#mainList\");\r",
                    "\r",
                    "    if(this.config.isecomProduct)\r",
                    "    {\r",
                    "\r",
                    "        prospectList  = Ext.ComponentQuery.query('#RDForECommerce #RDInStoreVendorsTab')[0].down(\"#mainList\");\r",
                    "    }\r",
                    "\r",
                    "    if ( this.getIsFromVip())\r",
                    "    {\r",
                    "        prospectList =  Ext.ComponentQuery.query(\"#pospectActiveListContainer #RDForVIP #RDInStoreVendorsTab #mainList\")[0];\r",
                    "\r",
                    "    }\r",
                    "\r",
                    "    var prospectStore = prospectList.getStore() ;\r",
                    "\r",
                    "    var vendorStore =  Ext.getStore('vendors.Master') ;//('vendorTempRecordStore') ; //\r",
                    "\r",
                    "    var specificrtVdrs =  prospectStore.getData().all ;\r",
                    "    var array = specificrtVdrs;\r",
                    "    if( this.getIsFromVip() ){\r",
                    "        array = [];\r",
                    "        for( var k =0 ; k< specificrtVdrs.length ; k++ ){\r",
                    "\r",
                    "            var selectedRow = RMdatalink.util.globalConfig.getDataInRetailerScreenForSaveOrCancel();\r",
                    "            var vendor_name = selectedRow.record.data.e_commerce_info.vip_vendor;\r",
                    "            if(vendor_name != specificrtVdrs[k].data.vendor_name  )\r",
                    "            {\r",
                    "\r",
                    "                array.push( specificrtVdrs[k]  );\r",
                    "            }\r",
                    "        }\r",
                    "\r",
                    "    }\r",
                    "//    debugger;\r",
                    "    console.log(array);\r",
                    "//    debugger;\r",
                    "    var dataToReturn = {\r",
                    "        promotional_price :0,\r",
                    "        standard_price:0,\r",
                    "        quantity:this.getIsFromVip() ? array : specificrtVdrs,\r",
                    "        test: this.getIsFromVip() ? array.length :specificrtVdrs.length ,\r",
                    "        total_sku : 0\r",
                    "    } ;\r",
                    "\r",
                    "\r",
                    "/*\r",
                    "\r",
                    "    if( this.getIsFromVip() && !useVipList) {\r",
                    "\r",
                    "\r",
                    "\r",
                    "        var   datalinkStore = Ext.getStore('products.ecomMain') ;\r",
                    "        var recordOfConcern =  datalinkStore.findRecord({\"module_name\":\"Vendor Internet Program\" ,product_type: \"1\" } );\r",
                    "\r",
                    "\r",
                    "        dataToReturn = {\r",
                    "            promotional_price :recordOfConcern.get('module_promotional_price'),\r",
                    "            standard_price:recordOfConcern.get('module_promotional_price'),\r",
                    "            quantity:1,\r",
                    "            test:1,\r",
                    "            total_sku : 0\r",
                    "            //  DATA AT TOP WILL BE FOR VENDOR INTERNET PROGRAM. THIS VALUE WILL BE INCLUSIVE AND SHOULD BE INDEPENDENT\r",
                    "            //  OF RETAILERS  / VENDORS\r",
                    "\r",
                    "        };\r",
                    "        console.log(\"RETURNING DATA\");\r",
                    "        return dataToReturn;\r",
                    "\r",
                    "    }\r",
                    "\r",
                    "\r",
                    "*/\r",
                    "\r",
                    "\r",
                    "\r",
                    "    if(useVipList && false ){\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "        console.log(\"USING LISR VIP\");\r",
                    "\r",
                    "        //VENODR AT TOP WILL BE VENDOR PARTNER.\r",
                    "\r",
                    "\r",
                    "        var counterStart = 1;\r",
                    "        var vendorPartner = specificrtVdrs[0];\r",
                    "        var vipProgramInfo = vendorPartner.get('promo_code_info');\r",
                    "        if(vipProgramInfo && false){\r",
                    "            //vip_price: 199\r",
                    "            var vip_price = parseFloat( vipProgramInfo .vip_price);\r",
                    "                dataToReturn.standard_price += parseFloat( vip_price );\r",
                    "                dataToReturn.promotional_price += parseFloat( vip_price );\r",
                    "\r",
                    "        }else{\r",
                    "            counterStart = 0;\r",
                    "\r",
                    "        }\r",
                    "\r",
                    "        for(var i= 1 ; i < specificrtVdrs.length ; i++){\r",
                    "\r",
                    "            console.log(\"USING VIP LIST\");\r",
                    "            var vendor_name = specificrtVdrs[i].data.vendor_name;\r",
                    "            var vendor_id =  specificrtVdrs[i].data.vendor_id;\r",
                    "            var recIndex = vendorStore.findExact('_id',vendor_id) ;//('vendor_name',vendor_name);\r",
                    "\r",
                    "            //     if(recIndex != -1)\r",
                    "            //     {\r",
                    "            var record =  getVrec(vendor_name) ;\r",
                    "//            if(record.data.product_price && record.data.product_price.datalink){\r",
                    "\r",
                    "                if(tpolicy || true )\r",
                    "                {\r",
                    "                    var vSKU =  0 ;\r",
                    "\r",
                    "                    var stPrice = 0;\r",
                    "                    var promoPrice = 0 ;\r",
                    "\r",
                    "                    if(isVendorPolicy || isAddlVendorPolicy || true)\r",
                    "                    {\r",
                    "                        var vprices = getVendorPrices(vendor_id) ;\r",
                    "\r",
                    "                        if(vprices){\r",
                    "                            console.log(\"vproce found\")    ;\r",
                    "                            console.log(vprices);\r",
                    "\r",
                    "                            if(this.config.isecomProduct || true)\r",
                    "                            {\r",
                    "                                console.log(record);\r",
                    "                                console.log(record.get('ecom_std'));\r",
                    "                                console.log(record.get('ecom_promo'));\r",
                    "                                if( record.get('ecom_std') ){\r",
                    "\r",
                    "                                    stPrice = parseFloat( record.get('ecom_std'));\r",
                    "                                    console.log(stPrice);\r",
                    "                                }\r",
                    "\r",
                    "                                if(record.get('ecom_promo')){\r",
                    "                                    promoPrice =  parseFloat( record.get('ecom_promo') ) ;\r",
                    "                                    console.log(promoPrice);\r",
                    "                                }\r",
                    "\r",
                    "                            }\r",
                    "//                             else{\r",
                    "//                                 if(vprices.dl_std)\r",
                    "//                                     stPrice = vprices.dl_std;\r",
                    "//                                 if(vprices.dl_promo)\r",
                    "//                                     promoPrice = vprices.dl_promo ;\r",
                    "//                             }\r",
                    "\r",
                    "\r",
                    "                            if(isAddlVendorPolicy && false)\r",
                    "                            {\r",
                    "\r",
                    "\r",
                    "                                if(this.config.isecomProduct)\r",
                    "                                {\r",
                    "                                    if(vprices.ecom_std_addl)\r",
                    "                                        stPrice = vprices.ecom_std_addl;\r",
                    "                                    if(vprices.ecom_promo_addl)\r",
                    "                                        promoPrice = vprices.ecom_promo_addl ;\r",
                    "                                }\r",
                    "                                else{\r",
                    "                                    if(vprices.dl_std_addl)\r",
                    "                                        stPrice = vprices.dl_std_addl;\r",
                    "                                    if(vprices.dl_promo_addl)\r",
                    "                                        promoPrice = vprices.dl_promo_addl ;\r",
                    "                                }\r",
                    "\r",
                    "                            }\r",
                    "\r",
                    "                        }\r",
                    "\r",
                    "                    }else{\r",
                    "                        if( record.data.SKU && record.data.SKU != \"\" ){\r",
                    "\r",
                    "                            vSKU = parseInt(record.data.SKU) ;\r",
                    "                        }\r",
                    "\r",
                    "                        var pIndex = parseInt(  vSKU/pricingPolicyIncrementValue);\r",
                    "\r",
                    "\r",
                    "                        stPrice = tpolicy.policy[pIndex].std ;\r",
                    "                        promoPrice =  tpolicy.policy[pIndex].promo ;\r",
                    "                    }\r",
                    "\r",
                    "                    dataToReturn.standard_price += parseFloat( stPrice );\r",
                    "                    dataToReturn.promotional_price += parseFloat( promoPrice );\r",
                    "\r",
                    "                }\r",
                    "                else{\r",
                    "\r",
                    "\r",
                    "                    if(record.data.product_price.datalink[stdPriceKey])\r",
                    "                    {\r",
                    "                        dataToReturn.standard_price += parseFloat(record.data.product_price.datalink[stdPriceKey]) ;\r",
                    "                    }\r",
                    "                    if(record.data.product_price.datalink[promoPriceKey])\r",
                    "                    {\r",
                    "                        dataToReturn.promotional_price += parseFloat(record.data.product_price.datalink[promoPriceKey]) ;\r",
                    "                    }\r",
                    "\r",
                    "                }\r",
                    "\r",
                    "                if(record.data.SKU)\r",
                    "                {\r",
                    "                    dataToReturn.total_sku += parseInt(record.data.SKU) ;\r",
                    "                }\r",
                    "\r",
                    " //           }\r",
                    "            //  }\r",
                    "        }\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "    }else{\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "        if(  this.getIsFromVip()){\r",
                    "            counterStart =1;\r",
                    "        }else{\r",
                    "            counterStart = 0;\r",
                    "        }\r",
                    "\r",
                    "        for(var i= counterStart; i < specificrtVdrs.length ; i++){\r",
                    "\r",
                    "            var vendor_name = specificrtVdrs[i].data.vendor_name;\r",
                    "            console.warn(vendor_name);\r",
                    "            var vendor_id =  specificrtVdrs[i].data.vendor_id || specificrtVdrs[i].data._id ;\r",
                    "            console.warn(vendor_id);\r",
                    "            var recIndex = vendorStore.findExact('_id',vendor_id) ;//('vendor_name',vendor_name);\r",
                    "            console.warn(recIndex);\r",
                    "\r",
                    "            //     if(recIndex != -1)\r",
                    "            //     {\r",
                    "            var record =  getVrec(vendor_name) ;//vendorStore.getAt(recIndex) ;\r",
                    "            console.warn(record);\r",
                    "            try{\r",
                    "            if(true || (record.data.product_price && record.data.product_price.datalink) ){\r",
                    "\r",
                    "                console.log(tpolicy);\r",
                    "                if(tpolicy)\r",
                    "                {\r",
                    "                    var vSKU =  0 ;\r",
                    "\r",
                    "                    var stPrice = 0;\r",
                    "                    var promoPrice = 0 ;\r",
                    "\r",
                    "                    console.log(isVendorPolicy , isAddlVendorPolicy);\r",
                    "                    console.log(1);\r",
                    "                    if(isVendorPolicy || isAddlVendorPolicy)\r",
                    "                    {\r",
                    "                        console.log(\"THIS IS VENDOR POLICY \");\r",
                    "                        var vprices = getVendorPrices(vendor_id) ;\r",
                    "                        if(vprices)\r",
                    "                        {\r",
                    "                            console.log(\"vporice fpund \" , vprices);\r",
                    "\r",
                    "                            if(this.config.isecomProduct)\r",
                    "                            {\r",
                    "                                console.log(\"IN ISECOM \");\r",
                    "                                if(vprices.ecom_std)\r",
                    "                                {\r",
                    "                                    stPrice = vprices.ecom_std;\r",
                    "                                    console.log(5 , \"ECOM _STD\");\r",
                    "                                }\r",
                    "\r",
                    "                                if(vprices.ecom_promo)\r",
                    "                                {\r",
                    "                                    promoPrice = vprices.ecom_promo ;\r",
                    "                                    console.log(6 , \"ECOM_PROMO\");\r",
                    "                                }\r",
                    "\r",
                    "                            }\r",
                    "                            else{\r",
                    "                                console.log(7);\r",
                    "                                if(vprices.dl_std){\r",
                    "\r",
                    "                                    stPrice = vprices.dl_std || 0;\r",
                    "                                    console.log(8);\r",
                    "                                }\r",
                    "\r",
                    "                                if(vprices.dl_promo){\r",
                    "                                    promoPrice = vprices.dl_promo || 0;\r",
                    "                                    console.log(9);\r",
                    "                                }\r",
                    "\r",
                    "                            }\r",
                    "\r",
                    "\r",
                    "                            if(isAddlVendorPolicy)\r",
                    "                            {\r",
                    "\r",
                    "                                console.log(10 , \"ADDITIONAL VENDOR POLICY\");\r",
                    "                                if(this.config.isecomProduct)\r",
                    "                                {\r",
                    "                                    console.log(11 , \"ECOM ADDITIONAL VENDOR POLICY\");\r",
                    "                                    if(true || vprices.ecom_std_addl){\r",
                    "\r",
                    "                                        stPrice = vprices.ecom_std_addl || 0;\r",
                    "                                        console.log(12);\r",
                    "                                    }\r",
                    "\r",
                    "                                    if(true || vprices.ecom_promo_addl){\r",
                    "\r",
                    "                                        console.log(13);\r",
                    "                                        promoPrice = vprices.ecom_promo_addl || 0 ;\r",
                    "                                    }\r",
                    "\r",
                    "                                }\r",
                    "                                else{\r",
                    "                                    console.log(14);\r",
                    "                                    if(vprices.dl_std_addl){\r",
                    "\r",
                    "                                        stPrice = vprices.dl_std_addl;\r",
                    "                                        console.log(15);\r",
                    "                                    }\r",
                    "\r",
                    "                                    if(vprices.dl_promo_addl){\r",
                    "                                        promoPrice = vprices.dl_promo_addl ;\r",
                    "                                        console.log(16);\r",
                    "                                    }\r",
                    "\r",
                    "                                }\r",
                    "\r",
                    "                            }\r",
                    "\r",
                    "                        }\r",
                    "\r",
                    "                    }else{\r",
                    "                        console.log(\"17\" , \"NEITHER VENDOR NOR ADL VENDOR\");\r",
                    "                        if( record.data.SKU && record.data.SKU != \"\" )\r",
                    "                        {\r",
                    "                            console.log(18 , \"SKU ADDED\");\r",
                    "                            vSKU = parseInt(record.data.SKU) ;\r",
                    "                        }\r",
                    "\r",
                    "                        var pIndex = parseInt(  vSKU/pricingPolicyIncrementValue);\r",
                    "                        console.log(19);\r",
                    "\r",
                    "                        stPrice = tpolicy.policy[pIndex].std ;\r",
                    "                        promoPrice =  tpolicy.policy[pIndex].promo ;\r",
                    "                    }\r",
                    "\r",
                    "                    dataToReturn.standard_price += parseFloat( stPrice );\r",
                    "                    dataToReturn.promotional_price += parseFloat( promoPrice );\r",
                    "\r",
                    "                }else{\r",
                    "\r",
                    "                    console.log(20 , \"NO TPLOICY FOUND\");\r",
                    "                    if(record.data.product_price.datalink[stdPriceKey])\r",
                    "                    {\r",
                    "                        dataToReturn.standard_price += parseFloat(record.data.product_price.datalink[stdPriceKey]) ;\r",
                    "                        console.log(21);\r",
                    "                    }\r",
                    "                    if(record.data.product_price.datalink[promoPriceKey])\r",
                    "                    {\r",
                    "                        dataToReturn.promotional_price += parseFloat(record.data.product_price.datalink[promoPriceKey]) ;\r",
                    "                        console.log(22);\r",
                    "                    }\r",
                    "\r",
                    "                }\r",
                    "\r",
                    "                if(record.data.SKU)\r",
                    "                {\r",
                    "                    dataToReturn.total_sku += parseInt(record.data.SKU) ;\r",
                    "                    console.log(23);\r",
                    "                }\r",
                    "\r",
                    "            }\r",
                    "            }catch(e){\r",
                    "\r",
                    "                console.log(\"ERROR THRWON \",e);\r",
                    "                continue;\r",
                    "            }\r",
                    "            //  }\r",
                    "        }\r",
                    "\r",
                    "    }\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "    /*\r",
                    "if(specificrtVdrs.length > 0)\r",
                    "{\r",
                    "     dataToReturn.standard_price  = Math.round(dataToReturn.standard_price /specificrtVdrs.length) ;\r",
                    "    dataToReturn.promotional_price = Math.round(dataToReturn.promotional_price /specificrtVdrs.length) ;\r",
                    "\r",
                    "    dataToReturn.quantity = specificrtVdrs.length ;\r",
                    "}\r",
                    "*/\r",
                    "    console.log(dataToReturn) ;\r",
                    "\r",
                    "    return dataToReturn ;\r",
                    "\r",
                    "}catch(ex){\r",
                    "\r",
                    "    console.error(ex);\r",
                    "    return {\r",
                    "        promotional_price :0,\r",
                    "        standard_price:0,\r",
                    "        quantity:1,\r",
                    "        test:1,\r",
                    "        total_sku : 0\r",
                    "    } ;\r",
                    "}"
                ]
            },
            "designerId": "51f3243e-ee79-438a-87c4-764014fd35e7"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "getSKUTotat",
                "implHandler": [
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "try{\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "    var prospectList  = Ext.ComponentQuery.query('#RDInStoreVendorsTab')[0].down(\"#mainList\");\r",
                    "\r",
                    "    if(this.config.isecomProduct)\r",
                    "    {\r",
                    "\r",
                    "        prospectList  = Ext.ComponentQuery.query('#RDForECommerce #RDInStoreVendorsTab')[0].down(\"#mainList\");\r",
                    "    }\r",
                    "\r",
                    "    if(this.getIsFromVip())\r",
                    "    {\r",
                    "        prospectList =  Ext.ComponentQuery.query(\"#pospectActiveListContainer #RDForVIP #RDInStoreVendorsTab #mainList\")[0];\r",
                    "\r",
                    "    }\r",
                    "\r",
                    "    var prospectStore = prospectList.getStore();\r",
                    "    var total = 0;\r",
                    "    if(prospectStore){\r",
                    "        \r",
                    "        for(var i =0 ;i < prospectStore.data.all.length ; i++){\r",
                    "            \r",
                    "            if(prospectStore.data.all[i].data.SKU){\r",
                    "                \r",
                    "                total += parseInt(prospectStore.data.all[i].data.SKU);\r",
                    "            }\r",
                    "        }\r",
                    "        \r",
                    "    }else{\r",
                    "        return total;\r",
                    "    }\r",
                    "    \r",
                    "\r",
                    "    return total;\r",
                    "\r",
                    "}catch(ex){\r",
                    "\r",
                    "    console.error(ex);\r",
                    "    return 0 ;\r",
                    "}"
                ]
            },
            "designerId": "3bfebe64-92b7-47ba-be38-586d1bf92f77"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button[itemId=productBillingShowSubscriptionBtn]",
                "designer|targetType": "Ext.Button",
                "fn": "onProductBillingShowSubscriptionBtnTap",
                "implHandler": [
                    "\r",
                    "                    this.hideProductBillingSheet();\r",
                    "                    RMdatalink.app.getController('InvoiceController').showSubscriptionPage();\r",
                    "\r",
                    "\r",
                    "\r",
                    "/*\r",
                    "if(this.config.productKey == \"product_rmpro\" )\r",
                    "{\r",
                    "\r",
                    "        this.saveRtProductBilling(true) ;\r",
                    "\r",
                    "}\r",
                    "else{\r",
                    "\r",
                    "        this.saveProductDatalinkBilling(true) ;\r",
                    "\r",
                    "}\r",
                    "\r",
                    "\r",
                    "*/"
                ],
                "name": "tap"
            },
            "designerId": "2065631d-a15d-4b2b-9abc-66a1a9590418"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button[itemId=invoiceDatalinkProductSetupBtn]",
                "designer|targetType": "Ext.Button",
                "fn": "oninvoiceDatalinkProductSetupBtnTap",
                "implHandler": [
                    "   Ext.ComponentQuery.query('#rtBillingSheetCancelBtn')[0].fireEvent(\"tap\");\r",
                    "\r",
                    "\r",
                    "    this.getBillingSheet().show();\r",
                    "    this.initDatalinkBilling() ;\r",
                    "    this.displayDatalinkBilling();\r",
                    "\r",
                    ""
                ],
                "name": "tap"
            },
            "designerId": "74854674-275a-4d86-8ca4-8edf65ac9a42"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button[itemId=invoiceRMPROProductSetupBtn]",
                "designer|targetType": "Ext.Button",
                "fn": "oninvoiceRMPROProductSetupBtnTap",
                "implHandler": [
                    "\r",
                    "\r",
                    "Ext.ComponentQuery.query('#rtBillingSheetCancelBtn')[0].fireEvent(\"tap\");\r",
                    "\r",
                    "try{\r",
                    "    \r",
                    "    var RDStoreProductsList = Ext.ComponentQuery.query(\"#RDStoreProductsList\")[0];\r",
                    "    if(RDStoreProductsList){\r",
                    "        \r",
                    "    }else{return;\r",
                    "          \r",
                    "         }\r",
                    "    \r",
                    "    var store = RDStoreProductsList.getStore();\r",
                    "    if(store){}else{return;}\r",
                    "    \r",
                    "    var recordToPass;\r",
                    "    if( this.config.isDatalinkProduct ){\r",
                    "        \r",
                    "        recordToPass = store.findRecord('ProductName' ,\"Datalink\");//store.getAt(0);\r",
                    "        \r",
                    "    }else if( this.config.isecomProduct ){\r",
                    "        \r",
                    "        recordToPass = store.findRecord('ProductName' , \"E-Commerce\" );//store.getAt(0);//store.getAt(2);\r",
                    "        if(   this.getIsFromVip()  )    {\r",
                    "            \r",
                    "            recordToPass =store.findRecord('ProductName' , \"VIP\" );//store.getAt(0);\r",
                    "        }\r",
                    "        \r",
                    "        \r",
                    "    }else{\r",
                    "        recordToPass = store.findRecord('ProductName' ,\"RMPro\");//store.getAt(0);\r",
                    "    }\r",
                    "    if(recordToPass){\r",
                    "        \r",
                    "    }else{return;}\r",
                    "    \r",
                    "    this.handleRecordToShowProductSetup(recordToPass);\r",
                    "    \r",
                    "    \r",
                    "    \r",
                    "    \r",
                    "}catch(e){\r",
                    "    \r",
                    "    console.log(\"ERROR THROWN\" , e);\r",
                    "}\r",
                    "return;\r",
                    "\r",
                    "//    this.config.isDatalinkProduct = true ;\r",
                    "//this.config.isecomProduct = false ;\r",
                    "//invoiceRMPROProductSetupBtn\r",
                    "//var RDStoreProductsList = Ext.ComponentQuery.query(\"#RDStoreProductsList\")\r",
                    "\r",
                    "\r",
                    "this.config.isDatalinkProduct = false ;\r",
                    "this.config.isecomProduct = false ;\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "this.getBillingSheet().show();\r",
                    "this.intRMPROBilling() ;\r",
                    "this.displayRMPROBillig();\r",
                    "\r",
                    "var that = this ;\r",
                    "var timeout = setTimeout(function(){\r",
                    "    \r",
                    "    \r",
                    "    Ext.ComponentQuery.query('#rtBillingSaveBtn')[0].setHidden(false);\r",
                    "    Ext.ComponentQuery.query('#productBillingSheetCancel')[0].setText(\"Cancel\") ;\r",
                    "    \r",
                    "    \r",
                    "    that.disableEnableComponents(false) ;\r",
                    "    \r",
                    "    clearTimeout(timeout);\r",
                    "    \r",
                    "    hideShowDlComponents(true) ;\r",
                    "    hideShowRMProComponents(false);\r",
                    "    \r",
                    "},500);\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "function hideShowDlComponents(value){\r",
                    "    \r",
                    "    Ext.ComponentQuery.query('#productDlAddOnsSlctFld')[0].setHidden(value);\r",
                    "    Ext.ComponentQuery.query('#productDlbdlVendorsSlctFld')[0].setHidden(value);\r",
                    "    \r",
                    "    Ext.ComponentQuery.query('#productDlPriceSlctFld')[0].setHidden(value);\r",
                    "    Ext.ComponentQuery.query('#productDlDiscountVdrsSlctFld')[0].setHidden(value);\r",
                    "    \r",
                    "    Ext.ComponentQuery.query('#productDlPriceOptionsimgAdlImgSlctFld')[0].setHidden(value);\r",
                    "    Ext.ComponentQuery.query('#productDlDiscountSKUSlctFld')[0].setHidden(value);\r",
                    "    \r",
                    "    Ext.ComponentQuery.query('#productDlAddonsPriceSlctFld')[0].setHidden(value);\r",
                    "    \r",
                    "    Ext.ComponentQuery.query('#productDlVdrPricingPolicySlctFld')[0].setHidden(value);\r",
                    "    \r",
                    "}\r",
                    "\r",
                    "function hideShowRMProComponents(value){\r",
                    "    \r",
                    "    Ext.ComponentQuery.query('#productRmproPackgSlctFldBilling')[0].setHidden(value);\r",
                    "    Ext.ComponentQuery.query('#productRmproRateSlctFldBilling')[0].setHidden(value);\r",
                    "    \r",
                    "}"
                ],
                "name": "tap"
            },
            "designerId": "1b0c3df5-424d-4f82-8082-0ac0fbbd9758"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "useVipList"
                ],
                "fn": "getSumOfVendorsByPolicyInVendors",
                "implHandler": [
                    "var isVendorPolicy  = false ;\r",
                    "var isAddlVendorPolicy  = false ;\r",
                    "var tpolicy = this.config.tempPricePolicy  ;\r",
                    "var pricingPolicyIncrementValue = 100 ;\r",
                    "\r",
                    "\r",
                    "function getVrec(vendor_name1)\r",
                    "{\r",
                    "\r",
                    "    var ss = Ext.getStore('vendors.Master');\r",
                    "\r",
                    "    for(var i=0 ; i < ss.getData().all.length; i++){\r",
                    "\r",
                    "        if(ss.getData().all[i].data.vendor_name == vendor_name1)\r",
                    "        {\r",
                    "            return ss.getData().all[i] ;\r",
                    "        }\r",
                    "\r",
                    "    }\r",
                    "    return null ;\r",
                    "}\r",
                    "\r",
                    "function getVendorPrices(vdr_id){\r",
                    "    var pc = tpolicy.policy ;\r",
                    "    for(var i=0; i < pc.length ; i++){\r",
                    "\r",
                    "        if(pc[i].vendor_id == vdr_id){\r",
                    "            return pc[i] ;\r",
                    "        }\r",
                    "\r",
                    "    }\r",
                    "    return null;\r",
                    "}\r",
                    "\r",
                    "\r",
                    "\r",
                    "if(tpolicy)\r",
                    "{\r",
                    "    pricingPolicyIncrementValue = parseInt(tpolicy.range) ;\r",
                    "}\r",
                    "try{\r",
                    "\r",
                    "\r",
                    "\r",
                    "    var optionSlFld = Ext.ComponentQuery.query('#productDlPriceOptionsimgAdlImgSlctFld')[0];\r",
                    "    var newValue = optionSlFld.getValue() ;\r",
                    "    var stdPriceKey = \"standard_price\" ;\r",
                    "    var promoPriceKey = \"promotional_price\" ;\r",
                    "\r",
                    "    if(newValue == \"sku_images\"){\r",
                    "        stdPriceKey = \"standard_price\" ;\r",
                    "        promoPriceKey = \"promotional_price\" ;\r",
                    "\r",
                    "    }else{\r",
                    "        stdPriceKey = \"standard_price_addlimg\" ;\r",
                    "        promoPriceKey = \"promotional_price_addlimg\" ;\r",
                    "    }\r",
                    "\r",
                    "\r",
                    "\r",
                    "    console.log(stdPriceKey);\r",
                    "    console.log(promoPriceKey);\r",
                    "\r",
                    "    //RDStoreSideTabPanel\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "        prospectList =  Ext.ComponentQuery.query(\"#pospectActiveListContainer #RDForVIP #RDInStoreVendorsTab #mainList\")[0];\r",
                    "\r",
                    "\r",
                    "\r",
                    "    var prospectStore = prospectList.getStore() ;\r",
                    "    var vendorStore =  Ext.getStore('vendors.Master') ;//('vendorTempRecordStore') ; //\r",
                    "\r",
                    "    var specificrtVdrs =  prospectStore.getData().all ;\r",
                    "\r",
                    "    var dataToReturn = {\r",
                    "        promotional_price :0,\r",
                    "        standard_price:0,\r",
                    "        quantity:specificrtVdrs,\r",
                    "        test:specificrtVdrs.length,\r",
                    "        total_sku : 0\r",
                    "    } ;\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "    if(useVipList )\r",
                    "    {\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "        //VENODR AT TOP WILL BE VENDOR PARTNER.\r",
                    "\r",
                    "\r",
                    "        var counterStart = 1;\r",
                    "        var vendorPartner = specificrtVdrs[0];\r",
                    "        var vipProgramInfo = vendorPartner.get('promo_code_info');\r",
                    "        if(vipProgramInfo && false){\r",
                    "            //vip_price: 199\r",
                    "            var vip_price = parseFloat( vipProgramInfo .vip_price);\r",
                    "                dataToReturn.standard_price += parseFloat( vip_price );\r",
                    "                dataToReturn.promotional_price += parseFloat( vip_price );\r",
                    "\r",
                    "        }else{\r",
                    "            counterStart = 0;\r",
                    "\r",
                    "        }\r",
                    "\r",
                    "        for(var i= 1 ; i < specificrtVdrs.length ; i++){\r",
                    "\r",
                    "            console.log(\"USING VIP LIST\");\r",
                    "            var vendor_name = specificrtVdrs[i].data.vendor_name;\r",
                    "            var vendor_id =  specificrtVdrs[i].data.vendor_id;\r",
                    "            var recIndex = vendorStore.findExact('_id',vendor_id) ;\r",
                    "\r",
                    "            var record =  getVrec(vendor_name) ;\r",
                    "\r",
                    "\r",
                    "                if(tpolicy || true )\r",
                    "                {\r",
                    "                    var vSKU =  0 ;\r",
                    "\r",
                    "                    var stPrice = 0;\r",
                    "                    var promoPrice = 0 ;\r",
                    "\r",
                    "                    if(isVendorPolicy || isAddlVendorPolicy || true)\r",
                    "                    {\r",
                    "                        var vprices = getVendorPrices(vendor_id) ;\r",
                    "\r",
                    "                        if(vprices){\r",
                    "                            console.log(\"vproce found\")    ;\r",
                    "                            console.log(vprices);\r",
                    "\r",
                    "                            if(this.config.isecomProduct || true)\r",
                    "                            {\r",
                    "                                console.log(record);\r",
                    "                                console.log(record.get('ecom_std'));\r",
                    "                                console.log(record.get('ecom_promo'));\r",
                    "                                if( record.get('ecom_std') ){\r",
                    "\r",
                    "                                    stPrice = parseFloat( record.get('ecom_std'));\r",
                    "                                    console.log(stPrice);\r",
                    "                                }\r",
                    "\r",
                    "                                if(record.get('ecom_promo')){\r",
                    "                                    promoPrice =  parseFloat( record.get('ecom_promo') ) ;\r",
                    "                                    console.log(promoPrice);\r",
                    "                                }\r",
                    "\r",
                    "                            }\r",
                    "//                             else{\r",
                    "//                                 if(vprices.dl_std)\r",
                    "//                                     stPrice = vprices.dl_std;\r",
                    "//                                 if(vprices.dl_promo)\r",
                    "//                                     promoPrice = vprices.dl_promo ;\r",
                    "//                             }\r",
                    "\r",
                    "\r",
                    "                            if(isAddlVendorPolicy && false)\r",
                    "                            {\r",
                    "\r",
                    "\r",
                    "                                if(this.config.isecomProduct)\r",
                    "                                {\r",
                    "                                    if(vprices.ecom_std_addl)\r",
                    "                                        stPrice = vprices.ecom_std_addl;\r",
                    "                                    if(vprices.ecom_promo_addl)\r",
                    "                                        promoPrice = vprices.ecom_promo_addl ;\r",
                    "                                }\r",
                    "                                else{\r",
                    "                                    if(vprices.dl_std_addl)\r",
                    "                                        stPrice = vprices.dl_std_addl;\r",
                    "                                    if(vprices.dl_promo_addl)\r",
                    "                                        promoPrice = vprices.dl_promo_addl ;\r",
                    "                                }\r",
                    "\r",
                    "                            }\r",
                    "\r",
                    "                        }\r",
                    "\r",
                    "                    }\r",
                    "                    else\r",
                    "                    {\r",
                    "                        if( record.data.SKU && record.data.SKU != \"\" ){\r",
                    "\r",
                    "                            vSKU = parseInt(record.data.SKU) ;\r",
                    "                        }\r",
                    "\r",
                    "                        var pIndex = parseInt(  vSKU/pricingPolicyIncrementValue);\r",
                    "\r",
                    "\r",
                    "                        stPrice = tpolicy.policy[pIndex].std ;\r",
                    "                        promoPrice =  tpolicy.policy[pIndex].promo ;\r",
                    "                    }\r",
                    "\r",
                    "                    dataToReturn.standard_price += parseFloat( stPrice );\r",
                    "                    dataToReturn.promotional_price += parseFloat( promoPrice );\r",
                    "\r",
                    "                }\r",
                    "\r",
                    "\r",
                    "                if(record.data.SKU)\r",
                    "                {\r",
                    "                    dataToReturn.total_sku += parseInt(record.data.SKU) ;\r",
                    "                }\r",
                    "\r",
                    "\r",
                    "        }\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "    }\r",
                    "\r",
                    "    console.log(dataToReturn) ;\r",
                    "\r",
                    "    return dataToReturn ;\r",
                    "\r",
                    "}catch(ex){\r",
                    "\r",
                    "    console.error(ex);\r",
                    "    return {\r",
                    "        promotional_price :0,\r",
                    "        standard_price:0,\r",
                    "        quantity:1,\r",
                    "        test:1,\r",
                    "        total_sku : 0\r",
                    "    } ;\r",
                    "}"
                ]
            },
            "designerId": "b9ed1982-4bc9-491d-bfe2-40dd152dfc8e"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "setResetModuleListHeight",
                "implHandler": [
                    "var moduleList = Ext.ComponentQuery.query('#rmProModulesForRtListPanel')[0].down('#mainList') ;\r",
                    "var addOnsList = Ext.ComponentQuery.query('#rtProductAddOnsModuleLst')[0] ;\r",
                    "var headers = Ext.ComponentQuery.query('#rmProModulesForRtListPanel')[0].down(\"#headerList\");\r",
                    ""
                ]
            },
            "designerId": "b77c8b96-6ff5-469a-95a0-b92a4ab26e5d"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "selectfield[itemId=productRmproPackgSlctFldBilling]",
                "designer|targetType": "Ext.field.Select",
                "fn": "onRMPackageSelectfieldChange",
                "implHandler": [
                    "\r",
                    "var selectedPackage = parseInt(newValue) ;\r",
                    "Ext.ComponentQuery.query('#rmProSelectPackageList')[0].select((selectedPackage-1),false,false) ;\r",
                    "\r",
                    "var rateFld = Ext.ComponentQuery.query('#productRmproRateSlctFldBilling')[0] ;\r",
                    "var nVal = rateFld.getValue() ;\r",
                    "\r",
                    "var selectedPackage = 1 ;\r",
                    "\r",
                    "if(nVal == \"module_standard_price\" ){\r",
                    "    selectedPackage = 0 ;\r",
                    "}\r",
                    "\r",
                    "Ext.ComponentQuery.query('#rmProSelectRateList')[0].deselectAll() ;\r",
                    "Ext.ComponentQuery.query('#rmProSelectRateList')[0].select(selectedPackage,false,false) ;\r",
                    "\r",
                    "\r",
                    ""
                ],
                "name": "change"
            },
            "designerId": "597400ac-3cf2-4464-b253-0f59d95e028c"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "selectfield[itemId=productRmproRateSlctFldBilling]",
                "designer|targetType": "Ext.field.Select",
                "fn": "onRMRateSelectfieldChange",
                "implHandler": [
                    "var selectedPackage = 1 ;\r",
                    "\r",
                    "if(newValue == \"module_standard_price\" ){\r",
                    "    selectedPackage = 0 ;\r",
                    "}\r",
                    "\r",
                    "Ext.ComponentQuery.query('#rmProSelectRateList')[0].select(selectedPackage,false,false) ;\r",
                    "\r",
                    "var component = Ext.ComponentQuery.query('#productRmPRoAllModulesPanel')[0];\r",
                    "var headers = component.down(\"#headerList\");\r",
                    "var list = component.down('#mainList');\r",
                    "\r",
                    "if(selectedPackage == 0)\r",
                    "{\r",
                    "\r",
                    "        headers.setData([{}]);\r",
                    "        headers.setItemTpl(\r",
                    "            Ext.create('Ext.XTemplate',\r",
                    "                       '<div class=\"x-rm-listtpl-main\" style=\" border-bottom: 1px solid #9b9b9b; background-color: gainsboro;font-weight: bold;\">',\r",
                    "                       '    <div style=\"width: 4%;\">',\r",
                    "                       '        <div style=\"width: 20px;\" data-name=\"all\"></div>',\r",
                    "                       '    </div>',\r",
                    "                       '    <div class=\"rightBorderDiv\" style=\"width: 2%;text-align: center;\" data-name=\"module_listed_order\">',\r",
                    "                       '        ',\r",
                    "                       '    </div>',\r",
                    "                       '    <div class=\"rightBorderDiv\" style=\"width: 14%;text-align: center;\" data-name=\"module_name\">',\r",
                    "                       '        Product/ Add Ons&nbsp;',\r",
                    "                       '    </div>',\r",
                    "                       '    <div class=\"rightBorderDiv\" style=\"width: 46%;text-align: center;\" data-name=\"module_description\">',\r",
                    "                       '       Description&nbsp;',\r",
                    "                       '    </div>',\r",
                    "                       '    <div class=\"rightBorderDiv\" style=\"width: 10%;text-align: center;\" data-name=\"trial\">',\r",
                    "                       '        Status&nbsp;',\r",
                    "                       '    </div>',\r",
                    "                       '    <div class=\"rightBorderDiv\" style=\"width: 6%;text-align: center;\" data-name=\"quantity\">',\r",
                    "                       '        Qty&nbsp;',\r",
                    "                       '    </div>',\r",
                    "                       '    <div class=\"rightBorderDiv\" style=\"width: 8%;text-align: center;\" data-name=\"module_standard_price\">',\r",
                    "                       '        Std. Price&nbsp;',\r",
                    "                       '    </div>',\r",
                    "                       '    <div style=\"width: 10%;text-align: center;\" data-name=\"per_month\">',\r",
                    "                       '         Per Month&nbsp;',\r",
                    "                       '    </div>',\r",
                    "                       '</div>'\r",
                    "                      )\r",
                    "        );\r",
                    "\r",
                    "        headers.refresh();\r",
                    "\r",
                    "\r",
                    "\r",
                    "        list.setItemTpl(\r",
                    "            Ext.create('Ext.XTemplate',\r",
                    "                       '<div style=\"height:20px\" class=\"x-rm-listtpl-main pointerCursor\">',\r",
                    "                       '    <div style=\"width: 4%;\">',\r",
                    "                       '        <div style=\"width: 18px; height:16px;\"    {[RMdatalink.util.globalConfig.getListAttrForDelHandling()]} =\"onCartTap\" ></div>',\r",
                    "                       '    </div>',\r",
                    "                       '    <div class=\"rightBorderDiv\" style=\"margin-right: 0px;width: 2%;\">{module_listed_order}</div>',\r",
                    "                       '    <div class=\"rightBorderDiv\" style=\"width: 14%;font-weight: bold;\">{module_name}</div>',\r",
                    "                       '    <div class=\"rightBorderDiv\" style=\"width: 46%;\">{module_description}</div>',\r",
                    "                       '   <div class=\"rightBorderDiv\" style=\"width: 10%;\">',\r",
                    "\r",
                    "                       '<select class=\"rmProStatusFlds\" data-id=\"{_id}\" onchange=\"RMdatalink.app.getController(\\'ProductBillingController\\').updateRmproAllModuleList(this,\\'remark_val\\');\" style=\"height: 16px;width: 96%; margin-left:2%; color:{[this.getColor(values,\"3\")]};\">',\r",
                    "                              '<option value=\"0\" style=\"color:black\" {[this.getSelected(values,\"0\")]}>None</option>',\r",
                    "                              '<option value=\"1\" style=\"color:red\" {[this.getSelected(values,\"1\")]}>Inclusive</option>',\r",
                    "                              '<option value=\"2\" style=\"color:blue\" {[this.getSelected(values,\"2\")]} >Add Ons</option>',\r",
                    "                              '<option value=\"3\" style=\"color:green\" {[this.getSelected(values,\"3\")]} >1M Free Trial</option>',\r",
                    "                              '<option value=\"4\" style=\"color:green\" {[this.getSelected(values,\"4\")]} >2M Free Trial</option>',\r",
                    "                              '<option value=\"5\" style=\"color:green\" {[this.getSelected(values,\"5\")]} >3M Free Trial</option>',\r",
                    "                              '<option value=\"6\" style=\"color:green\" {[this.getSelected(values,\"6\")]} >6M Free Trial</option>',\r",
                    "                              '<option value=\"7\" style=\"color:green\" {[this.getSelected(values,\"7\")]} >9M Free Trial</option>',\r",
                    "                              '<option value=\"8\" style=\"color:green\" {[this.getSelected(values,\"8\")]} >1Yr Free Trial</option>',\r",
                    "\r",
                    "                       '</select>',\r",
                    "                       '</div>',\r",
                    "                       '<div class=\"rightBorderDiv\" style=\"width: 6%;text-align: center;\">',\r",
                    "                       '    <input type=\"text\" style=\"width: 68% !important;margin-left: 15%;height: 16px;text-align: center;\" class=\"rmProQtyFlds x-rm-rdinlinecmt\" data-id=\"{_id}\" value=\"{quantity}\" maxlength=\"24\"',\r",
                    "                       '        onchange=\"RMdatalink.app.getController(\\'ProductBillingController\\').updateRmproAllModuleList(this,\\'quantity\\');\"/>',\r",
                    "                       '</div>',\r",
                    "                       '    <div class=\"rightBorderDiv\" style=\"width: 8%;text-align: right;padding-right: 1%;\">$ {[formatNum(values.module_standard_price)]}</div>',\r",
                    "                       '    <div style=\"width: 10%;text-align: right;padding-right: 2%;\">$ {[formatNum(values.standard_total)]}</div>',\r",
                    "                       '</div>',\r",
                    "                       {\r",
                    "                           getStatusFldOptions:function(value){\r",
                    "\r",
                    "\r",
                    "                               if( value.remark_val && value.remark_val == \"1\" ){\r",
                    "\r",
                    "                                   return  '<option value=\"1\" style=\"color:red\" {[this.getSelected(values,\"1\")]}>Inclusive</option>' ;\r",
                    "\r",
                    "                               }else{\r",
                    "\r",
                    "                                   return  '<option value=\"0\" style=\"color:black\" {[this.getSelected(values,\"0\")]}>None</option>'+\r",
                    "                                '<option value=\"1\" style=\"color:red\" {[this.getSelected(values,\"1\")]}>Inclusive</option>'+\r",
                    "                              '<option value=\"2\" style=\"color:blue\" {[this.getSelected(values,\"2\")]} >Add Ons</option>'+\r",
                    "                              '<option value=\"3\" style=\"color:green\" {[this.getSelected(values,\"3\")]} >1M Free Trial</option>'+\r",
                    "                              '<option value=\"4\" style=\"color:green\" {[this.getSelected(values,\"4\")]} >2M Free Trial</option>'+\r",
                    "                              '<option value=\"5\" style=\"color:green\" {[this.getSelected(values,\"5\")]} >3M Free Trial</option>'+\r",
                    "                              '<option value=\"6\" style=\"color:green\" {[this.getSelected(values,\"6\")]} >6M Free Trial</option>'+\r",
                    "                              '<option value=\"7\" style=\"color:green\" {[this.getSelected(values,\"7\")]} >9M Free Trial</option>'+\r",
                    "                              '<option value=\"8\" style=\"color:green\" {[this.getSelected(values,\"8\")]} >1Yr Free Trial</option>' ;\r",
                    "\r",
                    "                               }\r",
                    "\r",
                    "                           },\r",
                    "\r",
                    "                           getSelected:function(value,cmp){\r",
                    "\r",
                    "                               if(value.remark_val && value.remark_val == cmp){\r",
                    "                                       return \"selected\";\r",
                    "                               }\r",
                    "\r",
                    "                               return \"\";\r",
                    "\r",
                    "                           },\r",
                    "\r",
                    "                           getColor:function(value){\r",
                    "\r",
                    "                               if( !value.remark_val || value.remark_val == \"0\" ){\r",
                    "                                       return \"black\";\r",
                    "                               }\r",
                    "\r",
                    "\r",
                    "                               if( value.remark_val && value.remark_val == \"1\" ){\r",
                    "                                       return \"red\";\r",
                    "                               }\r",
                    "\r",
                    "                               if( value.remark_val && value.remark_val == \"2\" ){\r",
                    "                                       return \"blue\";\r",
                    "                               }\r",
                    "\r",
                    "                               if( value.remark_val ){\r",
                    "\r",
                    "\r",
                    "                                   return \"green\";\r",
                    "                               }\r",
                    "\r",
                    "                               return \"red\" ;\r",
                    "\r",
                    "\r",
                    "                           }\r",
                    "\r",
                    "                       }\r",
                    "                      )\r",
                    "        );\r",
                    "}else{\r",
                    "\r",
                    "\r",
                    "        headers.setData([{}]);\r",
                    "        headers.setItemTpl(\r",
                    "            Ext.create('Ext.XTemplate',\r",
                    "                       '<div class=\"x-rm-listtpl-main\" style=\" border-bottom: 1px solid #9b9b9b; background-color: gainsboro;font-weight: bold;\">',\r",
                    "                       '    <div style=\"width: 4%;\">',\r",
                    "                       '        <div style=\"width: 20px;\" data-name=\"all\"></div>',\r",
                    "                       '    </div>',\r",
                    "                       '    <div class=\"rightBorderDiv\" style=\"width: 2%;text-align: center;\" data-name=\"module_listed_order\">',\r",
                    "                       '        ',\r",
                    "                       '    </div>',\r",
                    "                       '    <div class=\"rightBorderDiv\" style=\"width: 14%;text-align: center;\" data-name=\"module_name\">',\r",
                    "                       '        Product/ Add Ons&nbsp;',\r",
                    "                       '    </div>',\r",
                    "                       '    <div class=\"rightBorderDiv\" style=\"width: 46%;text-align: center;\" data-name=\"module_description\">',\r",
                    "                       '       Description&nbsp;',\r",
                    "                       '    </div>',\r",
                    "                       '    <div class=\"rightBorderDiv\" style=\"width: 10%;text-align: center;\" data-name=\"trial\">',\r",
                    "                       '        Status&nbsp;',\r",
                    "                       '    </div>',\r",
                    "                       '    <div class=\"rightBorderDiv\" style=\"width: 6%;text-align: center;\" data-name=\"quantity\">',\r",
                    "                       '        Qty&nbsp;',\r",
                    "                       '    </div>',\r",
                    "                       '    <div class=\"rightBorderDiv\" style=\"width: 8%;text-align: center;\" data-name=\"module_standard_price\">',\r",
                    "                       '        Promo. Price&nbsp;',\r",
                    "                       '    </div>',\r",
                    "                       '    <div style=\"width: 10%;text-align: center;\" data-name=\"per_month\">',\r",
                    "                       '       Per Month&nbsp;',\r",
                    "                       '    </div>',\r",
                    "                       '</div>'\r",
                    "                      )\r",
                    "        );\r",
                    "\r",
                    "        headers.refresh();\r",
                    "\r",
                    "\r",
                    "\r",
                    "        list.setItemTpl(\r",
                    "            Ext.create('Ext.XTemplate',\r",
                    "                       '<div style=\"height:20px\" class=\"x-rm-listtpl-main pointerCursor\">',\r",
                    "                       '    <div style=\"width: 4%;\">',\r",
                    "                       '        <div style=\"width: 18px; height:16px;\"    {[RMdatalink.util.globalConfig.getListAttrForDelHandling()]} =\"onCartTap\" ></div>',\r",
                    "                       '    </div>',\r",
                    "                       '    <div class=\"rightBorderDiv\" style=\"margin-right: 0px;width: 2%;font-weight: bold;\">{module_listed_order}</div>',\r",
                    "                       '    <div class=\"rightBorderDiv\" style=\"width: 14%;font-weight: bold;\">{module_name}</div>',\r",
                    "                       '    <div class=\"rightBorderDiv\" style=\"width: 46%;\">{module_description}</div>',\r",
                    "                       '   <div class=\"rightBorderDiv\" style=\"width: 10%;\">',\r",
                    "\r",
                    "                       '<select class=\"rmProStatusFlds\" data-id=\"{_id}\" onchange=\"RMdatalink.app.getController(\\'ProductBillingController\\').updateRmproAllModuleList(this,\\'remark_val\\');\" style=\"height: 16px;width: 96%; margin-left:2%; color:{[this.getColor(values,\"3\")]};\">',\r",
                    "                              '<option value=\"0\" style=\"color:black\" {[this.getSelected(values,\"0\")]}>None</option>',\r",
                    "                              '<option value=\"1\" style=\"color:red\" {[this.getSelected(values,\"1\")]}>Inclusive</option>',\r",
                    "                              '<option value=\"2\" style=\"color:blue\" {[this.getSelected(values,\"2\")]} >Add Ons</option>',\r",
                    "                              '<option value=\"3\" style=\"color:green\" {[this.getSelected(values,\"3\")]} >1M Free Trial</option>',\r",
                    "                              '<option value=\"4\" style=\"color:green\" {[this.getSelected(values,\"4\")]} >2M Free Trial</option>',\r",
                    "                              '<option value=\"5\" style=\"color:green\" {[this.getSelected(values,\"5\")]} >3M Free Trial</option>',\r",
                    "                              '<option value=\"6\" style=\"color:green\" {[this.getSelected(values,\"6\")]} >6M Free Trial</option>',\r",
                    "                              '<option value=\"7\" style=\"color:green\" {[this.getSelected(values,\"7\")]} >9M Free Trial</option>',\r",
                    "                              '<option value=\"8\" style=\"color:green\" {[this.getSelected(values,\"8\")]} >1Yr Free Trial</option>',\r",
                    "\r",
                    "                       '</select>',\r",
                    "                       '</div>',\r",
                    "                        '<div class=\"rightBorderDiv\" style=\"width: 6%;text-align: center;\">',\r",
                    "                       '    <input type=\"text\" style=\"width: 68% !important;margin-left: 15%;height: 16px;text-align: center;\" class=\"rmProQtyFlds x-rm-rdinlinecmt\" data-id=\"{_id}\" value=\"{quantity}\" maxlength=\"24\"',\r",
                    "                       '        onchange=\"RMdatalink.app.getController(\\'ProductBillingController\\').updateRmproAllModuleList(this,\\'quantity\\');\"/>',\r",
                    "                       '</div>',\r",
                    "                       '    <div class=\"rightBorderDiv\" style=\"width: 8%;text-align: right;padding-right: 1%;\">$ {[formatNum(values.module_promotional_price)]}</div>',\r",
                    "                       '    <div style=\"width: 10%;text-align: right;padding-right: 2%;\">$ {[formatNum(values.promotional_total)]}</div>',\r",
                    "                       '</div>',\r",
                    "                       {\r",
                    "\r",
                    "                           getSelected:function(value,cmp){\r",
                    "\r",
                    "                               if(value.remark_val && value.remark_val == cmp){\r",
                    "                                       return \"selected\";\r",
                    "                               }\r",
                    "\r",
                    "                               return \"\";\r",
                    "\r",
                    "                           },\r",
                    "\r",
                    "                           getColor:function(value){\r",
                    "\r",
                    "                               if( !value.remark_val || value.remark_val == \"0\" ){\r",
                    "                                       return \"black\";\r",
                    "                               }\r",
                    "\r",
                    "\r",
                    "                               if( value.remark_val && value.remark_val == \"1\" ){\r",
                    "                                       return \"red\";\r",
                    "                               }\r",
                    "\r",
                    "                               if( value.remark_val && value.remark_val == \"2\" ){\r",
                    "                                       return \"blue\";\r",
                    "                               }\r",
                    "\r",
                    "                               if( value.remark_val ){\r",
                    "\r",
                    "\r",
                    "                                   return \"green\";\r",
                    "                               }\r",
                    "\r",
                    "                               return \"red\" ;\r",
                    "\r",
                    "\r",
                    "                           }\r",
                    "\r",
                    "                       }\r",
                    "                      )\r",
                    "        );\r",
                    "}"
                ],
                "name": "change"
            },
            "designerId": "ba999021-8024-4a1d-9099-05da0c15adfb"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "setRMPackageModule",
                "implHandler": [
                    "\r",
                    "var packageStore = Ext.getStore('products.BillingFromPackages') ;\r",
                    "\r",
                    "var allMoulesStore = Ext.getStore('products.AllBillingModulesStore');\r",
                    "\r",
                    "var addOnsList = Ext.ComponentQuery.query('#rtProductAddOnsModuleLst')[0] ;\r",
                    "\r",
                    "var adOnsStore = addOnsList.getStore() ;\r",
                    "\r",
                    "for(var i=0; i < allMoulesStore.getData().all.length ; i++)\r",
                    "{\r",
                    "   // allMoulesStore.getAt(i).set('remark_val','0') ;\r",
                    "}\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "for(var i=0; i < packageStore.getData().all.length ; i++)\r",
                    "{\r",
                    "    var record = packageStore.getAt(i) ;\r",
                    "\r",
                    "    var recIndex = allMoulesStore.findExact('_id', record.data._id ) ;\r",
                    "\r",
                    "    if(recIndex != -1){\r",
                    "        allMoulesStore.getAt(recIndex).set('remark_val','1') ;\r",
                    "    }\r",
                    "\r",
                    "}\r",
                    "\r",
                    "for(var i=0; i < adOnsStore.getData().all.length ; i++)\r",
                    "{\r",
                    "    var record = adOnsStore.getAt(i) ;\r",
                    "\r",
                    "    var recIndex = allMoulesStore.findExact('_id', record.data._id ) ;\r",
                    "\r",
                    "    if(recIndex != -1 && record.data.remark_val ){\r",
                    "        allMoulesStore.getAt(recIndex).set('remark_val',record.data.remark_val ) ;\r",
                    "    }\r",
                    "\r",
                    "}\r",
                    "\r",
                    "var allModuleList = Ext.ComponentQuery.query('#productRmPRoAllModulesPanel')[0].down('#mainList') ;\r",
                    "\r",
                    "var selected = addOnsList.getSelection() ;\r",
                    "for(var i =0 ; i < selected.length ; i++ ){\r",
                    "\r",
                    "\r",
                    "    var recIndex = allMoulesStore.findExact('_id', selected[i].data._id ) ;\r",
                    "\r",
                    "     if(recIndex != -1  ){\r",
                    "\r",
                    "         allModuleList.select(recIndex,true , true ) ;\r",
                    "    }\r",
                    "\r",
                    "\r",
                    "}\r",
                    "\r",
                    "\r",
                    "for(var i=0; i < allMoulesStore.getData().all.length ; i++ ){\r",
                    "\r",
                    "    var rec = allMoulesStore.getAt(i) ;\r",
                    "\r",
                    "    if(!allModuleList.isSelected(rec)){\r",
                    "\r",
                    "        rec.set('remark_val',0);\r",
                    "        rec.set('quantity',0 );\r",
                    "    }\r",
                    "}\r",
                    "\r",
                    ""
                ]
            },
            "designerId": "a5f123db-388c-47c1-8ce6-f44fad374d9e"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "status"
                ],
                "fn": "disableEnableComponents",
                "implHandler": [
                    "var selectFlds = document.getElementsByClassName('rmProStatusFlds');\r",
                    "\r",
                    "for( var i = 0 ; i< selectFlds.length ; i++ ){\r",
                    "\r",
                    "    if(selectFlds[i].value == \"1\")\r",
                    "    {\r",
                    "        selectFlds[i].disabled = true  ;\r",
                    "    }\r",
                    "    else{\r",
                    "        selectFlds[i].disabled = status  ;\r",
                    "    }\r",
                    "\r",
                    "\r",
                    "}\r",
                    "\r",
                    "var rmProQtyFlds =  document.getElementsByClassName('rmProQtyFlds') ;\r",
                    "\r",
                    "for( var i = 0 ; i< rmProQtyFlds.length ; i++ ){\r",
                    "\r",
                    "\r",
                    "        rmProQtyFlds[i].disabled = status  ;\r",
                    "\r",
                    "}\r",
                    "Ext.ComponentQuery.query('#productBillingShowSubscriptionBtn')[0].setDisabled(!status);\r",
                    "\r",
                    "Ext.ComponentQuery.query('#rtBillMonthlyMemberShipFld')[0].setDisabled(status);\r",
                    "Ext.ComponentQuery.query('#productRmproSideFldsPanel')[0].setDisabled(status);\r",
                    "\r",
                    "var productList = Ext.ComponentQuery.query('#productRmPRoAllModulesPanel')[0].down('#mainList');\r",
                    "productList.setDisableSelection(status) ;\r",
                    "\r",
                    "var advacePaymentBenList = Ext.ComponentQuery.query('#rmProDiscountsForRtList')[0].down('#mainList');\r",
                    "advacePaymentBenList.setDisableSelection(status) ;\r",
                    "\r",
                    "\r",
                    "Ext.ComponentQuery.query('#productRmproContractRenewalDateFld')[0].setDisabled(true) ;\r",
                    "\r",
                    "var editFlds = document.getElementsByClassName('rtRmpProSetup');\r",
                    "\r",
                    "for( var i = 0 ; i< editFlds.length ; i++ ){\r",
                    "\r",
                    "    editFlds[i].disabled = status  ;\r",
                    "\r",
                    "}\r",
                    "\r",
                    "    Ext.ComponentQuery.query('#rtProductSetupEditLbl')[0].setHidden(status);\r",
                    "\r",
                    "\r",
                    "\r",
                    "   var timeout = setTimeout(function(){\r",
                    "\r",
                    "                       for( var i = 0 ; i< selectFlds.length ; i++ ){\r",
                    "\r",
                    "                            selectFlds[i].disabled = status  ;\r",
                    "                               if(selectFlds[i].value == \"1\")\r",
                    "                                {\r",
                    "                                    selectFlds[i].disabled = true  ;\r",
                    "                                }\r",
                    "                                else{\r",
                    "                                    selectFlds[i].disabled = status  ;\r",
                    "                                }\r",
                    "\r",
                    "\r",
                    "\r",
                    "                        }\r",
                    "\r",
                    "                        for( var i = 0 ; i< rmProQtyFlds.length ; i++ ){\r",
                    "\r",
                    "\r",
                    "                                rmProQtyFlds[i].disabled = status  ;\r",
                    "\r",
                    "                        }\r",
                    "\r",
                    "                        clearTimeout(timeout);\r",
                    "                    },100);\r",
                    ""
                ]
            },
            "designerId": "6748133d-1cbc-4ccf-bd10-cfb9e979cad1"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "setAllModuleHeight",
                "implHandler": [
                    "return;\r",
                    "var allRecrdsPanel = Ext.ComponentQuery.query('#productRmPRoAllModulesPanel')[0] ;\r",
                    "var allReList = allRecrdsPanel.down('#mainList');\r",
                    "\r",
                    "\r",
                    "var allRecPanelHeight =  allReList.getStore().getData().all.length * allReList.getItemHeight() + 54;\r",
                    "allRecrdsPanel.setHeight(allRecPanelHeight);\r",
                    "\r",
                    "var rmProModulesForRtListPanel = Ext.ComponentQuery.query('#rmProModulesForRtListPanel')[0] ;\r",
                    "\r",
                    "rmProModulesForRtListPanel.setMaxHeight(allRecPanelHeight ) ;\r",
                    "\r",
                    "rmProModulesForRtListPanel.setMinHeight(allRecPanelHeight ) ;"
                ]
            },
            "designerId": "f0b04c89-c515-4d10-b563-b58c37873898"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "selectfield[itemId=productRmproSlctTermBillFrqSlctFld]",
                "designer|targetType": "Ext.field.Select",
                "fn": "onPaymentFreqSelectfieldChange",
                "implHandler": [
                    "\r",
                    "var mPrice =  Ext.ComponentQuery.query('#rtBillMonthlyMemberShipFld')[0].getValue() ;\r",
                    "if( !mPrice || !newValue ){\r",
                    "    return ;\r",
                    "}\r",
                    "var contractPrice =parseFloat(mPrice) * parseInt(newValue) ;\r",
                    "\r",
                    "\r",
                    "var advacePaymentBenList = Ext.ComponentQuery.query('#rmProDiscountsForRtList')[0].down('#mainList');\r",
                    "\r",
                    "\r",
                    "var selction = advacePaymentBenList.getSelection() ;\r",
                    "\r",
                    "if(selction && selction.length > 0){\r",
                    "\r",
                    "  contractPrice =  selction[0].get('discount_total');\r",
                    "}\r",
                    "\r",
                    "Ext.ComponentQuery.query('#productRmProSlctTermPrice')[0].setValue(formatNum(contractPrice));"
                ],
                "name": "change"
            },
            "designerId": "30be9db7-a760-493c-9391-7644b4d8bbc9"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "selectfield[itemId=productDlAddOnsSlctFld]",
                "designer|targetType": "Ext.field.Select",
                "fn": "onproductDlAddOnsSlctFldChange",
                "implHandler": [
                    "this.config.datalinkAddonsBundle = null ;\r",
                    "\r",
                    "if(!newValue){\r",
                    "    return ;\r",
                    "}\r",
                    "\r",
                    "var form = Ext.ComponentQuery.query('#datalinkProductSetupSideP1')[0] ;\r",
                    "\r",
                    "var store = selectfield.getStore() ;\r",
                    "\r",
                    "var data = null ;\r",
                    "var i = 0 ;\r",
                    "for(i=0 ; i < store.getData().all.length ; i++){\r",
                    "\r",
                    "    if(newValue == store.getData().all[i].data.value ){\r",
                    "        data = store.getData().all[i].data ;\r",
                    "        break ;\r",
                    "    }\r",
                    "}\r",
                    "\r",
                    "if(!data){\r",
                    "    data = store.getData().all[i-1].data ;\r",
                    "}\r",
                    "\r",
                    "console.log(data);\r",
                    "\r",
                    "this.config.datalinkAddonsBundle = data ;\r",
                    "\r",
                    "var selection = data.products ;\r",
                    "\r",
                    "if(!selection){\r",
                    "    return ;\r",
                    "}\r",
                    "\r",
                    "\r",
                    "var dlList = Ext.ComponentQuery.query('#productRmPRoAllModulesPanel')[0].down('#mainList') ;\r",
                    "var store = dlList.getStore() ;\r",
                    "\r",
                    "dlList.deselectAll() ;\r",
                    "\r",
                    "for(var i=0 ; i < selection.length ; i ++){\r",
                    "\r",
                    "    var rIndex = store.findExact('_id',selection[i].product_id) ;\r",
                    "\r",
                    "    if(rIndex !== -1){\r",
                    "        var dlRec = store.getAt(rIndex) ;\r",
                    "\r",
                    "         if( dlRec.data.module_sku == \"DL-DATA\"){\r",
                    "\r",
                    "         }else{\r",
                    "\r",
                    "             dlRec.set('quantity',1) ;\r",
                    "\r",
                    "         }\r",
                    "\r",
                    "        dlRec.set('remark_val',1) ;\r",
                    "        dlList.select(dlRec,true,true);\r",
                    "    }\r",
                    "}\r",
                    "\r",
                    "\r",
                    " RMdatalink.app.getController('ProductBillingController').onModuleListSelectUnSelect() ;\r",
                    "\r",
                    "var timeout = setTimeout(function(){\r",
                    "\r",
                    "                       RMdatalink.app.getController('ProductBillingController').removeDLDataOptions() ;\r",
                    "\r",
                    "                        clearTimeout(timeout);\r",
                    "                    },100);"
                ],
                "name": "change"
            },
            "designerId": "0896e19f-4037-4c9f-8ade-7564dd80a76f"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "selectfield[itemId=productDlbdlVendorsSlctFld]",
                "designer|targetType": "Ext.field.Select",
                "fn": "onproductDlbdlVendorsSlctFldChange",
                "implHandler": [
                    ""
                ],
                "name": "change"
            },
            "designerId": "3bec9ec6-6335-45bf-965e-e9d7056aca8a"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "selectfield[itemId=productDlPriceSlctFld]",
                "designer|targetType": "Ext.field.Select",
                "fn": "ControllerAction59",
                "implHandler": [
                    "\r",
                    " var timeout = setTimeout(function(){\r",
                    "\r",
                    "                       RMdatalink.app.getController('ProductBillingController').setDlDataPrice() ;\r",
                    "\r",
                    "                        clearTimeout(timeout);\r",
                    "                    },100);\r",
                    ""
                ],
                "name": "change"
            },
            "designerId": "f8ec91de-3a25-43ef-a74c-cf8e4a9c14a5"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "selectfield[itemId=productDlAddonsPriceSlctFld]",
                "designer|targetType": "Ext.field.Select",
                "fn": "productDlAddonsPriceSlctFldChange",
                "implHandler": [
                    "var selectedPackage = 1 ;\r",
                    "\r",
                    "if(newValue == \"module_standard_price\" ){\r",
                    "    selectedPackage = 0 ;\r",
                    "}\r",
                    "\r",
                    "//Ext.ComponentQuery.query('#rmProSelectRateList')[0].select(selectedPackage,false,false) ;\r",
                    "\r",
                    "var component = Ext.ComponentQuery.query('#productRmPRoAllModulesPanel')[0];\r",
                    "var headers = component.down(\"#headerList\");\r",
                    "var list = component.down('#mainList');\r",
                    "\r",
                    "if(selectedPackage == 0)\r",
                    "{\r",
                    "\r",
                    "//        headers.setData([{}]);\r",
                    "//         headers.setItemTpl(\r",
                    "//             Ext.create('Ext.XTemplate',\r",
                    "//                        '<div class=\"x-rm-listtpl-main\" style=\" border-bottom: 1px solid #9b9b9b; background-color: gainsboro;font-weight: bold;\">',\r",
                    "//                        '    <div style=\"width: 4%;\">',\r",
                    "//                        '        <div style=\"width: 20px;\" data-name=\"all\"></div>',\r",
                    "//                        '    </div>',\r",
                    "//                        '    <div class=\"rightBorderDiv\" style=\"width: 2%;text-align: center;\" data-name=\"module_listed_order\">',\r",
                    "//                        '        ',\r",
                    "//                        '    </div>',\r",
                    "//                        '    <div class=\"rightBorderDiv\" style=\"width: 14%;text-align: center;\" data-name=\"module_name\">',\r",
                    "//                        '        Product/ Add Ons&nbsp;',\r",
                    "//                        '    </div>',\r",
                    "//                        '    <div class=\"rightBorderDiv\" style=\"width: 46%;text-align: center;\" data-name=\"module_description\">',\r",
                    "//                        '       Description (N0. of SKU, Images, Addl Images)&nbsp;',\r",
                    "//                        '    </div>',\r",
                    "//                        '    <div class=\"rightBorderDiv\" style=\"width: 10%;text-align: center;\" data-name=\"trial\">',\r",
                    "//                        '        Status&nbsp;',\r",
                    "//                        '    </div>',\r",
                    "//                        '    <div class=\"rightBorderDiv\" style=\"width: 6%;text-align: center;\" data-name=\"quantity\">',\r",
                    "//                        '        Qty&nbsp;',\r",
                    "//                        '    </div>',\r",
                    "//                        '    <div class=\"rightBorderDiv\" style=\"width: 8%;text-align: center;\" data-name=\"module_standard_price\">',\r",
                    "//                        '        Price&nbsp;',\r",
                    "//                        '    </div>',\r",
                    "//                        '    <div style=\"width: 10%;text-align: center;\" data-name=\"per_month\">',\r",
                    "//                        '         Per Month&nbsp;',\r",
                    "//                        '    </div>',\r",
                    "//                        '</div>'\r",
                    "//                       )\r",
                    "//         );\r",
                    "\r",
                    "//         headers.refresh();\r",
                    "\r",
                    "\r",
                    "\r",
                    "        list.setItemTpl(\r",
                    "            Ext.create('Ext.XTemplate',\r",
                    "                       '<div style=\"height:20px\" class=\"x-rm-listtpl-main pointerCursor\">',\r",
                    "                       '    <div style=\"width: 4%;\">',\r",
                    "                       '        <div style=\"width: 18px; height:16px;\"    {[RMdatalink.util.globalConfig.getListAttrForDelHandling()]} =\"onCartTap\" ></div>',\r",
                    "                       '    </div>',\r",
                    "                       '    <div class=\"rightBorderDiv\" style=\"margin-right: 0px;width: 2%;\">{module_listed_order}</div>',\r",
                    "                       '    <div class=\"rightBorderDiv\" style=\"width: 14%;font-weight: bold;\">{module_name}</div>',\r",
                    "                       '    <div class=\"rightBorderDiv\" style=\"width: 46%;\">{module_description}</div>',\r",
                    "                       '   <div class=\"rightBorderDiv\" style=\"width: 10%;\">',\r",
                    "\r",
                    "                       '<select class=\"rmProStatusFlds\" data-id=\"{_id}\" onchange=\"RMdatalink.app.getController(\\'ProductBillingController\\').updateRmproAllModuleList(this,\\'remark_val\\');\" style=\"height: 16px;width: 96%; margin-left:2%; color:{[this.getColor(values,\"3\")]};\">',\r",
                    "                              '<option value=\"0\" style=\"color:black\" {[this.getSelected(values,\"0\")]}>None</option>',\r",
                    "                              '<option value=\"1\" style=\"color:red\" {[this.getSelected(values,\"1\")]}>Inclusive</option>',\r",
                    "                              '<option value=\"2\" style=\"color:blue\" {[this.getSelected(values,\"2\")]} >Add Ons</option>',\r",
                    "                              '<option value=\"3\" style=\"color:green\" {[this.getSelected(values,\"3\")]} >1M Free Trial</option>',\r",
                    "                              '<option value=\"4\" style=\"color:green\" {[this.getSelected(values,\"4\")]} >2M Free Trial</option>',\r",
                    "                              '<option value=\"5\" style=\"color:green\" {[this.getSelected(values,\"5\")]} >3M Free Trial</option>',\r",
                    "                              '<option value=\"6\" style=\"color:green\" {[this.getSelected(values,\"6\")]} >6M Free Trial</option>',\r",
                    "                              '<option value=\"7\" style=\"color:green\" {[this.getSelected(values,\"7\")]} >9M Free Trial</option>',\r",
                    "                              '<option value=\"8\" style=\"color:green\" {[this.getSelected(values,\"8\")]} >1Yr Free Trial</option>',\r",
                    "\r",
                    "                       '</select>',\r",
                    "                       '</div>',\r",
                    "                       '<div class=\"rightBorderDiv\" style=\"width: 6%;text-align: center;\">',\r",
                    "                       '    <input type=\"text\" style=\"width: 68% !important;margin-left: 15%;height: 16px;text-align: center;\" class=\"rmProStatusFlds x-rm-rdinlinecmt\" data-id=\"{_id}\" value=\"{quantity}\" maxlength=\"24\"',\r",
                    "                       '        onchange=\"RMdatalink.app.getController(\\'ProductBillingController\\').updateRmproAllModuleList(this,\\'quantity\\');\"/>',\r",
                    "                       '</div>',\r",
                    "                       '    <div class=\"rightBorderDiv\" style=\"width: 8%;text-align: right;padding-right: 1%;\">$ {[formatNum(values.module_standard_price)]}</div>',\r",
                    "                       '    <div style=\"width: 10%;text-align: right;padding-right: 2%;\">$ {[formatNum(values.standard_total)]}</div>',\r",
                    "                       '</div>',\r",
                    "                       {\r",
                    "\r",
                    "                           getSelected:function(value,cmp){\r",
                    "\r",
                    "                               if(value.remark_val && value.remark_val == cmp){\r",
                    "                                       return \"selected\";\r",
                    "                               }\r",
                    "\r",
                    "                               return \"\";\r",
                    "\r",
                    "                           },\r",
                    "\r",
                    "                           getColor:function(value){\r",
                    "\r",
                    "                               if( !value.remark_val || value.remark_val == \"0\" ){\r",
                    "                                       return \"black\";\r",
                    "                               }\r",
                    "\r",
                    "\r",
                    "                               if( value.remark_val && value.remark_val == \"1\" ){\r",
                    "                                       return \"red\";\r",
                    "                               }\r",
                    "\r",
                    "                               if( value.remark_val && value.remark_val == \"2\" ){\r",
                    "                                       return \"blue\";\r",
                    "                               }\r",
                    "\r",
                    "                               if( value.remark_val ){\r",
                    "\r",
                    "\r",
                    "                                   return \"green\";\r",
                    "                               }\r",
                    "\r",
                    "                               return \"red\" ;\r",
                    "\r",
                    "\r",
                    "                           }\r",
                    "\r",
                    "                       }\r",
                    "                      )\r",
                    "        );\r",
                    "}else{\r",
                    "\r",
                    "\r",
                    "//        headers.setData([{}]);\r",
                    "//         headers.setItemTpl(\r",
                    "//             Ext.create('Ext.XTemplate',\r",
                    "//                        '<div class=\"x-rm-listtpl-main\" style=\" border-bottom: 1px solid #9b9b9b; background-color: gainsboro;font-weight: bold;\">',\r",
                    "//                        '    <div style=\"width: 4%;\">',\r",
                    "//                        '        <div style=\"width: 20px;\" data-name=\"all\"></div>',\r",
                    "//                        '    </div>',\r",
                    "//                        '    <div class=\"rightBorderDiv\" style=\"width: 2%;text-align: center;\" data-name=\"module_listed_order\">',\r",
                    "//                        '        ',\r",
                    "//                        '    </div>',\r",
                    "//                        '    <div class=\"rightBorderDiv\" style=\"width: 14%;text-align: center;\" data-name=\"module_name\">',\r",
                    "//                        '        Product/ Add Ons&nbsp;',\r",
                    "//                        '    </div>',\r",
                    "//                        '    <div class=\"rightBorderDiv\" style=\"width: 46%;text-align: center;\" data-name=\"module_description\">',\r",
                    "//                        '       Description (N0. of SKU, Images, Addl Images)&nbsp;',\r",
                    "//                        '    </div>',\r",
                    "//                        '    <div class=\"rightBorderDiv\" style=\"width: 10%;text-align: center;\" data-name=\"trial\">',\r",
                    "//                        '        Status&nbsp;',\r",
                    "//                        '    </div>',\r",
                    "//                        '    <div class=\"rightBorderDiv\" style=\"width: 6%;text-align: center;\" data-name=\"quantity\">',\r",
                    "//                        '        Qty&nbsp;',\r",
                    "//                        '    </div>',\r",
                    "//                        '    <div class=\"rightBorderDiv\" style=\"width: 8%;text-align: center;\" data-name=\"module_standard_price\">',\r",
                    "//                        '        Price&nbsp;',\r",
                    "//                        '    </div>',\r",
                    "//                        '    <div style=\"width: 10%;text-align: center;\" data-name=\"per_month\">',\r",
                    "//                        '       Per Month&nbsp;',\r",
                    "//                        '    </div>',\r",
                    "//                        '</div>'\r",
                    "//                       )\r",
                    "//         );\r",
                    "\r",
                    "//         headers.refresh();\r",
                    "\r",
                    "\r",
                    "\r",
                    "        list.setItemTpl(\r",
                    "            Ext.create('Ext.XTemplate',\r",
                    "                       '<div style=\"height:20px\" class=\"x-rm-listtpl-main pointerCursor\">',\r",
                    "                       '    <div style=\"width: 4%;\">',\r",
                    "                       '        <div style=\"width: 18px; height:16px;\"    {[RMdatalink.util.globalConfig.getListAttrForDelHandling()]} =\"onCartTap\" ></div>',\r",
                    "                       '    </div>',\r",
                    "                       '    <div class=\"rightBorderDiv\" style=\"margin-right: 0px;width: 2%;font-weight: bold;\">{module_listed_order}</div>',\r",
                    "                       '    <div class=\"rightBorderDiv\" style=\"width: 14%;font-weight: bold;\">{module_name}</div>',\r",
                    "                       '    <div class=\"rightBorderDiv\" style=\"width: 46%;\">{module_description}</div>',\r",
                    "                       '   <div class=\"rightBorderDiv\" style=\"width: 10%;\">',\r",
                    "\r",
                    "                       '<select class=\"rmProStatusFlds\" data-id=\"{_id}\" onchange=\"RMdatalink.app.getController(\\'ProductBillingController\\').updateRmproAllModuleList(this,\\'remark_val\\');\" style=\"height: 16px;width: 96%; margin-left:2%; color:{[this.getColor(values,\"3\")]};\">',\r",
                    "                              '<option value=\"0\" style=\"color:black\" {[this.getSelected(values,\"0\")]}>None</option>',\r",
                    "                              '<option value=\"1\" style=\"color:red\" {[this.getSelected(values,\"1\")]}>Inclusive</option>',\r",
                    "                              '<option value=\"2\" style=\"color:blue\" {[this.getSelected(values,\"2\")]} >Add Ons</option>',\r",
                    "                              '<option value=\"3\" style=\"color:green\" {[this.getSelected(values,\"3\")]} >1M Free Trial</option>',\r",
                    "                              '<option value=\"4\" style=\"color:green\" {[this.getSelected(values,\"4\")]} >2M Free Trial</option>',\r",
                    "                              '<option value=\"5\" style=\"color:green\" {[this.getSelected(values,\"5\")]} >3M Free Trial</option>',\r",
                    "                              '<option value=\"6\" style=\"color:green\" {[this.getSelected(values,\"6\")]} >6M Free Trial</option>',\r",
                    "                              '<option value=\"7\" style=\"color:green\" {[this.getSelected(values,\"7\")]} >9M Free Trial</option>',\r",
                    "                              '<option value=\"8\" style=\"color:green\" {[this.getSelected(values,\"8\")]} >1Yr Free Trial</option>',\r",
                    "\r",
                    "                       '</select>',\r",
                    "                       '</div>',\r",
                    "                        '<div class=\"rightBorderDiv\" style=\"width: 6%;text-align: center;\">',\r",
                    "                       '    <input type=\"text\" style=\"width: 68% !important;margin-left: 15%;height: 16px;text-align: center;\" class=\"rmProStatusFlds x-rm-rdinlinecmt\" data-id=\"{_id}\" value=\"{quantity}\" maxlength=\"24\"',\r",
                    "                       '        onchange=\"RMdatalink.app.getController(\\'ProductBillingController\\').updateRmproAllModuleList(this,\\'quantity\\');\"/>',\r",
                    "                       '</div>',\r",
                    "                       '    <div class=\"rightBorderDiv\" style=\"width: 8%;text-align: right;padding-right: 1%;\">$ {[formatNum(values.module_promotional_price)]}</div>',\r",
                    "                       '    <div style=\"width: 10%;text-align: right;padding-right: 2%;\">$ {[formatNum(values.promotional_total)]}</div>',\r",
                    "                       '</div>',\r",
                    "                       {\r",
                    "\r",
                    "                           getSelected:function(value,cmp){\r",
                    "\r",
                    "                               if(value.remark_val && value.remark_val == cmp){\r",
                    "                                       return \"selected\";\r",
                    "                               }\r",
                    "\r",
                    "                               return \"\";\r",
                    "\r",
                    "                           },\r",
                    "\r",
                    "                           getColor:function(value){\r",
                    "\r",
                    "                               if( !value.remark_val || value.remark_val == \"0\" ){\r",
                    "                                       return \"black\";\r",
                    "                               }\r",
                    "\r",
                    "\r",
                    "                               if( value.remark_val && value.remark_val == \"1\" ){\r",
                    "                                       return \"red\";\r",
                    "                               }\r",
                    "\r",
                    "                               if( value.remark_val && value.remark_val == \"2\" ){\r",
                    "                                       return \"blue\";\r",
                    "                               }\r",
                    "\r",
                    "                               if( value.remark_val ){\r",
                    "\r",
                    "\r",
                    "                                   return \"green\";\r",
                    "                               }\r",
                    "\r",
                    "                               return \"red\" ;\r",
                    "\r",
                    "\r",
                    "                           }\r",
                    "\r",
                    "                       }\r",
                    "                      )\r",
                    "        );\r",
                    "}"
                ],
                "name": "change"
            },
            "designerId": "3b22449a-b77c-4b1f-9b25-3d8b9c632232"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "selectfield[itemId=productDlPriceOptionsimgAdlImgSlctFld]",
                "designer|targetType": "Ext.field.Select",
                "fn": "onproductDlPriceOptionsimgAdlImgSlctFldChange",
                "implHandler": [
                    "if(!newValue){\r",
                    "\r",
                    "    return ;\r",
                    "\r",
                    "}\r",
                    "\r",
                    "var DlVdPricingSkuImgsStr = Ext.getStore('DlVdPricingSkuImgs') ;\r",
                    "var DlVdPricingSkuImgsAddlImages = Ext.getStore('DlVdPricingSkuImgsAddlImages') ;\r",
                    "var DlPricingVendors = Ext.getStore('DlPricingVendors') ;\r",
                    "\r",
                    "\r",
                    "var ecomVdPricingSkuImgsStr = Ext.getStore('ecomVdPricingSkuImgs') ;\r",
                    "var ecomVdPricingSkuImgsAddlImages = Ext.getStore('ecomVdPricingSkuImgsAddlImages') ;\r",
                    "var ecomPricingVendors = Ext.getStore('ecomPricingVendors') ;\r",
                    "\r",
                    "\r",
                    "var productDlVdrPricingPolicySlctFld = Ext.ComponentQuery.query('#productDlVdrPricingPolicySlctFld')[0] ;\r",
                    "\r",
                    "\r",
                    "if(this.config.isecomProduct){\r",
                    "    if(newValue == \"sku_images\")\r",
                    "    {\r",
                    "\r",
                    "        productDlVdrPricingPolicySlctFld.setValue(null);\r",
                    "        productDlVdrPricingPolicySlctFld.setStore(ecomVdPricingSkuImgsStr) ;\r",
                    "        productDlVdrPricingPolicySlctFld.reset();\r",
                    "    }\r",
                    "    else\r",
                    "        if(newValue == \"vendors\" || newValue == \"vendorsAddl\")\r",
                    "        {\r",
                    "            productDlVdrPricingPolicySlctFld.setValue(null);\r",
                    "            productDlVdrPricingPolicySlctFld.setStore(ecomPricingVendors) ;\r",
                    "            productDlVdrPricingPolicySlctFld.reset();\r",
                    "        }\r",
                    "        else\r",
                    "        {\r",
                    "            productDlVdrPricingPolicySlctFld.setValue(null);\r",
                    "            productDlVdrPricingPolicySlctFld.setStore(ecomVdPricingSkuImgsAddlImages) ;\r",
                    "            productDlVdrPricingPolicySlctFld.reset();\r",
                    "        }\r",
                    "}\r",
                    "else{\r",
                    "\r",
                    "    if(newValue == \"sku_images\")\r",
                    "    {\r",
                    "\r",
                    "        productDlVdrPricingPolicySlctFld.setStore(DlVdPricingSkuImgsStr) ;\r",
                    "    }else if(newValue == \"vendors\" || newValue == \"vendorsAddl\"){\r",
                    "\r",
                    "        productDlVdrPricingPolicySlctFld.setStore(DlPricingVendors) ;\r",
                    "    }\r",
                    "\r",
                    "    else{\r",
                    "        productDlVdrPricingPolicySlctFld.setStore(DlVdPricingSkuImgsAddlImages) ;\r",
                    "    }\r",
                    "}"
                ],
                "name": "change"
            },
            "designerId": "f4e3ec1e-bb97-404a-b828-8ee4f956e401"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "selectfield[itemId=productDlVdrPricingPolicySlctFld]",
                "designer|targetType": "Ext.field.Select",
                "fn": "onproductDlVdrPricingPolicySlctFldChange",
                "implHandler": [
                    "\r",
                    "if(!newValue){\r",
                    "    return ;\r",
                    "}\r",
                    "\r",
                    "var store = selectfield.getStore() ;\r",
                    "var BillingDetailsController = RMdatalink.app.getController('BillingDetailsController') ;\r",
                    "\r",
                    "\r",
                    "\r",
                    "var dIndex = store.findExact('value',newValue) ;\r",
                    "var isPresentInItems = false;\r",
                    "var data;\r",
                    "\r",
                    "for(var i = 0; i < store.data.items.length ; i++){\r",
                    "\r",
                    "    var item = store.data.items[i];\r",
                    "    if( item.data.value  == newValue)\r",
                    "    {\r",
                    "         console.log(item);\r",
                    "         data = item.data ;\r",
                    "        isPresentInItems = true;\r",
                    "        //debugger;\r",
                    "        break;\r",
                    "    }\r",
                    "}\r",
                    "if(isPresentInItems ){\r",
                    "\r",
                    "}else\r",
                    "{\r",
                    "     data = store.getData().all[dIndex].data ;\r",
                    "}\r",
                    "\r",
                    "\r",
                    "console.error(dIndex) ;\r",
                    "var rec = data ;//store.getData().all[dIndex].data ;\r",
                    "\r",
                    "\r",
                    "\r",
                    "this.config.tempPricePolicy = rec ;\r",
                    "\r",
                    "/*\r",
                    "if(store.getId() == \"DlVdPricingSkuImgs\"){\r",
                    "    BillingDetailsController.updateVdrAsPolicyChange(rec);\r",
                    "}else{\r",
                    "    BillingDetailsController.updateVdrsAsAddlImgPolicyChange(rec);\r",
                    "}\r",
                    "*/\r",
                    "\r",
                    " var timeout = setTimeout(function(){\r",
                    "\r",
                    "                       RMdatalink.app.getController('ProductBillingController').setDlDataPrice() ;\r",
                    "\r",
                    "                        clearTimeout(timeout);\r",
                    "                    },500);\r",
                    "\r",
                    "\r",
                    ""
                ],
                "name": "change"
            },
            "designerId": "59929e68-51b4-42b0-b45c-1f977f646cef"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "selectfield[itemId=productDlDiscountVdrsSlctFld]",
                "designer|targetType": "Ext.field.Select",
                "fn": "onproductDlDiscountVdrsSlctFldChange",
                "implHandler": [
                    "\r",
                    " var timeout = setTimeout(function(){\r",
                    "\r",
                    "                       RMdatalink.app.getController('ProductBillingController').setDlDataPrice() ;\r",
                    "\r",
                    "                        clearTimeout(timeout);\r",
                    "                    },100);\r",
                    ""
                ],
                "name": "change"
            },
            "designerId": "171523a2-55b9-411b-8f8a-b9ff86898103"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "selectfield[itemId=productDlDiscountSKUSlctFld]",
                "designer|targetType": "Ext.field.Select",
                "fn": "onproductDlDiscountSKUSlctFldChange",
                "implHandler": [
                    "\r",
                    " var timeout = setTimeout(function(){\r",
                    "\r",
                    "                       RMdatalink.app.getController('ProductBillingController').setDlDataPrice() ;\r",
                    "\r",
                    "                        clearTimeout(timeout);\r",
                    "                    },100);\r",
                    ""
                ],
                "name": "change"
            },
            "designerId": "271bad1a-89ed-410b-b334-fc8927cdbd09"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "disableenbleStatusFlds",
                "implHandler": [
                    "var status  =     Ext.ComponentQuery.query('#productBillingSheetCancel')[0].getText() == \"Edit\" ;\r",
                    "\r",
                    "var selectFlds = document.getElementsByClassName('rmProStatusFlds');\r",
                    "\r",
                    "for( var i = 0 ; i< selectFlds.length ; i++ ){\r",
                    "\r",
                    "    if(selectFlds[i].value == \"1\")\r",
                    "    {\r",
                    "        selectFlds[i].disabled = true  ;\r",
                    "    }\r",
                    "    else{\r",
                    "        selectFlds[i].disabled = status  ;\r",
                    "    }\r",
                    "\r",
                    "\r",
                    "}"
                ]
            },
            "designerId": "8d3bbfd3-1487-44ea-8906-ba5cd06cec40"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "removeDLDataOptions",
                "implHandler": [
                    "if(!this.config.isDatalinkProduct && !this.config.isecomProduct  ){\r",
                    "\r",
                    "    return ;\r",
                    "\r",
                    "}\r",
                    "\r",
                    "var productKey = this.config.productKey ;\r",
                    "\r",
                    "var allMoulesStore = Ext.getStore('products.AllBillingModulesStore');\r",
                    "\r",
                    "var datalinkStore = allMoulesStore ; // Ext.getStore('products.DatalinkMain') ;\r",
                    "\r",
                    "    var keyToSearch  = 'module_sku';\r",
                    "    var valueofKey  = \"DL-DATA\";\r",
                    "    var objectToSearch = {};\r",
                    "        objectToSearch[keyToSearch] = valueofKey;\r",
                    "    var quanToSubtract = 0;\r",
                    "    if( this.getIsFromVip()  && false )\r",
                    "    {\r",
                    "\r",
                    "         keyToSearch = 'module_name';\r",
                    "         valueofKey   = \"Additional Vendors\";\r",
                    "         objectToSearch = {};\r",
                    "         objectToSearch[keyToSearch] = valueofKey;\r",
                    "         quanToSubtract = 1;\r",
                    "    }\r",
                    "\r",
                    "  var dlDataRIndex = allMoulesStore.findExact(keyToSearch , valueofKey) ;\r",
                    "\r",
                    "if( dlDataRIndex == -1 ){\r",
                    " return ;\r",
                    "}\r",
                    "\r",
                    "var dlDataRecord = datalinkStore.getAt(dlDataRIndex) ;\r",
                    "var dl_id = dlDataRecord.get('_id');\r",
                    "\r",
                    "var vendorPricing =  RMdatalink.app.getController('ProductBillingController').getSumVendorsPromotionalStandardPrice();\r",
                    "\r",
                    "var productList = Ext.ComponentQuery.query('#productRmPRoAllModulesPanel')[0].down('#mainList');\r",
                    "productList.select(dlDataRecord,true,true);\r",
                    "\r",
                    "  dlDataRecord.set('remark_val',1);\r",
                    "  console.error(vendorPricing.quantity , quanToSubtract);\r",
                    "  var quantityParameter =  vendorPricing.quantity ;\r",
                    "  if(  this.getIsFromVip() )\r",
                    "  {\r",
                    "          // AT THE TOP OF ARRAY , THE VENDOR SELECTED IS VENDOR PARTNER OF THE RETAILER.\r",
                    "      //vendorPricing.quantity.shift();\r",
                    "      quantityParameter = 1;\r",
                    "  }\r",
                    "  dlDataRecord.set('quantity',quantityParameter );\r",
                    "\r",
                    "/*\r",
                    "\r",
                    "var selectFlds = document.getElementsByClassName('rmProStatusFlds');\r",
                    "\r",
                    "for( var i = 0 ; i< selectFlds.length ; i++ ){\r",
                    "\r",
                    "        if(selectFlds[i].getAttribute('data-id') == dl_id ){\r",
                    "\r",
                    "\r",
                    "            if(selectFlds[i].options[0].value == \"0\" ){\r",
                    "\r",
                    "                selectFlds[i].options.remove(0);\r",
                    "                selectFlds[i].options.remove(1);\r",
                    "\r",
                    "            }\r",
                    "\r",
                    "        break;\r",
                    "    }\r",
                    "}\r",
                    "\r",
                    "*/\r",
                    "\r",
                    " var timeout = setTimeout(function(){\r",
                    "\r",
                    "                       RMdatalink.app.getController('ProductBillingController').setDlDataPrice() ;\r",
                    "\r",
                    "                        clearTimeout(timeout);\r",
                    "                    },100);\r",
                    ""
                ]
            },
            "designerId": "b5208e12-3fa6-4c3c-bc32-6a34b5139bfe"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "setDlDataPrice",
                "implHandler": [
                    "\r",
                    "console.warn(\"DEBUG STEP ONE\");\r",
                    "\r",
                    "\r",
                    "\r",
                    "var allMoulesStore = Ext.getStore('products.AllBillingModulesStore');\r",
                    "\r",
                    "\r",
                    "    var keyToSearch  = 'module_sku';\r",
                    "    var valueofKey  = \"DL-DATA\";\r",
                    "    var objectToSearch = {};\r",
                    "        objectToSearch[keyToSearch] = valueofKey;\r",
                    "    if( this.getIsFromVip() && true){\r",
                    "\r",
                    "         keyToSearch = 'module_name';\r",
                    "         valueofKey   = \"Additional Vendors\";\r",
                    "         objectToSearch = {};\r",
                    "         objectToSearch[keyToSearch] = valueofKey;\r",
                    "    }\r",
                    "\r",
                    "\r",
                    "\r",
                    "\tvar vendorPricing = this.getSumVendorsPromotionalStandardPrice();\r",
                    "\r",
                    "    var dlDataRIndex = allMoulesStore.findExact(keyToSearch , valueofKey) ;\r",
                    "    if( dlDataRIndex == -1 ){\r",
                    "     return ;\r",
                    "    }\r",
                    "\r",
                    "    var dlDataRecord = allMoulesStore.getAt(dlDataRIndex) ;\r",
                    "\r",
                    "    var productDlPriceSlctFldVal = Ext.ComponentQuery.query('#productDlPriceSlctFld')[0].getValue() ;\r",
                    "\r",
                    "var modulePrice = 0 ;\r",
                    "var skuDisc = 0 ;\r",
                    "var vdrDisc = 0 ;\r",
                    "\r",
                    "\r",
                    "//debugger;\r",
                    "if(productDlPriceSlctFldVal == \"module_standard_price\" )\r",
                    "{\r",
                    "    modulePrice  = vendorPricing.standard_price ;\r",
                    "}else\r",
                    "{\r",
                    "     modulePrice  = vendorPricing.promotional_price ;\r",
                    "}\r",
                    "updateFinalPriceWithDiscount() ;\r",
                    "\r",
                    "dlDataRecord.set('module_standard_price',modulePrice);\r",
                    "\r",
                    "dlDataRecord.set('module_promotional_price',modulePrice);\r",
                    "\r",
                    " dlDataRecord.set('standard_total',modulePrice);\r",
                    " dlDataRecord.set('promotional_total',modulePrice);\r",
                    "\r",
                    "dlDataRecord.set('per_month',modulePrice);\r",
                    "\r",
                    "dlDataRecord.set('quantity',vendorPricing.test);\r",
                    "\r",
                    "this.calculateBillingPrices() ;\r",
                    "\r",
                    "function updateFinalPriceWithDiscount()\r",
                    "{\r",
                    "\r",
                    "    var sku = vendorPricing.total_sku ;\r",
                    "    var vdrs = vendorPricing.test ;\r",
                    "    var vdrDisc = 0;\r",
                    "    var skuDisc = 0;\r",
                    "    var productDlDiscountVdrsSlctFld = Ext.ComponentQuery.query('#productDlDiscountVdrsSlctFld')[0];\r",
                    "    var productDlDiscountSKUSlctFld = Ext.ComponentQuery.query('#productDlDiscountSKUSlctFld')[0];\r",
                    "\r",
                    "\r",
                    "    var skuVal = productDlDiscountSKUSlctFld.getValue();\r",
                    "\r",
                    "\r",
                    "    if(skuVal)\r",
                    "    {\r",
                    "            var skuStore = productDlDiscountSKUSlctFld.getStore();\r",
                    "\r",
                    "            var skIndex = skuStore.findExact('value',skuVal);\r",
                    "\r",
                    "            var rec = skuStore.getAt(skIndex).data;\r",
                    "\r",
                    "            var skuIncrementValue = rec.range ;\r",
                    "\r",
                    "                var pIndex = parseInt(  sku/skuIncrementValue);\r",
                    "\r",
                    "        if(pIndex >=  rec.policy.length){\r",
                    "            pIndex =  rec.policy.length -1 ;\r",
                    "        }\r",
                    "                var disc = rec.policy[pIndex].disc ;\r",
                    "        skuDisc = (modulePrice * disc)/ 100 ;\r",
                    "\r",
                    "    }\r",
                    "\r",
                    "    var vdrVal = productDlDiscountVdrsSlctFld.getValue() ;\r",
                    "\r",
                    "\r",
                    "    if(vdrVal)\r",
                    "    {\r",
                    "            var vdrStore = productDlDiscountVdrsSlctFld.getStore();\r",
                    "\r",
                    "            var vdIndex = vdrStore.findExact('value',vdrVal);\r",
                    "\r",
                    "            var recV = vdrStore.getAt(vdIndex).data;\r",
                    "\r",
                    "            var vdrIncrementValue = recV.range ;\r",
                    "\r",
                    "                var vpIndex = parseInt(  vdrs/vdrIncrementValue);\r",
                    "\r",
                    "        if(vpIndex >=  recV.policy.length){\r",
                    "            vpIndex =  recV.policy.length -1 ;\r",
                    "        }\r",
                    "\r",
                    "                var vdisc = recV.policy[vpIndex].disc ;\r",
                    "        vdrDisc = (modulePrice * vdisc)/ 100 ;\r",
                    "\r",
                    "    }\r",
                    "\r",
                    "    modulePrice = modulePrice - (vdrDisc + skuDisc) ;\r",
                    "}"
                ]
            },
            "designerId": "df25c36f-a26a-4edd-853a-68d780bd18cb"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "getDatalinkSelectedModules",
                "implHandler": [
                    "\r",
                    "var productList = Ext.ComponentQuery.query('#productRmPRoAllModulesPanel')[0].down('#mainList');\r",
                    "\r",
                    "var selections = productList.getSelection() ;\r",
                    "\r",
                    "var dataToReturn = [] ;\r",
                    "\r",
                    "for( var i =0 ; i < selections.length ; i++ ){\r",
                    "\r",
                    "    dataToReturn.push(selections[i].data);\r",
                    "\r",
                    "}\r",
                    "\r",
                    "return dataToReturn ;"
                ]
            },
            "designerId": "7e054f2a-806d-49ce-9faa-afe3a532b053"
        }
    ]
}