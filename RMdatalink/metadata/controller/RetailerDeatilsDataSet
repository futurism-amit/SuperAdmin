{
    "type": "Ext.app.Controller",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "accNoChk": 0,
        "billingQuery": [
            "{\r",
            "     getLastPaidAmmount: function(value){\r",
            "\r",
            "                        if(value.product_billng){\r",
            "\r",
            "                           var d1 = null;\r",
            "                           var d2 = null ;\r",
            "                            var amm1 = 0 ;\r",
            "                            var amm2 = 0 ;\r",
            "                           if(value.product_billng.product_datalink){\r",
            "\r",
            "                               d1 = value.product_billng.product_datalink.invoice_id;\r",
            "\r",
            "                               amm1 = value.product_billng.product_datalink.total_payble;\r",
            "                           }\r",
            "                           if(value.product_billng.product_rmpro){\r",
            "\r",
            "                               d2 = value.product_billng.product_rmpro.invoice_id;\r",
            "\r",
            "                               amm2 = value.product_billng.product_rmpro.total_payble;\r",
            "                           }\r",
            "\r",
            "                           if( d1 && d2){\r",
            "                               \r",
            "                               if(amm1 && amm2){\r",
            "                                   var t1 = parseFloat(amm1) ;\r",
            "                                   var t2 = parseFloat(amm2) ;\r",
            "                                   \r",
            "                                   return t1 + t2 ;\r",
            "                               }\r",
            "                               \r",
            "                               var d3 = new Date(d1);\r",
            "                               var d4 = new Date(d2);\r",
            "                               return (d3 > d4 ? amm1 : amm2 ) ;\r",
            "                           }else{\r",
            "\r",
            "                               return (amm1 ? amm1 : amm2 ? amm2 : \"\") ;\r",
            "                           }\r",
            "\r",
            "                       }\r",
            "\r",
            "                        return \"\";\r",
            "\r",
            "                   },\r",
            "                      getDueDate: function(value){\r",
            "                       if(value.product_billng){\r",
            "\r",
            "                           var d1 = null;\r",
            "                           var d2 = null ;\r",
            "\r",
            "                           if(value.product_billng.product_datalink){\r",
            "\r",
            "                               d1 = value.product_billng.product_datalink.due_date;\r",
            "                           }\r",
            "                           if(value.product_billng.product_rmpro){\r",
            "\r",
            "                               d2 = value.product_billng.product_rmpro.due_date;\r",
            "                           }\r",
            "\r",
            "                           if( d1 && d2){\r",
            "                               var d3 = new Date(d1);\r",
            "                               var d4 = new Date(d2);\r",
            "                               return (d3 < d4 ? d1 : d2) ;\r",
            "                           }else{\r",
            "\r",
            "                               return (d1 ? d1 : d2 ? d2 : \"\") ;\r",
            "                           }\r",
            "\r",
            "                       }\r",
            "\r",
            "                        return \"\";\r",
            "\r",
            "                   },\r",
            "                 getDueAmmount: function(value){\r",
            "\r",
            "                     var past_due = 0 ;\r",
            "                       if(value.product_billng){\r",
            "\r",
            "\r",
            "\r",
            "                           if(value.product_billng.product_datalink){\r",
            "\r",
            "                               past_due = value.product_billng.product_datalink.past_due ? parseInt(value.product_billng.product_datalink.past_due,0) : 0;\r",
            "                           }\r",
            "                           if(value.product_billng.product_rmpro){\r",
            "\r",
            "                               past_due += value.product_billng.product_rmpro.past_due ? parseInt(value.product_billng.product_rmpro.past_due,0) :0;\r",
            "                           }\r",
            "\r",
            "\r",
            "\r",
            "                       }\r",
            "\r",
            "                        return past_due ;\r",
            "\r",
            "                   },\r",
            "                   getLastPaidOn: function(value){\r",
            "\r",
            "                        if(value.product_billng){\r",
            "\r",
            "                           var d1 = null;\r",
            "                           var d2 = null ;\r",
            "\r",
            "                           if(value.product_billng.product_datalink){\r",
            "\r",
            "                               d1 = value.product_billng.product_datalink.invoice_id;\r",
            "                           }\r",
            "                           if(value.product_billng.product_rmpro){\r",
            "\r",
            "                               d2 = value.product_billng.product_rmpro.invoice_id;\r",
            "                           }\r",
            "\r",
            "                           if( d1 && d2){\r",
            "                               var d3 = new Date(d1);\r",
            "                               var d4 = new Date(d2);\r",
            "                               return (d3 > d4 ? d1 : d2) ;\r",
            "                           }else{\r",
            "\r",
            "                               return (d1 ? d1 : d2 ? d2 : \"\") ;\r",
            "                           }\r",
            "\r",
            "                       }\r",
            "\r",
            "                        return \"\";\r",
            "\r",
            "                   },\r",
            "\r",
            "\r",
            "                    getStatus: function(value){\r",
            "\r",
            "                     var status = \"\" ;\r",
            "                        var dd = null ;\r",
            "                       if(value.product_billng){\r",
            "\r",
            "                           var d1 = null;\r",
            "                           var d2 = null ;\r",
            "\r",
            "                           if(value.product_billng.product_datalink){\r",
            "\r",
            "                               d1 = value.product_billng.product_datalink.due_date;\r",
            "                           }\r",
            "                           if(value.product_billng.product_rmpro){\r",
            "\r",
            "                               d2 = value.product_billng.product_rmpro.due_date;\r",
            "                           }\r",
            "\r",
            "                           if( d1 && d2){\r",
            "                               var d3 = new Date(d1);\r",
            "                               var d4 = new Date(d2);\r",
            "                               dd = (d3 < d4 ? d1 : d2) ;\r",
            "                           }else{\r",
            "\r",
            "                               dd = (d1 ? d1 : d2 ? d2 : \"\") ;\r",
            "                           }\r",
            "\r",
            "                       }\r",
            "\r",
            "                        if(dd){\r",
            "                            var today = new Date() ;\r",
            "\r",
            "                            dd = new Date(dd) ;\r",
            "\r",
            "                            return today < dd ? \"\" : \"EXPIRED\";\r",
            "                        }\r",
            "\r",
            "                        return \"\" ;\r",
            "\r",
            "                   },\r",
            "    \r",
            "     getProductAlertText: function(value,product){\r",
            "\r",
            "                     var status = \"\" ;\r",
            "                        var dd = null ;\r",
            "                       if(value.product_billng){\r",
            "\r",
            "                           var d1 = null;\r",
            "\r",
            "                           if(value.product_billng[product]){\r",
            "\r",
            "                               d1 = value.product_billng[product].due_date;\r",
            "                           }\r",
            "                          \r",
            "\r",
            "                               dd = d1 ;\r",
            "                           \r",
            "\r",
            "                       }\r",
            "\r",
            "                        if(dd){\r",
            "                            var today = new Date() ;\r",
            "\r",
            "                            dd = new Date(dd) ;\r",
            "\r",
            "                            return today < dd ? \"\" : \"!\";\r",
            "                        }\r",
            "\r",
            "                        return \"\" ;\r",
            "\r",
            "                   }\r",
            "                   \r",
            "}"
        ],
        "changedManually": false,
        "designer|userClassName": "RetailerDeatilsDataSet",
        "isAdditionalInfoMoreFldsTap": false,
        "isCmpContactProfile": false,
        "isEditMode": false,
        "isVendorUpdated": false,
        "recordToUpdate": [
            "null"
        ]
    },
    "configAlternates": {
        "TeamUsersProfile": "object",
        "isVendorUpdated": "boolean",
        "recordToUpdate": "object",
        "isAdditionalInfoMoreFldsTap": "boolean",
        "changedManually": "boolean",
        "isCmpContactProfile": "boolean",
        "billingQuery": "object",
        "accNoChk": "number",
        "isEditMode": "boolean"
    },
    "designerId": "6497dc74-35d2-46e4-825d-e275db4484e6",
    "customConfigs": [
        {
            "group": "(Custom Properties)",
            "name": "TeamUsersProfile",
            "type": "string"
        },
        {
            "group": "(Custom Properties)",
            "name": "isVendorUpdated",
            "type": "string"
        },
        {
            "group": "(Custom Properties)",
            "name": "recordToUpdate",
            "type": "string"
        },
        {
            "group": "(Custom Properties)",
            "name": "isAdditionalInfoMoreFldsTap",
            "type": "string"
        },
        {
            "group": "(Custom Properties)",
            "name": "changedManually",
            "type": "string"
        },
        {
            "group": "(Custom Properties)",
            "name": "isCmpContactProfile",
            "type": "string"
        },
        {
            "group": "(Custom Properties)",
            "name": "billingQuery",
            "type": "string"
        },
        {
            "group": "(Custom Properties)",
            "name": "accNoChk",
            "type": "string"
        },
        {
            "group": "(Custom Properties)",
            "name": "isEditMode",
            "type": "string"
        }
    ],
    "cn": [
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "validationOfInputFields",
                "implHandler": [
                    "var isRetailerDetailsView = RMdatalink.app.getController('UINav').isRetailerDetailsView;\r",
                    "\r",
                    "this.removeErrorCls();\r",
                    "\r",
                    "var retailerDetailsMainTabPanel = Ext.ComponentQuery.query('#retailerDetailsMainTabPanel')[0];\r",
                    "\r",
                    "var phoneRegex = /^\\(?\\d{3}\\)?-? *\\d{3}-? *-?\\d{4}$/;\r",
                    "var zipRegex = /(^\\d{5}$)|(^\\d{5}-\\d{4}$)/;\r",
                    "var faxRegex = /^\\(?\\d{3}\\)?-? *\\d{3}-? *-?\\d{4}$/;\r",
                    "\r",
                    "var RDUsers1FormPanel = Ext.ComponentQuery.query('#RDUsers1FormPanel')[0];\r",
                    "//console.log(\"item id 1\" , RDUsers1FormPanel.getItemId());\r",
                    "\r",
                    "var emailFieldRDUsers1 =  RDUsers1FormPanel.getComponent('RDUsersEmail');\r",
                    "var emailTextRDUsers1 =  emailFieldRDUsers1.getValue();\r",
                    "\r",
                    "var phoneFieldRDUsers1 =  RDUsers1FormPanel.getComponent('RDUsersPhone');\r",
                    "var phoneTextRDUsers1  = phoneFieldRDUsers1.getValue();\r",
                    "\r",
                    "\r",
                    "var RDUsers1FormPanel2 = Ext.ComponentQuery.query('#RDUsers1FormPanel2')[0];\r",
                    "//console.log(\"item id 2\" , RDUsers1FormPanel2.getItemId());\r",
                    "\r",
                    "var emailFieldRDUsers2 =  RDUsers1FormPanel2.getComponent('RDUsersEmail');\r",
                    "var emailTextRDUsers2 =  emailFieldRDUsers2.getValue();\r",
                    "\r",
                    "var phoneFieldRDUsers2 = RDUsers1FormPanel2.getComponent('RDUsersPhone');\r",
                    "var phoneTextRDUsers2  = phoneFieldRDUsers2.getValue();\r",
                    "\r",
                    "var RDUsers1FormPanel3 = Ext.ComponentQuery.query('#RDUsers1FormPanel3')[0];\r",
                    "//console.log(\"item id 3\" , RDUsers1FormPanel3.getItemId());\r",
                    "\r",
                    "var emailFieldRDUsers3 =  RDUsers1FormPanel3.getComponent('RDUsersEmail');\r",
                    "var emailTextRDUsers3 =  emailFieldRDUsers3.getValue();\r",
                    "\r",
                    "var phoneFieldRDUsers3 =  RDUsers1FormPanel3.getComponent('RDUsersPhone');\r",
                    "var phoneTextRDUsers3  = phoneFieldRDUsers3.getValue();\r",
                    "\r",
                    "\r",
                    "\r",
                    "//   STORE FIELDS\r",
                    "var emailField = Ext.ComponentQuery.query('#RDStoreEmail')[0];\r",
                    "var emailText = emailField.getValue();\r",
                    "\r",
                    "var phoneField = Ext.ComponentQuery.query('#RDStorePhone')[0];\r",
                    "var phoneText = phoneField.getValue();\r",
                    "\r",
                    "var websiteField = Ext.ComponentQuery.query('#RDStoreWebsite')[0];\r",
                    "var websiteText = websiteField.getValue();\r",
                    "\r",
                    "\r",
                    "var zipField = Ext.ComponentQuery.query('#RDStoreZip')[0];\r",
                    "var zipText = zipField.getValue();\r",
                    "\r",
                    "var faxField = Ext.ComponentQuery.query('#RDStoreFax')[0];\r",
                    "var faxText = faxField.getValue();\r",
                    "\r",
                    "\r",
                    "if(websiteText.substr(0,3) === 'www')\r",
                    "{\r",
                    "    websiteText   = websiteText.replace('www.' ,'https://');\r",
                    "}\r",
                    "\r",
                    "//   MANAGER FIELDS\r",
                    "var emailFieldRDManager = Ext.ComponentQuery.query('#RDManagerEmail')[0];\r",
                    "var emailTextRDManager = emailFieldRDManager.getValue();\r",
                    "\r",
                    "var phoneFieldRDManager = Ext.ComponentQuery.query('#RDManagerPhone')[0];\r",
                    "var phoneTextRDManager = phoneFieldRDManager.getValue();\r",
                    "\r",
                    "var RDManagerDirectPhone = Ext.ComponentQuery.query('#RDManagerDirectPhone')[0];\r",
                    "var RDManagerDirectPhoneText = RDManagerDirectPhone.getValue();\r",
                    "\r",
                    "var ActMgrZip = Ext.ComponentQuery.query('#ActMgrZip')[0];\r",
                    "var ActMgrZipText = ActMgrZip.getValue();\r",
                    "\r",
                    "//   MANAGER FIELDS RELATIONSHIP DETAILS\r",
                    "\r",
                    "var altEmailFieldRDManager = Ext.ComponentQuery.query('#RDMRDAltEmail')[0];\r",
                    "var altEmailTextRDManager = altEmailFieldRDManager.getValue();\r",
                    "\r",
                    "var altPhoneFieldRDManager = Ext.ComponentQuery.query('#RDMRDAltPhone')[0];\r",
                    "var altPhoneTextRDManager = altPhoneFieldRDManager.getValue();\r",
                    "\r",
                    "var altWebsiteFieldRDManager = Ext.ComponentQuery.query('#RDMRDWebsite')[0];\r",
                    "var altWebsiteTextRDManager = altWebsiteFieldRDManager.getValue();\r",
                    "\r",
                    "\r",
                    "if(altWebsiteTextRDManager.substr(0,3) === 'www')\r",
                    "{\r",
                    "    altWebsiteTextRDManager   = altWebsiteTextRDManager.replace('www.' ,'https://');\r",
                    "}\r",
                    "\r",
                    "\r",
                    "var validationForStore = true;\r",
                    "var validationForManager = true;\r",
                    "var validationForManagerRelationshipDetails = true;\r",
                    "var validationForUser = true;\r",
                    "\r",
                    "\r",
                    "//EMAIL VALIDATION\r",
                    "if( emailTextRDManager.length !== 0 && !Ext.data.Validations.email(emailFieldRDManager, emailTextRDManager))\r",
                    "{\r",
                    "    //console.log(emailText);\r",
                    "    emailFieldRDManager.replaceCls( 'x-rm-rdformpanel' , 'x-rm-rdformErrorPanel');\r",
                    "    validationForManager = false;\r",
                    "}\r",
                    "\r",
                    "if( emailText.length !== 0 && !Ext.data.Validations.email(emailField, emailText))\r",
                    "{\r",
                    "    //console.log(emailText);\r",
                    "    emailField.replaceCls( 'x-rm-rdformpanel' , 'x-rm-rdformErrorPanel');\r",
                    "    validationForStore = false;\r",
                    "}\r",
                    "\r",
                    "\r",
                    "\r",
                    "if( altEmailTextRDManager.length !== 0 && !Ext.data.Validations.email(altEmailFieldRDManager, altEmailTextRDManager))\r",
                    "{\r",
                    "    //console.log(emailTextRDUsers3.length);\r",
                    "    altEmailFieldRDManager.replaceCls( 'x-rm-rdformpanel' , 'x-rm-rdformErrorPanel');\r",
                    "    validationForManagerRelationshipDetails = false;\r",
                    "}\r",
                    "\r",
                    "\r",
                    "//PHONE NUM VALIDATION\r",
                    "if(! isRetailerDetailsView)\r",
                    "{\r",
                    "\r",
                    "    if(  phoneText.length !== 0 && !phoneRegex.test(phoneText))\r",
                    "    {\r",
                    "        phoneField.replaceCls( 'x-rm-rdformpanel' , 'x-rm-rdformErrorPanel');\r",
                    "        validationForStore = false;\r",
                    "    }\r",
                    "}\r",
                    "\r",
                    "if( phoneTextRDManager.length !== 0 && !phoneRegex.test(phoneTextRDManager))\r",
                    "{\r",
                    "\r",
                    "    phoneFieldRDManager.replaceCls( 'x-rm-rdformpanel' , 'x-rm-rdformErrorPanel');\r",
                    "    validationForManager = false;\r",
                    "}\r",
                    "\r",
                    "if( RDManagerDirectPhoneText.length !== 0 && !phoneRegex.test(RDManagerDirectPhoneText))\r",
                    "{\r",
                    "    RDManagerDirectPhone.replaceCls( 'x-rm-rdformpanel' , 'x-rm-rdformErrorPanel');\r",
                    "    validationForManager = false;\r",
                    "}\r",
                    "\r",
                    "if( altPhoneTextRDManager.length !== 0 && !phoneRegex.test(altPhoneTextRDManager))\r",
                    "{\r",
                    "    //console.log(\"***********phoneText\");\r",
                    "    altPhoneFieldRDManager.replaceCls( 'x-rm-rdformpanel' , 'x-rm-rdformErrorPanel');\r",
                    "    validationForManagerRelationshipDetails = false;\r",
                    "}\r",
                    "\r",
                    "\r",
                    "\r",
                    "//WEB SITE VALIDATION\r",
                    "if( websiteText.length !== 0 && !RMdatalink.util.globalMethods.isValidWebsite(websiteText))\r",
                    "{\r",
                    "    //console.log(websiteText);\r",
                    "    websiteField.replaceCls( 'x-rm-rdformpanel' , 'x-rm-rdformErrorPanel');\r",
                    "    validationForStore = false;\r",
                    "}\r",
                    "\r",
                    "if( altWebsiteTextRDManager.length !== 0 && !RMdatalink.util.globalMethods.isValidWebsite(altWebsiteTextRDManager))\r",
                    "{\r",
                    "    //console.log(websiteText);\r",
                    "    altWebsiteFieldRDManager.replaceCls( 'x-rm-rdformpanel' , 'x-rm-rdformErrorPanel');\r",
                    "    validationForManagerRelationshipDetails = false;\r",
                    "}\r",
                    "\r",
                    "\r",
                    "\r",
                    "//ZIP CODE VALIDATION\r",
                    "if(! isRetailerDetailsView)\r",
                    "{\r",
                    "if( zipText.length !== 0 && !zipRegex.test(zipText))\r",
                    "{\r",
                    "    //console.log(zipText);\r",
                    "    zipField.replaceCls( 'x-rm-rdformpanel' , 'x-rm-rdformErrorPanel');\r",
                    "    validationForStore = false;\r",
                    "}\r",
                    "}\r",
                    "\r",
                    "//ZIP CODE VALIDATION\r",
                    "if( ActMgrZipText.length !== 0 && !zipRegex.test(ActMgrZipText))\r",
                    "{\r",
                    "    //console.log(zipText);\r",
                    "    ActMgrZip.replaceCls( 'x-rm-rdformpanel' , 'x-rm-rdformErrorPanel');\r",
                    "    validationForManager = false;\r",
                    "}\r",
                    "\r",
                    "// FAX CODE VALIDATION\r",
                    "\r",
                    "if( faxText.length !== 0 && !faxRegex.test(faxText))\r",
                    "{\r",
                    "    //console.log(zipText);\r",
                    "    faxField.replaceCls( 'x-rm-rdformpanel' , 'x-rm-rdformErrorPanel');\r",
                    "    validationForStore = false;\r",
                    "}\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "//************\r",
                    "\r",
                    "if(!validationForStore)\r",
                    "{\r",
                    "    retailerDetailsMainTabPanel.setActiveItem(retailerDetailsMainTabPanel.down(\"#RDStoresTab\"));\r",
                    "   // retailerDetailsMainTabPanel.setActiveItem(0);\r",
                    "    return false;\r",
                    "}\r",
                    "\r",
                    "\r",
                    "if(!this.validationForRepsInputFields())\r",
                    "{\r",
                    "\r",
                    "    return false;\r",
                    "}\r",
                    "\r",
                    "if(!this.validationForComContactInputFields())\r",
                    "{\r",
                    "\r",
                    "    return false;\r",
                    "}\r",
                    "\r",
                    "\r",
                    "if( (!validationForManager || !validationForManagerRelationshipDetails) )\r",
                    "{\r",
                    "    retailerDetailsMainTabPanel.setActiveItem(retailerDetailsMainTabPanel.down(\"#RDManagerTab\"));\r",
                    "    //FOR SIDE PANEL\r",
                    "    if(!validationForManagerRelationshipDetails)\r",
                    "    {\r",
                    "        var retailerDetailsManagerSideTabPanel = Ext.ComponentQuery.query('#RDManagerSideTabPanel')[0];\r",
                    "        retailerDetailsManagerSideTabPanel.setActiveItem(1);\r",
                    "    }\r",
                    "    return false;\r",
                    "}\r",
                    "\r",
                    "\r",
                    "return true;\r",
                    "\r",
                    "\r",
                    ""
                ]
            },
            "designerId": "9b92e8b8-b42f-433c-bbe9-64ac4fc1709b"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "textfield[action=clearIconTap]",
                "designer|targetType": "Ext.field.Text",
                "fn": "onTextfieldClearicontapRetailerDetails",
                "implHandler": [
                    "textfield.removeCls('x-rm-rdformErrorPanel');\r",
                    "textfield.addCls('x-rm-rdformpanel');"
                ],
                "name": "clearicontap"
            },
            "designerId": "bfc3a0b4-f41a-4857-86e5-19b8b957b950"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "scope"
                ],
                "fn": "loadRetailerMasterData",
                "implHandler": [
                    "RMdatalink.util.DataManager.loadDataInStore(\r",
                    "    {\r",
                    "        storeName:'notificationsNew',\r",
                    "        proxy: {\r",
                    "            type: 'ajax',\r",
                    "            url: 'app/data/New_Notifications.json',\r",
                    "            reader: {\r",
                    "                type: 'json',\r",
                    "                rootProperty:'New_Notifications'\r",
                    "            }\r",
                    "        },\r",
                    "        successCallback:function() {\r",
                    "            console.log(\"successfully loaded\");\r",
                    "        },\r",
                    "        errorCallback: function() {\r",
                    "            console.log(\"Exception occured. data not loaded\");\r",
                    "        },\r",
                    "        scope:scope\r",
                    "    }\r",
                    ");\r",
                    "\r",
                    "\r",
                    "RMdatalink.util.DataManager.loadDataInStore(\r",
                    "    {\r",
                    "        storeName:'billingMasterStore',\r",
                    "        proxy: {\r",
                    "            type: 'ajax',\r",
                    "            url: 'app/data/BillingDetailsRecords.json',\r",
                    "            reader: {\r",
                    "                type: 'json',\r",
                    "                rootProperty:'billingDetailRecords'\r",
                    "            }\r",
                    "        },\r",
                    "        successCallback:function() {\r",
                    "            console.log(\"successfully loaded\");\r",
                    "        },\r",
                    "        errorCallback: function() {\r",
                    "            console.log(\"Exception occured. data not loaded\");\r",
                    "        },\r",
                    "        scope:scope\r",
                    "    }\r",
                    ");\r",
                    "\r",
                    "RMdatalink.util.DataManager.loadDataInStore(\r",
                    "    {\r",
                    "        storeName:'productDetailsRecordsStore',\r",
                    "        proxy: {\r",
                    "            type: 'ajax',\r",
                    "            url: 'app/data/ProductDetailRecords.json',\r",
                    "            reader: {\r",
                    "                type: 'json',\r",
                    "                rootProperty:'productDetailRecords'\r",
                    "            }\r",
                    "        },\r",
                    "        successCallback:function() {\r",
                    "            console.log(\"pro successfully loaded\"); console.log(arguments);\r",
                    "\r",
                    "        },\r",
                    "        errorCallback: function() {\r",
                    "            console.log(\"Exception occured. data not loaded\");\r",
                    "        },\r",
                    "        scope:scope\r",
                    "    }\r",
                    ");\r",
                    "RMdatalink.util.DataManager.loadDataInStore(\r",
                    "    {\r",
                    "        storeName:'vendorDetailsRecodsStore',\r",
                    "        proxy: {\r",
                    "            type: 'ajax',\r",
                    "            url: 'app/data/VendorDetailRecords.json',\r",
                    "            reader: {\r",
                    "                type: 'json',\r",
                    "                rootProperty:'vendorDetailRecords'\r",
                    "            }\r",
                    "        },\r",
                    "        successCallback:function() {\r",
                    "            console.log(\"ven successfully loaded\"); console.log(arguments);\r",
                    "\r",
                    "        },\r",
                    "        errorCallback: function() {\r",
                    "            console.log(\"Exception occured. data not loaded\");\r",
                    "        },\r",
                    "        scope:scope\r",
                    "    }\r",
                    ");\r",
                    "RMdatalink.util.DataManager.loadDataInStore(\r",
                    "    {\r",
                    "        storeName:'retailersMaster',\r",
                    "        proxy: {\r",
                    "            type: 'ajax',\r",
                    "            url: 'app/data/MasterRetailerRecords.json',\r",
                    "            reader: {\r",
                    "                type: 'json',\r",
                    "                rootProperty:'masterRetailerRecords'\r",
                    "            }\r",
                    "        },\r",
                    "        successCallback:RMdatalink.util.globalMethods.fillDataFromMasterStore,\r",
                    "        errorCallback: function() {\r",
                    "            console.log(\"Exception occured. data not loaded\");\r",
                    "        },\r",
                    "        scope:scope\r",
                    "    }\r",
                    ");\r",
                    "\r",
                    "RMdatalink.util.DataManager.loadDataInStore(\r",
                    "    {\r",
                    "        storeName:'inhouseMasterStore',\r",
                    "        proxy: {\r",
                    "            type: 'ajax',\r",
                    "            url: 'app/data/InhouseRecords.json',\r",
                    "            reader: {\r",
                    "                type: 'json',\r",
                    "                rootProperty:'inhouseRecords'\r",
                    "            }\r",
                    "        },\r",
                    "        successCallback:function() {\r",
                    "            console.log(arguments);\r",
                    "        },\r",
                    "        errorCallback: function() {\r",
                    "            console.log(\"Exception occured. data not loaded\");\r",
                    "        },\r",
                    "        scope:scope\r",
                    "    }\r",
                    ");\r",
                    "\r",
                    "RMdatalink.util.DataManager.loadDataInStore(\r",
                    "    {\r",
                    "        storeName:'discountsMasterStore',\r",
                    "        proxy: {\r",
                    "            type: 'ajax',\r",
                    "            url: 'app/data/DiscountsRecords.json',\r",
                    "            reader: {\r",
                    "                type: 'json',\r",
                    "                rootProperty:'discounts'\r",
                    "            }\r",
                    "        },\r",
                    "        successCallback:function() {\r",
                    "            console.log(arguments);\r",
                    "        },\r",
                    "        errorCallback: function() {\r",
                    "            console.log(\"Exception occured. data not loaded\");\r",
                    "        },\r",
                    "        scope:scope\r",
                    "    }\r",
                    ");\r",
                    "\r",
                    "\r",
                    ""
                ]
            },
            "designerId": "42fef8e4-18e8-4570-bef4-81b2b46020a9"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "setResetRetailersDetailedView",
                "implHandler": [
                    "this.config.changedManually = false ;\r",
                    "\r",
                    "var isRetailerDetailsView = RMdatalink.app.getController('UINav').isRetailerDetailsView;\r",
                    "\r",
                    "this.removeErrorCls();\r",
                    "var that = this ;\r",
                    "\r",
                    "if(isRetailerDetailsView){\r",
                    "        Ext.ComponentQuery.query('#RDStoreSideTabPanel')[0].setActiveItem(0);\r",
                    "    var parentPanel = Ext.ComponentQuery.query('#rtlrVdrAssociationTotalFldSet')[0] ;\r",
                    "\r",
                    "\r",
                    "    parentPanel.down('#rtDtlVdrCollectionTotalLbl').setHidden(false);\r",
                    "    parentPanel.down('#rtDtlVdrDesignTotalLbl').setHidden(false);\r",
                    "    parentPanel.down('#rtDtlVdrSKUTotalLbl').setHidden(false);\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "    parentPanel.down('#rtDtlVdrCollectionTotalLbl').setHtml(\"\");\r",
                    "    parentPanel.down('#rtDtlVdrDesignTotalLbl').setHtml(\"\");\r",
                    "    parentPanel.down('#rtDtlVdrSKUTotalLbl').setHtml(\"\");\r",
                    "\r",
                    "    Ext.ComponentQuery.query('#RDStoreTabResetPwdBtn')[0].setHidden(false);\r",
                    "\r",
                    "    Ext.ComponentQuery.query('#RDVendorResourcesPad')[0].setHidden(true);\r",
                    "\r",
                    "    Ext.ComponentQuery.query('#RDStoreWebsiteFbFld')[0].setHidden(true);\r",
                    "    Ext.ComponentQuery.query('#RDStoreWebsiteTwFld')[0].setHidden(true);\r",
                    "    Ext.ComponentQuery.query('#RDStoreWebsiteLnFld')[0].setHidden(true);\r",
                    "\r",
                    "\r",
                    "    Ext.ComponentQuery.query('#RDAccountDetails')[0].setHidden(false);\r",
                    "   // Ext.ComponentQuery.query('#vendorsCommonSearchViewForRetailer')[0].setHidden(false);\r",
                    "\r",
                    "    Ext.ComponentQuery.query('#vendorsActiveRetailersSearchFldSet')[0].setHidden(true);\r",
                    "    Ext.ComponentQuery.query('#retailersProspectSearchFieldSet')[0].setHidden(true);\r",
                    "\r",
                    "    Ext.ComponentQuery.query('#RDSideProductsItemID')[0].setHidden(false);\r",
                    "    Ext.ComponentQuery.query('#csvImportFileField')[0].setHidden(true);\r",
                    "    Ext.ComponentQuery.query('#retailersPagignationControlPanel')[0].setHidden(true);\r",
                    "    Ext.ComponentQuery.query('#retailersProspectsPagignationControlPanel')[0].setHidden(true);\r",
                    "\r",
                    "    Ext.ComponentQuery.query('#RDStoreSideTabPanel')[0].getTabBar().getAt(2).setHidden(false);\r",
                    "\r",
                    "    Ext.ComponentQuery.query('#cmpContactsLocSelectFld')[0].setHidden(false);\r",
                    "    Ext.ComponentQuery.query('#actMgrLocSelectFld')[0].setHidden(false);\r",
                    "    Ext.ComponentQuery.query('#retailerLocationsFldSet')[0].setHidden(false);\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "    Ext.ComponentQuery.query('#RDStoreType')[0].setHidden(true);\r",
                    "    Ext.ComponentQuery.query('#RDStoreLocations')[0].setHidden(true);\r",
                    "    Ext.ComponentQuery.query('#RDStoreEmployees')[0].setHidden(true);\r",
                    "    Ext.ComponentQuery.query('#RDStoreYrsInBusiness')[0].setHidden(true);\r",
                    "    Ext.ComponentQuery.query('#RDStorePercProg')[0].setHidden(true);\r",
                    "    Ext.ComponentQuery.query('#RDStorePercKind')[0].setHidden(true);\r",
                    "    Ext.ComponentQuery.query('#RDStoreAdvertising')[0].setHidden(true);\r",
                    "    Ext.ComponentQuery.query('#RDStoreMoBudget')[0].setHidden(true);\r",
                    "\r",
                    "    Ext.ComponentQuery.query('#RDStoreDesign')[0].setHidden(true);\r",
                    "    Ext.ComponentQuery.query('#RDStoreSKU')[0].setHidden(true);\r",
                    "    Ext.ComponentQuery.query('#RDStoreNoOfRugsImages')[0].setHidden(true);\r",
                    "    Ext.ComponentQuery.query('#RDStoreNoOfAdditionalImages')[0].setHidden(true);\r",
                    "    Ext.ComponentQuery.query('#RDStoreCollections')[0].setHidden(true);\r",
                    "\r",
                    "\r",
                    "    Ext.ComponentQuery.query('#RDStoreType')[0].setHidden(true);\r",
                    "    Ext.ComponentQuery.query('#RDStoreLocations')[0].setHidden(false);\r",
                    "\r",
                    "    Ext.ComponentQuery.query('#RDStoreEmployees')[0].setHidden(false);\r",
                    "    Ext.ComponentQuery.query('#RDStoreYrsInBusiness')[0].setHidden(false);\r",
                    "    Ext.ComponentQuery.query('#RDStorePercProg')[0].setHidden(false);\r",
                    "    Ext.ComponentQuery.query('#RDStorePercKind')[0].setHidden(false);\r",
                    "    Ext.ComponentQuery.query('#RDStoreAdvertising')[0].setHidden(false);\r",
                    "    Ext.ComponentQuery.query('#RDStoreMoBudget')[0].setHidden(false);\r",
                    "    Ext.ComponentQuery.query('#RDStoreInventoryTool')[0].setHidden(false);\r",
                    "    Ext.ComponentQuery.query('#RDStoreAccountingTool')[0].setHidden(false);\r",
                    "    Ext.ComponentQuery.query('#RDStoreAltBusiness')[0].setHidden(false);\r",
                    "\r",
                    "    Ext.ComponentQuery.query('#RDStoreSize')[0].setHidden(true);\r",
                    "\r",
                    "     Ext.ComponentQuery.query('#RDStoreChallenges')[0].setHidden(true);\r",
                    "     Ext.ComponentQuery.query('#RDStoreAddress')[0].setHidden(true);\r",
                    "     Ext.ComponentQuery.query('#RDStoreCity')[0].setHidden(true);\r",
                    "     Ext.ComponentQuery.query('#RDStorePhone')[0].setHidden(true);\r",
                    "     Ext.ComponentQuery.query('#RDStoreSuite')[0].setHidden(true);\r",
                    "     Ext.ComponentQuery.query('#RDStoreState')[0].setHidden(true);\r",
                    "     Ext.ComponentQuery.query('#RDStoreZip')[0].setHidden(true);\r",
                    "     Ext.ComponentQuery.query('#RDStorePhoneExt')[0].setHidden(true);\r",
                    "     Ext.ComponentQuery.query('#RDStoreFax')[0].setHidden(true);\r",
                    "\r",
                    "\r",
                    "\r",
                    "    Ext.ComponentQuery.query('#retailerValuesLabels')[0].setHidden(false);\r",
                    "    Ext.ComponentQuery.query('#storeValuesLabels')[0].setHidden(true);\r",
                    "\r",
                    "\r",
                    "\r",
                    "}else{\r",
                    "\r",
                    "    Ext.ComponentQuery.query('#RDStoreTabResetPwdBtn')[0].setHidden(true);\r",
                    "\r",
                    "    var parentPanel = Ext.ComponentQuery.query('#rtlrVdrAssociationTotalFldSet')[0] ;\r",
                    "\r",
                    "\r",
                    "    parentPanel.down('#rtDtlVdrCollectionTotalLbl').setHidden(true);\r",
                    "    parentPanel.down('#rtDtlVdrDesignTotalLbl').setHidden(true);\r",
                    "    parentPanel.down('#rtDtlVdrSKUTotalLbl').setHidden(true);\r",
                    "\r",
                    "    Ext.ComponentQuery.query('#RDVendorResourcesPad')[0].setHidden(false);\r",
                    "    Ext.ComponentQuery.query('#RDStoreWebsiteFbFld')[0].setHidden(false);\r",
                    "    Ext.ComponentQuery.query('#RDStoreWebsiteTwFld')[0].setHidden(false);\r",
                    "    Ext.ComponentQuery.query('#RDStoreWebsiteLnFld')[0].setHidden(false);\r",
                    "\r",
                    "    Ext.ComponentQuery.query('#RDAccountDetails')[0].setHidden(false);\r",
                    "\r",
                    "    RMdatalink.app.getController('SearchController').doSearchForProspectRetailersAtVendor(\"\");\r",
                    "\r",
                    "\r",
                    "    Ext.ComponentQuery.query('#vendorsCommonSearchViewForRetailer')[0].setHidden(true);\r",
                    "\r",
                    "   // Ext.ComponentQuery.query('#vendorsActiveRetailersSearchFldSet')[0].setHidden(false);\r",
                    "\r",
                    "    Ext.ComponentQuery.query('#retailersProspectSearchFieldSet')[0].setHidden(false);\r",
                    "\r",
                    "    Ext.ComponentQuery.query('#cmpContactsLocSelectFld')[0].setHidden(true);\r",
                    "    Ext.ComponentQuery.query('#actMgrLocSelectFld')[0].setHidden(true);\r",
                    "    Ext.ComponentQuery.query('#retailerLocationsFldSet')[0].setHidden(true);\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "    Ext.ComponentQuery.query('#RDStoreSideTabPanel')[0].getTabBar().getAt(2).setHidden(true);\r",
                    "\r",
                    "    Ext.ComponentQuery.query('#RDStoreSideTabPanel')[0].setActiveItem(0) ;\r",
                    "\r",
                    "    Ext.ComponentQuery.query('#retailersProspectsPagignationControlPanel')[0].setHidden(false);\r",
                    "    Ext.ComponentQuery.query('#retailersPagignationControlPanel')[0].setHidden(false);\r",
                    "    Ext.ComponentQuery.query('#csvImportFileField')[0].setHidden(false);\r",
                    "\r",
                    "    Ext.ComponentQuery.query('#RDSideProductsItemID')[0].setHidden(true);\r",
                    "\r",
                    "    Ext.ComponentQuery.query('#RDStoreDesign')[0].setHidden(true);\r",
                    "    Ext.ComponentQuery.query('#RDStoreSKU')[0].setHidden(true);\r",
                    "    Ext.ComponentQuery.query('#RDStoreNoOfRugsImages')[0].setHidden(true);\r",
                    "    Ext.ComponentQuery.query('#RDStoreNoOfAdditionalImages')[0].setHidden(true);\r",
                    "    Ext.ComponentQuery.query('#RDStoreCollections')[0].setHidden(true);\r",
                    "\r",
                    "    Ext.ComponentQuery.query('#RDStoreType')[0].setHidden(true);\r",
                    "    Ext.ComponentQuery.query('#RDStoreLocations')[0].setHidden(true);\r",
                    "    Ext.ComponentQuery.query('#RDStoreEmployees')[0].setHidden(true);\r",
                    "    Ext.ComponentQuery.query('#RDStoreYrsInBusiness')[0].setHidden(true);\r",
                    "    Ext.ComponentQuery.query('#RDStorePercProg')[0].setHidden(true);\r",
                    "    Ext.ComponentQuery.query('#RDStorePercKind')[0].setHidden(true);\r",
                    "    Ext.ComponentQuery.query('#RDStoreAdvertising')[0].setHidden(true);\r",
                    "    Ext.ComponentQuery.query('#RDStoreMoBudget')[0].setHidden(true);\r",
                    "\r",
                    "    Ext.ComponentQuery.query('#RDStoreType')[0].setHidden(true);\r",
                    "    Ext.ComponentQuery.query('#RDStoreLocations')[0].setHidden(true);\r",
                    "    Ext.ComponentQuery.query('#RDStoreEmployees')[0].setHidden(true);\r",
                    "    Ext.ComponentQuery.query('#RDStoreYrsInBusiness')[0].setHidden(true);\r",
                    "    Ext.ComponentQuery.query('#RDStorePercProg')[0].setHidden(true);\r",
                    "    Ext.ComponentQuery.query('#RDStorePercKind')[0].setHidden(true);\r",
                    "    Ext.ComponentQuery.query('#RDStoreAdvertising')[0].setHidden(true);\r",
                    "    Ext.ComponentQuery.query('#RDStoreMoBudget')[0].setHidden(true);\r",
                    "    Ext.ComponentQuery.query('#storeValuesLabels')[0].setHidden(false);\r",
                    "    Ext.ComponentQuery.query('#retailerValuesLabels')[0].setHidden(true);\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "     Ext.ComponentQuery.query('#RDStoreAddress')[0].setHidden(false);\r",
                    "     Ext.ComponentQuery.query('#RDStoreCity')[0].setHidden(false);\r",
                    "     Ext.ComponentQuery.query('#RDStorePhone')[0].setHidden(false);\r",
                    "     Ext.ComponentQuery.query('#RDStoreSuite')[0].setHidden(false);\r",
                    "     Ext.ComponentQuery.query('#RDStoreState')[0].setHidden(false);\r",
                    "     Ext.ComponentQuery.query('#RDStoreZip')[0].setHidden(false);\r",
                    "     Ext.ComponentQuery.query('#RDStorePhoneExt')[0].setHidden(false);\r",
                    "     Ext.ComponentQuery.query('#RDStoreFax')[0].setHidden(false);\r",
                    "\r",
                    "\r",
                    "}\r",
                    "\r",
                    "\r",
                    "// ******   REMOVED  ALREADY ADDED CHILD ITEMS  IN BLUE BOOK TAB  **********\r",
                    "// var blueBookParentPanel = Ext.ComponentQuery.query('#blueBookParentPanel')[0];\r",
                    "// blueBookParentPanel.removeAll(true,true);\r",
                    "\r",
                    "var locationContainerPanel = Ext.ComponentQuery.query('#locationAddNewContainerItemID')[0];\r",
                    "locationContainerPanel.removeAll(false,true);\r",
                    "\r",
                    "\r",
                    "//****  SET  PRESSING CLS AND  SET  TITLE ******\r",
                    "var retailerDetailsHeader  =Ext.ComponentQuery.query('#retailerDetailsHeader')[0];\r",
                    "var titleLabel = retailerDetailsHeader.down('#detailsHeaderTitle');\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "if(isRetailerDetailsView)\r",
                    "{\r",
                    "    Ext.ComponentQuery.query('#overviewRetailersBtn')[0].addCls('x-button-pressing');\r",
                    "    titleLabel.setHtml('<div style=\"font-size: large;margin-left: -10px;\">BACK / <span style=\"color:#2EC1DA;\"> RETAILERS </span></div>');\r",
                    "}\r",
                    "else\r",
                    "{\r",
                    "    Ext.ComponentQuery.query('#overviewVendorsBtn')[0].addCls('x-button-pressing');\r",
                    "    titleLabel.setHtml('<div style=\"font-size: large;margin-left: -10px;\">BACK / <span style=\"color:#2EC1DA;\"> VENDORS </span></div>');\r",
                    "}\r",
                    "\r",
                    "\r",
                    "\r",
                    "// ****  SET SIDE CONTAINER TPL FOR  STORE  OR VENDOR  ******\r",
                    "this.setTplOnlineInSideContainerList(isRetailerDetailsView);\r",
                    "\r",
                    "resetVlauesForRetailersDetailCard();\r",
                    "setVlauesForRetailersDetailCard() ;\r",
                    "\r",
                    "console.error(\"ALL  CODE HAS BEEN COMPLETED.\");\r",
                    "\r",
                    "function resetVlauesForRetailersDetailCard(){\r",
                    "\r",
                    "    console.error(1);\r",
                    "    resetLocations() ;\r",
                    "        console.error(2);\r",
                    "    resetExtraFlds();\r",
                    "        console.error(3);\r",
                    "    resetManagerData();\r",
                    "        console.error(4);\r",
                    "    unfillStoreInformationForRDetailCard();\r",
                    "        console.error(5);\r",
                    "    unfillMAnagerRelationData();\r",
                    "        console.error(6);\r",
                    "    unfillCRMSData() ;\r",
                    "        console.error(7);\r",
                    "    unfillNotesStore() ;\r",
                    "        console.error(8);\r",
                    "    unfillVendorsStore() ;    console.error(9);\r",
                    "    unfillRCMDSidebarPhotos();    console.error(10);\r",
                    "    unfillRCMDSidebarAttachments();    console.error(11);\r",
                    "    unselectStoreStaus();    console.error(12);\r",
                    "    unfillStoreProductStatus();    console.error(13);\r",
                    "    unfillTipsData();    console.error(14);\r",
                    "    unfillREPsBlueBookUsers();    console.error(15);\r",
                    "    unfillCompanyContactInfo();    console.error(16);\r",
                    "}\r",
                    "\r",
                    "\r",
                    "function resetLocations(){\r",
                    "\r",
                    "    that.destroyLocations() ;\r",
                    "    that.createLocation() ;\r",
                    "    Ext.ComponentQuery.query('#deleteLocationLbl')[0].setHidden(true) ;\r",
                    "\r",
                    "}\r",
                    "\r",
                    "function setLocations(selectedUserRecord){\r",
                    "\r",
                    "\r",
                    "      that.setRetailersFirstLocation(selectedUserRecord.record.data) ;\r",
                    "      that.createAndSetLocations(selectedUserRecord.record.data.locations) ;\r",
                    "\r",
                    "\r",
                    "}\r",
                    "\r",
                    "\r",
                    "function setVlauesForRetailersDetailCard(){\r",
                    "    var selectedUserRecord = RMdatalink.util.globalConfig.getDataToShowInSettingWindow() ;\r",
                    "\r",
                    "\r",
                    "console.log(selectedUserRecord.record);\r",
                    "       RMdatalink.app.getController('TechSupportLog').config.currentSelectedRecord =   selectedUserRecord.record ;\r",
                    "\r",
                    "\r",
                    "\r",
                    "    clearAllScreenInfoOnRetailCard();\r",
                    "    RMdatalink.util.globalConfig.setDataInRetailerScreenForSaveOrCancel( {}  );\r",
                    "\r",
                    "    //  ********* CHANGE TAB NAME STORE/VENDOR  *********\r",
                    "    var rdTabPanel =  Ext.ComponentQuery.query('#retailerDetailsMainTabPanel')[0];\r",
                    "    var RDStoreSideTabPanel =  Ext.ComponentQuery.query('#RDStoreSideTabPanel')[0];\r",
                    "\r",
                    "    var RDStoreLabel = rdTabPanel.down('#RDStoreLabel');\r",
                    "    var RDStoreTabReseller = rdTabPanel.down('#RDStoreTabReseller');\r",
                    "    var RDStoreTabPerformance = rdTabPanel.down('#RDStoreTabPerformance');\r",
                    "    var RDStoreLogoLabel = rdTabPanel.down('#RDStoreLogoLabel');\r",
                    "    var rdStoreTab = rdTabPanel.down('#RDStoresTab');\r",
                    "    var RDStoreName = rdTabPanel.down('#RDStoreName');\r",
                    "    var RDStoreOwner = rdTabPanel.down('#RDStoreOwner');\r",
                    "    var RDStoreType = rdTabPanel.down('#RDStoreType');\r",
                    "    var RDStoreSize = rdTabPanel.down('#RDStoreSize');\r",
                    "    var RDStoreAltBusiness = rdTabPanel.down('#RDStoreAltBusiness');\r",
                    "    var RDStoreInventoryAccountingTool = rdTabPanel.down('#RDStoreInventoryAccountingTool');\r",
                    "\r",
                    "    var RDStoreProductsList = Ext.ComponentQuery.query('#RDStoreProductsList')[0];\r",
                    "    var RDStoreStatusList = Ext.ComponentQuery.query('#RDStoreStatusList')[0];\r",
                    "\r",
                    "    var RDMRDYrsAtStore =  Ext.ComponentQuery.query('#RDMRDYrsAtStore')[0];\r",
                    "    var RDMRDWife =  Ext.ComponentQuery.query('#RDMRDWife')[0];\r",
                    "\r",
                    "\r",
                    "    var RDUsersTab =  Ext.ComponentQuery.query('#RDUsersTab')[0];\r",
                    "    var RDBlueBookTab =  Ext.ComponentQuery.query('#RDBlueBookTab')[0];\r",
                    "\r",
                    "\r",
                    "    if(isRetailerDetailsView)\r",
                    "    {\r",
                    "\r",
                    "        rdTabPanel.getTabBar().getAt(0).setTitle('RETAILER');\r",
                    "//         RDStoreSideTabPanel.getTabBar().getAt(0).setTitle('IN-STORE VENDORS');\r",
                    "//         RDStoreSideTabPanel.getTabBar().getAt(1).setTitle('ONLINE VENDORS');\r",
                    "\r",
                    "        RDStoreLabel.setHtml('NEW RETAILERS');\r",
                    "        RDStoreLogoLabel.setHtml('Store Logo');\r",
                    "        RDStoreName.setLabel(\"Company Name\");\r",
                    "\r",
                    "        RDStoreOwner.setHidden(false);\r",
                    "\r",
                    "        RDStoreOwner.setLabel(\"Store Owner\");\r",
                    "        RDStoreType.setLabel(\"Store Type\");\r",
                    "\r",
                    "        //   RDStoreTabPerformance.setHidden(false);\r",
                    "        RDStoreTabReseller.setHidden(false);\r",
                    "\r",
                    "        RDStoreProductsList.setHidden(false);\r",
                    "\r",
                    "       // RDStoreStatusList.setHidden(false);\r",
                    "\r",
                    "        RDMRDYrsAtStore.setLabel(\"Years At Store\");\r",
                    "\r",
                    "        rdTabPanel.getTabBar().getAt(3).setHidden(true);\r",
                    "        rdTabPanel.getTabBar().getAt(4).setHidden(true);\r",
                    "        rdTabPanel.getTabBar().getAt(7).setHidden(false);\r",
                    "\r",
                    "        var pospectActiveListContainer = Ext.ComponentQuery.query(\"#pospectActiveListContainer\")[0];\r",
                    "        var tabBar = pospectActiveListContainer.getTabBar();\r",
                    "            tabBar.setHidden( false );\r",
                    "\r",
                    "      //  RDBlueBookTab.setActiveItem(0);\r",
                    "    }\r",
                    "    else\r",
                    "    {\r",
                    "        rdTabPanel.getTabBar().getAt(0).setTitle('VENDOR');\r",
                    "//         RDStoreSideTabPanel.getTabBar().getAt(0).setTitle('IN-STORE RETAILERS');\r",
                    "//         RDStoreSideTabPanel.getTabBar().getAt(1).setTitle('ONLINE RETAILERS');\r",
                    "\r",
                    "        RDStoreLabel.setHtml('NEW VENDOR');\r",
                    "        RDStoreLogoLabel.setHtml('Vendor Logo');\r",
                    "        RDStoreName.setLabel(\"Vendor Name\");\r",
                    "        RDStoreOwner.setHidden(true);\r",
                    "        RDStoreOwner.setLabel(\"Owner Name\");\r",
                    "        RDStoreType.setLabel(\"Vendor Type\");\r",
                    "        RDStoreSize.setHidden(true);\r",
                    "    //    RDStoreAltBusiness.setHidden(true);\r",
                    "     //   RDStoreInventoryAccountingTool.setHidden(true);\r",
                    "        RDStoreTabReseller.setHidden(true);\r",
                    "\r",
                    "        RDStoreProductsList.setHidden(true);\r",
                    "        RDStoreStatusList.setHidden(true);\r",
                    "\r",
                    "        RDMRDYrsAtStore.setLabel(\"Years At Co.\");\r",
                    "\r",
                    "        rdTabPanel.getTabBar().getAt(4).setHidden(true);\r",
                    "        rdTabPanel.getTabBar().getAt(3).setHidden(false);\r",
                    "        rdTabPanel.getTabBar().getAt(7).setHidden(true);\r",
                    "\r",
                    "        var pospectActiveListContainer = Ext.ComponentQuery.query(\"#pospectActiveListContainer\")[0];\r",
                    "        var tabBar = pospectActiveListContainer.getTabBar();\r",
                    "            tabBar.setHidden( true );\r",
                    "\r",
                    "        RDUsersTab.setActiveItem(0);\r",
                    "\r",
                    "    }\r",
                    "\r",
                    "    // *********   SET  LABEL  AND DATA *************\r",
                    "    var RDVisitProfileLabel =  Ext.ComponentQuery.query('#RDVisitProfileLabel')[0];\r",
                    "    var RDVisitProfileLabel1 =  Ext.ComponentQuery.query('#RDVisitProfileLabel1')[0];\r",
                    "    var RDVisitProfileLabel2 =  Ext.ComponentQuery.query('#RDVisitProfileLabel2')[0];\r",
                    "\r",
                    "\r",
                    "    if( !( Object.keys(selectedUserRecord).length  )   ){\r",
                    "        // USER CLICKED ON ADD NEW RETAILER BTN\r",
                    "\r",
                    "        Ext.ComponentQuery.query('#RDCRMTab')[0].setDisabled(true);\r",
                    "\r",
                    "        Ext.ComponentQuery.query('#rm_selectFileForStore')[0].setDisabled(false);\r",
                    "        Ext.ComponentQuery.query('#RDManagerAddPhoto')[0].setDisabled(false);\r",
                    "       // Ext.ComponentQuery.query('#RDStoreLabel')[0].setHidden(false);\r",
                    "        Ext.ComponentQuery.query('#RDUsersStoreLogoImage')[0].setSrc('resources//images//logos//default_User.jpg') ;\r",
                    "        Ext.ComponentQuery.query('#storeValuesLabels')[0].setHidden(true);\r",
                    "        Ext.ComponentQuery.query('#RDStoreTabEditBtnItemID')[0].setHidden(true);\r",
                    "\r",
                    "        RDVisitProfileLabel.setHidden(true);\r",
                    "        RDVisitProfileLabel1.setHidden(true);\r",
                    "        RDVisitProfileLabel2.setHidden(true);\r",
                    "\r",
                    "        rdTabPanel.setActiveItem(0);\r",
                    "\r",
                    "        if(isRetailerDetailsView)\r",
                    "        {\r",
                    "            that.setAccNoForNewRt() ;\r",
                    "        }\r",
                    "\r",
                    "\r",
                    "        return;\r",
                    "    }\r",
                    "    else{\r",
                    "\r",
                    "\r",
                    "        Ext.ComponentQuery.query('#RDCRMTab')[0].setDisabled(false);\r",
                    "\r",
                    "        Ext.ComponentQuery.query('#RDStoreTabEditBtnItemID')[0].setHidden(false);\r",
                    "        Ext.ComponentQuery.query('#RDManagerAddPhoto')[0].setDisabled(true);\r",
                    "        Ext.ComponentQuery.query('#rm_selectFileForStore')[0].setDisabled(true);\r",
                    "        console.log(\" selectedUserRecord  \" , selectedUserRecord.record.data);\r",
                    "        RDVisitProfileLabel.setHidden(false);\r",
                    "        RDVisitProfileLabel1.setHidden(false);\r",
                    "        RDVisitProfileLabel2.setHidden(false);\r",
                    "        RMdatalink.util.globalConfig.setDataInRetailerScreenForSaveOrCancel(selectedUserRecord);\r",
                    "    }\r",
                    "\r",
                    "    console.error(21);\r",
                    "    setManagerData(selectedUserRecord);    console.error(22);\r",
                    "    fillStoreInformationForRDetailCard( selectedUserRecord.record );    console.error(23);\r",
                    "    fillMAnagerRelationData( selectedUserRecord );    console.error(25);\r",
                    "    fillCRMSData(selectedUserRecord) ;    console.error(26);\r",
                    "    fillValueinEcoomerceTab(selectedUserRecord);\r",
                    "    fillNotesStore(selectedUserRecord) ;    console.error(27);\r",
                    "    fillVendorsStore(selectedUserRecord) ;    console.error(28);\r",
                    "    fillRCMDSidebarPhotos(selectedUserRecord);    console.error(29);\r",
                    "    fillRCMDSidebarAttachments(selectedUserRecord);    console.error(30);\r",
                    "    fillREPsBlueBookUsers(selectedUserRecord) ;    console.error(31);\r",
                    "\r",
                    "    //  ****  CALL ONLY  FOR RETAILER DETAILS  *****\r",
                    "    if(isRetailerDetailsView)\r",
                    "    {\r",
                    "        setLocations(selectedUserRecord) ;    console.error(32);\r",
                    "        selectStoreStaus(selectedUserRecord);    console.error(33);\r",
                    "        fillStoreProductStatus(selectedUserRecord);    console.error(34);\r",
                    "        //  FOR RETAILER  BLUEBOOK LIST    console.error(21);\r",
                    "        //fillBlueBookUsers(selectedUserRecord) ;    console.error(21);\r",
                    "    }\r",
                    "\r",
                    "    fillCompanyContactInfo(selectedUserRecord);    console.error(35);\r",
                    "    fillTipsData(selectedUserRecord);    console.error(36);\r",
                    "    fillTechSupports(selectedUserRecord) ;    console.error(37);\r",
                    "\r",
                    "    setOtherExtraFlds(selectedUserRecord) ;    console.error(38);\r",
                    "}\r",
                    "\r",
                    "\r",
                    "function setOtherExtraFlds(selectedUserRecord){\r",
                    "\r",
                    "        if(selectedUserRecord.record.data.store_products)\r",
                    "        {\r",
                    "\r",
                    "           Ext.ComponentQuery.query('#rtDatalinkStatusSelFld')[0].setValue( selectedUserRecord.record.data.store_products.datalink_status) ;\r",
                    "           Ext.ComponentQuery.query('#rtEcatalogStatusSelFld')[0].setValue( selectedUserRecord.record.data.store_products.ecatalog_status);\r",
                    "           Ext.ComponentQuery.query('#rtECommerceStatusSelFld')[0].setValue(selectedUserRecord.record.data.store_products.ecommerce_status);\r",
                    "           Ext.ComponentQuery.query('#rtRM_proStatusSelFld')[0].setValue( selectedUserRecord.record.data.store_products.rmpro_status);\r",
                    "           Ext.ComponentQuery.query('#rtirugzStatusSelFld')[0].setValue(selectedUserRecord.record.data.store_products.irugs_status );\r",
                    "           Ext.ComponentQuery.query('#rtVipStatusSelFld')[0].setValue(selectedUserRecord.record.data.store_products.vip_status );\r",
                    "        }\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "        that.config.isAdditionalInfoMoreFldsTap =true ;\r",
                    "        RMdatalink.app.getController('inhouse.DetailScreenController').removeNewlyAddedRelFlds();\r",
                    "\r",
                    "\r",
                    "        if(selectedUserRecord.record.data.additional_fields){\r",
                    "             RMdatalink.app.getController('inhouse.DetailScreenController').\r",
                    "             addNewFldsForExistingData(selectedUserRecord.record.data.additional_fields);\r",
                    "        }\r",
                    "\r",
                    "\r",
                    "        that.config.isAdditionalInfoMoreFldsTap = false ;\r",
                    "\r",
                    "}\r",
                    "\r",
                    "function resetExtraFlds(){\r",
                    "\r",
                    "        if(isRetailerDetailsView)\r",
                    "        {\r",
                    "            var resetValue = null ; //\"INACTIVE\" ;\r",
                    "//rtVipStatusSelFld\r",
                    "            Ext.ComponentQuery.query('#rtDatalinkStatusSelFld')[0].setValue(resetValue) ;\r",
                    "           Ext.ComponentQuery.query('#rtEcatalogStatusSelFld')[0].setValue( resetValue);\r",
                    "           Ext.ComponentQuery.query('#rtECommerceStatusSelFld')[0].setValue(resetValue);\r",
                    "           Ext.ComponentQuery.query('#rtRM_proStatusSelFld')[0].setValue(resetValue);\r",
                    "           Ext.ComponentQuery.query('#rtirugzStatusSelFld')[0].setValue(resetValue);\r",
                    "           Ext.ComponentQuery.query('#rtVipStatusSelFld')[0].setValue(resetValue);\r",
                    "\r",
                    "              Ext.ComponentQuery.query('#inStoreVendorsRetailersCLbl')[0].setHtml(\"Total Vendors : 0\") ;\r",
                    "        }else{\r",
                    "\r",
                    "\r",
                    "          Ext.ComponentQuery.query('#RDVendorResourceTxtArea')[0].setValue(\"\");\r",
                    "\r",
                    "    Ext.ComponentQuery.query('#RDStoreWebsiteFbFld')[0].setValue(\"\");\r",
                    "    Ext.ComponentQuery.query('#RDStoreWebsiteTwFld')[0].setValue(\"\");\r",
                    "    Ext.ComponentQuery.query('#RDStoreWebsiteLnFld')[0].setValue(\"\");\r",
                    "\r",
                    "\r",
                    "            Ext.ComponentQuery.query('#RDAccountDetails')[0].setValue(\"\");\r",
                    "              Ext.ComponentQuery.query('#inStoreVendorsRetailersCLbl')[0].setHtml(\"Total Retailers : 0\") ;\r",
                    "        }\r",
                    "\r",
                    "    var prospectList  = Ext.ComponentQuery.query('#RDInStoreVendorsTab')[0].down(\"#mainList\");\r",
                    "    console.error(\"PROSEPCT LUIST\");\r",
                    "\r",
                    "    var prospectStore = prospectList.getStore() ;\r",
                    "    console.error(\"PROSEPCT LUIST REM)VE ALL CALLED\");\r",
                    "    prospectStore.removeAll();\r",
                    "    prospectStore.sync();\r",
                    "\r",
                    "\r",
                    "\r",
                    "}\r",
                    "\r",
                    "\r",
                    "function fillTechSupports(selectedUserRecord){\r",
                    "\r",
                    "     if(! isRetailerDetailsView)\r",
                    "     {\r",
                    "           var userData = selectedUserRecord.record.data ;\r",
                    "         RMdatalink.app.getController('TechSupportLog').loadVendorRetailerSpecificStore (userData.vendor_name,\"NotDefined\" );\r",
                    "\r",
                    "\r",
                    "\r",
                    "     }else{\r",
                    "\r",
                    "             var userData = selectedUserRecord.record.data ;\r",
                    "         RMdatalink.app.getController('TechSupportLog').loadVendorRetailerSpecificStore (userData.store_name,\"NotDefined\" );\r",
                    "\r",
                    "     }\r",
                    "}\r",
                    "\r",
                    "\r",
                    "function setManagerData(selectedUserRecord){\r",
                    "\r",
                    "    var userData = selectedUserRecord.record.data ;\r",
                    "    var storeOrVendorName;\r",
                    "    if(isRetailerDetailsView)\r",
                    "    {\r",
                    "          Ext.ComponentQuery.query('#RDAccountDetails')[0].setValue(userData.account_no);\r",
                    "\r",
                    "        storeOrVendorName = userData.store_name;\r",
                    "        console.error(92);\r",
                    "        that.loadActiveVendorsForRetailers() ;\r",
                    "    }\r",
                    "    else\r",
                    "    {\r",
                    "        Ext.ComponentQuery.query('#RDVendorResourceTxtArea')[0].setValue(userData.vendor_resources);\r",
                    "\r",
                    "        Ext.ComponentQuery.query('#RDStoreWebsiteFbFld')[0].setValue(userData.vendor_facebook);\r",
                    "        Ext.ComponentQuery.query('#RDStoreWebsiteTwFld')[0].setValue(userData.vendor_twitter);\r",
                    "        Ext.ComponentQuery.query('#RDStoreWebsiteLnFld')[0].setValue(userData.vendor_linkedin);\r",
                    "\r",
                    "            Ext.ComponentQuery.query('#RDAccountDetails')[0].setValue(userData.account_details);\r",
                    "\r",
                    "           var importFrmCsvController = RMdatalink.app.getController('ImportCSV') ;\r",
                    "\r",
                    "           if( userData.retailers )\r",
                    "           {\r",
                    "\r",
                    "               importFrmCsvController.config.retailerForVendor = [];\r",
                    "\r",
                    "               importFrmCsvController.config.retailerForVendor = userData.retailers ;\r",
                    "           }else{\r",
                    "\r",
                    "               importFrmCsvController.config.retailerForVendor = [];\r",
                    "           }\r",
                    "console.error(93);\r",
                    "        that.loadActiveRetailersForVendors() ;\r",
                    "\r",
                    "        storeOrVendorName = userData.vendor_name;\r",
                    "    }\r",
                    "    var mangerForm = Ext.ComponentQuery.query('#RDManagerFormPanel')[0];\r",
                    "    mangerForm.setDisabled(true) ;\r",
                    "    Ext.ComponentQuery.query('#RDManagerRelationDetailsForm')[0].setDisabled(true);\r",
                    "    Ext.ComponentQuery.query('#ActRDManagerRelationDetailsForm')[0].setDisabled(true);\r",
                    "\r",
                    "    var profilePicView = Ext.ComponentQuery.query('#RDManagerAddPhotoImage')[0];\r",
                    "    profilePicView.setSrc(userData.manager_photo_url).setHidden(false) ;\r",
                    "\r",
                    "    Ext.ComponentQuery.query('#ActRDMPositionId')[0].setValue(userData.manager_position);\r",
                    "    Ext.ComponentQuery.query('#RDManagerStoreName')[0].setValue(storeOrVendorName);\r",
                    "    Ext.ComponentQuery.query('#RDManagerFirstName')[0].setValue(userData.manager_firstname);\r",
                    "    Ext.ComponentQuery.query('#RDManagerLastName')[0].setValue(userData.manager_lastname);\r",
                    "    Ext.ComponentQuery.query('#RDManagerEmail')[0].setValue(userData.manager_email);\r",
                    "    Ext.ComponentQuery.query('#RDManagerPhone')[0].setValue(userData.manager_phone);\r",
                    "    Ext.ComponentQuery.query('#RDManagerPhoneExt')[0].setValue(userData.manager_phone_ext);\r",
                    "    Ext.ComponentQuery.query('#RDManagerLinkedIn')[0].setValue(userData.manager_linkedin);\r",
                    "    Ext.ComponentQuery.query('#RDManagerFacebook')[0].setValue(userData.manager_facebook);\r",
                    "    Ext.ComponentQuery.query('#RDManagerTwitter')[0].setValue(userData.manager_twitter);\r",
                    "    Ext.ComponentQuery.query('#RDManagerAddress')[0].setValue(userData.manager_address);\r",
                    "    Ext.ComponentQuery.query('#RDManagerSuite')[0].setValue(userData.manager_address_suite);\r",
                    "    Ext.ComponentQuery.query('#ActMgrCity')[0].setValue(userData.manager_city);\r",
                    "    Ext.ComponentQuery.query('#ActMgrState')[0].setValue(userData.manager_state);\r",
                    "    Ext.ComponentQuery.query('#ActMgrZip')[0].setValue(userData.manager_zip);\r",
                    "    Ext.ComponentQuery.query('#RDManagerDirectPhone')[0].setValue(userData.manager_direct_number);\r",
                    "    Ext.ComponentQuery.query('#RDManagerDirectPhoneExt')[0].setValue(userData.manager_direct_number_ext);\r",
                    "\r",
                    "\r",
                    "    console.error(\"GLOBAL FILL ONE\");\r",
                    "    console.error(96);\r",
                    "    RMdatalink.util.globalMethods.fillListData('#RDManagerActivityList',userData.manager_recent_activity);\r",
                    "\r",
                    "}\r",
                    "\r",
                    "function fillListData(itemId,data){\r",
                    "    var list = Ext.ComponentQuery.query('#'+itemId)[0] ;\r",
                    "    var listStore = list.getStore();\r",
                    "    if(listStore){\r",
                    "        listStore.removeAll();\r",
                    "        listStore.sync();\r",
                    "    }\r",
                    "\r",
                    "    list.setData(data);\r",
                    "    list.refresh();\r",
                    "}\r",
                    "\r",
                    "\r",
                    "function fillMAnagerRelationData(selectedUserRecord){\r",
                    "    var userData = selectedUserRecord.record.data ;\r",
                    "    var year , wife ;\r",
                    "    if(isRetailerDetailsView)\r",
                    "    {\r",
                    "        year = userData.manager_rd_years_at_store;\r",
                    "        wife = userData.manager_rd_wife;\r",
                    "    }\r",
                    "    else\r",
                    "    {\r",
                    "        year = userData.manager_rd_years_at_co;\r",
                    "        wife = userData.manager_rd_sig_other;\r",
                    "    }\r",
                    "\r",
                    "\r",
                    "    if( Ext.ComponentQuery.query('#ActRDMRDYrsAtStore ')){\r",
                    "        Ext.ComponentQuery.query('#ActRDMRDYrsAtStore ')[0].setValue(year);\r",
                    "    }\r",
                    "    Ext.ComponentQuery.query('#ActRDMRDWife')[0].setValue(wife);\r",
                    "\r",
                    "    Ext.ComponentQuery.query('#ActRDMRDRelatives ')[0].setValue(userData.manager_rd_relatives);\r",
                    "\r",
                    "    Ext.ComponentQuery.query('#ActRDMRDHobbies')[0].setValue(userData.manager_rd_hobbies);\r",
                    "\r",
                    "    Ext.ComponentQuery.query('#ActRDMRDCarOfChoice')[0].setValue(userData.manager_rd_car_of_choice);\r",
                    "\r",
                    "    Ext.ComponentQuery.query('#ActRDMRDAltPhone ')[0].setValue(userData.manager_rd_alt_phone);\r",
                    "\r",
                    "    Ext.ComponentQuery.query('#ActRDMRDAltEmail')[0].setValue(userData.manager_rd_alt_email);\r",
                    "    Ext.ComponentQuery.query('#ActRDMRDWebsite')[0].setValue(userData.manager_rd_website);\r",
                    "\r",
                    "    if(userData.manager_rd_childs){\r",
                    "\r",
                    "        if(Ext.ComponentQuery.query('#ActRDMRDChild1Name')){Ext.ComponentQuery.query('#ActRDMRDChild1Name')[0].setValue(userData.manager_rd_childs[0] ? userData.manager_rd_childs[0].child_name : \"\" ) ;}\r",
                    "        if(Ext.ComponentQuery.query('#ActRDMRDChild2Name')){Ext.ComponentQuery.query('#ActRDMRDChild2Name')[0].setValue(userData.manager_rd_childs[1] ? userData.manager_rd_childs[1].child_name : \"\" );}\r",
                    "        //  Ext.ComponentQuery.query('#ActRDMRDChild3Name')[0].setValue(userData.manager_rd_childs[2].child_name);\r",
                    "        if(Ext.ComponentQuery.query('#ActRDMRDChild1Age')){Ext.ComponentQuery.query('#ActRDMRDChild1Age')[0].setValue(userData.manager_rd_childs[0] ? userData.manager_rd_childs[0].child_age : \"\" );}\r",
                    "        if(Ext.ComponentQuery.query('#ActRDMRDChild2Age')){Ext.ComponentQuery.query('#ActRDMRDChild2Age')[0].setValue(userData.manager_rd_childs[1] ? userData.manager_rd_childs[1].child_age : \"\" );}\r",
                    "        // Ext.ComponentQuery.query('#ActRDMRDChild3Age')[0].setValue(userData.manager_rd_childs[2].child_age);\r",
                    "    }\r",
                    "\r",
                    "    if( userData.manager_rd_partner){\r",
                    "\r",
                    "        if(Ext.ComponentQuery.query('#ActRDMRDPartner1')){Ext.ComponentQuery.query('#ActRDMRDPartner1')[0].setValue( userData.manager_rd_partner[0] ? userData.manager_rd_partner[0].partner_name : \"\");}\r",
                    "        if(Ext.ComponentQuery.query('#ActRDMRDPartner2')){Ext.ComponentQuery.query('#ActRDMRDPartner2')[0].setValue( userData.manager_rd_partner[1] ? userData.manager_rd_partner[1].partner_name : \"\");}\r",
                    "    }\r",
                    "\r",
                    "\r",
                    "      Ext.ComponentQuery.query('#ActRDMRDDOBMonth')[0].setValue(userData.manager_rd_dob);\r",
                    "     Ext.ComponentQuery.query('#ActRDMRDAniversaryMonth')[0].setValue(userData.manager_rd_aniversary);\r",
                    "\r",
                    "}\r",
                    "function setRtlBillingDtl(record){\r",
                    "\r",
                    "    var billingHtml = \"<div>\" ;\r",
                    "    billingHtml += '<span>Billing Amount $: '+ formatNum( that.config.billingQuery.getLastPaidAmmount(record.data)) +'</span>' ;\r",
                    "\r",
                    "    billingHtml += '<div>Expiration : '+ that.config.billingQuery.getDueDate(record.data) ;\r",
                    "\r",
                    "    billingHtml += '<span style = \"color: red; \">   '+ that.config.billingQuery.getStatus(record.data) +'</span></div>' ;\r",
                    "    billingHtml += \"</div>\" ;\r",
                    "\r",
                    "    Ext.ComponentQuery.query('#billingDtlLbl')[0].setHtml(billingHtml);\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "}\r",
                    "\r",
                    "function showProductMarker(value){\r",
                    "\r",
                    "var str = Ext.ComponentQuery.query('#RDStoreProductsList')[0].getStore() ;\r",
                    "\r",
                    "\r",
                    "\r",
                    "                     var status = \"\" ;\r",
                    "                        var dd = null ;\r",
                    "                        var today = new Date() ;\r",
                    "                       if(value.product_billng){\r",
                    "\r",
                    "                           var d1 = null;\r",
                    "                           var d2 = null ;\r",
                    "\r",
                    "                           if(value.product_billng.product_datalink){\r",
                    "\r",
                    "                               d1 = value.product_billng.product_datalink.due_date;\r",
                    "                           }\r",
                    "                           if(value.product_billng.product_rmpro){\r",
                    "\r",
                    "                               d2 = value.product_billng.product_rmpro.due_date;\r",
                    "                           }\r",
                    "\r",
                    "                           if( d1 && d2){\r",
                    "                               var d3 = new Date(d1);\r",
                    "                               var d4 = new Date(d2);\r",
                    "\r",
                    "\r",
                    "                               if(d3 < today){\r",
                    "\r",
                    "                                   str.getAt(0).set(\"product_expiry\",\"!\");\r",
                    "                               }\r",
                    "\r",
                    "                               if(d4 < today ){\r",
                    "\r",
                    "                                    str.getAt(3).set(\"product_expiry\",\"!\");\r",
                    "                               }\r",
                    "\r",
                    "                               //dd = (d3 < d4 ? d1 : d2) ;\r",
                    "\r",
                    "\r",
                    "                           }else{\r",
                    "                                var temp ;\r",
                    "                               if(d1){\r",
                    "                                   temp = new Date(d1) ;\r",
                    "                                   if(temp < today ){\r",
                    "\r",
                    "                                    str.getAt(0).set(\"product_expiry\",\"!\");\r",
                    "                                   }\r",
                    "                               }\r",
                    "\r",
                    "                               if(d2){\r",
                    "\r",
                    "                                     temp = new Date(d2) ;\r",
                    "\r",
                    "                                   temp = new Date(d1) ;\r",
                    "                                   if(temp < today ){\r",
                    "\r",
                    "                                    str.getAt(3).set(\"product_expiry\",\"!\");\r",
                    "                                   }\r",
                    "\r",
                    "                               }\r",
                    "\r",
                    "                       }\r",
                    "               }\r",
                    "\r",
                    "\r",
                    "}\r",
                    "\r",
                    "\r",
                    "function fillStoreInformationForRDetailCard (record){\r",
                    "    var logo , name , state , ownerFName , ownerLName , performance , cityName;\r",
                    "    var keyName ,keyAddrss ,keyAddrssSuite , keyCity, keyState , keyZip,keyEmail, keyPhone,keyPhoneExt,keyFax, keyWebsite, keyType,\r",
                    "        keyLocation,keyYrBuisness , keyEmployee , keyProgram , keyOneKind , keyChallenges , keyAdv , keyMonBug;\r",
                    "\r",
                    "\r",
                    "    if(isRetailerDetailsView)\r",
                    "    {\r",
                    "        logo =  record.data.store_logo;\r",
                    "        name = record.data.store_name.toUpperCase() ;\r",
                    "        state = record.data.store_state;\r",
                    "        ownerFName = record.data.store_owner_firstname;\r",
                    "        ownerLName = record.data.store_owner_lastname ;\r",
                    "        performance = record.data.store_performance;\r",
                    "        cityName =  record.data.store_city;\r",
                    "\r",
                    "        keyName = 'store_name';\r",
                    "        keyAddrss = \"store_address_line1\" ;\r",
                    "        keyAddrssSuite = \"store_address_suite\";\r",
                    "        keyCity = \"store_city\";\r",
                    "        keyState = \"store_state\";\r",
                    "        keyZip = \"store_zip\" ;\r",
                    "        keyEmail = \"store_email\";\r",
                    "        keyPhone = \"store_phone\" ;\r",
                    "        keyPhoneExt = \"store_phone_ext\" ;\r",
                    "        keyFax = \"store_fax\" ;\r",
                    "        keyWebsite = \"store_website\" ;\r",
                    "        keyType = \"store_type\" ;\r",
                    "        keyLocation = \"store_location\" ;\r",
                    "        keyYrBuisness = \"store_yr_business\";\r",
                    "        keyEmployee =  \"store_employees\";\r",
                    "        keyProgram = \"store_percent_program\";\r",
                    "        keyOneKind = \"store_percent_oneof_kind\";\r",
                    "        keyChallenges = \"store_challenges\";\r",
                    "        keyAdv  = \"store_advertising\";\r",
                    "        keyMonBug = \"store_monthly_budget\";\r",
                    "    }\r",
                    "    else\r",
                    "    {\r",
                    "        logo =  record.data.vendor_logo;\r",
                    "        name = record.data.vendor_name.toUpperCase() ;\r",
                    "        state = record.data.vendor_state;\r",
                    "        ownerFName = record.data.vendor_owner_firstname;\r",
                    "        ownerLName = record.data.vendor_owner_lastname ;\r",
                    "        performance = record.data.vendor_performance;\r",
                    "        cityName =  record.data.vendor_city;\r",
                    "\r",
                    "        keyName = 'vendor_name';\r",
                    "        keyAddrss = \"vendor_address_line1\" ;\r",
                    "        keyAddrssSuite = \"vendor_address_suite\";\r",
                    "        keyCity = \"vendor_city\";\r",
                    "        keyState = \"vendor_state\";\r",
                    "        keyZip = \"vendor_zip\" ;\r",
                    "        keyEmail = \"vendor_email\";\r",
                    "        keyPhone = \"vendor_phone\" ;\r",
                    "        keyPhoneExt = \"vendor_phone_ext\" ;\r",
                    "        keyFax = \"vendor_fax\" ;\r",
                    "        keyWebsite = \"vendor_website\" ;\r",
                    "        keyType = \"vendor_type\" ;\r",
                    "        keyLocation = \"vendor_location\" ;\r",
                    "        keyYrBuisness = \"vendor_yr_business\";\r",
                    "        keyEmployee =  \"vendor_employees\";\r",
                    "        keyProgram = \"vendor_percent_program\";\r",
                    "        keyOneKind = \"vendor_percent_oneof_kind\";\r",
                    "        keyChallenges = \"vendor_challenges\";\r",
                    "        keyAdv  = \"vendor_advertising\";\r",
                    "        keyMonBug = \"vendor_monthly_budget\";\r",
                    "    }\r",
                    "\r",
                    "    Ext.ComponentQuery.query('#RDUsersStoreLogoImage')[0].setSrc(logo).setHidden(false);\r",
                    "    Ext.ComponentQuery.query('#logoHearderPanel')[0].setHidden(false);\r",
                    "    Ext.ComponentQuery.query('#storeNameOrderLabelItemID')[0].setHtml(\r",
                    "        '<div class=\"x-rm-rdstoreother-details\"><div>'+name+'</div>'+\r",
                    "        '<a href=\"#card2\"\">ACCOUNT NO #'+record.data.account_no+'</a></div>'\r",
                    "    );\r",
                    "\r",
                    "\r",
                    "    var uSince = RMdatalink.util.globalMethods.getDateTimeFromMongo_id(record.data._id) ;\r",
                    "    uSince = RMdatalink.util.globalMethods.getAMDate(uSince);\r",
                    "    Ext.ComponentQuery.query('#cityNameLabelItemID')[0].setHtml(\r",
                    "        cityName+','+state+\r",
                    "        '&nbsp;&nbsp;&nbsp;&nbsp;User since '+ uSince  //record.data.user_since\r",
                    "    );\r",
                    "    Ext.ComponentQuery.query('#lastLoginLabelItemID')[0].setHtml('Last login '+record.data.last_login);\r",
                    "    Ext.ComponentQuery.query('#lastExportLabelItemID')[0].setHtml('Last export '+record.data.last_export);\r",
                    "    Ext.ComponentQuery.query('#RDStoreTabReseller')[0].setHtml(\r",
                    "        '<div style=\"font-size:100% !important\" class=\"x-rm-rdstoreother-details\">'+\r",
                    "        'Reseller: <a href=\"#card4\">'+record.data.reseller+'</a></div>'\r",
                    "    );\r",
                    "\r",
                    "\r",
                    "    ///////////////////////////////\r",
                    "    if(!isRetailerDetailsView){\r",
                    "\r",
                    "        if(! record.data.SKU){\r",
                    "            record.data.SKU = '';\r",
                    "\r",
                    "        }\r",
                    "        if(! record.data.collections){\r",
                    "            record.data.collections = '';\r",
                    "        }\r",
                    "\r",
                    "        if(! record.data.design){\r",
                    "            record.data.design = \"\" ;\r",
                    "        }\r",
                    "\r",
                    "        if(! record.data.price){\r",
                    "            record.data.price = \"\" ;\r",
                    "        }\r",
                    "\r",
                    "        Ext.ComponentQuery.query('#vendorNameLbl')[0].setHtml('<div class=\"x-rm-rdstoreother-details\">Vendor name: '+record.data.vendor_name +'</div>');\r",
                    "        Ext.ComponentQuery.query('#vendorCollectionsLbl')[0].setHtml('<div class=\"x-rm-rdstoreother-details\">Collections: '+record.data.collections +'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Design: '+record.data.design +'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; SKUs: '+record.data.SKU+'</div>');\r",
                    "        Ext.ComponentQuery.query('#vendorRugImageLbl')[0].setHtml('<div class=\"x-rm-rdstoreother-details\">Rug images: '+record.data.no_of_rugs_images+'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Additional images :'+record.data.no_of_additional_images+'</div>');\r",
                    "        Ext.ComponentQuery.query('#vendorLastUpdateLbl')[0].setHtml('<div class=\"x-rm-rdstoreother-details\">Last updated on:</div>');\r",
                    "        Ext.ComponentQuery.query('#vendorPriceLbl')[0].setHtml('<div class=\"x-rm-rdstoreother-details\">Price: '+ record.data.price+'</div>');\r",
                    "\r",
                    "    }\r",
                    "    //////////////////////////////////\r",
                    "\r",
                    "\r",
                    "    Ext.ComponentQuery.query('#RDStoreLabel')[0].setHidden(true);\r",
                    "    //  Ext.ComponentQuery.query('#RDStoreLogoPanel')[0].setHidden(true);\r",
                    "    Ext.ComponentQuery.query('#RDStoreTabFormPanel')[0].setDisabled(true);\r",
                    "    Ext.ComponentQuery.query('#retailerEcommerceForm')[0].setDisabled(true);\r",
                    "    Ext.ComponentQuery.query('#RDStoreOwner')[0].setValue(\r",
                    "        ownerFName+' '+ownerLName\r",
                    "    );\r",
                    "\r",
                    "    var store_perfList =  Ext.ComponentQuery.query('#RDStoreTabPerformance')[0] ;\r",
                    "    store_perfList.setDisableSelection(false) ;\r",
                    "    switch(performance){\r",
                    "\r",
                    "        case \"BAD\":\r",
                    "            store_perfList.select(0,false,true);\r",
                    "            break;\r",
                    "        case \"GOOD\":\r",
                    "            store_perfList.select(1,false,true);\r",
                    "            break;\r",
                    "        case \"GREAT\":\r",
                    "            store_perfList.select(2,false,true);\r",
                    "            break;\r",
                    "    }\r",
                    "\r",
                    "    var itemIdsAndKeyName = [\r",
                    "        {itemId:'RDStoreName',keyName:keyName},\r",
                    "        {itemId:'RDStoreAddress',keyName:keyAddrss},\r",
                    "        {itemId:'RDStoreSuite',keyName:keyAddrssSuite},\r",
                    "        {itemId:'RDStoreCity',keyName:keyCity},\r",
                    "        {itemId:'RDStoreState',keyName:keyState},\r",
                    "        {itemId:'RDStoreZip',keyName:keyZip},\r",
                    "        {itemId:'RDStoreEmail',keyName:keyEmail},\r",
                    "        {itemId:'RDStorePhone',keyName:keyPhone},\r",
                    "        {itemId:'RDStorePhoneExt',keyName:keyPhoneExt},\r",
                    "        {itemId:'RDStoreFax',keyName:keyFax},\r",
                    "        {itemId:'RDStoreWebsite',keyName:keyWebsite},\r",
                    "        {itemId:'RDStoreType',keyName:keyType},\r",
                    "        {itemId:'RDStoreSize',keyName:'store_size_sq_ft'},\r",
                    "        {itemId:'RDStoreLocations',keyName:keyLocation},\r",
                    "        {itemId:'RDStoreEmployees',keyName:keyEmployee},\r",
                    "        {itemId:'RDStoreYrsInBusiness',keyName:keyYrBuisness},\r",
                    "        {itemId:'RDStoreInventoryTool',keyName:'store_inventory_tool'},\r",
                    "        {itemId:'RDStoreAccountingTool',keyName:'store_accounting_tool'},\r",
                    "        {itemId:'RDStoreAltBusiness',keyName:'store_alt_bussiness'},\r",
                    "        {itemId:'RDStorePercProg',keyName:keyProgram},\r",
                    "        {itemId:'RDStorePercKind',keyName:keyOneKind},\r",
                    "\r",
                    "        {itemId: isRetailerDetailsView ?'rtAdditionalInfoChallenges' :'RDStoreChallenges',keyName:keyChallenges},\r",
                    "\r",
                    "        {itemId:'RDStoreAdvertising',keyName:keyAdv},\r",
                    "        {itemId:'RDStoreMoBudget',keyName:keyMonBug}\r",
                    "    ];\r",
                    "\r",
                    "    var refinedArray = RMdatalink.util.globalMethods.getRefinedArray(itemIdsAndKeyName,record.data);\r",
                    "\r",
                    "    for(var i=0;i<refinedArray.length;i++){\r",
                    "\r",
                    "        var valueToAdd = RMdatalink.util.globalMethods.getValuesFromObj(record.data    , refinedArray[i].keyName );\r",
                    "        var componentQery = '#' + refinedArray[i].itemId;\r",
                    "        RMdatalink.util.globalMethods.setValueWithSelectionQuery(componentQery,valueToAdd);\r",
                    "\r",
                    "\r",
                    "    }\r",
                    "\r",
                    "    if(!isRetailerDetailsView){\r",
                    "\r",
                    "        Ext.ComponentQuery.query('#RDStoreDesign')[0].setValue(  record.data.design );\r",
                    "        Ext.ComponentQuery.query('#RDStoreSKU')[0].setValue( record.data.SKU);\r",
                    "        Ext.ComponentQuery.query('#RDStoreCollections')[0].setValue( record.data.collections);\r",
                    "        /*\r",
                    "        Ext.ComponentQuery.query('#RDStoreNoOfRugsImages')[0].setValue( record.data.no_of_rugs_images);\r",
                    "        Ext.ComponentQuery.query('#RDStoreNoOfAdditionalImages')[0].setValue( record.data.no_of_additional_images );\r",
                    "\r",
                    "*/\r",
                    "\r",
                    "    }else{\r",
                    "\r",
                    "        setRtlBillingDtl(record) ;\r",
                    "    }\r",
                    "\r",
                    "}\r",
                    "function clearAllScreenInfoOnRetailCard(){\r",
                    "    //ADD ITEMID OF FIELDS  HERE WHICH WE WNAT TO CLEAR\r",
                    "    //CLEAR MANUALLY IF NOT POSSIBLE BY ITERATION.\r",
                    "    var itemIdsAndKeyName = [\r",
                    "        {itemId:'RDStoreName'},\r",
                    "        {itemId:'RDStoreOwner'},\r",
                    "        {itemId:'RDStoreAddress'},\r",
                    "        {itemId:'RDStoreFax'},\r",
                    "        {itemId:'RDStoreSuite'},\r",
                    "        {itemId:'RDStoreCity'},\r",
                    "        {itemId:'RDStoreState'},\r",
                    "        {itemId:'RDStoreZip'},\r",
                    "        {itemId:'RDStoreEmail'},\r",
                    "        {itemId:'RDStorePhone'},\r",
                    "        {itemId:'RDStorePhoneExt'},\r",
                    "        {itemId:'RDStoreWebsite'},\r",
                    "        {itemId:'RDStoreType'},\r",
                    "        {itemId:'RDStoreSize'},\r",
                    "        {itemId:'RDStoreLocations'},\r",
                    "        {itemId:'RDStoreEmployees'},\r",
                    "        {itemId:'RDStoreYrsInBusiness'},\r",
                    "        {itemId:'RDStoreInventoryTool'},\r",
                    "        {itemId:'RDStoreAccountingTool'},\r",
                    "        {itemId:'RDStoreAltBusiness'},\r",
                    "        {itemId:'RDStorePercProg'},\r",
                    "        {itemId:'RDStorePercKind'},\r",
                    "        {itemId:  isRetailerDetailsView ?'rtAdditionalInfoChallenges' : 'RDStoreChallenges'},\r",
                    "        {itemId:'RDStoreAdvertising'},\r",
                    "        {itemId:'RDStoreMoBudget'},\r",
                    "        {itemId:'RDStoreMoBudget'}\r",
                    "    ];\r",
                    "    var refinedArray = itemIdsAndKeyName;\r",
                    "    for(var i=0;i<refinedArray.length;i++){\r",
                    "\r",
                    "        var valueToAdd = '';\r",
                    "        var componentQery = '#' + refinedArray[i].itemId;\r",
                    "        RMdatalink.util.globalMethods.setValueWithSelectionQuery(componentQery,valueToAdd);\r",
                    "\r",
                    "    }\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "}\r",
                    "\r",
                    "function fillCRMSData(selectedUserRecord){\r",
                    "    var userData = selectedUserRecord.record.data ;\r",
                    "\r",
                    "    var list = Ext.ComponentQuery.query('#RDCRMList')[0].down(\"#mainList\");\r",
                    "\r",
                    "    var RDCRMStore = Ext.getStore('RDCRM');\r",
                    "    RDCRMStore.removeAll() ;\r",
                    "    RDCRMStore.sync() ;\r",
                    "\r",
                    "    RDCRMStore.setData(userData.crms) ;\r",
                    "    RDCRMStore.sync() ;\r",
                    "    list.refresh();\r",
                    "}\r",
                    "\r",
                    "\r",
                    "function fillValueinEcoomerceTab(selectedUserRecord){\r",
                    "\r",
                    "  console.warn(\"FILLING RETAILER E-COMMERCE INFORMATION\");\r",
                    "  var userData = selectedUserRecord.record.data ;\r",
                    "  var retailerEcommerceForm = Ext.ComponentQuery.query(\"#retailerEcommerceForm\")[0];\r",
                    "     retailerEcommerceForm.setValues(userData.e_commerce_info);\r",
                    "\r",
                    "    fillLogoInfoForEcommeceTab(selectedUserRecord , retailerEcommerceForm);\r",
                    "    fillAdditionalVEndors(selectedUserRecord , retailerEcommerceForm);\r",
                    "    fillFeatureInformation(selectedUserRecord , retailerEcommerceForm);\r",
                    "\r",
                    "    //fillFeatureInformation\r",
                    "}\r",
                    "\r",
                    "function fillLogoInfoForEcommeceTab(record , form){\r",
                    "\r",
                    "    var rec =  RMdatalink.util.globalConfig.getDataToShowInSettingWindow() ;\r",
                    "    var logo;\r",
                    "    try{\r",
                    "         logo = rec.record.data.e_commerce_info.logo;\r",
                    "    }catch(e){\r",
                    "\r",
                    "        console.log(\"EROR WA THROWN\"  ,e);\r",
                    "    }\r",
                    "\r",
                    "    if(logo){\r",
                    "\r",
                    "        console.log(\" LOGO INFORMATION\");\r",
                    "    }else{\r",
                    "        console.log(\"NO LOGO INFORMATION\");\r",
                    "    }\r",
                    "    var backGround_Logo_Image = Ext.ComponentQuery.query(\"#backGround_Logo_Image\")[0];\r",
                    "    var dom = backGround_Logo_Image.element.dom;\r",
                    "    var img = dom.childNodes[0];\r",
                    "    img.setAttribute(\"src\" , logo);\r",
                    "\r",
                    "}\r",
                    "\r",
                    "function fillAdditionalVEndors(){\r",
                    "\r",
                    "\r",
                    "    var vipVendorListInEComm = Ext.ComponentQuery.query(\"#vipVendorListInEComm\")[0];\r",
                    "    var rec =  RMdatalink.util.globalConfig.getDataToShowInSettingWindow() ;\r",
                    "    var additional_vendors;\r",
                    "    var list = vipVendorListInEComm ;\r",
                    "    var store = vipVendorListInEComm.getStore();\r",
                    "    try{\r",
                    "         additional_vendors = rec.record.data.e_commerce_info.additional_vendors;\r",
                    "    }catch(e){\r",
                    "\r",
                    "        console.log(\"EROR WA THROWN\"  ,e);\r",
                    "    }\r",
                    "\r",
                    "    if(additional_vendors && additional_vendors.length){\r",
                    "\r",
                    "        console.log(\" additional_vendors INFORMATION\");\r",
                    "        console.log(additional_vendors);\r",
                    "        if(store){\r",
                    "            store.setData(additional_vendors);\r",
                    "        }else{\r",
                    "            list.setData(additional_vendors);\r",
                    "        }\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "    }else{\r",
                    "        console.log(\"NO additional_vendors INFORMATION\");\r",
                    "        if(store){\r",
                    "            store.removeAll();\r",
                    "        }\r",
                    "        return;\r",
                    "    }\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "}\r",
                    "\r",
                    "function fillFeatureInformation(){\r",
                    "\r",
                    "\r",
                    "    var vipVendorProgramListInEComm = Ext.ComponentQuery.query(\"#vipVendorProgramListInEComm\")[0];\r",
                    "    var rec =  RMdatalink.util.globalConfig.getDataToShowInSettingWindow() ;\r",
                    "    var additional_vendors;\r",
                    "    var list = vipVendorProgramListInEComm ;\r",
                    "    var store = vipVendorProgramListInEComm.getStore();\r",
                    "    try{\r",
                    "         additional_vendors = rec.record.data.e_commerce_info.programs;\r",
                    "    }catch(e){\r",
                    "\r",
                    "        console.log(\"EROR WA THROWN\"  ,e);\r",
                    "    }\r",
                    "\r",
                    "    if(additional_vendors && additional_vendors.length){\r",
                    "\r",
                    "        console.log(\" additional_vendors INFORMATION\");\r",
                    "        console.log(additional_vendors);\r",
                    "        if(store){\r",
                    "            store.setData(additional_vendors);\r",
                    "        }else{\r",
                    "            list.setData(additional_vendors);\r",
                    "        }\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "    }else{\r",
                    "        console.log(\"NO additional_vendors INFORMATION\");\r",
                    "        if(store){\r",
                    "            store.removeAll();\r",
                    "        }\r",
                    "        return;\r",
                    "    }\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "}\r",
                    "\r",
                    "\r",
                    "function fillNotesStore(selectedUserRecord){\r",
                    "\r",
                    "    var userData = selectedUserRecord.record.data ;\r",
                    "\r",
                    "    var RDCRMStore = Ext.getStore('retailersDetailsNotes');\r",
                    "    if(userData.notes && userData.notes.length > 0){\r",
                    "            Ext.ComponentQuery.query('#retailerDetailsMainTabPanel')[0].getTabBar().getAt(6).setBadgeText(userData.notes.length);\r",
                    "    }\r",
                    "    else{\r",
                    "\r",
                    "            Ext.ComponentQuery.query('#retailerDetailsMainTabPanel')[0].getTabBar().getAt(6).setBadgeText();\r",
                    "    }\r",
                    "\r",
                    "    RDCRMStore.removeAll() ;\r",
                    "    RDCRMStore.sync() ;\r",
                    "\r",
                    "    RDCRMStore.setData(userData.notes) ;\r",
                    "    RDCRMStore.sync() ;\r",
                    "\r",
                    "}\r",
                    "\r",
                    "\r",
                    "function fillBlueBookUsers(selectedUserRecord){\r",
                    "\r",
                    "\r",
                    "    var blueBookListWithHeader = Ext.ComponentQuery.query('#blueBookListWithHeader')[0];\r",
                    "    var blueBookMainList = blueBookListWithHeader.down('#mainList');\r",
                    "    var newChildpanelBlueBookList = blueBookMainList.down('#newChildpanelBlueBookList');\r",
                    "    var managerUSers =[] ;\r",
                    "    // FOR  NEW  ADD  RETAILER  BUTTON  CLICKED\r",
                    "    if( Object.keys(selectedUserRecord).length )\r",
                    "    {\r",
                    "        var userData = selectedUserRecord.record.data ;\r",
                    "        managerUSers =userData.reps_bluebook_teamusers ;\r",
                    "    }\r",
                    "console.error(\"GLOBAL FILL 2\");\r",
                    "    RMdatalink.util.globalMethods.fillListDataByListObject(blueBookMainList,managerUSers);\r",
                    "    blueBookMainList.refresh();\r",
                    "\r",
                    "    if(managerUSers !== undefined && managerUSers !== null)\r",
                    "    {\r",
                    "        newChildpanelBlueBookList.setTop(managerUSers.length*50);\r",
                    "    }\r",
                    "\r",
                    "    else\r",
                    "    {\r",
                    "        newChildpanelBlueBookList.setTop(0);\r",
                    "    }\r",
                    "}\r",
                    "\r",
                    "function fillREPsBlueBookUsers(selectedUserRecord){\r",
                    "\r",
                    "    var userData = selectedUserRecord.record.data ;\r",
                    "    var managerUSers = userData.reps_bluebook_teamusers ;\r",
                    "    console.log(\"managerUSers  \" , managerUSers);\r",
                    "\r",
                    "    var REPsStore = Ext.getStore('vendor.REPsDetails');\r",
                    "    REPsStore.setData(managerUSers) ;\r",
                    "    REPsStore.sync() ;\r",
                    "}\r",
                    "\r",
                    "\r",
                    "function fillRCMDSidebarPhotos(selectedUserRecord){\r",
                    "    var userData = selectedUserRecord.record.data ;\r",
                    "   console.error(\"GLOBAL FILL 3\");\r",
                    "    RMdatalink.util.globalMethods.fillListData('#RDCRMNotesPhotosView',userData.photos);\r",
                    "\r",
                    "}\r",
                    "\r",
                    "function fillRCMDSidebarAttachments(selectedUserRecord){\r",
                    "    var userData = selectedUserRecord.record.data ;\r",
                    "    console.error(\"GLOBAL FILL 4\");\r",
                    "    RMdatalink.util.globalMethods.fillListData('#RDCRMNotesAttRetailerList',userData.attachments);\r",
                    "    console.error(\"GLOBAL FILL 5\");\r",
                    "    RMdatalink.util.globalMethods.fillListData('#RDCRMNotesAttList',userData.attachments);\r",
                    "    //\r",
                    "}\r",
                    "\r",
                    "\r",
                    "function fillVendorsStore(selectedUserRecord){\r",
                    "\r",
                    "    /*\r",
                    "    var userData = selectedUserRecord.record.data ;\r",
                    "    var inStoreOrVendor , onlineStoreOrVendor ;\r",
                    "    if(isRetailerDetailsView)\r",
                    "    {\r",
                    "        inStoreOrVendor = userData.store_in_store_vendors;\r",
                    "        onlineStoreOrVendor = userData.store_online_vendors;\r",
                    "    }\r",
                    "    else\r",
                    "    {\r",
                    "        inStoreOrVendor = userData.vendor_in_store_retailers;\r",
                    "        onlineStoreOrVendor = userData.vendor_online_retailers;\r",
                    "    }\r",
                    "\r",
                    "    var vendorTabPanel = Ext.ComponentQuery.query('#RDStoreSideTabPanel')[0];\r",
                    "    vendorTabPanel.setActiveItem(0);\r",
                    "\r",
                    "    //FOR IN\r",
                    "    var vendorList = vendorTabPanel.down(\"#RDInStoreVendorsTab\").down('#mainList');\r",
                    "    vendorList.setDisableSelection(false);\r",
                    "    var vendorStore = vendorList.getStore();\r",
                    "    vendorStore.removeAll() ;\r",
                    "    vendorStore.sync();\r",
                    "    vendorStore.setData(inStoreOrVendor) ;\r",
                    "    vendorStore.sync();\r",
                    "\r",
                    "    vendorList.deselectAll();\r",
                    "    for(var i=0;i<vendorList.getViewItems().length;i++) {\r",
                    "        if(vendorStore.getAt(i).data.status) {\r",
                    "            vendorList.select(i,true,true);\r",
                    "        }\r",
                    "    }\r",
                    "\r",
                    "\r",
                    "    //FOR ONLINE\r",
                    "\r",
                    "    var vendorOnlineList = vendorTabPanel.down(\"#RDOnlineVendorsTab\").down('#mainList');\r",
                    "    vendorOnlineList.setDisableSelection(false);\r",
                    "    var vendorOnlineStore = vendorOnlineList.getStore();\r",
                    "    vendorOnlineStore.removeAll() ;\r",
                    "    vendorOnlineStore.sync();\r",
                    "    vendorOnlineStore.setData(onlineStoreOrVendor) ;\r",
                    "    vendorOnlineStore.sync();\r",
                    "\r",
                    "    vendorOnlineList.deselectAll();\r",
                    "    for(var j=0;i<vendorOnlineList.getViewItems().length;i++) {\r",
                    "        if(vendorOnlineStore.getAt(j).data.status) {\r",
                    "            vendorOnlineList.select(j,true,true);\r",
                    "        }\r",
                    "    }\r",
                    "\r",
                    "    */\r",
                    "}\r",
                    "\r",
                    "\r",
                    "\r",
                    "function selectStoreStaus(selectedUserRecord){\r",
                    "    var userData = selectedUserRecord.record.data ;\r",
                    "    var statusList =  Ext.ComponentQuery.query('#RDStoreStatusList')[0] ;\r",
                    "    statusList.setDisableSelection(false) ;\r",
                    "    switch(userData.store_status){\r",
                    "        case \"ACTIVE\":\r",
                    "            statusList.select(0,false,true);\r",
                    "            break;\r",
                    "\r",
                    "        case \"INACTIVE\":\r",
                    "            statusList.select(1,false,true);\r",
                    "            break;\r",
                    "\r",
                    "        case \"PROSPECTS\":\r",
                    "            statusList.select(2,false,true);\r",
                    "            break;\r",
                    "\r",
                    "        case \"PENDING\":\r",
                    "            statusList.select(3,false,true);\r",
                    "            break;\r",
                    "         case \"HOT_PROSPECTS\":\r",
                    "            statusList.select(4,false,true);\r",
                    "            break;\r",
                    "\r",
                    "        default:\r",
                    "            // Ext.ComponentQuery.query('#RDStoreStatusList')[0].select(0,false,true);\r",
                    "            break;\r",
                    "    }\r",
                    "    //statusList.setDisableSelection(true) ;\r",
                    "}\r",
                    "\r",
                    "function fillStoreProductStatus(selectedUserRecord){\r",
                    "    var userData = selectedUserRecord.record.data ;\r",
                    "\r",
                    "    var data = [\r",
                    "        {\"ProductImage\":\"resources//images//RMNavigationPanel//Datalink.png\",\"ProductName\":\"Datalink\",\"ProductStatus\":userData.store_products_datalink ,\"product_expiry\" :\"\" },\r",
                    "        {\"ProductImage\":\"resources//images//RMNavigationPanel//ECatalog.png\",\"ProductName\":\"ECatalog\",\"ProductStatus\":userData.store_products_ecatalog ,\"product_expiry\" :\"\" },\r",
                    "        {\"ProductImage\":\"resources//images//RMNavigationPanel//SMART_cart.png\",\"ProductName\":\"E-Commerce\",\"ProductStatus\":userData.store_products_smart_cart ,\"product_expiry\" :\"\" },\r",
                    "        {\"ProductImage\":\"resources//images//RMNavigationPanel//RM_PLC.png\",\"ProductName\":\"RMPro\",\"ProductStatus\":userData.store_products_rm_plc ,\"product_expiry\" :\"\" },\r",
                    "        {\"ProductImage\":\"resources//images//RMNavigationPanel//iRugz.png\",\"ProductName\":\"iRugz\",\"ProductStatus\":userData.store_products_irugs ,\"product_expiry\" :\"\" },\r",
                    "        {\"ProductImage\":\"resources//images//RMNavigationPanel//vip.png\",\"ProductName\":\"VIP\",\"ProductStatus\":userData.store_products_vip ,\"product_expiry\" :\"\" }\r",
                    "\r",
                    "    ];\r",
                    "   console.error(\"GLOBAL FILL 6\");\r",
                    "    RMdatalink.util.globalMethods.fillListData('#RDStoreProductsList',data);\r",
                    " showProductMarker(userData);\r",
                    "}\r",
                    "\r",
                    "\r",
                    "function setStoreLogo(selectedUserRecord){\r",
                    "    var userData = selectedUserRecord.record.data ;\r",
                    "}\r",
                    "\r",
                    "function fillTipsData(selectedUserRecord) {\r",
                    "    var userData = selectedUserRecord.record.data;\r",
                    "\r",
                    "    var doDontsStore = Ext.getStore('notificationsTipsDoDonts');\r",
                    "    if(userData.dos_and_donts && userData.dos_and_donts.length > 1)\r",
                    "    {\r",
                    "        doDontsStore.removeAll();\r",
                    "        doDontsStore.sync();\r",
                    "        doDontsStore.setData(userData.dos_and_donts);\r",
                    "        doDontsStore.sync();\r",
                    "    }\r",
                    "\r",
                    "\r",
                    "    var followUpStore = Ext.getStore('notificationsTipsFollowsup');\r",
                    "    if(userData.follow_ups && userData.follow_ups.length )\r",
                    "    {\r",
                    "        followUpStore.removeAll();\r",
                    "        followUpStore.sync();\r",
                    "        followUpStore.setData(userData.follow_ups);\r",
                    "        followUpStore.sync();\r",
                    "    }\r",
                    "    userData = selectedUserRecord.record.data;\r",
                    "\r",
                    " /*   doDontsStore = Ext.getStore('notifications.managerTipsdodonts');\r",
                    "    doDontsStore.removeAll();\r",
                    "    doDontsStore.sync();\r",
                    "    doDontsStore.setData(userData.manager_dos_and_donts);\r",
                    "    doDontsStore.sync();\r",
                    "\r",
                    "    followUpStore = Ext.getStore('notifications.managerTipsfollowsup');\r",
                    "    followUpStore.removeAll();\r",
                    "    followUpStore.sync();\r",
                    "    followUpStore.setData(userData.manager_follow_ups);\r",
                    "    followUpStore.sync();\r",
                    "*/\r",
                    "\r",
                    "    if(userData.manager_dos_and_donts && userData.manager_dos_and_donts.length > 1)\r",
                    "    {console.error(\"GLOBAL FILL 7\");\r",
                    "        RMdatalink.util.globalMethods.fillListData('#ActRDManagerDosDontList',userData.manager_dos_and_donts);\r",
                    "    }\r",
                    "\r",
                    "    if(userData.manager_follow_ups && userData.manager_follow_ups.length > 1)\r",
                    "    {\r",
                    "        console.error(\"GLOBAL FILL 8\");\r",
                    "        RMdatalink.util.globalMethods.fillListData('#ActRDManagerFollowUpsLists',userData.manager_follow_ups);\r",
                    "    }\r",
                    "\r",
                    "\r",
                    "    Ext.ComponentQuery.query('#ActRDManagerBlueStickyTextArea')[0].setValue(userData.manager_blue_note);\r",
                    "    Ext.ComponentQuery.query('#RDCRMNotesBlueStickyTextArea')[0].setValue(userData.blue_note);\r",
                    "}\r",
                    "\r",
                    "\r",
                    "/////////////////////////////RESET FIELDS\r",
                    "\r",
                    "function resetManagerData(){\r",
                    "\r",
                    "    Ext.ComponentQuery.query('#RDAccountDetails')[0].setValue(\"\");\r",
                    "      var importFrmCsvController = RMdatalink.app.getController('ImportCSV') ;\r",
                    "\r",
                    "       importFrmCsvController.config.retailerForVendor =  null ;\r",
                    "\r",
                    "    var mangerForm = Ext.ComponentQuery.query('#RDManagerFormPanel')[0];\r",
                    "    mangerForm.setDisabled(false) ;\r",
                    "    Ext.ComponentQuery.query('#RDManagerRelationDetailsForm')[0].setDisabled(false);\r",
                    "    Ext.ComponentQuery.query('#ActRDManagerRelationDetailsForm')[0].setDisabled(false);\r",
                    "\r",
                    "    var profilePicView = Ext.ComponentQuery.query('#RDManagerAddPhotoImage')[0];\r",
                    "    profilePicView.setSrc(\"resources//images//logos//default_User.jpg\").setHidden(true) ;\r",
                    "\r",
                    "    Ext.ComponentQuery.query('#ActRDMPositionId')[0].setValue('');\r",
                    "    Ext.ComponentQuery.query('#RDManagerAddPhoto')[0].setHidden(false);\r",
                    "    Ext.ComponentQuery.query('#RDManagerStoreName')[0].setValue('');\r",
                    "    Ext.ComponentQuery.query('#RDManagerFirstName')[0].setValue('');\r",
                    "    Ext.ComponentQuery.query('#RDManagerLastName')[0].setValue('');\r",
                    "    Ext.ComponentQuery.query('#RDManagerEmail')[0].setValue('');\r",
                    "    Ext.ComponentQuery.query('#RDManagerPhone')[0].setValue('');\r",
                    "    Ext.ComponentQuery.query('#RDManagerPhoneExt')[0].setValue('');\r",
                    "    Ext.ComponentQuery.query('#RDManagerLinkedIn')[0].setValue('');\r",
                    "    Ext.ComponentQuery.query('#RDManagerFacebook')[0].setValue('');\r",
                    "    Ext.ComponentQuery.query('#RDManagerTwitter')[0].setValue('');\r",
                    "    Ext.ComponentQuery.query('#RDManagerSuite')[0].setValue('');\r",
                    "    Ext.ComponentQuery.query('#RDManagerAddress')[0].setValue('');\r",
                    "    Ext.ComponentQuery.query('#ActMgrCity')[0].setValue('');\r",
                    "    Ext.ComponentQuery.query('#ActMgrState')[0].setValue('');\r",
                    "    Ext.ComponentQuery.query('#ActMgrZip')[0].setValue('');\r",
                    "    Ext.ComponentQuery.query('#RDManagerDirectPhone')[0].setValue('');\r",
                    "    Ext.ComponentQuery.query('#RDManagerDirectPhoneExt')[0].setValue('');\r",
                    "\r",
                    "    console.error(\"GLOBAL FILL 9\");\r",
                    "    RMdatalink.util.globalMethods.fillListData('#RDManagerActivityList',[]);\r",
                    "}\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "function unfillMAnagerRelationData(){\r",
                    "\r",
                    "    Ext.ComponentQuery.query('#ActRDMRDYrsAtStore')[0].setValue('');\r",
                    "    Ext.ComponentQuery.query('#ActRDMRDWife')[0].setValue('');\r",
                    "    Ext.ComponentQuery.query('#ActRDMRDRelatives ')[0].setValue('');\r",
                    "    Ext.ComponentQuery.query('#ActRDMRDHobbies')[0].setValue('');\r",
                    "    Ext.ComponentQuery.query('#ActRDMRDCarOfChoice')[0].setValue('');\r",
                    "    Ext.ComponentQuery.query('#ActRDMRDAltPhone ')[0].setValue('');\r",
                    "    Ext.ComponentQuery.query('#ActRDMRDAltEmail')[0].setValue('');\r",
                    "    Ext.ComponentQuery.query('#ActRDMRDWebsite')[0].setValue('');\r",
                    "    Ext.ComponentQuery.query('#ActRDMRDChild1Name')[0].setValue('');\r",
                    "    Ext.ComponentQuery.query('#ActRDMRDChild2Name')[0].setValue('');\r",
                    "    Ext.ComponentQuery.query('#ActRDMRDChild1Age')[0].setValue('');\r",
                    "    Ext.ComponentQuery.query('#ActRDMRDChild2Age')[0].setValue('');\r",
                    "    Ext.ComponentQuery.query('#ActRDMRDPartner1')[0].setValue('');\r",
                    "    Ext.ComponentQuery.query('#ActRDMRDPartner2')[0].setValue('');\r",
                    "\r",
                    "     Ext.ComponentQuery.query('#ActRDMRDDOBMonth')[0].setValue('');\r",
                    "     Ext.ComponentQuery.query('#ActRDMRDAniversaryMonth')[0].setValue('');\r",
                    "}\r",
                    "\r",
                    "\r",
                    "\r",
                    "function unfillStoreInformationForRDetailCard(){\r",
                    "\r",
                    "    if(!isRetailerDetailsView){\r",
                    "\r",
                    "        Ext.ComponentQuery.query('#vendorNameLbl')[0].setHtml('<div class=\"x-rm-rdstoreother-details\">Vendor name:</div>');\r",
                    "        Ext.ComponentQuery.query('#vendorCollectionsLbl')[0].setHtml('<div class=\"x-rm-rdstoreother-details\">Collections:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Design:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; SKUs:</div>');\r",
                    "        Ext.ComponentQuery.query('#vendorRugImageLbl')[0].setHtml('<div class=\"x-rm-rdstoreother-details\">Rug images:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Additional images:</div>');\r",
                    "        Ext.ComponentQuery.query('#vendorLastUpdateLbl')[0].setHtml('<div class=\"x-rm-rdstoreother-details\">Last updated on:');\r",
                    "        Ext.ComponentQuery.query('#vendorPriceLbl')[0].setHtml('<div class=\"x-rm-rdstoreother-details\">Price:</div>');\r",
                    "    }\r",
                    "    else\r",
                    "    {\r",
                    "        Ext.ComponentQuery.query('#storeNameOrderLabelItemID')[0].setHtml(\r",
                    "            '<div class=\"x-rm-rdstoreother-details\"><div></div>ACCOUNT NO</div>'\r",
                    "        );\r",
                    "        Ext.ComponentQuery.query('#cityNameLabelItemID')[0].setHtml(\r",
                    "            'User since '\r",
                    "        );\r",
                    "\r",
                    "        Ext.ComponentQuery.query('#billingDtlLbl')[0].setHtml('');\r",
                    "\r",
                    "        Ext.ComponentQuery.query('#lastLoginLabelItemID')[0].setHtml('Last login ');\r",
                    "        Ext.ComponentQuery.query('#lastExportLabelItemID')[0].setHtml('Last export ');\r",
                    "        Ext.ComponentQuery.query('#RDStoreTabReseller')[0].setHtml(\r",
                    "            '<div style=\"font-size:100% !important\" class=\"x-rm-rdstoreother-details\">'+\r",
                    "            'Reseller:</div>'\r",
                    "        );\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "//         Ext.ComponentQuery.query('#rtDatalinkStatusSelFld')[0].setValue(null);\r",
                    "//        Ext.ComponentQuery.query('#rtEcatalogStatusSelFld')[0].setValue(null);\r",
                    "//         Ext.ComponentQuery.query('#rtECommerceStatusSelFld')[0].setValue(null);\r",
                    "//        Ext.ComponentQuery.query('#rtRM_proStatusSelFld')[0].setValue(null);\r",
                    "//         Ext.ComponentQuery.query('#rtirugzStatusSelFld')[0].setValue(null);\r",
                    "\r",
                    "\r",
                    "\r",
                    "    }\r",
                    "\r",
                    "\r",
                    "\r",
                    "    Ext.ComponentQuery.query('#RDUsersStoreLogoImage')[0].setSrc(\"resources//images//logos//default_User.jpg\");\r",
                    "    Ext.ComponentQuery.query('#RDStoreTabFormPanel')[0].setDisabled(false);\r",
                    "        Ext.ComponentQuery.query('#retailerEcommerceForm')[0].setDisabled(false);\r",
                    "    var store_perfList =  Ext.ComponentQuery.query('#RDStoreTabPerformance')[0] ;\r",
                    "    store_perfList.setDisableSelection(false) ;\r",
                    "    store_perfList.select(1,false,true);\r",
                    "\r",
                    "    //ADD ITEMID OF FIELDS  HERE WHICH WE WNAT TO CLEAR\r",
                    "    //CLEAR MANUALLY IF NOT POSSIBLE BY ITERATION.\r",
                    "    var itemIdsAndKeyName = [\r",
                    "        {itemId:'RDStoreName'},\r",
                    "        {itemId:'RDStoreOwner'},\r",
                    "        {itemId:'RDStoreAddress'},\r",
                    "        {itemId:'RDStoreFax'},\r",
                    "        {itemId:'RDStoreSuite'},\r",
                    "        {itemId:'RDStoreCity'},\r",
                    "        {itemId:'RDStoreState'},\r",
                    "        {itemId:'RDStoreZip'},\r",
                    "        {itemId:'RDStoreEmail'},\r",
                    "        {itemId:'RDStorePhone'},\r",
                    "        {itemId:'RDStorePhoneExt'},\r",
                    "        {itemId:'RDStoreWebsite'},\r",
                    "        {itemId:'RDStoreType'},\r",
                    "        {itemId:'RDStoreSize'},\r",
                    "        {itemId:'RDStoreLocations'},\r",
                    "        {itemId:'RDStoreEmployees'},\r",
                    "        {itemId:'RDStoreYrsInBusiness'},\r",
                    "        {itemId:'RDStoreInventoryTool'},\r",
                    "        {itemId:'RDStoreAccountingTool'},\r",
                    "        {itemId:'RDStoreAltBusiness'},\r",
                    "        {itemId:'RDStorePercProg'},\r",
                    "        {itemId:'RDStorePercKind'},\r",
                    "        {itemId:'RDStoreChallenges'},\r",
                    "        {itemId:'RDStoreAdvertising'},\r",
                    "        {itemId:'RDStoreMoBudget'},\r",
                    "        {itemId:'RDStoreMoBudget'}\r",
                    "    ];\r",
                    "    var refinedArray = itemIdsAndKeyName;\r",
                    "    for(var i=0;i<refinedArray.length;i++){\r",
                    "\r",
                    "        var valueToAdd = '';\r",
                    "        var componentQery = '#' + refinedArray[i].itemId;\r",
                    "        //  RMdatalink.util.globalMethods.setValueWithSelectionQuery(componentQery,valueToAdd);\r",
                    "\r",
                    "    }\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "}\r",
                    "\r",
                    "function unfillCRMSData(){\r",
                    "\r",
                    "    try{\r",
                    "Ext.ComponentQuery.query('#RDNotepadNoteProblem')[0].setDisabled(true);\r",
                    "\r",
                    "Ext.ComponentQuery.query('#RDNotepadNoteSolution')[0].setDisabled(true);\r",
                    "\r",
                    "Ext.ComponentQuery.query('#RDNotepadNoteProblem')[0].setValue('');\r",
                    "\r",
                    "Ext.ComponentQuery.query('#RDNotepadNoteSolution')[0].setValue('');\r",
                    "    }catch(ex){\r",
                    "        console.error(ex);\r",
                    "    }\r",
                    "\r",
                    "    var RDCRMStore = Ext.getStore('RDCRM');\r",
                    "    RDCRMStore.removeAll() ;\r",
                    "    RDCRMStore.sync() ;\r",
                    "}\r",
                    "\r",
                    "\r",
                    "function unfillNotesStore(){\r",
                    "\r",
                    "    var RDCRMStore = Ext.getStore('retailersDetailsNotes');\r",
                    "    RDCRMStore.removeAll() ;\r",
                    "    RDCRMStore.sync() ;\r",
                    "}\r",
                    "\r",
                    "function unfillRCMDSidebarPhotos(){\r",
                    "console.error(\"GLOBAL FILL 10\");\r",
                    "    RMdatalink.util.globalMethods.fillListData('#RDCRMNotesPhotosView',[]);\r",
                    "\r",
                    "}\r",
                    "\r",
                    "function unfillRCMDSidebarAttachments(){\r",
                    "    console.error(\"GLOBAL FILL 11\");\r",
                    "\r",
                    "    RMdatalink.util.globalMethods.fillListData('#RDCRMNotesAttRetailerList',[]);\r",
                    "    console.error(\"GLOBAL FILL 12\");\r",
                    "    RMdatalink.util.globalMethods.fillListData('#RDCRMNotesAttList',[]);\r",
                    "\r",
                    "}\r",
                    "\r",
                    "\r",
                    "function unfillVendorsStore(){\r",
                    "\r",
                    "/*    //FOR IN STORE\r",
                    "    var vendorStore = Ext.getStore('retailersStoreVendors');\r",
                    "    vendorStore.removeAll() ;\r",
                    "    vendorStore.sync() ;\r",
                    "\r",
                    "    //FOR ONLINE STORE\r",
                    "    var vendorOnlineStore = Ext.getStore('retailersOnlineStoreVendors');\r",
                    "    vendorOnlineStore.removeAll() ;\r",
                    "    vendorOnlineStore.sync() ;\r",
                    "\r",
                    "    var selectedUserRecord = RMdatalink.util.globalConfig.getDataToShowInSettingWindow() ;\r",
                    "    if(!selectedUserRecord.record) {\r",
                    "        var vendorTabPanel = Ext.ComponentQuery.query('#RDStoreSideTabPanel')[0];\r",
                    "        vendorTabPanel.setActiveItem(0);\r",
                    "\r",
                    "        var vendorList = vendorTabPanel.down(\"#RDInStoreVendorsTab\").down('#mainList');\r",
                    "        vendorList.setDisableSelection(false);\r",
                    "        vendorStore.removeAll() ;\r",
                    "        vendorStore.sync();\r",
                    "\r",
                    "        var vendorvendorOnlineStoreList = vendorTabPanel.down(\"#RDOnlineVendorsTab\").down('#mainList');\r",
                    "        vendorvendorOnlineStoreList.setDisableSelection(false);\r",
                    "        vendorOnlineStore.removeAll() ;\r",
                    "        vendorOnlineStore.sync();\r",
                    "\r",
                    "        var retailerData = [\r",
                    "            {\"name\": \"Vendor One\", \"design\": \"37\", \"sku\": \"5000\", \"status\": false},\r",
                    "            {\"name\": \"Vendor Two\", \"design\": \"78\", \"sku\": \"2000\", \"status\": false},\r",
                    "            {\"name\": \"Vendor Three\", \"design\": \"37\", \"sku\": \"6000\", \"status\": false},\r",
                    "            {\"name\": \"Vendor Four\", \"design\": \"78\", \"sku\": \"2500\", \"status\": false},\r",
                    "            {\"name\": \"Vendor Five\", \"design\": \"34\", \"sku\": \"1300\", \"status\": false},\r",
                    "            {\"name\": \"Vendor Six\", \"design\": \"56\", \"sku\": \"4567\", \"status\": false},\r",
                    "            {\"name\": \"Vendor Seven\", \"design\": \"8\", \"sku\": \"8900\", \"status\": false},\r",
                    "            {\"name\": \"Vendor Eight\", \"design\": \"3\", \"sku\": \"9322\", \"status\": false},\r",
                    "            {\"name\": \"Vendor Nine\", \"design\": \"34\", \"sku\": \"1000\", \"status\": false},\r",
                    "            {\"name\": \"Vendor Ten\", \"design\": \"37\", \"sku\": \"2000\", \"status\": false},\r",
                    "            {\"name\": \"Vendor Eleven\", \"design\": \"78\", \"sku\": \"6000\", \"status\": false},\r",
                    "            {\"name\": \"Vendor Twelve\", \"design\": \"34\", \"sku\": \"2500\", \"status\": false},\r",
                    "            {\"name\": \"Vendor Thirteen\", \"design\": \"37\", \"sku\": \"1300\", \"status\": false},\r",
                    "            {\"name\": \"Vendor Fourteen\", \"design\": \"78\", \"sku\": \"4567\", \"status\": false},\r",
                    "            {\"name\": \"Vendor Fifteen\", \"design\": \"34\", \"sku\": \"8900\", \"status\": false},\r",
                    "            {\"name\": \"Vendor Sixteen\", \"design\": \"56\", \"sku\": \"9322\", \"status\": false}\r",
                    "        ];\r",
                    "        var vaendorData = [\r",
                    "            {\"name\": \"Retail One\",\"status\": false,\"city\" : \"New Jersey\"},\r",
                    "            {\"name\": \"Retail Two\",  \"status\": false , \"city\" : \"New Jersey\"},\r",
                    "            {\"name\": \"Retail Three\",  \"status\": false , \"city\" : \"Boston\"},\r",
                    "            {\"name\": \"Retail One\",\"status\": false,\"city\" : \"New Jersey\"},\r",
                    "            {\"name\": \"Retail Two\",  \"status\": false , \"city\" : \"New Jersey\"},\r",
                    "            {\"name\": \"Retail Three\",  \"status\": false , \"city\" : \"Boston\"},\r",
                    "            {\"name\": \"Retail One\",\"status\": false,\"city\" : \"New Jersey\"},\r",
                    "            {\"name\": \"Retail Two\",  \"status\": false , \"city\" : \"New Jersey\"},\r",
                    "            {\"name\": \"Retail Three\",  \"status\": false , \"city\" : \"Boston\"},\r",
                    "            {\"name\": \"Retail One\",\"status\": false,\"city\" : \"New Jersey\"},\r",
                    "            {\"name\": \"Retail Two\",  \"status\": false , \"city\" : \"New Jersey\"},\r",
                    "            {\"name\": \"Retail Three\",  \"status\": false , \"city\" : \"Boston\"},\r",
                    "            {\"name\": \"Retail One\",\"status\": false,\"city\" : \"New Jersey\"},\r",
                    "            {\"name\": \"Retail Two\",  \"status\": false , \"city\" : \"New Jersey\"},\r",
                    "            {\"name\": \"Retail Three\",  \"status\": false , \"city\" : \"Boston\"},\r",
                    "            {\"name\": \"Retail One\",\"status\": false,\"city\" : \"New Jersey\"}\r",
                    "\r",
                    "        ];\r",
                    "\r",
                    "        if(isRetailerDetailsView)\r",
                    "        {\r",
                    "            vendorStore.setData(retailerData);\r",
                    "            vendorvendorOnlineStoreList.setData(retailerData);\r",
                    "        }\r",
                    "        else\r",
                    "        {\r",
                    "           vendorStore.setData(vaendorData);\r",
                    "           vendorvendorOnlineStoreList.setData(vaendorData);\r",
                    "        }\r",
                    "\r",
                    "        vendorStore.sync();\r",
                    "        vendorOnlineStore.sync();\r",
                    "    }\r",
                    "    */\r",
                    "}\r",
                    "\r",
                    "\r",
                    "function unselectStoreStaus(){\r",
                    "    var statusList =  Ext.ComponentQuery.query('#RDStoreStatusList')[0] ;\r",
                    "\r",
                    "    if(isRetailerDetailsView){\r",
                    "            var rtActiveTabId =  Ext.ComponentQuery.query('#retailersTabPanel')[0].getActiveItem().getItemId();\r",
                    "\r",
                    "        switch(rtActiveTabId){\r",
                    "\r",
                    "            case \"allRetailerTab\":\r",
                    "                statusList.select(3,false,true);\r",
                    "                break;\r",
                    "                case \"usersTab\":\r",
                    "                statusList.select(0,false,true);\r",
                    "                break;\r",
                    "                case \"prospectsTab\":\r",
                    "                statusList.select(2,false,true);\r",
                    "                break;\r",
                    "                case \"inactiveTab\":\r",
                    "                statusList.select(1,false,true);\r",
                    "                break;\r",
                    "                case \"pendingTab\":\r",
                    "                statusList.select(3,false,true);\r",
                    "                break;\r",
                    "\r",
                    "        }\r",
                    "    }\r",
                    "    else{\r",
                    "        statusList.select(3,false,true);\r",
                    "    }\r",
                    "\r",
                    "}\r",
                    "\r",
                    "function unfillStoreProductStatus(){\r",
                    "    var data = [\r",
                    "        {\"ProductImage\":\"resources//images//RMNavigationPanel//Datalink.png\",\"ProductName\":\"Datalink\",\"ProductStatus\":false },\r",
                    "        {\"ProductImage\":\"resources//images//RMNavigationPanel//ECatalog.png\",\"ProductName\":\"ECatalog\",\"ProductStatus\":false},\r",
                    "        {\"ProductImage\":\"resources//images//RMNavigationPanel//SMART_cart.png\",\"ProductName\":\"E-Commerce\",\"ProductStatus\":false},\r",
                    "        {\"ProductImage\":\"resources//images//RMNavigationPanel//RM_PLC.png\",\"ProductName\":\"RM PRO\",\"ProductStatus\":false},\r",
                    "        {\"ProductImage\":\"resources//images//RMNavigationPanel//iRugz.png\",\"ProductName\":\"iRugz\",\"ProductStatus\":false},\r",
                    "        {\"ProductImage\":\"resources//images//RMNavigationPanel//vip.png\",\"ProductName\":\"VIP\",\"ProductStatus\":false  }\r",
                    "\r",
                    "    ];\r",
                    "   console.error(\"GLOBAL FILL 13\");\r",
                    "    RMdatalink.util.globalMethods.fillListData('#RDStoreProductsList',data);\r",
                    "}\r",
                    "\r",
                    "function unfillTipsData() {\r",
                    "\r",
                    "    //***********  FOR VENDOR  ********\r",
                    "\r",
                    "    var doDontsStore = Ext.getStore('notificationsTipsDoDonts');\r",
                    "    doDontsStore.removeAll();\r",
                    "    doDontsStore.sync();\r",
                    "    doDontsStore.setData([\r",
                    "        {\"notification\":\"\"},\r",
                    "        {\"notification\":\"\"},\r",
                    "        {\"notification\":\"\"},\r",
                    "        {\"notification\":\"\"}\r",
                    "    ]);\r",
                    "    doDontsStore.sync();\r",
                    "\r",
                    "    var followUpStore = Ext.getStore('notificationsTipsFollowsup');\r",
                    "    followUpStore.removeAll();\r",
                    "    followUpStore.sync();\r",
                    "    followUpStore.setData([\r",
                    "        {\"notification\":\"\"},\r",
                    "        {\"notification\":\"\"},\r",
                    "        {\"notification\":\"\"},\r",
                    "        {\"notification\":\"\"}\r",
                    "    ]);\r",
                    "    followUpStore.sync();\r",
                    "\r",
                    "     //***********  FOR  MANAGER  ********\r",
                    "\r",
                    "    doDontsStore = Ext.getStore('notifications.managerTipsdodonts');\r",
                    "    doDontsStore.removeAll();\r",
                    "    doDontsStore.sync();\r",
                    "    doDontsStore.setData([\r",
                    "        {\"notification\":\"\"},\r",
                    "        {\"notification\":\"\"},\r",
                    "        {\"notification\":\"\"},\r",
                    "        {\"notification\":\"\"}\r",
                    "    ]);\r",
                    "    doDontsStore.sync();\r",
                    "\r",
                    "    followUpStore = Ext.getStore('notifications.managerTipsfollowsup');\r",
                    "    followUpStore.removeAll();\r",
                    "    followUpStore.sync();\r",
                    "    followUpStore.setData([\r",
                    "        {\"notification\":\"\"},\r",
                    "        {\"notification\":\"\"},\r",
                    "        {\"notification\":\"\"},\r",
                    "        {\"notification\":\"\"}\r",
                    "    ]);\r",
                    "    followUpStore.sync();\r",
                    "\r",
                    "\r",
                    "   //***********  FOR  REPS  ********\r",
                    "    doDontsStore = Ext.getStore('notifications.repsTipsdodonts');\r",
                    "    doDontsStore.removeAll();\r",
                    "    doDontsStore.sync();\r",
                    "    doDontsStore.setData([\r",
                    "        {\"notification\":\"\"},\r",
                    "        {\"notification\":\"\"},\r",
                    "        {\"notification\":\"\"},\r",
                    "        {\"notification\":\"\"}\r",
                    "    ]);\r",
                    "    doDontsStore.sync();\r",
                    "\r",
                    "    followUpStore = Ext.getStore('notifications.repsTipsfollowsup');\r",
                    "    followUpStore.removeAll();\r",
                    "    followUpStore.sync();\r",
                    "    followUpStore.setData([\r",
                    "        {\"notification\":\"\"},\r",
                    "        {\"notification\":\"\"},\r",
                    "        {\"notification\":\"\"},\r",
                    "        {\"notification\":\"\"}\r",
                    "    ]);\r",
                    "    followUpStore.sync();\r",
                    "\r",
                    "\r",
                    "    Ext.ComponentQuery.query('#RDManagerBlueStickyTextArea')[0].setValue(\"\");\r",
                    "    Ext.ComponentQuery.query('#RDCRMNotesBlueStickyTextArea')[0].setValue(\"\");\r",
                    "    Ext.ComponentQuery.query('#RDUserProfileBlueStickyTextArea')[0].setValue(\"\");\r",
                    "\r",
                    "\r",
                    "    var mgrRdata = [\r",
                    "        {\"notification\":\"\"},\r",
                    "        {\"notification\":\"\"},\r",
                    "        {\"notification\":\"\"},\r",
                    "        {\"notification\":\"\"}\r",
                    "    ];\r",
                    "     console.error(\"GLOBAL FILL 14\");\r",
                    "    RMdatalink.util.globalMethods.fillListData('#ActRDManagerDosDontList',mgrRdata);\r",
                    "    console.error(\"GLOBAL FILL 15\");\r",
                    "    RMdatalink.util.globalMethods.fillListData('#ActRDManagerFollowUpsLists',mgrRdata);\r",
                    "\r",
                    "\r",
                    "}\r",
                    "\r",
                    "\r",
                    "\r",
                    "function unfillREPsBlueBookUsers(){\r",
                    "\r",
                    "    var REPsStore = Ext.getStore('vendor.REPsDetails');\r",
                    "    REPsStore.removeAll() ;\r",
                    "    REPsStore.sync() ;\r",
                    "}\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "function fillCompanyContactInfo(selectedUserRecord){\r",
                    "\r",
                    "     var userData = selectedUserRecord.record.data ;\r",
                    "     var cmpContactsStore = Ext.getStore('vendor.CompanyContactStore');\r",
                    "     cmpContactsStore.removeAll();\r",
                    "     cmpContactsStore.sync();\r",
                    "\r",
                    "     cmpContactsStore.setData(userData.company_contacts);\r",
                    "     cmpContactsStore.sync();\r",
                    "\r",
                    "     selectAccMgr(cmpContactsStore);\r",
                    "\r",
                    "}\r",
                    "\r",
                    "function selectAccMgr(cmpContactsStore){\r",
                    "    var cmpList = Ext.ComponentQuery.query('#CmpContactMainListPanel')[0].down('#mainList');\r",
                    "\r",
                    "     var cmpRec ;\r",
                    "    for(var i =0 ; i < cmpContactsStore.getData().all.length ; i ++ ){\r",
                    "\r",
                    "\r",
                    "         cmpRec = cmpContactsStore.getAt(i);\r",
                    "        var isAccMgr = cmpRec.get('is_account_mgr');\r",
                    "        if(isAccMgr){\r",
                    "\r",
                    "            cmpList.select( cmpRec , false, true );\r",
                    "            return ;\r",
                    "        }\r",
                    "    }\r",
                    "\r",
                    "\r",
                    "\r",
                    "       cmpRec = cmpContactsStore.getAt(0);\r",
                    "       if(cmpRec){\r",
                    "           cmpList.select( cmpRec , false, true );\r",
                    "\r",
                    "       }\r",
                    "\r",
                    "\r",
                    "}\r",
                    "\r",
                    "\r",
                    "function unfillCompanyContactInfo(){\r",
                    "\r",
                    "     var cmpContactsStore = Ext.getStore('vendor.CompanyContactStore');\r",
                    "     cmpContactsStore.removeAll();\r",
                    "     cmpContactsStore.sync();\r",
                    "\r",
                    "}\r",
                    "\r",
                    "\r",
                    "function setDate(month,day,year, mm,dd,yy) {\r",
                    "\r",
                    "\r",
                    "            Ext.ComponentQuery.query('#'+month)[0].setValue(mm) ;\r",
                    "            Ext.ComponentQuery.query('#'+day)[0].setValue(dd);\r",
                    "            Ext.ComponentQuery.query('#'+year)[0].setValue(yy) ;\r",
                    "\r",
                    "\r",
                    "}\r",
                    "\r",
                    "this.config.changedManually = true ;\r",
                    "that.disableEnableComponents(true) ;\r",
                    ""
                ]
            },
            "designerId": "511e519a-49cf-493f-a703-b01eb0a25bbe"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "setInhouseData",
                "implHandler": [
                    "var inHouseUsersTab = Ext.ComponentQuery.query('#inHouseUsersTab')[0];\r",
                    "var usersList = inHouseUsersTab.down('#inhouseList');\r",
                    "\r",
                    "var inHouseStore = Ext.getStore('inhouseMasterStore');\r",
                    "\r",
                    "\r",
                    "var usersData = getUsers(inHouseStore);//inHouseStore.getData().all[0].data.users;\r",
                    "\r",
                    "RMdatalink.util.globalMethods.fillListDataByListObject(usersList,usersData);\r",
                    "\r",
                    "\r",
                    "var inHouseRepsTab = Ext.ComponentQuery.query('#inHouseRepsTab')[0];\r",
                    "var repsList = inHouseRepsTab.down('#inhouseList');\r",
                    "\r",
                    "var repsData = getReps(inHouseStore); //inHouseStore.getData().all[0].data.reps;\r",
                    "console.log(repsData);\r",
                    "RMdatalink.util.globalMethods.fillListDataByListObject(repsList,repsData);\r",
                    "\r",
                    "\r",
                    "\r",
                    "function getReps(inHouseStore){\r",
                    "    var inhouseData = inHouseStore.getData().all ;\r",
                    "    var reps = new Array() ;\r",
                    "    for(var i =0 ; i<inhouseData.length; i++){\r",
                    "\r",
                    "        if(inhouseData[i].data.type == \"reps\"){\r",
                    "            reps.push(inhouseData[i].data) ;\r",
                    "        }\r",
                    "    }\r",
                    "\r",
                    "    return reps;\r",
                    "}\r",
                    "\r",
                    "\r",
                    "function getUsers(inHouseStore){\r",
                    "    var inhouseData = inHouseStore.getData().all ;\r",
                    "    var users = [] ;\r",
                    "    for(var i =0 ; i<inhouseData.length; i++){\r",
                    "\r",
                    "        if(inhouseData[i].data.type == \"users\"){\r",
                    "            users.push(inhouseData[i].data) ;\r",
                    "        }\r",
                    "    }\r",
                    "\r",
                    "    return users;\r",
                    "}"
                ]
            },
            "designerId": "1876c043-52a1-4743-a918-f917d3a4e020"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "setDataForDiscountsTab",
                "implHandler": [
                    "var discountsDataLinkTab  = Ext.ComponentQuery.query('#discountsDataLinkTab')[0];\r",
                    "var discountsEcatlogTab  = Ext.ComponentQuery.query('#discountsEcatlogTab')[0];\r",
                    "var discountsSmartCartTab   = Ext.ComponentQuery.query('#discountsSmartCartTab')[0];\r",
                    "var discountsRMPLCTab   = Ext.ComponentQuery.query('#discountsRMPLCTab')[0];\r",
                    "var discountsIrugzTab   = Ext.ComponentQuery.query('#discountsIrugzTab')[0];\r",
                    "var discountsSidePreviousTab   = Ext.ComponentQuery.query('#discountsSidePreviousTab')[0];\r",
                    "\r",
                    "\r",
                    "var dataLinkList = discountsDataLinkTab.down('#discountList');\r",
                    "var eCatlogList = discountsEcatlogTab.down('#discountList');\r",
                    "var smartCartList = discountsSmartCartTab.down('#discountList');\r",
                    "var rmplcList = discountsRMPLCTab.down('#discountList');\r",
                    "var irugzList = discountsIrugzTab.down('#discountList');\r",
                    "var previousDiscountsList = discountsSidePreviousTab.down('#discountList');\r",
                    "\r",
                    "try{\r",
                    "var discountsMasterStore = Ext.getStore('discountsMasterStore');\r",
                    "var discountsData = discountsMasterStore.getData().all ? discountsMasterStore.getData().all[0].data : null;\r",
                    "\r",
                    "if(discountsData){\r",
                    "RMdatalink.util.globalMethods.fillListDataByListObject(dataLinkList,discountsData.datalink);\r",
                    "RMdatalink.util.globalMethods.fillListDataByListObject(eCatlogList,discountsData.ecatalog);\r",
                    "RMdatalink.util.globalMethods.fillListDataByListObject(smartCartList,discountsData.smartcart);\r",
                    "RMdatalink.util.globalMethods.fillListDataByListObject(rmplcList,discountsData.rmplc);\r",
                    "RMdatalink.util.globalMethods.fillListDataByListObject(irugzList,discountsData.irugz);\r",
                    "RMdatalink.util.globalMethods.fillListDataByListObject(previousDiscountsList,discountsData.previousDiscounts);\r",
                    "}\r",
                    "\r",
                    "\r",
                    "\r",
                    "}\r",
                    "catch(ex){}"
                ]
            },
            "designerId": "e80ba594-8e68-4912-8f8a-00eef2971b50"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "field",
                    "list"
                ],
                "fn": "saveCommentForDiscount",
                "implHandler": [
                    "var discountsMasterStore = Ext.getStore('discountsMasterStore');\r",
                    "\r",
                    "        var id = field.getAttribute('data-id') ;\r",
                    "        var comment = field.value ;\r",
                    "\r",
                    "switch(list){\r",
                    "\r",
                    "    case \"discountsDataLink\":\r",
                    "        var discountsDataLinkTab  = Ext.ComponentQuery.query('#discountsDataLinkTab')[0];\r",
                    "        var list = discountsDataLinkTab.down('#discountList');\r",
                    "        var store = list.getStore();\r",
                    "        var record = store.findRecord('id',id);\r",
                    "        record.set('comment',comment);\r",
                    "        store.sync();\r",
                    "        updateDiscountsDataLink(store);\r",
                    "\r",
                    "        break;\r",
                    "\r",
                    "     case \"discountsEcatlogTab\":\r",
                    "        var discountsDataLinkTab  = Ext.ComponentQuery.query('#discountsEcatlogTab')[0];\r",
                    "        var list = discountsDataLinkTab.down('#discountList');\r",
                    "        var store = list.getStore();\r",
                    "        var record = store.findRecord('id',id);\r",
                    "        record.set('comment',comment);\r",
                    "        store.sync();\r",
                    "\r",
                    "        updateDiscountsEcatalog(store);\r",
                    "\r",
                    "        break;\r",
                    "\r",
                    "     case \"discountsSmartCartTab\":\r",
                    "        var discountsDataLinkTab  = Ext.ComponentQuery.query('#discountsSmartCartTab')[0];\r",
                    "        var list = discountsDataLinkTab.down('#discountList');\r",
                    "        var store = list.getStore();\r",
                    "        var record = store.findRecord('id',id);\r",
                    "        record.set('comment',comment);\r",
                    "        store.sync();\r",
                    "\r",
                    "        updateDiscountsSmartcart(store);\r",
                    "\r",
                    "        break;\r",
                    "\r",
                    "     case \"discountsRMPLCTab\":\r",
                    "        var discountsDataLinkTab  = Ext.ComponentQuery.query('#discountsRMPLCTab')[0];\r",
                    "        var list = discountsDataLinkTab.down('#discountList');\r",
                    "        var store = list.getStore();\r",
                    "        var record = store.findRecord('id',id);\r",
                    "        record.set('comment',comment);\r",
                    "        store.sync();\r",
                    "\r",
                    "        updateDiscountsRmplc(store);\r",
                    "\r",
                    "        break;\r",
                    "\r",
                    "\r",
                    "     case \"discountsIrugzTab\":\r",
                    "        var discountsDataLinkTab  = Ext.ComponentQuery.query('#discountsIrugzTab')[0];\r",
                    "        var list = discountsDataLinkTab.down('#discountList');\r",
                    "        var store = list.getStore();\r",
                    "        var record = store.findRecord('id',id);\r",
                    "        record.set('comment',comment);\r",
                    "        store.sync();\r",
                    "\r",
                    "        updateDiscountsIrugz(store);\r",
                    "\r",
                    "        break;\r",
                    "\r",
                    "\r",
                    "     case \"discountsSidePreviousTab\":\r",
                    "        var discountsDataLinkTab  = Ext.ComponentQuery.query('#discountsSidePreviousTab')[0];\r",
                    "        var list = discountsDataLinkTab.down('#discountList');\r",
                    "        var store = list.getStore();\r",
                    "        var record = store.findRecord('id',id);\r",
                    "        record.set('comment',comment);\r",
                    "        store.sync();\r",
                    "\r",
                    "        updateDiscountsPreviousDiscounts(store);\r",
                    "\r",
                    "        break;\r",
                    "}\r",
                    "\r",
                    "\r",
                    "\r",
                    "function updateDiscountsDataLink(store){\r",
                    "            var discountRecord = discountsMasterStore.findRecord(\"datalink\",{});\r",
                    "            var records = [] ;\r",
                    "            for(var i=0; i < store.getData().all.length; i++){\r",
                    "                records.push(store.getData().all[i].data);\r",
                    "            }\r",
                    "            discountRecord.set(\"datalink\",records);\r",
                    "}\r",
                    "\r",
                    "function updateDiscountsEcatalog(store){\r",
                    "            var discountRecord = discountsMasterStore.findRecord(\"ecatalog\",{});\r",
                    "            var records = [] ;\r",
                    "            for(var i=0; i < store.getData().all.length; i++){\r",
                    "                records.push(store.getData().all[i].data);\r",
                    "            }\r",
                    "            discountRecord.set(\"ecatalog\",records);\r",
                    "}\r",
                    "\r",
                    "function updateDiscountsSmartcart(store){\r",
                    "            var discountRecord = discountsMasterStore.findRecord(\"smartcart\",{});\r",
                    "            var records = [] ;\r",
                    "            for(var i=0; i < store.getData().all.length; i++){\r",
                    "                records.push(store.getData().all[i].data);\r",
                    "            }\r",
                    "            discountRecord.set(\"smartcart\",records);\r",
                    "}\r",
                    "\r",
                    "function updateDiscountsRmplc(store){\r",
                    "            var discountRecord = discountsMasterStore.findRecord(\"rmplc\",{});\r",
                    "            var records = [] ;\r",
                    "            for(var i=0; i < store.getData().all.length; i++){\r",
                    "                records.push(store.getData().all[i].data);\r",
                    "            }\r",
                    "            discountRecord.set(\"rmplc\",records);\r",
                    "}\r",
                    "function updateDiscountsIrugz(store){\r",
                    "            var discountRecord = discountsMasterStore.findRecord(\"irugz\",{});\r",
                    "            var records = [] ;\r",
                    "            for(var i=0; i < store.getData().all.length; i++){\r",
                    "                records.push(store.getData().all[i].data);\r",
                    "            }\r",
                    "            discountRecord.set(\"irugz\",records);\r",
                    "}\r",
                    "\r",
                    "function updateDiscountsPreviousDiscounts(store){\r",
                    "            var discountRecord = discountsMasterStore.findRecord(\"previousDiscounts\",{});\r",
                    "            var records = [] ;\r",
                    "            for(var i=0; i < store.getData().all.length; i++){\r",
                    "                records.push(store.getData().all[i].data);\r",
                    "            }\r",
                    "            discountRecord.set(\"previousDiscounts\",records);\r",
                    "}"
                ]
            },
            "designerId": "db46aea1-ae9e-452e-989a-80479ab6dbcc"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "id",
                    "type"
                ],
                "fn": "deleteDiscount",
                "implHandler": [
                    "\r",
                    "if(Ext.getCmp(\"alertPopUp\"))\r",
                    "    Ext.getCmp(\"alertPopUp\").destroy();\r",
                    "\r",
                    "var popup = Ext.widget('alertPopUp');\r",
                    "popup.setItemId(\"alertForDiscountDelete\");\r",
                    "popup.down('#alertPopUpMsg').setHtml('Would you like to delete this record?');\r",
                    "popup.show();\r",
                    "\r",
                    "popup.discountId = id ;\r",
                    "popup.discountType = type ;\r",
                    "\r",
                    "/*\r",
                    "var discountsMasterStore = Ext.getStore('discountsMasterStore');\r",
                    "alert(id);\r",
                    "switch(type){\r",
                    "\r",
                    "    case \"discountsDataLink\":\r",
                    "        var discountsDataLinkTab  = Ext.ComponentQuery.query('#discountsDataLinkTab')[0];\r",
                    "        var list = discountsDataLinkTab.down('#discountList');\r",
                    "        var store = list.getStore();\r",
                    "        var record = store.findRecord('id',id);\r",
                    "        store.remove(record);\r",
                    "        store.sync();\r",
                    "        updateDiscountsDataLink(store);\r",
                    "\r",
                    "        break;\r",
                    "\r",
                    "     case \"discountsEcatlogTab\":\r",
                    "        var discountsDataLinkTab  = Ext.ComponentQuery.query('#discountsEcatlogTab')[0];\r",
                    "        var list = discountsDataLinkTab.down('#discountList');\r",
                    "        var store = list.getStore();\r",
                    "        var record = store.findRecord('id',id);\r",
                    "        store.remove(record);\r",
                    "        store.sync();\r",
                    "\r",
                    "        updateDiscountsEcatalog(store);\r",
                    "\r",
                    "        break;\r",
                    "\r",
                    "     case \"discountsSmartCartTab\":\r",
                    "        var discountsDataLinkTab  = Ext.ComponentQuery.query('#discountsSmartCartTab')[0];\r",
                    "        var list = discountsDataLinkTab.down('#discountList');\r",
                    "        var store = list.getStore();\r",
                    "        var record = store.findRecord('id',id);\r",
                    "        store.remove(record);\r",
                    "        store.sync();\r",
                    "\r",
                    "        updateDiscountsSmartcart(store);\r",
                    "\r",
                    "        break;\r",
                    "\r",
                    "     case \"discountsRMPLCTab\":\r",
                    "        var discountsDataLinkTab  = Ext.ComponentQuery.query('#discountsRMPLCTab')[0];\r",
                    "        var list = discountsDataLinkTab.down('#discountList');\r",
                    "        var store = list.getStore();\r",
                    "        var record = store.findRecord('id',id);\r",
                    "       store.remove(record);\r",
                    "        store.sync();\r",
                    "\r",
                    "        updateDiscountsRmplc(store);\r",
                    "\r",
                    "        break;\r",
                    "\r",
                    "\r",
                    "     case \"discountsIrugzTab\":\r",
                    "        var discountsDataLinkTab  = Ext.ComponentQuery.query('#discountsIrugzTab')[0];\r",
                    "        var list = discountsDataLinkTab.down('#discountList');\r",
                    "        var store = list.getStore();\r",
                    "        var record = store.findRecord('id',id);\r",
                    "        store.remove(record);\r",
                    "        store.sync();\r",
                    "\r",
                    "        updateDiscountsIrugz(store);\r",
                    "\r",
                    "        break;\r",
                    "\r",
                    "\r",
                    "     case \"discountsSidePreviousTab\":\r",
                    "        var discountsDataLinkTab  = Ext.ComponentQuery.query('#discountsSidePreviousTab')[0];\r",
                    "        var list = discountsDataLinkTab.down('#discountList');\r",
                    "        var store = list.getStore();\r",
                    "        var record = store.findRecord('id',id);\r",
                    "        store.remove(record);\r",
                    "        //record.set('comment',comment);\r",
                    "        store.sync();\r",
                    "\r",
                    "        updateDiscountsPreviousDiscounts(store);\r",
                    "\r",
                    "        break;\r",
                    "}\r",
                    "\r",
                    "\r",
                    "\r",
                    "function updateDiscountsDataLink(store){\r",
                    "            var discountRecord = discountsMasterStore.findRecord(\"datalink\",{});\r",
                    "            var records = [] ;\r",
                    "            for(var i=0; i < store.getData().all.length; i++){\r",
                    "                records.push(store.getData().all[i].data);\r",
                    "            }\r",
                    "            discountRecord.set(\"datalink\",records);\r",
                    "}\r",
                    "\r",
                    "function updateDiscountsEcatalog(store){\r",
                    "            var discountRecord = discountsMasterStore.findRecord(\"ecatalog\",{});\r",
                    "            var records = [] ;\r",
                    "            for(var i=0; i < store.getData().all.length; i++){\r",
                    "                records.push(store.getData().all[i].data);\r",
                    "            }\r",
                    "            discountRecord.set(\"ecatalog\",records);\r",
                    "}\r",
                    "\r",
                    "function updateDiscountsSmartcart(store){\r",
                    "            var discountRecord = discountsMasterStore.findRecord(\"smartcart\",{});\r",
                    "            var records = [] ;\r",
                    "            for(var i=0; i < store.getData().all.length; i++){\r",
                    "                records.push(store.getData().all[i].data);\r",
                    "            }\r",
                    "            discountRecord.set(\"smartcart\",records);\r",
                    "}\r",
                    "\r",
                    "function updateDiscountsRmplc(store){\r",
                    "            var discountRecord = discountsMasterStore.findRecord(\"rmplc\",{});\r",
                    "            var records = [] ;\r",
                    "            for(var i=0; i < store.getData().all.length; i++){\r",
                    "                records.push(store.getData().all[i].data);\r",
                    "            }\r",
                    "            discountRecord.set(\"rmplc\",records);\r",
                    "}\r",
                    "function updateDiscountsIrugz(store){\r",
                    "            var discountRecord = discountsMasterStore.findRecord(\"irugz\",{});\r",
                    "            var records = [] ;\r",
                    "            for(var i=0; i < store.getData().all.length; i++){\r",
                    "                records.push(store.getData().all[i].data);\r",
                    "            }\r",
                    "            discountRecord.set(\"irugz\",records);\r",
                    "}\r",
                    "\r",
                    "function updateDiscountsPreviousDiscounts(store){\r",
                    "            var discountRecord = discountsMasterStore.findRecord(\"previousDiscounts\",{});\r",
                    "            var records = [] ;\r",
                    "            for(var i=0; i < store.getData().all.length; i++){\r",
                    "                records.push(store.getData().all[i].data);\r",
                    "            }\r",
                    "            discountRecord.set(\"previousDiscounts\",records);\r",
                    "}\r",
                    "\r",
                    "\r",
                    "*/"
                ]
            },
            "designerId": "6ff9e55b-3c3e-4312-9713-fd391d1fa152"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "saveRetailersDetailedView",
                "implHandler": [
                    "var rtDtlTabPanel = Ext.ComponentQuery.query('#retailerDetailsMainTabPanel')[0] ;\r",
                    "\r",
                    "if(rtDtlTabPanel.getActiveItem().getItemId() == \"RDCRMTab\" ){\r",
                    "\r",
                    "    Ext.ComponentQuery.query('#RDTechSupportSaveBtn')[0].fireEvent('tap');\r",
                    "    return ;\r",
                    "}\r",
                    "\r",
                    "\r",
                    "\r",
                    "if(this.config.isCmpContactProfile){\r",
                    "\r",
                    "     if(!validateRepsProfile()){\r",
                    "\r",
                    "            Ext.Msg.alert('Error', 'Marked Fields Are Mandatory/Invalid', Ext.emptyFn);\r",
                    "            return ;\r",
                    "        }\r",
                    "        else if(!RMdatalink.app.getController('RetailerDeatilsDataSet').validationForComContactInputFields())\r",
                    "        {\r",
                    "            Ext.Msg.alert('Error', 'Invalid Inputs For Marked Fields.', Ext.emptyFn);\r",
                    "            return ;\r",
                    "        }\r",
                    "\r",
                    "\r",
                    "function validateRepsProfile(){\r",
                    "    var validationResult = true ;\r",
                    "\r",
                    "    RMdatalink.app.getController('RetailerDeatilsDataSet').removeErrorClsForContactCompany();\r",
                    "\r",
                    "    var rfName = Ext.ComponentQuery.query('#CmpContactProfileFirstName')[0];\r",
                    "    var rlName = Ext.ComponentQuery.query('#CmpContactProfileLastName')[0];\r",
                    "    var remail = Ext.ComponentQuery.query('#CmpContactProfileEmail')[0];\r",
                    "\r",
                    "    if( remail.length !== 0 && !Ext.data.Validations.email(remail, remail.getValue()))\r",
                    "    {\r",
                    "        remail.replaceCls( 'x-rm-rdformpanel' , 'x-rm-rdformErrorPanel');\r",
                    "        validationResult = false ;\r",
                    "\r",
                    "    }\r",
                    "\r",
                    "    if( rfName.getValue().length == 0 )\r",
                    "    {\r",
                    "        rfName.replaceCls( 'x-rm-rdformpanel' , 'x-rm-rdformErrorPanel');\r",
                    "        validationResult = false ;\r",
                    "\r",
                    "    }\r",
                    "\r",
                    "    if( rlName.getValue().length == 0 )\r",
                    "    {\r",
                    "        rlName.replaceCls( 'x-rm-rdformpanel' , 'x-rm-rdformErrorPanel');\r",
                    "        validationResult = false ;\r",
                    "    }\r",
                    "\r",
                    "\r",
                    "    return validationResult ;\r",
                    "}\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "    this.config.isCmpContactProfile = false ;\r",
                    "    var svBtn =  Ext.ComponentQuery.query('#CmpContactProfileEditBtn')[0] ;\r",
                    "    svBtn.fireEvent('tap',svBtn) ;\r",
                    "   // return ;\r",
                    "}\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "//TRANSFER THIS CODE TO A CONTROLLER\r",
                    "//REMOVE LINKING IN OREDER TO DETECT THE INSTANCE\r",
                    "//OR CREATE FILTER FOR DIFFERENTIATING INSTANCE WITHOUT THE USING ITEMID OR INDEX\r",
                    "//REASON FOR ITEMID :WILL BE SAME FOR ALL LINKED ELEMENT\r",
                    "//INDEX WILL BE HARDCODING\r",
                    "\r",
                    "// FILTERING IS NOT APPLIED HERE AT THIS MOMENT.\r",
                    "\r",
                    "\r",
                    "// ***  FIRST  CHECK MANDATORY FIELDS  *******\r",
                    "\r",
                    "\r",
                    "var that = this ;\r",
                    "\r",
                    "if(!this.validationForNewRecord())\r",
                    "{\r",
                    "    Ext.Msg.alert('Error', 'Marked Fields Are Mandatory.', Ext.emptyFn);\r",
                    "    return ;\r",
                    "}\r",
                    "\r",
                    "else if(!this.validationOfInputFields())\r",
                    "{\r",
                    "    console.log(\"validationOfInputFields  \");\r",
                    "    Ext.Msg.alert('Error', 'Invalid Inputs For Marked Fields.', Ext.emptyFn);\r",
                    "    return;\r",
                    "\r",
                    "}\r",
                    "// AFTER CHAECKED ALL VALIDATION\r",
                    "    else\r",
                    "    {\r",
                    "        if(that.config.accNoChk < 1 || that.config.accNoChk > 1 )\r",
                    "        {\r",
                    "            that.config.accNoChk = 1 ;\r",
                    "            that.checkForDuplicateAccountNo() ;\r",
                    "            return ;\r",
                    "        }\r",
                    "\r",
                    "         that.config.accNoChk = 0 ;\r",
                    "        //*******************\r",
                    "        var isRetailerDetailsView = RMdatalink.app.getController('UINav').isRetailerDetailsView;\r",
                    "        var masterStore =  isRetailerDetailsView ? Ext.getStore('retailersMaster'):Ext.getStore('vendors.Master');\r",
                    "\r",
                    "        var TEST =  this.setTempRecordForRetailerOrVendor();\r",
                    "        var selectedRow = RMdatalink.util.globalConfig.getDataInRetailerScreenForSaveOrCancel();\r",
                    "\r",
                    "        //RMdatalink.util.globalConfig.setDataInRetailerScreenForSaveOrCancel( {}  );\r",
                    "\r",
                    "        console.log(\"selectedRow\" ,selectedRow);\r",
                    "\r",
                    "        if(Object.keys(selectedRow).length){\r",
                    "\r",
                    "            var storeIndex = masterStore.findExact('id',selectedRow.record.data.id);\r",
                    "            var recordInMasterStore = selectedRow.record ; //masterStore.getAt(storeIndex);\r",
                    "\r",
                    "            if(TEST.store_products){\r",
                    "\r",
                    "                var temp_store_status = false ;\r",
                    "\r",
                    "                if(TEST.store_products.datalink_status && TEST.store_products.datalink_status == \"ACTIVE\")\r",
                    "                {\r",
                    "                   temp_store_status =true ;\r",
                    "\r",
                    "                   TEST.store_products_datalink = true  ;\r",
                    "                }\r",
                    "                if(TEST.store_products.ecatalog_status && TEST.store_products.ecatalog_status == \"ACTIVE\"){\r",
                    "\r",
                    "                     temp_store_status =true ;\r",
                    "                    TEST.store_products_ecatalog = true  ;\r",
                    "                }\r",
                    "                if(TEST.store_products.ecommerce_status && TEST.store_products.ecommerce_status == \"ACTIVE\"){\r",
                    "                    temp_store_status =true ;\r",
                    "                    TEST.store_products_smart_cart = true  ;\r",
                    "                }\r",
                    "\r",
                    "                if(TEST.store_products.irugs_status && TEST.store_products.irugs_status == \"ACTIVE\"){\r",
                    "                    temp_store_status =true ;\r",
                    "                    TEST.store_products_irugs = true  ;\r",
                    "                }\r",
                    "\r",
                    "                if(TEST.store_products.rmpro_status && TEST.store_products.rmpro_status == \"ACTIVE\"){\r",
                    "                    temp_store_status =true ;\r",
                    "                    TEST.store_products_rm_plc = true  ;\r",
                    "                }\r",
                    "\r",
                    "                if(temp_store_status)\r",
                    "                {\r",
                    "                    TEST.store_status = \"ACTIVE\" ;\r",
                    "                }\r",
                    "\r",
                    "\r",
                    "\r",
                    "            }\r",
                    "\r",
                    "            /*\r",
                    "\r",
                    "            store_products_datalink: true\r",
                    "            store_products_ecatalog: false\r",
                    "            store_products_irugs: true\r",
                    "            store_products_rm_plc: false\r",
                    "            store_products_smart_cart: false\r",
                    "            */\r",
                    "\r",
                    "\r",
                    "            //***** WHEN CHANGED ITS STORE STATUS  ****\r",
                    "         /*  if(isRetailerDetailsView && recordInMasterStore.data.store_status !== TEST.store_status)\r",
                    "            {\r",
                    "\r",
                    "                switch(recordInMasterStore.data.store_status) {\r",
                    "                    case 'ACTIVE':\r",
                    "\r",
                    "                        Ext.getStore('retailerUsers').remove(recordInMasterStore);\r",
                    "                        break;\r",
                    "\r",
                    "                    case 'INACTIVE':\r",
                    "\r",
                    "                        Ext.getStore('retailerInactive').remove(recordInMasterStore);\r",
                    "                        break;\r",
                    "\r",
                    "                    case 'PROSPECTS':\r",
                    "\r",
                    "                        Ext.getStore('retailerProspects').remove(recordInMasterStore);\r",
                    "                        break;\r",
                    "\r",
                    "                    case 'PENDING':\r",
                    "\r",
                    "                        Ext.getStore('retailerPending').remove(recordInMasterStore);\r",
                    "                        break;\r",
                    "\r",
                    "                }\r",
                    "\r",
                    "                switch(TEST.store_status) {\r",
                    "                    case 'ACTIVE':\r",
                    "\r",
                    "                        Ext.getStore('retailerUsers').add(recordInMasterStore);\r",
                    "                        break;\r",
                    "\r",
                    "                    case 'INACTIVE':\r",
                    "\r",
                    "                        Ext.getStore('retailerInactive').add(recordInMasterStore);\r",
                    "                        break;\r",
                    "\r",
                    "                    case 'PROSPECTS':\r",
                    "\r",
                    "                        Ext.getStore('retailerProspects').add(recordInMasterStore);\r",
                    "                        break;\r",
                    "\r",
                    "                     case 'HOT_PROSPECTS':\r",
                    "\r",
                    "                        Ext.getStore('hotProspectsTab').add(recordInMasterStore);\r",
                    "                        break;\r",
                    "\r",
                    "                    case 'PENDING':\r",
                    "\r",
                    "                        Ext.getStore('retailerPending').add(recordInMasterStore);\r",
                    "                        break;\r",
                    "\r",
                    "                }\r",
                    "\r",
                    "            }*/\r",
                    "            //************\r",
                    "            try{\r",
                    "            TEST.id = recordInMasterStore.get('id');\r",
                    "            }catch(ex){\r",
                    "                console.error(ex);\r",
                    "            }\r",
                    "            TEST._id = recordInMasterStore.get('_id');\r",
                    "\r",
                    "            if(isRetailerDetailsView)\r",
                    "            {\r",
                    "                TEST.store_monthly_subscription = recordInMasterStore.get('store_monthly_subscription');\r",
                    "                TEST.store_note = recordInMasterStore.get('store_note');\r",
                    "                TEST.store_inactive_reason = recordInMasterStore.get('store_inactive_reason');\r",
                    "                TEST.store_pending_approval = recordInMasterStore.get('store_pending_approval');\r",
                    "                TEST.store_created_in_past = recordInMasterStore.get('store_created_in_past');\r",
                    "                TEST.store_modified_in_past = recordInMasterStore.get('store_modified_in_past');\r",
                    "\r",
                    "\r",
                    "\r",
                    "            }\r",
                    "            else\r",
                    "            {\r",
                    "\r",
                    "                tempCollections = TEST.collections  ;\r",
                    "                tempDesign =   TEST.design  ;\r",
                    "                tempSKU = TEST.SKU  ;\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "                delete(TEST.collections) ;\r",
                    "                delete(TEST.design)  ;\r",
                    "                delete(TEST.SKU)  ;\r",
                    "\r",
                    "                var importFrmCsvController = RMdatalink.app.getController('ImportCSV') ;\r",
                    "\r",
                    "                TEST.retailers = importFrmCsvController.config.retailerForVendor ;\r",
                    "\r",
                    "\r",
                    "                TEST.vendor_monthly_subscription = recordInMasterStore.get('store_monthly_subscription');\r",
                    "                TEST.vendor_note = recordInMasterStore.get('store_note');\r",
                    "                TEST.vendor_inactive_reason = recordInMasterStore.get('store_inactive_reason');\r",
                    "                TEST.vendor_pending_approval = recordInMasterStore.get('store_pending_approval');\r",
                    "                TEST.vendor_created_in_past = recordInMasterStore.get('store_created_in_past');\r",
                    "                TEST.vendor_modified_in_past = recordInMasterStore.get('store_modified_in_past');\r",
                    "            }\r",
                    "\r",
                    "            TEST.user_since = recordInMasterStore.get('user_since');\r",
                    "            TEST.last_login = recordInMasterStore.get('last_login');\r",
                    "            TEST.last_export = recordInMasterStore.get('last_export');\r",
                    "            TEST.order_no = recordInMasterStore.get('order_no');\r",
                    "            TEST.reseller = recordInMasterStore.get('reseller');\r",
                    "            console.log(\"Edited TEST \" ,TEST);\r",
                    "\r",
                    "            delete(TEST._id) ;\r",
                    "\r",
                    "            delete(TEST.user_since) ;\r",
                    "            delete(TEST.created_by) ;\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "            Ext.Viewport.setMasked( {\r",
                    "                xtype: 'loadmask'\r",
                    "            });\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "            var retailerEcommerceForm = Ext.ComponentQuery.query(\"#retailerEcommerceForm\")[0];\r",
                    "            if(retailerEcommerceForm){\r",
                    "\r",
                    "               var  value = retailerEcommerceForm.getValues();\r",
                    "               var vipVendorListInEComm = Ext.ComponentQuery.query(\"#vipVendorListInEComm\")[0];\r",
                    "               if( true || (  vipVendorListInEComm && vipVendorListInEComm.getStore() )  )   {\r",
                    "\r",
                    "\r",
                    "\r",
                    "                   value.additional_vendors =  getAccountNoAndNameOfVIPVendors() ; //getRawFromList('vipVendorListInEComm') ;//vipVendorListInEComm.getStore().getData();\r",
                    "\r",
                    "               }\r",
                    "\r",
                    "                var vipVendorProgramListInEComm = Ext.ComponentQuery.query(\"#vipVendorProgramListInEComm\")[0];\r",
                    "                if(vipVendorProgramListInEComm   &&   vipVendorProgramListInEComm.getStore()){\r",
                    "\r",
                    "//                    value.programs =     vipVendorProgramListInEComm.getData();\r",
                    "                    value.programs =  getRawFromList('vipVendorProgramListInEComm') ;// vipVendorProgramListInEComm.getStore().getData();\r",
                    "\r",
                    "                }\r",
                    "\r",
                    "\r",
                    "                var backGround_Logo_Image = Ext.ComponentQuery.query(\"#backGround_Logo_Image\")[0];\r",
                    "                var dom = backGround_Logo_Image.element.dom;\r",
                    "                var img = dom.childNodes[0];\r",
                    "                value.logo = img.src;\r",
                    "                TEST.e_commerce_info = value;\r",
                    "\r",
                    "            }\r",
                    "            console.log(TEST);\r",
                    "\r",
                    "            RMdatalink.iwa.rdl.doUpdateCollection(masterStore, TEST , recordInMasterStore.get('_id'), suc, err);\r",
                    "            if( isRetailerDetailsView ){\r",
                    "                RMdatalink.app.getController('RetailerDeatilsDataSet').setTemplateOfListByEditingMode(false);\r",
                    "            }\r",
                    "\r",
                    "\r",
                    "            function suc(){\r",
                    "\r",
                    "                 Ext.Viewport.setMasked(false);\r",
                    "\r",
                    "\r",
                    "                onUpdateSuccess();\r",
                    "\r",
                    "\r",
                    "            }\r",
                    "            function err(){\r",
                    "                    Ext.Viewport.setMasked(false);\r",
                    "            }\r",
                    "        }\r",
                    "        else {\r",
                    "\r",
                    "            if(!this.validationForNewRecord())\r",
                    "            {\r",
                    "                Ext.Msg.alert('Error', 'Marked Fields Are Mandatory.', Ext.emptyFn);\r",
                    "                return;\r",
                    "            }\r",
                    "\r",
                    "            Ext.Viewport.setMasked( {\r",
                    "                xtype: 'loadmask'\r",
                    "            });\r",
                    "\r",
                    "            TEST.id = masterStore.getAllCount()+1;\r",
                    "\r",
                    "            function successCallBack(newRecordFromServer){\r",
                    "\r",
                    "              //  Ext.Viewport.setMasked(false);\r",
                    "                onAddnewSuccess() ;\r",
                    "\r",
                    "            }\r",
                    "\r",
                    "\r",
                    "            function errorCallBack(){\r",
                    "                Ext.Viewport.setMasked(false);\r",
                    "                Ext.Msg.alert('Failuer.', 'Failed to add new Record.', Ext.emptyFn);\r",
                    "            }\r",
                    "\r",
                    "\r",
                    "            RMdatalink.util.DataLoader.sendNewRecordForRetailerToServer(TEST,masterStore,successCallBack,errorCallBack) ;\r",
                    "        }\r",
                    "\r",
                    "\r",
                    "    }//ELSE CLOSE\r",
                    "\r",
                    "\r",
                    "var tempCollections;\r",
                    "var tempDesign;\r",
                    "var tempSKU;\r",
                    "function onUpdateSuccess(){\r",
                    "        that.disableEnableComponents(true) ;\r",
                    "            if(isRetailerDetailsView)\r",
                    "            {\r",
                    "\r",
                    "\r",
                    "                    that.config.isVendorUpdated = true ;\r",
                    "\r",
                    "                  RMdatalink.app.getController('Main').updateRetailerRecords(\"ALL\",TEST,recordInMasterStore.get('_id')) ;\r",
                    "                  that.setRtlAccDtl() ;\r",
                    "\r",
                    "                //updateRespectiveRetailer(recordInMasterStore.get('_id')) ;\r",
                    "\r",
                    "            }\r",
                    "            else{\r",
                    "\r",
                    "                TEST.collections = tempCollections;\r",
                    "                TEST.design = tempDesign;\r",
                    "                TEST.SKU =tempSKU;\r",
                    "\r",
                    "                that.config.isVendorUpdated = true ;\r",
                    "\r",
                    "                recordInMasterStore.set(TEST);\r",
                    "            }\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "            that.config.isVendorUpdated = true ;\r",
                    "              recordInMasterStore.set(TEST);\r",
                    "            recordInMasterStore.dirty= true;\r",
                    "\r",
                    "            that.config.recordToUpdate = recordInMasterStore ;\r",
                    "            var index  = masterStore.findExact('_id',TEST._id);\r",
                    "            var record = masterStore.getAt(index);\r",
                    "            var globToSet = setVariable();\r",
                    "\r",
                    "            function setVariable(){\r",
                    "\r",
                    "                return {\r",
                    "\r",
                    "                    placeClicked:  'Store_nameDelegateClassForTap',\r",
                    "                    record:record,\r",
                    "                    index:index\r",
                    "                };\r",
                    "            }\r",
                    "            if(isRetailerDetailsView)\r",
                    "            {\r",
                    "\r",
                    "                RMdatalink.app.getController('PaginationController').loadDependentStoresonMaster('retailersMaster');\r",
                    "                //RMdatalink.util.globalMethods.fillDataFromMasterStore(\"retailersMaster\");\r",
                    "            }\r",
                    "\r",
                    "            //  ***  BACK TO MAIN VIEW ***********\r",
                    "            //RMdatalink.app.getController('UINav').onBackTextTap() ;\r",
                    "\r",
                    "\r",
                    "            Ext.Msg.alert('Success.', 'Record Updated Successfuly.', Ext.emptyFn);\r",
                    "                var dataOfVip = getVipVendors();\r",
                    "                if(dataOfVip.length){\r",
                    "                            setRetailersListByProduct (dataOfVip , \"RDForVIP\");\r",
                    "                }\r",
                    "\r",
                    "\r",
                    "}\r",
                    "\r",
                    "function updateRespectiveRetailer(_id){\r",
                    "\r",
                    "    var tempStore = null;\r",
                    "    var recIn = -1;\r",
                    "    tempStore = Ext.getStore('retailerUsers') ;\r",
                    "\r",
                    "    recIn = tempStore.findExact('_id',_id) ;\r",
                    "\r",
                    "    if(recIn != -1){\r",
                    "\r",
                    "        tempStore.getAt(recIn).set(TEST);\r",
                    "    }\r",
                    "\r",
                    "        tempStore = Ext.getStore('retailerPending') ;\r",
                    "\r",
                    "    recIn = tempStore.findExact('_id',_id) ;\r",
                    "\r",
                    "    if(recIn != -1){\r",
                    "\r",
                    "        tempStore.getAt(recIn).set(TEST);\r",
                    "    }\r",
                    "\r",
                    "\r",
                    "        tempStore = Ext.getStore('retailerHotProspects') ;\r",
                    "\r",
                    "    recIn = tempStore.findExact('_id',_id) ;\r",
                    "\r",
                    "    if(recIn != -1){\r",
                    "\r",
                    "        tempStore.getAt(recIn).set(TEST);\r",
                    "    }\r",
                    "\r",
                    "\r",
                    "        tempStore = Ext.getStore('retailerProspects') ;\r",
                    "\r",
                    "    recIn = tempStore.findExact('_id',_id) ;\r",
                    "\r",
                    "    if(recIn != -1){\r",
                    "\r",
                    "        tempStore.getAt(recIn).set(TEST);\r",
                    "    }\r",
                    "\r",
                    "\r",
                    "        tempStore = Ext.getStore('retailerInactive') ;\r",
                    "\r",
                    "    recIn = tempStore.findExact('_id',_id) ;\r",
                    "\r",
                    "    if(recIn != -1){\r",
                    "\r",
                    "        tempStore.getAt(recIn).set(TEST);\r",
                    "    }\r",
                    "\r",
                    "\r",
                    "        tempStore = Ext.getStore('retailersMaster') ;\r",
                    "\r",
                    "    recIn = tempStore.findExact('_id',_id) ;\r",
                    "\r",
                    "    if(recIn != -1){\r",
                    "\r",
                    "        tempStore.getAt(recIn).set(TEST);\r",
                    "    }\r",
                    "\r",
                    "\r",
                    "\r",
                    "}\r",
                    "\r",
                    "function onAddnewSuccess(){\r",
                    "      that.disableEnableComponents(true) ;\r",
                    "\r",
                    "    if(isRetailerDetailsView){\r",
                    "\r",
                    "          RMdatalink.app.getController('SearchController').config.defaultSearchString = TEST.store_name ;\r",
                    "          RMdatalink.app.getController('SearchController').config.defaultStoreStatus = TEST.store_status ;\r",
                    "          RMdatalink.app.getController('SearchController').config.isFromRetailerDetail = true ;\r",
                    "          RMdatalink.app.getController('PaginationController').setCurrentActiveStoreId('retailersMaster') ;\r",
                    "          Ext.Viewport.setMasked(false) ;\r",
                    "         doRtSearch() ;\r",
                    "\r",
                    "    }else{\r",
                    "\r",
                    "             Ext.Viewport.setMasked(false);\r",
                    "           RMdatalink.app.getController('PaginationController').setCurrentActiveStoreId('vendors.Master') ;\r",
                    "\r",
                    "        RMdatalink.app.getController('PaginationController').loadStore(1,RMdatalink.util.DataLoader.getPageSize(),false);\r",
                    "    }\r",
                    "     //     RMdatalink.app.getController('PaginationController').loadStore(1,RMdatalink.util.DataLoader.getPageSize(),false);\r",
                    "\r",
                    "\r",
                    "                RMdatalink.app.getController('UINav').onBackTextTap() ;\r",
                    "\r",
                    "         if(!isRetailerDetailsView){\r",
                    "                Ext.Msg.alert('Success.', 'Record Added Successfully.', Ext.emptyFn);\r",
                    "         }\r",
                    "\r",
                    "\r",
                    "}\r",
                    "\r",
                    "function doRtSearch(){\r",
                    "   var retailersTabPanel = Ext.ComponentQuery.query('#retailersTabPanel')[0] ;\r",
                    "   retailersTabPanel.setActiveItem(5) ;\r",
                    "\r",
                    "   var allRetailerTab =   Ext.ComponentQuery.query('#allRetailerTab')[0] ;\r",
                    "\r",
                    "   var SearchController = RMdatalink.app.getController('SearchController') ;\r",
                    "\r",
                    "   allRetailerTab.down('#rtVdrsSearchFld').setValue(TEST.store_name) ;\r",
                    "\r",
                    "    Ext.Function.defer(startSearch, 1000, that );\r",
                    "\r",
                    "    function startSearch(){\r",
                    "        var searchBtn = allRetailerTab.down('#retailersVendorsSerchBtn') ;\r",
                    "         searchBtn.fireEvent('tap',searchBtn) ;\r",
                    "    }\r",
                    "\r",
                    "}\r",
                    "\r",
                    "function getVipVendors(){\r",
                    "\r",
                    "    var selectedUserRecord = RMdatalink.util.globalConfig.getDataToShowInSettingWindow() ;\r",
                    "    var ecommerceInfo = selectedUserRecord.record.data.e_commerce_info;\r",
                    "\r",
                    "    var arrayOfVendors = [];\r",
                    "    if( ecommerceInfo ){\r",
                    "\r",
                    "    }else{\r",
                    "        return arrayOfVendors;\r",
                    "    }\r",
                    "\r",
                    "    var ecomVendor = ecommerceInfo.additional_vendors;\r",
                    "    var vendorPartner = ecommerceInfo.vip_vendor;\r",
                    "\r",
                    "    //Account_No\r",
                    "    if(vendorPartner){\r",
                    "        var vRecord = findVendorBy_name(vendorPartner);\r",
                    "        var dataToPush =   vRecord.raw;\r",
                    "        dataToPush.Account_No = ecommerceInfo.account_no;\r",
                    "        arrayOfVendors.push(   dataToPush );\r",
                    "    }\r",
                    "    for(var i=0; ecomVendor && i <ecomVendor.length ; i++){\r",
                    "\r",
                    "        var vendor_name = ecomVendor[i].vendor_name;\r",
                    "\r",
                    "\r",
                    "        var vendorRecord = findVendorBy_name(vendor_name);\r",
                    "        if(vendorRecord){\r",
                    "        }else{\r",
                    "            continue;\r",
                    "        }\r",
                    "        var dataToPush =   vendorRecord.raw;\r",
                    "        dataToPush.Account_No = ecomVendor[i].account_no;\r",
                    "        arrayOfVendors.push( dataToPush);\r",
                    "    }\r",
                    "\r",
                    "    return arrayOfVendors;\r",
                    "\r",
                    "}\r",
                    "function setRetailersListByProduct(data ,productTabId){\r",
                    "\r",
                    "    var prospectList  = Ext.ComponentQuery.query('#' +productTabId)[0].down(\"#mainList\");\r",
                    "    var prospectStore = prospectList.getStore() ;\r",
                    "    if(prospectStore){\r",
                    "        prospectStore.removeAll();\r",
                    "        prospectStore.sync();\r",
                    "        prospectStore.setData(data) ;\r",
                    "        prospectStore.sync();\r",
                    "\r",
                    "\r",
                    "\r",
                    "    }else{\r",
                    "        prospectList.setData(data) ;\r",
                    "    }\r",
                    "    prospectList.selectAll() ;\r",
                    "    Ext.ComponentQuery.query('#' + productTabId + ' ' + '#inStoreVendorsRetailersCLbl')[0].setHtml(\"Total Vendors : \"+ data.length ) ;\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "}"
                ]
            },
            "designerId": "6f2417bc-e6d4-4eb4-96d6-aae835f73824"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "isRetailerDetailsView"
                ],
                "fn": "setTplOnlineInSideContainerList",
                "implHandler": [
                    "///  CLEAR THE VALUES STORE IN VARIABLE FOR ACCOUNT NO\r",
                    "\r",
                    "\r",
                    "clearAccountValues();\r",
                    "\r",
                    "\r",
                    "this.setTplOnlineInECommerceSedeContainerList(isRetailerDetailsView);\r",
                    "\r",
                    "\r",
                    "var component = Ext.ComponentQuery.query('#RDStoreSideTabPanel')[0];\r",
                    "var InStoreHeaders = component.down(\"#RDInStoreVendorsTab\").down(\"#headerList\");\r",
                    "var OnlineHeaders = component.down(\"#RDOnlineVendorsTab\").down(\"#headerList\");\r",
                    "InStoreHeaders.setData([{}]);\r",
                    "OnlineHeaders.setData([{}]);\r",
                    "var headerTpl , listTpl ;\r",
                    "var tplOfInStoreHeader;\r",
                    "var tplOfInlist;\r",
                    "\r",
                    "if(isRetailerDetailsView)\r",
                    "{\r",
                    "    headerTpl = Ext.create('Ext.XTemplate',\r",
                    "                           '<div class=\"x-rm-listtpl-main\">',\r",
                    "                           '    <div style=\"width: 8%;\">',\r",
                    "                           '        <div style=\"width: 20px;\" data-name=\"all\"></div>',\r",
                    "                           '    </div>',\r",
                    "                           '    <div style=\"\" class = \"retailerDetailAccountNo\" data-name=\"vendor_name\" >Acct. No<img src=\"resources/images/button_icons/downArrow.png\"/></div>',\r",
                    "                           '    <div style=\"\" class = \"retailerDetailVendorName\" data-name=\"vendor_name\">Name<img src=\"resources/images/button_icons/downArrow.png\"/></div>',\r",
                    "                           '    <div style=\"\" class = \"retailerDetailSKU\" data-name=\"SKU\">SKUs<img src=\"resources/images/button_icons/downArrow.png\"/></div>',\r",
                    "                           '    <div style=\"\" class = \"retailerDetailCollection\" data-name=\"collections\">Collections<img src=\"resources/images/button_icons/downArrow.png\"/></div>',\r",
                    "                           '    <div style=\"\" class = \"retailerDetailDesign\" data-name=\"design\">Designs<img src=\"resources/images/button_icons/downArrow.png\"/></div>',\r",
                    "                           '    <div style=\"\" class = \"retailerDetailImg\" data-name=\"no_of_images\">Images<img src=\"resources/images/button_icons/downArrow.png\"/></div>',\r",
                    "                           '    <div style=\"\" class = \"retailerDetailAddlImg\" data-name=\"no_of_additional_images\">Addl Images<img src=\"resources/images/button_icons/downArrow.png\"/></div>',\r",
                    "                           '</div>'\r",
                    "                          );\r",
                    "\r",
                    "\r",
                    "    tplOfInStoreHeader = Ext.create('Ext.XTemplate',\r",
                    "                           '<div class=\"x-rm-listtpl-main\">',\r",
                    "                           '    <div style=\"width: 8%;\">',\r",
                    "                           '        <div style=\"width: 20px;\" data-name=\"all\"></div>',\r",
                    "                           '    </div>',\r",
                    "                           '    <div style=\"\" class = \"retailerDetailAccountNo\" data-name=\"vendor_name\" >Acct. No<img src=\"resources/images/button_icons/downArrow.png\"/></div>',\r",
                    "                           '    <div style=\"\" class = \"retailerDetailVendorName\" data-name=\"vendor_name\">Name<img src=\"resources/images/button_icons/downArrow.png\"/></div>',\r",
                    "                           '    <div style=\"\" class = \"retailerDetailSKU\" data-name=\"SKU\">SKUs<img src=\"resources/images/button_icons/downArrow.png\"/></div>',\r",
                    "                           '    <div style=\"\" class = \"retailerDetailCollection\" data-name=\"collections\">Collections<img src=\"resources/images/button_icons/downArrow.png\"/></div>',\r",
                    "                           '    <div style=\"\" class = \"retailerDetailDesign\" data-name=\"design\">Designs<img src=\"resources/images/button_icons/downArrow.png\"/></div>',\r",
                    "                           '    <div style=\"\" class = \"retailerDetailImg\" data-name=\"no_of_images\">Images<img src=\"resources/images/button_icons/downArrow.png\"/></div>',\r",
                    "                           '    <div style=\"\" class = \"retailerDetailAddlImg\" data-name=\"no_of_additional_images\">Addl Images<img src=\"resources/images/button_icons/downArrow.png\"/></div>',\r",
                    "                           '</div>'\r",
                    "                          );\r",
                    "\r",
                    "\r",
                    "\r",
                    "    listTpl = Ext.create('Ext.XTemplate',\r",
                    "                         '<div class=\"x-rm-listtpl-main pointerCursor\">',\r",
                    "                         '    <div style=\"width: 8%;\">',\r",
                    "                         '        <div style=\"width: 19px; height:19px;\" class=\"fireListSelect\"></div>',\r",
                    "                         '    </div>',\r",
                    "                             '<div style=\"\" class = \"retailerDetailAccountNo\" type =\"text\"  >{Account_No}</div>',\r",
                    "                         '    <div style=\"{[this.getColorForVendor(values)]}\" class = \"retailerDetailVendorName\">{vendor_name}</div>',\r",
                    "                         '    <div style=\"\" class = \"retailerDetailSKU boldText\" >{SKU}</div>',\r",
                    "                         '    <div style=\"\" class = \"retailerDetailCollection\">{collections}</div>',\r",
                    "                         '    <div style=\"\" class = \"retailerDetailDesign\">{design}</div>',\r",
                    "                         '    <div style=\"\" class = \"retailerDetailImg\" >{no_of_images}</div>',\r",
                    "                         '    <div style=\"\" class = \"retailerDetailAddlImg\">{no_of_additional_images}</div>',\r",
                    "                         '</div>',\r",
                    "                         {\r",
                    "\r",
                    "                             getColorForVendor:function(  values){\r",
                    "\r",
                    "                                 return getColorStringForVendor(values);\r",
                    "\r",
                    "                             }\r",
                    "                         }\r",
                    "                        );\r",
                    "\r",
                    "    tplOfInlist = Ext.create('Ext.XTemplate',\r",
                    "                         '<div class=\"x-rm-listtpl-main pointerCursor\">',\r",
                    "                         '    <div style=\"width: 8%;\">',\r",
                    "                         '        <div style=\"width: 19px; height:19px;\" class=\"fireListSelect\"></div>',\r",
                    "                         '    </div>',\r",
                    "                             '<div style=\"\" class = \"retailerDetailAccountNo\" type =\"text\"  >{Account_No}</div>',\r",
                    "                         '    <div style=\"{[this.getColorForVendor(values)]}\" class = \"retailerDetailVendorName\">{vendor_name}</div>',\r",
                    "                         '    <div style=\"\" class = \"retailerDetailSKU boldText\" >{SKU}</div>',\r",
                    "                         '    <div style=\"\" class = \"retailerDetailCollection\">{collections}</div>',\r",
                    "                         '    <div style=\"\" class = \"retailerDetailDesign\">{design}</div>',\r",
                    "                         '    <div style=\"\" class = \"retailerDetailImg\" >{no_of_images}</div>',\r",
                    "                         '    <div style=\"\" class = \"retailerDetailAddlImg\">{no_of_additional_images}</div>',\r",
                    "                         '</div>',\r",
                    "                         {\r",
                    "\r",
                    "                             getColorForVendor:function(  values){\r",
                    "\r",
                    "                                 return getColorStringForVendor(values);\r",
                    "\r",
                    "                             }\r",
                    "                         }\r",
                    "                        );\r",
                    "\r",
                    "\r",
                    "\r",
                    "}\r",
                    "else\r",
                    "{\r",
                    "    headerTpl = Ext.create('Ext.XTemplate',\r",
                    "                           '<div class=\"x-rm-listtpl-main\">',\r",
                    "                           '    <div style=\"width: 12%;\">',\r",
                    "                           '        <div style=\"width: 20px;\" data-name=\"all\"></div>',\r",
                    "                           '    </div>',\r",
                    "                           '    <div style=\"width: 35%;\" data-name=\"store_name\">Name</div>',\r",
                    "                           '    <div style=\"width: 30%;\" data-name=\"store_city\">City</div>',\r",
                    "                           '    <div style=\"width: 15%;\" data-name=\"store_state\">State</div>',\r",
                    "\r",
                    "                           '</div>'\r",
                    "                          );\r",
                    "    tplOfInStoreHeader = Ext.create('Ext.XTemplate',\r",
                    "                           '<div class=\"x-rm-listtpl-main\">',\r",
                    "                           '    <div style=\"width: 12%;\">',\r",
                    "                           '        <div style=\"width: 20px;\" data-name=\"all\"></div>',\r",
                    "                           '    </div>',\r",
                    "                           '    <div style=\"width: 35%;\" data-name=\"store_name\">Name</div>',\r",
                    "                           '    <div style=\"width: 30%;\" data-name=\"store_city\">City</div>',\r",
                    "                           '    <div style=\"width: 15%;\" data-name=\"store_state\">State</div>',\r",
                    "\r",
                    "                           '</div>'\r",
                    "                          );\r",
                    "\r",
                    "\r",
                    "    listTpl = Ext.create('Ext.XTemplate',\r",
                    "                         '<div class=\"x-rm-listtpl-main pointerCursor\">',\r",
                    "                         '    <div style=\"width: 12%;\">',\r",
                    "                         '        <div style=\"width: 20px; height:20px;\"class=\"fireListSelect\"></div>',\r",
                    "                         '    </div>',\r",
                    "                         '    <div style=\"width: 35%;\">{store_name}</div>',\r",
                    "                         '    <div style=\"width: 30%;\">{store_city}</div>',\r",
                    "                          '    <div style=\"width: 15%;\">{store_state}</div>',\r",
                    "                         '</div>'\r",
                    "                        );\r",
                    "    tplOfInlist = Ext.create('Ext.XTemplate',\r",
                    "                         '<div class=\"x-rm-listtpl-main pointerCursor\">',\r",
                    "                         '    <div style=\"width: 12%;\">',\r",
                    "                         '        <div style=\"width: 20px; height:20px;\"class=\"fireListSelect\"></div>',\r",
                    "                         '    </div>',\r",
                    "                         '    <div style=\"width: 35%;\">{store_name}</div>',\r",
                    "                         '    <div style=\"width: 30%;\">{store_city}</div>',\r",
                    "                          '    <div style=\"width: 15%;\">{store_state}</div>',\r",
                    "                         '</div>'\r",
                    "                        );\r",
                    "\r",
                    "\r",
                    "// /vendors.Master\r",
                    "\r",
                    "}\r",
                    "\r",
                    "\r",
                    "InStoreHeaders.setItemTpl(tplOfInStoreHeader);\r",
                    "OnlineHeaders.setItemTpl(headerTpl);\r",
                    "InStoreHeaders.refresh();\r",
                    "OnlineHeaders.refresh();\r",
                    "\r",
                    "var InStoreList = component.down(\"#RDInStoreVendorsTab\").down('#mainList');\r",
                    "var OnlineList = component.down(\"#RDOnlineVendorsTab\").down('#mainList');\r",
                    "\r",
                    "InStoreList.setItemHeight(22);\r",
                    "OnlineList.setItemHeight(22);\r",
                    "InStoreList.setMode('MULTI');\r",
                    "OnlineList.setMode('MULTI');\r",
                    "InStoreList.addCls('x-rm-rdvendorslist');\r",
                    "OnlineList.addCls('x-rm-rdvendorslist');\r",
                    "\r",
                    "InStoreList.setStore('retailersStoreVendors');//\r",
                    "\r",
                    "console.error(\"STORE CONNECTED TO LIST SET TPL CONTAINER LIST\");\r",
                    "\r",
                    "if(isRetailerDetailsView)\r",
                    "{\r",
                    "\r",
                    "   // OnlineList.setStore('vendors.Master');\r",
                    "     OnlineList.setData(    getArrayFromStore(Ext.getStore('vendors.Master')));\r",
                    "\r",
                    "\r",
                    "}else{\r",
                    "     //OnlineList.setStore('retailersMaster');\r",
                    "    OnlineList.setStore('retailers.prospectRTForVendor');\r",
                    "}\r",
                    "\r",
                    "\r",
                    "\r",
                    "//OnlineList.setStore('retailersOnlineStoreVendors');\r",
                    "InStoreList.config.isUserEditionPermitted = false;\r",
                    "InStoreList.setItemTpl(tplOfInlist);\r",
                    "OnlineList.setItemTpl(listTpl);\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    ""
                ]
            },
            "designerId": "59a8f11a-da5d-4be6-9383-81c654871285"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "isRetailerDetailsView"
                ],
                "fn": "setTplOnlineInECommerceSedeContainerList",
                "implHandler": [
                    "var component = Ext.ComponentQuery.query('#RDForECommerce')[0];\r",
                    "var InStoreHeaders = component.down(\"#RDInStoreVendorsTab\").down(\"#headerList\");\r",
                    "var OnlineHeaders = component.down(\"#RDOnlineVendorsTab\").down(\"#headerList\");\r",
                    "InStoreHeaders.setData([{}]);\r",
                    "OnlineHeaders.setData([{}]);\r",
                    "var headerTpl , listTpl ;\r",
                    "var tplOfInStoreHeader;\r",
                    "var tplOfInlist;\r",
                    "\r",
                    "\r",
                    "//RDForECommerce\r",
                    "if(isRetailerDetailsView)\r",
                    "{\r",
                    "    headerTpl = Ext.create('Ext.XTemplate',\r",
                    "                           '<div class=\"x-rm-listtpl-main\">',\r",
                    "                           '    <div style=\"width: 8%;\">',\r",
                    "                           '        <div style=\"width: 20px;\" data-name=\"all\"></div>',\r",
                    "                           '    </div>',\r",
                    "                           '    <div style=\"\" class = \"retailerDetailAccountNo\" data-name=\"vendor_name\" >Acct. No<img src=\"resources/images/button_icons/downArrow.png\"/></div>',\r",
                    "                           '    <div style=\"\" class = \"retailerDetailVendorName\" data-name=\"vendor_name\">Name<img src=\"resources/images/button_icons/downArrow.png\"/></div>',\r",
                    "                           '    <div style=\"\" class = \"retailerDetailSKU\" data-name=\"SKU\">SKUs<img src=\"resources/images/button_icons/downArrow.png\"/></div>',\r",
                    "                           '    <div style=\"\" class = \"retailerDetailCollection\" data-name=\"collections\">Collections<img src=\"resources/images/button_icons/downArrow.png\"/></div>',\r",
                    "                           '    <div style=\"\" class = \"retailerDetailDesign\" data-name=\"design\">Designs<img src=\"resources/images/button_icons/downArrow.png\"/></div>',\r",
                    "                           '    <div style=\"\" class = \"retailerDetailImg\" data-name=\"no_of_images\">Images<img src=\"resources/images/button_icons/downArrow.png\"/></div>',\r",
                    "                           '    <div style=\"\" class = \"retailerDetailAddlImg\" data-name=\"no_of_additional_images\">Addl Images<img src=\"resources/images/button_icons/downArrow.png\"/></div>',\r",
                    "                           '</div>'\r",
                    "                          );\r",
                    "\r",
                    "\r",
                    "    tplOfInStoreHeader = Ext.create('Ext.XTemplate',\r",
                    "                           '<div class=\"x-rm-listtpl-main\">',\r",
                    "                           '    <div style=\"width: 8%;\">',\r",
                    "                           '        <div style=\"width: 20px;\" data-name=\"all\"></div>',\r",
                    "                           '    </div>',\r",
                    "                           '    <div style=\"\" class = \"retailerDetailAccountNo\" data-name=\"vendor_name\" >Acct. No<img src=\"resources/images/button_icons/downArrow.png\"/></div>',\r",
                    "                           '    <div style=\"\" class = \"retailerDetailVendorName\" data-name=\"vendor_name\">Name<img src=\"resources/images/button_icons/downArrow.png\"/></div>',\r",
                    "                           '    <div style=\"\" class = \"retailerDetailSKU\" data-name=\"SKU\">SKUs<img src=\"resources/images/button_icons/downArrow.png\"/></div>',\r",
                    "                           '    <div style=\"\" class = \"retailerDetailCollection\" data-name=\"collections\">Collections<img src=\"resources/images/button_icons/downArrow.png\"/></div>',\r",
                    "                           '    <div style=\"\" class = \"retailerDetailDesign\" data-name=\"design\">Designs<img src=\"resources/images/button_icons/downArrow.png\"/></div>',\r",
                    "                           '    <div style=\"\" class = \"retailerDetailImg\" data-name=\"no_of_images\">Images<img src=\"resources/images/button_icons/downArrow.png\"/></div>',\r",
                    "                           '    <div style=\"\" class = \"retailerDetailAddlImg\" data-name=\"no_of_additional_images\">Addl Images<img src=\"resources/images/button_icons/downArrow.png\"/></div>',\r",
                    "                           '</div>'\r",
                    "                          );\r",
                    "\r",
                    "\r",
                    "\r",
                    "    listTpl = Ext.create('Ext.XTemplate',\r",
                    "                         '<div class=\"x-rm-listtpl-main pointerCursor\">',\r",
                    "                         '    <div style=\"width: 8%;\">',\r",
                    "                         '        <div style=\"width: 19px; height:19px;\" class=\"fireListSelect\"></div>',\r",
                    "                         '    </div>',\r",
                    "                             '<div style=\"\" class = \"retailerDetailAccountNo\" type =\"text\"  >{Account_No}</div>',\r",
                    "                         '    <div style=\"{[this.getColorForVendor(values)]}\" class = \"retailerDetailVendorName\">{vendor_name}</div>',\r",
                    "                         '    <div style=\"\" class = \"retailerDetailSKU boldText\" >{SKU}</div>',\r",
                    "                         '    <div style=\"\" class = \"retailerDetailCollection\">{collections}</div>',\r",
                    "                         '    <div style=\"\" class = \"retailerDetailDesign\">{design}</div>',\r",
                    "                         '    <div style=\"\" class = \"retailerDetailImg\" >{no_of_images}</div>',\r",
                    "                         '    <div style=\"\" class = \"retailerDetailAddlImg\">{no_of_additional_images}</div>',\r",
                    "                         '</div>',\r",
                    "                         {\r",
                    "\r",
                    "                             getColorForVendor:function(  values){\r",
                    "\r",
                    "                                 return getColorStringForVendor(values);\r",
                    "\r",
                    "                             }\r",
                    "                         }\r",
                    "                        );\r",
                    "\r",
                    "    tplOfInlist = Ext.create('Ext.XTemplate',\r",
                    "                         '<div class=\"x-rm-listtpl-main pointerCursor\">',\r",
                    "                         '    <div style=\"width: 8%;\">',\r",
                    "                         '        <div style=\"width: 19px; height:19px;\" class=\"fireListSelect\"></div>',\r",
                    "                         '    </div>',\r",
                    "                             '<div style=\"\" class = \"retailerDetailAccountNo\" type =\"text\"  >{Account_No}</div>',\r",
                    "                         '    <div style=\"{[this.getColorForVendor(values)]}\" class = \"retailerDetailVendorName\">{vendor_name}</div>',\r",
                    "                         '    <div style=\"\" class = \"retailerDetailSKU boldText\" >{SKU}</div>',\r",
                    "                         '    <div style=\"\" class = \"retailerDetailCollection\">{collections}</div>',\r",
                    "                         '    <div style=\"\" class = \"retailerDetailDesign\">{design}</div>',\r",
                    "                         '    <div style=\"\" class = \"retailerDetailImg\" >{no_of_images}</div>',\r",
                    "                         '    <div style=\"\" class = \"retailerDetailAddlImg\">{no_of_additional_images}</div>',\r",
                    "                         '</div>',\r",
                    "                         {\r",
                    "\r",
                    "                             getColorForVendor:function(  values){\r",
                    "\r",
                    "                                 return getColorStringForVendor(values);\r",
                    "\r",
                    "                             }\r",
                    "                         }\r",
                    "                        );\r",
                    "\r",
                    "\r",
                    "\r",
                    "}\r",
                    "else\r",
                    "{\r",
                    "    headerTpl = Ext.create('Ext.XTemplate',\r",
                    "                           '<div class=\"x-rm-listtpl-main\">',\r",
                    "                           '    <div style=\"width: 12%;\">',\r",
                    "                           '        <div style=\"width: 20px;\" data-name=\"all\"></div>',\r",
                    "                           '    </div>',\r",
                    "                           '    <div style=\"width: 35%;\" data-name=\"store_name\">Name</div>',\r",
                    "                           '    <div style=\"width: 30%;\" data-name=\"store_city\">City</div>',\r",
                    "                           '    <div style=\"width: 15%;\" data-name=\"store_state\">State</div>',\r",
                    "\r",
                    "                           '</div>'\r",
                    "                          );\r",
                    "    tplOfInStoreHeader = Ext.create('Ext.XTemplate',\r",
                    "                           '<div class=\"x-rm-listtpl-main\">',\r",
                    "                           '    <div style=\"width: 12%;\">',\r",
                    "                           '        <div style=\"width: 20px;\" data-name=\"all\"></div>',\r",
                    "                           '    </div>',\r",
                    "                           '    <div style=\"width: 35%;\" data-name=\"store_name\">Name</div>',\r",
                    "                           '    <div style=\"width: 30%;\" data-name=\"store_city\">City</div>',\r",
                    "                           '    <div style=\"width: 15%;\" data-name=\"store_state\">State</div>',\r",
                    "\r",
                    "                           '</div>'\r",
                    "                          );\r",
                    "\r",
                    "\r",
                    "    listTpl = Ext.create('Ext.XTemplate',\r",
                    "                         '<div class=\"x-rm-listtpl-main pointerCursor\">',\r",
                    "                         '    <div style=\"width: 12%;\">',\r",
                    "                         '        <div style=\"width: 20px; height:20px;\"class=\"fireListSelect\"></div>',\r",
                    "                         '    </div>',\r",
                    "                         '    <div style=\"width: 35%;\">{store_name}</div>',\r",
                    "                         '    <div style=\"width: 30%;\">{store_city}</div>',\r",
                    "                          '    <div style=\"width: 15%;\">{store_state}</div>',\r",
                    "                         '</div>'\r",
                    "                        );\r",
                    "    tplOfInlist = Ext.create('Ext.XTemplate',\r",
                    "                         '<div class=\"x-rm-listtpl-main pointerCursor\">',\r",
                    "                         '    <div style=\"width: 12%;\">',\r",
                    "                         '        <div style=\"width: 20px; height:20px;\"class=\"fireListSelect\"></div>',\r",
                    "                         '    </div>',\r",
                    "                         '    <div style=\"width: 35%;\">{store_name}</div>',\r",
                    "                         '    <div style=\"width: 30%;\">{store_city}</div>',\r",
                    "                          '    <div style=\"width: 15%;\">{store_state}</div>',\r",
                    "                         '</div>'\r",
                    "                        );\r",
                    "\r",
                    "\r",
                    "// /vendors.Master\r",
                    "\r",
                    "}\r",
                    "\r",
                    "\r",
                    "InStoreHeaders.setItemTpl(tplOfInStoreHeader);\r",
                    "OnlineHeaders.setItemTpl(headerTpl);\r",
                    "InStoreHeaders.refresh();\r",
                    "OnlineHeaders.refresh();\r",
                    "\r",
                    "var InStoreList = component.down(\"#RDInStoreVendorsTab\").down('#mainList');\r",
                    "var OnlineList = component.down(\"#RDOnlineVendorsTab\").down('#mainList');\r",
                    "\r",
                    "InStoreList.setItemHeight(22);\r",
                    "OnlineList.setItemHeight(22);\r",
                    "InStoreList.setMode('MULTI');\r",
                    "OnlineList.setMode('MULTI');\r",
                    "InStoreList.addCls('x-rm-rdvendorslist');\r",
                    "OnlineList.addCls('x-rm-rdvendorslist');\r",
                    "\r",
                    "//InStoreList.setStore('retailersStoreVendors');//\r",
                    "\r",
                    "console.error(\"STORE CONNECTED TO LIST E COMMERCE LIST\");\r",
                    "\r",
                    "if(isRetailerDetailsView)\r",
                    "{\r",
                    "//    OnlineList.setStore('vendors.Master');\r",
                    "     OnlineList.setData(    getArrayFromStore(Ext.getStore('vendors.Master')));\r",
                    "}else{\r",
                    "     //OnlineList.setStore('retailersMaster');\r",
                    "//    OnlineList.setStore('retailers.prospectRTForVendor');\r",
                    "//    OnlineList.setData(    getArrayFromStore(Ex.getStore('vendors.Master')));\r",
                    "\r",
                    "}\r",
                    "\r",
                    "\r",
                    "\r",
                    "//OnlineList.setStore('retailersOnlineStoreVendors');\r",
                    "InStoreList.config.isUserEditionPermitted = false;\r",
                    "InStoreList.setItemTpl(tplOfInlist);\r",
                    "\r",
                    "var inStoreListStore = InStoreList.getStore();\r",
                    "OnlineList.setItemTpl(listTpl);\r",
                    "InStoreList.refresh();\r",
                    "OnlineList.refresh();\r",
                    "if(inStoreListStore){\r",
                    "    inStoreListStore.removeAll();\r",
                    "}\r",
                    "\r",
                    "this.setTplOnlineEcommVipList(isRetailerDetailsView);"
                ]
            },
            "designerId": "7aeedbc6-7a8f-4bcf-9157-d2a48cb9c665"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "isRetailerDetailsView"
                ],
                "fn": "setTplOnlineEcommVipList",
                "implHandler": [
                    "var component = Ext.ComponentQuery.query('#RDForVIP')[0];\r",
                    "var InStoreHeaders = component.down(\"#RDInStoreVendorsTab\").down(\"#headerList\");\r",
                    "var OnlineHeaders = component.down(\"#RDOnlineVendorsTab\").down(\"#headerList\");\r",
                    "InStoreHeaders.setData([{}]);\r",
                    "OnlineHeaders.setData([{}]);\r",
                    "var headerTpl , listTpl ;\r",
                    "var tplOfInStoreHeader;\r",
                    "var tplOfInlist;\r",
                    "\r",
                    "\r",
                    "//RDForECommerce\r",
                    "if(isRetailerDetailsView)\r",
                    "{\r",
                    "    headerTpl = Ext.create('Ext.XTemplate',\r",
                    "                           '<div class=\"x-rm-listtpl-main\">',\r",
                    "                           '    <div style=\"width: 8%;\">',\r",
                    "                           '        <div style=\"width: 20px;\" data-name=\"all\"></div>',\r",
                    "                           '    </div>',\r",
                    "                           '    <div style=\"\" class = \"retailerDetailAccountNo\" data-name=\"vendor_name\" >Acct. No<img src=\"resources/images/button_icons/downArrow.png\"/></div>',\r",
                    "                           '    <div style=\"\" class = \"retailerDetailVendorName\" data-name=\"vendor_name\">Name<img src=\"resources/images/button_icons/downArrow.png\"/></div>',\r",
                    "                           '    <div style=\"\" class = \"retailerDetailSKU\" data-name=\"SKU\">SKUs<img src=\"resources/images/button_icons/downArrow.png\"/></div>',\r",
                    "                           '    <div style=\"\" class = \"retailerDetailCollection\" data-name=\"collections\">Collections<img src=\"resources/images/button_icons/downArrow.png\"/></div>',\r",
                    "                           '    <div style=\"\" class = \"retailerDetailDesign\" data-name=\"design\">Designs<img src=\"resources/images/button_icons/downArrow.png\"/></div>',\r",
                    "                           '    <div style=\"\" class = \"retailerDetailImg\" data-name=\"no_of_images\">Images<img src=\"resources/images/button_icons/downArrow.png\"/></div>',\r",
                    "                           '    <div style=\"\" class = \"retailerDetailAddlImg\" data-name=\"no_of_additional_images\">Addl Images<img src=\"resources/images/button_icons/downArrow.png\"/></div>',\r",
                    "                           '</div>'\r",
                    "                          );\r",
                    "\r",
                    "\r",
                    "    tplOfInStoreHeader = Ext.create('Ext.XTemplate',\r",
                    "                           '<div class=\"x-rm-listtpl-main\">',\r",
                    "                           '    <div style=\"width: 8%;\">',\r",
                    "                           '        <div style=\"width: 20px;\" data-name=\"all\"></div>',\r",
                    "                           '    </div>',\r",
                    "                           '    <div style=\"\" class = \"retailerDetailAccountNo\" data-name=\"vendor_name\" >Acct. No<img src=\"resources/images/button_icons/downArrow.png\"/></div>',\r",
                    "                           '    <div style=\"\" class = \"retailerDetailVendorName\" data-name=\"vendor_name\">Name<img src=\"resources/images/button_icons/downArrow.png\"/></div>',\r",
                    "                           '    <div style=\"\" class = \"retailerDetailSKU\" data-name=\"SKU\">SKUs<img src=\"resources/images/button_icons/downArrow.png\"/></div>',\r",
                    "                           '    <div style=\"\" class = \"retailerDetailCollection\" data-name=\"collections\">Collections<img src=\"resources/images/button_icons/downArrow.png\"/></div>',\r",
                    "                           '    <div style=\"\" class = \"retailerDetailDesign\" data-name=\"design\">Designs<img src=\"resources/images/button_icons/downArrow.png\"/></div>',\r",
                    "                           '    <div style=\"\" class = \"retailerDetailImg\" data-name=\"no_of_images\">Images<img src=\"resources/images/button_icons/downArrow.png\"/></div>',\r",
                    "                           '    <div style=\"\" class = \"retailerDetailAddlImg\" data-name=\"no_of_additional_images\">Addl Images<img src=\"resources/images/button_icons/downArrow.png\"/></div>',\r",
                    "                           '</div>'\r",
                    "                          );\r",
                    "\r",
                    "\r",
                    "\r",
                    "    listTpl = Ext.create('Ext.XTemplate',\r",
                    "                         '<div class=\"x-rm-listtpl-main pointerCursor\">',\r",
                    "                         '    <div style=\"width: 8%;\">',\r",
                    "                         '        <div style=\"width: 19px; height:19px;\" class=\"fireListSelect\"></div>',\r",
                    "                         '    </div>',\r",
                    "                             '<div style=\"\" class = \"retailerDetailAccountNo\" type =\"text\"  >{Account_No}</div>',\r",
                    "                         '    <div style=\"{[this.getColorForVendor(values)]}\" class = \"retailerDetailVendorName\">{vendor_name}</div>',\r",
                    "                         '    <div style=\"\" class = \"retailerDetailSKU boldText\" >{SKU}</div>',\r",
                    "                         '    <div style=\"\" class = \"retailerDetailCollection\">{collections}</div>',\r",
                    "                         '    <div style=\"\" class = \"retailerDetailDesign\">{design}</div>',\r",
                    "                         '    <div style=\"\" class = \"retailerDetailImg\" >{no_of_images}</div>',\r",
                    "                         '    <div style=\"\" class = \"retailerDetailAddlImg\">{no_of_additional_images}</div>',\r",
                    "                         '</div>',\r",
                    "                         {\r",
                    "\r",
                    "                             getColorForVendor:function(  values){\r",
                    "\r",
                    "                                 return getColorStringForVendor(values);\r",
                    "                                 //xindex\r",
                    "                                 //{vendor_name}\r",
                    "                             }\r",
                    "                         }\r",
                    "                        );\r",
                    "\r",
                    "    tplOfInlist = Ext.create('Ext.XTemplate',\r",
                    "                         '<div class=\"x-rm-listtpl-main pointerCursor\">',\r",
                    "                         '    <div style=\"width: 8%;\">',\r",
                    "                         '        <div style=\"width: 19px; height:19px;\" class=\"fireListSelect\"></div>',\r",
                    "                         '    </div>',\r",
                    "                             '<div style=\"\" class = \"retailerDetailAccountNo\" type =\"text\"  >{Account_No}</div>',\r",
                    "                         '    <div style=\"{[this.getColorForVendor(values)]}\" class = \"retailerDetailVendorName\">{[this.getVendorName(values ,xindex)]}</div>',\r",
                    "                         '    <div style=\"\" class = \"retailerDetailSKU boldText\" >{SKU}</div>',\r",
                    "                         '    <div style=\"\" class = \"retailerDetailCollection\">{collections}</div>',\r",
                    "                         '    <div style=\"\" class = \"retailerDetailDesign\">{design}</div>',\r",
                    "                         '    <div style=\"\" class = \"retailerDetailImg\" >{no_of_images}</div>',\r",
                    "                         '    <div style=\"\" class = \"retailerDetailAddlImg\">{no_of_additional_images}</div>',\r",
                    "                         '</div>',\r",
                    "                         {\r",
                    "\r",
                    "                             getColorForVendor:function(  values){\r",
                    "\r",
                    "                                 return getColorStringForVendor(values);\r",
                    "\r",
                    "                             },\r",
                    "                             getVendorName:function( values , xindex){\r",
                    "                                 var vendorName = values.vendor_name;\r",
                    "                                 try{\r",
                    "                                     var selectedUserRecord = RMdatalink.util.globalConfig.getDataToShowInSettingWindow() ;\r",
                    "                                     var record = selectedUserRecord.record;\r",
                    "\r",
                    "                                     if(record.data.e_commerce_info.vip_vendor == vendorName){\r",
                    "\r",
                    "                                         return \"** \" + vendorName + \" **\";\r",
                    "\r",
                    "                                     }else{\r",
                    "                                         return vendorName;\r",
                    "                                     }\r",
                    "\r",
                    "                                 }catch(e){\r",
                    "                                     return vendorName;\r",
                    "                                 }\r",
                    "\r",
                    "\r",
                    "                             }\r",
                    "                         }\r",
                    "                        );\r",
                    "\r",
                    "\r",
                    "\r",
                    "}\r",
                    "else\r",
                    "{\r",
                    "    headerTpl = Ext.create('Ext.XTemplate',\r",
                    "                           '<div class=\"x-rm-listtpl-main\">',\r",
                    "                           '    <div style=\"width: 12%;\">',\r",
                    "                           '        <div style=\"width: 20px;\" data-name=\"all\"></div>',\r",
                    "                           '    </div>',\r",
                    "                           '    <div style=\"width: 35%;\" data-name=\"store_name\">Name</div>',\r",
                    "                           '    <div style=\"width: 30%;\" data-name=\"store_city\">City</div>',\r",
                    "                           '    <div style=\"width: 15%;\" data-name=\"store_state\">State</div>',\r",
                    "\r",
                    "                           '</div>'\r",
                    "                          );\r",
                    "    tplOfInStoreHeader = Ext.create('Ext.XTemplate',\r",
                    "                           '<div class=\"x-rm-listtpl-main\">',\r",
                    "                           '    <div style=\"width: 12%;\">',\r",
                    "                           '        <div style=\"width: 20px;\" data-name=\"all\"></div>',\r",
                    "                           '    </div>',\r",
                    "                           '    <div style=\"width: 35%;\" data-name=\"store_name\">Name</div>',\r",
                    "                           '    <div style=\"width: 30%;\" data-name=\"store_city\">City</div>',\r",
                    "                           '    <div style=\"width: 15%;\" data-name=\"store_state\">State</div>',\r",
                    "\r",
                    "                           '</div>'\r",
                    "                          );\r",
                    "\r",
                    "\r",
                    "    listTpl = Ext.create('Ext.XTemplate',\r",
                    "                         '<div class=\"x-rm-listtpl-main pointerCursor\">',\r",
                    "                         '    <div style=\"width: 12%;\">',\r",
                    "                         '        <div style=\"width: 20px; height:20px;\"class=\"fireListSelect\"></div>',\r",
                    "                         '    </div>',\r",
                    "                         '    <div style=\"width: 35%;\">{store_name}</div>',\r",
                    "                         '    <div style=\"width: 30%;\">{store_city}</div>',\r",
                    "                          '    <div style=\"width: 15%;\">{store_state}</div>',\r",
                    "                         '</div>'\r",
                    "                        );\r",
                    "    tplOfInlist = Ext.create('Ext.XTemplate',\r",
                    "                         '<div class=\"x-rm-listtpl-main pointerCursor\">',\r",
                    "                         '    <div style=\"width: 12%;\">',\r",
                    "                         '        <div style=\"width: 20px; height:20px;\"class=\"fireListSelect\"></div>',\r",
                    "                         '    </div>',\r",
                    "                         '    <div style=\"width: 35%;\">{store_name}</div>',\r",
                    "                         '    <div style=\"width: 30%;\">{store_city}</div>',\r",
                    "                          '    <div style=\"width: 15%;\">{store_state}</div>',\r",
                    "                         '</div>'\r",
                    "                        );\r",
                    "\r",
                    "\r",
                    "// /vendors.Master\r",
                    "\r",
                    "}\r",
                    "\r",
                    "\r",
                    "InStoreHeaders.setItemTpl(tplOfInStoreHeader);\r",
                    "OnlineHeaders.setItemTpl(headerTpl);\r",
                    "InStoreHeaders.refresh();\r",
                    "OnlineHeaders.refresh();\r",
                    "\r",
                    "var InStoreList = component.down(\"#RDInStoreVendorsTab\").down('#mainList');\r",
                    "var OnlineList = component.down(\"#RDOnlineVendorsTab\").down('#mainList');\r",
                    "\r",
                    "InStoreList.setItemHeight(22);\r",
                    "OnlineList.setItemHeight(22);\r",
                    "InStoreList.setMode('MULTI');\r",
                    "OnlineList.setMode('MULTI');\r",
                    "InStoreList.addCls('x-rm-rdvendorslist');\r",
                    "OnlineList.addCls('x-rm-rdvendorslist');\r",
                    "\r",
                    "//InStoreList.setStore('retailersStoreVendors');//\r",
                    "\r",
                    "console.error(\"STORE CONNECTED TO LIST E COMMERCE LIST\");\r",
                    "\r",
                    "if(isRetailerDetailsView)\r",
                    "{\r",
                    "//    OnlineList.setStore('vendors.Master');\r",
                    "     OnlineList.setData(    getArrayFromStore(Ext.getStore('vendors.Master')));\r",
                    "}else{\r",
                    "     //OnlineList.setStore('retailersMaster');\r",
                    "//    OnlineList.setStore('retailers.prospectRTForVendor');\r",
                    "//    OnlineList.setData(    getArrayFromStore(Ex.getStore('vendors.Master')));\r",
                    "\r",
                    "}\r",
                    "\r",
                    "\r",
                    "\r",
                    "//OnlineList.setStore('retailersOnlineStoreVendors');\r",
                    "InStoreList.config.isUserEditionPermitted = false;\r",
                    "InStoreList.setItemTpl(tplOfInlist);\r",
                    "\r",
                    "var inStoreListStore = InStoreList.getStore();\r",
                    "OnlineList.setItemTpl(listTpl);\r",
                    "InStoreList.refresh();\r",
                    "OnlineList.refresh();\r",
                    "if(inStoreListStore){\r",
                    "    inStoreListStore.removeAll();\r",
                    "}\r",
                    "this.setTplOnlineAuthorizedList(isRetailerDetailsView);\r",
                    "\r",
                    ""
                ]
            },
            "designerId": "40fcfb99-669c-4f07-a331-d873bd0d2b6a"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "isRetailerDetailsView"
                ],
                "fn": "setTplOnlineAuthorizedList",
                "implHandler": [
                    "var component = Ext.ComponentQuery.query('#RDForAuthorisedVendors')[0];\r",
                    "var InStoreHeaders = component.down(\"#RDInStoreVendorsTab\").down(\"#headerList\");\r",
                    "var OnlineHeaders = component.down(\"#RDOnlineVendorsTab\").down(\"#headerList\");\r",
                    "InStoreHeaders.setData([{}]);\r",
                    "OnlineHeaders.setData([{}]);\r",
                    "var headerTpl , listTpl ;\r",
                    "var tplOfInStoreHeader;\r",
                    "var tplOfInlist;\r",
                    "\r",
                    "\r",
                    "//RDForECommerce\r",
                    "if(isRetailerDetailsView)\r",
                    "{\r",
                    "    headerTpl = Ext.create('Ext.XTemplate',\r",
                    "                           '<div class=\"x-rm-listtpl-main\">',\r",
                    "                           '    <div style=\"width: 8%;\">',\r",
                    "                           '        <div style=\"width: 20px;\" data-name=\"all\"></div>',\r",
                    "                           '    </div>',\r",
                    "                           '    <div style=\"\" class = \"retailerDetailAccountNo\" data-name=\"vendor_name\" >Acct. No<img src=\"resources/images/button_icons/downArrow.png\"/></div>',\r",
                    "                           '    <div style=\"\" class = \"retailerDetailVendorName\" data-name=\"vendor_name\">Name<img src=\"resources/images/button_icons/downArrow.png\"/></div>',\r",
                    "                           '    <div style=\"\" class = \"retailerDetailSKU\" data-name=\"SKU\">SKUs<img src=\"resources/images/button_icons/downArrow.png\"/></div>',\r",
                    "                           '    <div style=\"\" class = \"retailerDetailCollection\" data-name=\"collections\">Collections<img src=\"resources/images/button_icons/downArrow.png\"/></div>',\r",
                    "                           '    <div style=\"\" class = \"retailerDetailDesign\" data-name=\"design\">Designs<img src=\"resources/images/button_icons/downArrow.png\"/></div>',\r",
                    "                           '    <div style=\"\" class = \"retailerDetailImg\" data-name=\"no_of_images\">Images<img src=\"resources/images/button_icons/downArrow.png\"/></div>',\r",
                    "                           '    <div style=\"\" class = \"retailerDetailAddlImg\" data-name=\"no_of_additional_images\">Addl Images<img src=\"resources/images/button_icons/downArrow.png\"/></div>',\r",
                    "                           '</div>'\r",
                    "                          );\r",
                    "\r",
                    "\r",
                    "    tplOfInStoreHeader = Ext.create('Ext.XTemplate',\r",
                    "                           '<div class=\"x-rm-listtpl-main\">',\r",
                    "                           '    <div style=\"width: 8%;\">',\r",
                    "                           '        <div style=\"width: 20px;\" data-name=\"all\"></div>',\r",
                    "                           '    </div>',\r",
                    "                           '    <div style=\"\" class = \"retailerDetailAccountNo\" data-name=\"vendor_name\" >Acct. No<img src=\"resources/images/button_icons/downArrow.png\"/></div>',\r",
                    "                           '    <div style=\"\" class = \"retailerDetailVendorName\" data-name=\"vendor_name\">Name<img src=\"resources/images/button_icons/downArrow.png\"/></div>',\r",
                    "                           '    <div style=\"\" class = \"retailerDetailSKU\" data-name=\"SKU\">SKUs<img src=\"resources/images/button_icons/downArrow.png\"/></div>',\r",
                    "                           '    <div style=\"\" class = \"retailerDetailCollection\" data-name=\"collections\">Collections<img src=\"resources/images/button_icons/downArrow.png\"/></div>',\r",
                    "                           '    <div style=\"\" class = \"retailerDetailDesign\" data-name=\"design\">Designs<img src=\"resources/images/button_icons/downArrow.png\"/></div>',\r",
                    "                           '    <div style=\"\" class = \"retailerDetailImg\" data-name=\"no_of_images\">Images<img src=\"resources/images/button_icons/downArrow.png\"/></div>',\r",
                    "                           '    <div style=\"\" class = \"retailerDetailAddlImg\" data-name=\"no_of_additional_images\">Addl Images<img src=\"resources/images/button_icons/downArrow.png\"/></div>',\r",
                    "                           '</div>'\r",
                    "                          );\r",
                    "\r",
                    "\r",
                    "\r",
                    "    listTpl = Ext.create('Ext.XTemplate',\r",
                    "                         '<div class=\"x-rm-listtpl-main pointerCursor\">',\r",
                    "                         '    <div style=\"width: 8%;\">',\r",
                    "                         '        <div style=\"width: 19px; height:19px;\" class=\"fireListSelect\"></div>',\r",
                    "                         '    </div>',\r",
                    "                             '<div style=\"\" class = \"retailerDetailAccountNo\" type =\"text\"  >{Account_No}</div>',\r",
                    "                         '    <div style=\"{[this.getColorForVendor(values)]}\" class = \"retailerDetailVendorName\">{vendor_name}</div>',\r",
                    "                         '    <div style=\"\" class = \"retailerDetailSKU boldText\" >{SKU}</div>',\r",
                    "                         '    <div style=\"\" class = \"retailerDetailCollection\">{collections}</div>',\r",
                    "                         '    <div style=\"\" class = \"retailerDetailDesign\">{design}</div>',\r",
                    "                         '    <div style=\"\" class = \"retailerDetailImg\" >{no_of_images}</div>',\r",
                    "                         '    <div style=\"\" class = \"retailerDetailAddlImg\">{no_of_additional_images}</div>',\r",
                    "                         '</div>',\r",
                    "                         {\r",
                    "\r",
                    "                             getColorForVendor:function(  values){\r",
                    "\r",
                    "                                 return getColorStringForVendor(values);\r",
                    "\r",
                    "                             }\r",
                    "                         }\r",
                    "                        );\r",
                    "\r",
                    "    tplOfInlist = Ext.create('Ext.XTemplate',\r",
                    "                         '<div class=\"x-rm-listtpl-main pointerCursor\">',\r",
                    "                         '    <div style=\"width: 8%;\">',\r",
                    "                         '        <div style=\"width: 19px; height:19px;\" class=\"fireListSelect\"></div>',\r",
                    "                         '    </div>',\r",
                    "                             '<div style=\"\" class = \"retailerDetailAccountNo\" type =\"text\"  >{Account_No}</div>',\r",
                    "                         '    <div style=\"{[this.getColorForVendor(values)]}\" class = \"retailerDetailVendorName\">{vendor_name}</div>',\r",
                    "                         '    <div style=\"\" class = \"retailerDetailSKU boldText\" >{SKU}</div>',\r",
                    "                         '    <div style=\"\" class = \"retailerDetailCollection\">{collections}</div>',\r",
                    "                         '    <div style=\"\" class = \"retailerDetailDesign\">{design}</div>',\r",
                    "                         '    <div style=\"\" class = \"retailerDetailImg\" >{no_of_images}</div>',\r",
                    "                         '    <div style=\"\" class = \"retailerDetailAddlImg\">{no_of_additional_images}</div>',\r",
                    "                         '</div>',\r",
                    "                         {\r",
                    "\r",
                    "                             getColorForVendor:function(  values){\r",
                    "\r",
                    "                                 return getColorStringForVendor(values);\r",
                    "\r",
                    "                             }\r",
                    "                         }\r",
                    "                        );\r",
                    "\r",
                    "\r",
                    "\r",
                    "}\r",
                    "else\r",
                    "{\r",
                    "    headerTpl = Ext.create('Ext.XTemplate',\r",
                    "                           '<div class=\"x-rm-listtpl-main\">',\r",
                    "                           '    <div style=\"width: 12%;\">',\r",
                    "                           '        <div style=\"width: 20px;\" data-name=\"all\"></div>',\r",
                    "                           '    </div>',\r",
                    "                           '    <div style=\"width: 35%;\" data-name=\"store_name\">Name</div>',\r",
                    "                           '    <div style=\"width: 30%;\" data-name=\"store_city\">City</div>',\r",
                    "                           '    <div style=\"width: 15%;\" data-name=\"store_state\">State</div>',\r",
                    "\r",
                    "                           '</div>'\r",
                    "                          );\r",
                    "    tplOfInStoreHeader = Ext.create('Ext.XTemplate',\r",
                    "                           '<div class=\"x-rm-listtpl-main\">',\r",
                    "                           '    <div style=\"width: 12%;\">',\r",
                    "                           '        <div style=\"width: 20px;\" data-name=\"all\"></div>',\r",
                    "                           '    </div>',\r",
                    "                           '    <div style=\"width: 35%;\" data-name=\"store_name\">Name</div>',\r",
                    "                           '    <div style=\"width: 30%;\" data-name=\"store_city\">City</div>',\r",
                    "                           '    <div style=\"width: 15%;\" data-name=\"store_state\">State</div>',\r",
                    "\r",
                    "                           '</div>'\r",
                    "                          );\r",
                    "\r",
                    "\r",
                    "    listTpl = Ext.create('Ext.XTemplate',\r",
                    "                         '<div class=\"x-rm-listtpl-main pointerCursor\">',\r",
                    "                         '    <div style=\"width: 12%;\">',\r",
                    "                         '        <div style=\"width: 20px; height:20px;\"class=\"fireListSelect\"></div>',\r",
                    "                         '    </div>',\r",
                    "                         '    <div style=\"width: 35%;\">{store_name}</div>',\r",
                    "                         '    <div style=\"width: 30%;\">{store_city}</div>',\r",
                    "                          '    <div style=\"width: 15%;\">{store_state}</div>',\r",
                    "                         '</div>'\r",
                    "                        );\r",
                    "    tplOfInlist = Ext.create('Ext.XTemplate',\r",
                    "                         '<div class=\"x-rm-listtpl-main pointerCursor\">',\r",
                    "                         '    <div style=\"width: 12%;\">',\r",
                    "                         '        <div style=\"width: 20px; height:20px;\"class=\"fireListSelect\"></div>',\r",
                    "                         '    </div>',\r",
                    "                         '    <div style=\"width: 35%;\">{store_name}</div>',\r",
                    "                         '    <div style=\"width: 30%;\">{store_city}</div>',\r",
                    "                          '    <div style=\"width: 15%;\">{store_state}</div>',\r",
                    "                         '</div>'\r",
                    "                        );\r",
                    "\r",
                    "\r",
                    "// /vendors.Master\r",
                    "\r",
                    "}\r",
                    "\r",
                    "\r",
                    "InStoreHeaders.setItemTpl(tplOfInStoreHeader);\r",
                    "OnlineHeaders.setItemTpl(headerTpl);\r",
                    "InStoreHeaders.refresh();\r",
                    "OnlineHeaders.refresh();\r",
                    "\r",
                    "var InStoreList = component.down(\"#RDInStoreVendorsTab\").down('#mainList');\r",
                    "var OnlineList = component.down(\"#RDOnlineVendorsTab\").down('#mainList');\r",
                    "\r",
                    "InStoreList.setItemHeight(22);\r",
                    "OnlineList.setItemHeight(22);\r",
                    "InStoreList.setMode('MULTI');\r",
                    "OnlineList.setMode('MULTI');\r",
                    "InStoreList.addCls('x-rm-rdvendorslist');\r",
                    "OnlineList.addCls('x-rm-rdvendorslist');\r",
                    "\r",
                    "//InStoreList.setStore('retailersStoreVendors');//\r",
                    "\r",
                    "console.error(\"STORE CONNECTED TO LIST E COMMERCE LIST\");\r",
                    "\r",
                    "if(isRetailerDetailsView)\r",
                    "{\r",
                    "//    OnlineList.setStore('vendors.Master');\r",
                    "     OnlineList.setData(    getArrayFromStore(Ext.getStore('vendors.Master')));\r",
                    "}else{\r",
                    "     //OnlineList.setStore('retailersMaster');\r",
                    "//    OnlineList.setStore('retailers.prospectRTForVendor');\r",
                    "//    OnlineList.setData(    getArrayFromStore(Ex.getStore('vendors.Master')));\r",
                    "\r",
                    "}\r",
                    "\r",
                    "\r",
                    "\r",
                    "//OnlineList.setStore('retailersOnlineStoreVendors');\r",
                    "InStoreList.config.isUserEditionPermitted = false;\r",
                    "InStoreList.setItemTpl(tplOfInlist);\r",
                    "\r",
                    "var inStoreListStore = InStoreList.getStore();\r",
                    "OnlineList.setItemTpl(listTpl);\r",
                    "InStoreList.refresh();\r",
                    "OnlineList.refresh();\r",
                    "if(inStoreListStore){\r",
                    "    inStoreListStore.removeAll();\r",
                    "}\r",
                    "\r",
                    "this.setTplOnlineECatalogList(isRetailerDetailsView);"
                ]
            },
            "designerId": "f576121a-83d7-4970-bbb3-ab116dbe3fc3"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "isRetailerDetailsView"
                ],
                "fn": "setTplOnlineECatalogList",
                "implHandler": [
                    "var component = Ext.ComponentQuery.query('#RDForEcatalog')[0];\r",
                    "var InStoreHeaders = component.down(\"#RDInStoreVendorsTab\").down(\"#headerList\");\r",
                    "var OnlineHeaders = component.down(\"#RDOnlineVendorsTab\").down(\"#headerList\");\r",
                    "InStoreHeaders.setData([{}]);\r",
                    "OnlineHeaders.setData([{}]);\r",
                    "var headerTpl , listTpl ;\r",
                    "var tplOfInStoreHeader;\r",
                    "var tplOfInlist;\r",
                    "\r",
                    "\r",
                    "//RDForECommerce\r",
                    "if(isRetailerDetailsView)\r",
                    "{ \r",
                    "    headerTpl = Ext.create('Ext.XTemplate',\r",
                    "                           '<div class=\"x-rm-listtpl-main\">',\r",
                    "                           '    <div style=\"width: 8%;\">',\r",
                    "                           '        <div style=\"width: 20px;\" data-name=\"all\"></div>',\r",
                    "                           '    </div>',\r",
                    "                           '    <div style=\"\" class = \"retailerDetailAccountNo\" data-name=\"vendor_name\" >Acct. No<img src=\"resources/images/button_icons/downArrow.png\"/></div>',\r",
                    "                           '    <div style=\"\" class = \"retailerDetailVendorName\" data-name=\"vendor_name\">Name<img src=\"resources/images/button_icons/downArrow.png\"/></div>',\r",
                    "                           '    <div style=\"\" class = \"retailerDetailSKU\" data-name=\"SKU\">SKUs<img src=\"resources/images/button_icons/downArrow.png\"/></div>',\r",
                    "                           '    <div style=\"\" class = \"retailerDetailCollection\" data-name=\"collections\">Collections<img src=\"resources/images/button_icons/downArrow.png\"/></div>',\r",
                    "                           '    <div style=\"\" class = \"retailerDetailDesign\" data-name=\"design\">Designs<img src=\"resources/images/button_icons/downArrow.png\"/></div>',\r",
                    "                           '    <div style=\"\" class = \"retailerDetailImg\" data-name=\"no_of_images\">Images<img src=\"resources/images/button_icons/downArrow.png\"/></div>',\r",
                    "                           '    <div style=\"\" class = \"retailerDetailAddlImg\" data-name=\"no_of_additional_images\">Addl Images<img src=\"resources/images/button_icons/downArrow.png\"/></div>',\r",
                    "                           '</div>'\r",
                    "                          );\r",
                    "    \r",
                    "    \r",
                    "    tplOfInStoreHeader = Ext.create('Ext.XTemplate',\r",
                    "                           '<div class=\"x-rm-listtpl-main\">',\r",
                    "                           '    <div style=\"width: 8%;\">',\r",
                    "                           '        <div style=\"width: 20px;\" data-name=\"all\"></div>',\r",
                    "                           '    </div>',\r",
                    "                           '    <div style=\"\" class = \"retailerDetailAccountNo\" data-name=\"vendor_name\" >Acct. No<img src=\"resources/images/button_icons/downArrow.png\"/></div>',\r",
                    "                           '    <div style=\"\" class = \"retailerDetailVendorName\" data-name=\"vendor_name\">Name<img src=\"resources/images/button_icons/downArrow.png\"/></div>',\r",
                    "                           '    <div style=\"\" class = \"retailerDetailSKU\" data-name=\"SKU\">SKUs<img src=\"resources/images/button_icons/downArrow.png\"/></div>',\r",
                    "                           '    <div style=\"\" class = \"retailerDetailCollection\" data-name=\"collections\">Collections<img src=\"resources/images/button_icons/downArrow.png\"/></div>',\r",
                    "                           '    <div style=\"\" class = \"retailerDetailDesign\" data-name=\"design\">Designs<img src=\"resources/images/button_icons/downArrow.png\"/></div>',\r",
                    "                           '    <div style=\"\" class = \"retailerDetailImg\" data-name=\"no_of_images\">Images<img src=\"resources/images/button_icons/downArrow.png\"/></div>',\r",
                    "                           '    <div style=\"\" class = \"retailerDetailAddlImg\" data-name=\"no_of_additional_images\">Addl Images<img src=\"resources/images/button_icons/downArrow.png\"/></div>',\r",
                    "                           '</div>'\r",
                    "                          );\r",
                    "\r",
                    "\r",
                    "\r",
                    "    listTpl = Ext.create('Ext.XTemplate',\r",
                    "                         '<div class=\"x-rm-listtpl-main pointerCursor\">',\r",
                    "                         '    <div style=\"width: 8%;\">',\r",
                    "                         '        <div style=\"width: 19px; height:19px;\" class=\"fireListSelect\"></div>',\r",
                    "                         '    </div>',\r",
                    "                             '<div style=\"\" class = \"retailerDetailAccountNo\" type =\"text\"  >{Account_No}</div>',\r",
                    "                         '    <div style=\"{[this.getColorForVendor(values)]}\" class = \"retailerDetailVendorName\">{vendor_name}</div>',\r",
                    "                         '    <div style=\"\" class = \"retailerDetailSKU boldText\" >{SKU}</div>',\r",
                    "                         '    <div style=\"\" class = \"retailerDetailCollection\">{collections}</div>',\r",
                    "                         '    <div style=\"\" class = \"retailerDetailDesign\">{design}</div>',\r",
                    "                         '    <div style=\"\" class = \"retailerDetailImg\" >{no_of_images}</div>',\r",
                    "                         '    <div style=\"\" class = \"retailerDetailAddlImg\">{no_of_additional_images}</div>',\r",
                    "                         '</div>',\r",
                    "                         {\r",
                    "                             \r",
                    "                             getColorForVendor:function(  values){\r",
                    "                                 \r",
                    "                                 return getColorStringForVendor(values);\r",
                    "                                 \r",
                    "                             }\r",
                    "                         }\r",
                    "                        );\r",
                    "\r",
                    "    tplOfInlist = Ext.create('Ext.XTemplate',\r",
                    "                         '<div class=\"x-rm-listtpl-main pointerCursor\">',\r",
                    "                         '    <div style=\"width: 8%;\">',\r",
                    "                         '        <div style=\"width: 19px; height:19px;\" class=\"fireListSelect\"></div>',\r",
                    "                         '    </div>',\r",
                    "                             '<div style=\"\" class = \"retailerDetailAccountNo\" type =\"text\"  >{Account_No}</div>',\r",
                    "                         '    <div style=\"{[this.getColorForVendor(values)]}\" class = \"retailerDetailVendorName\">{vendor_name}</div>',\r",
                    "                         '    <div style=\"\" class = \"retailerDetailSKU boldText\" >{SKU}</div>',\r",
                    "                         '    <div style=\"\" class = \"retailerDetailCollection\">{collections}</div>',\r",
                    "                         '    <div style=\"\" class = \"retailerDetailDesign\">{design}</div>',\r",
                    "                         '    <div style=\"\" class = \"retailerDetailImg\" >{no_of_images}</div>',\r",
                    "                         '    <div style=\"\" class = \"retailerDetailAddlImg\">{no_of_additional_images}</div>',\r",
                    "                         '</div>',\r",
                    "                         {\r",
                    "                             \r",
                    "                             getColorForVendor:function(  values){\r",
                    "                                 \r",
                    "                                 return getColorStringForVendor(values);\r",
                    "                                 \r",
                    "                             }\r",
                    "                         }\r",
                    "                        );\r",
                    "\r",
                    "\r",
                    "\r",
                    "}\r",
                    "else\r",
                    "{\r",
                    "    headerTpl = Ext.create('Ext.XTemplate',\r",
                    "                           '<div class=\"x-rm-listtpl-main\">',\r",
                    "                           '    <div style=\"width: 12%;\">',\r",
                    "                           '        <div style=\"width: 20px;\" data-name=\"all\"></div>',\r",
                    "                           '    </div>',\r",
                    "                           '    <div style=\"width: 35%;\" data-name=\"store_name\">Name</div>',\r",
                    "                           '    <div style=\"width: 30%;\" data-name=\"store_city\">City</div>',\r",
                    "                           '    <div style=\"width: 15%;\" data-name=\"store_state\">State</div>',\r",
                    "\r",
                    "                           '</div>'\r",
                    "                          );\r",
                    "    tplOfInStoreHeader = Ext.create('Ext.XTemplate',\r",
                    "                           '<div class=\"x-rm-listtpl-main\">',\r",
                    "                           '    <div style=\"width: 12%;\">',\r",
                    "                           '        <div style=\"width: 20px;\" data-name=\"all\"></div>',\r",
                    "                           '    </div>',\r",
                    "                           '    <div style=\"width: 35%;\" data-name=\"store_name\">Name</div>',\r",
                    "                           '    <div style=\"width: 30%;\" data-name=\"store_city\">City</div>',\r",
                    "                           '    <div style=\"width: 15%;\" data-name=\"store_state\">State</div>',\r",
                    "\r",
                    "                           '</div>'\r",
                    "                          );\r",
                    "\r",
                    "\r",
                    "    listTpl = Ext.create('Ext.XTemplate',\r",
                    "                         '<div class=\"x-rm-listtpl-main pointerCursor\">',\r",
                    "                         '    <div style=\"width: 12%;\">',\r",
                    "                         '        <div style=\"width: 20px; height:20px;\"class=\"fireListSelect\"></div>',\r",
                    "                         '    </div>',\r",
                    "                         '    <div style=\"width: 35%;\">{store_name}</div>',\r",
                    "                         '    <div style=\"width: 30%;\">{store_city}</div>',\r",
                    "                          '    <div style=\"width: 15%;\">{store_state}</div>',\r",
                    "                         '</div>'\r",
                    "                        );\r",
                    "    tplOfInlist = Ext.create('Ext.XTemplate',\r",
                    "                         '<div class=\"x-rm-listtpl-main pointerCursor\">',\r",
                    "                         '    <div style=\"width: 12%;\">',\r",
                    "                         '        <div style=\"width: 20px; height:20px;\"class=\"fireListSelect\"></div>',\r",
                    "                         '    </div>',\r",
                    "                         '    <div style=\"width: 35%;\">{store_name}</div>',\r",
                    "                         '    <div style=\"width: 30%;\">{store_city}</div>',\r",
                    "                          '    <div style=\"width: 15%;\">{store_state}</div>',\r",
                    "                         '</div>'\r",
                    "                        );\r",
                    "\r",
                    "\r",
                    "// /vendors.Master\r",
                    "\r",
                    "}\r",
                    "\r",
                    "\r",
                    "InStoreHeaders.setItemTpl(tplOfInStoreHeader);\r",
                    "OnlineHeaders.setItemTpl(headerTpl);\r",
                    "InStoreHeaders.refresh();\r",
                    "OnlineHeaders.refresh();\r",
                    "\r",
                    "var InStoreList = component.down(\"#RDInStoreVendorsTab\").down('#mainList');\r",
                    "var OnlineList = component.down(\"#RDOnlineVendorsTab\").down('#mainList');\r",
                    "\r",
                    "InStoreList.setItemHeight(22);\r",
                    "OnlineList.setItemHeight(22);\r",
                    "InStoreList.setMode('MULTI');\r",
                    "OnlineList.setMode('MULTI');\r",
                    "InStoreList.addCls('x-rm-rdvendorslist');\r",
                    "OnlineList.addCls('x-rm-rdvendorslist');\r",
                    "\r",
                    "//InStoreList.setStore('retailersStoreVendors');//\r",
                    "\r",
                    "console.error(\"STORE CONNECTED TO LIST E COMMERCE LIST\");\r",
                    "\r",
                    "if(isRetailerDetailsView)\r",
                    "{\r",
                    "//    OnlineList.setStore('vendors.Master');\r",
                    "     OnlineList.setData(    getArrayFromStore(Ext.getStore('vendors.Master')));\r",
                    "}else{\r",
                    "     //OnlineList.setStore('retailersMaster');\r",
                    "//    OnlineList.setStore('retailers.prospectRTForVendor');\r",
                    "//    OnlineList.setData(    getArrayFromStore(Ex.getStore('vendors.Master')));\r",
                    "\r",
                    "}\r",
                    "\r",
                    "\r",
                    "\r",
                    "//OnlineList.setStore('retailersOnlineStoreVendors');\r",
                    "InStoreList.config.isUserEditionPermitted = false;\r",
                    "InStoreList.setItemTpl(tplOfInlist);\r",
                    "\r",
                    "var inStoreListStore = InStoreList.getStore();\r",
                    "OnlineList.setItemTpl(listTpl);\r",
                    "InStoreList.refresh();\r",
                    "OnlineList.refresh();\r",
                    "if(inStoreListStore){\r",
                    "    inStoreListStore.removeAll();\r",
                    "}\r",
                    "\r",
                    "this.setTplOnlineIrugzList(isRetailerDetailsView);"
                ]
            },
            "designerId": "f5a31161-df7b-43d2-a850-177e74d9eaf6"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "isRetailerDetailsView"
                ],
                "fn": "setTplOnlineIrugzList",
                "implHandler": [
                    "var component = Ext.ComponentQuery.query('#RDForIRugz')[0];\r",
                    "var InStoreHeaders = component.down(\"#RDInStoreVendorsTab\").down(\"#headerList\");\r",
                    "var OnlineHeaders = component.down(\"#RDOnlineVendorsTab\").down(\"#headerList\");\r",
                    "InStoreHeaders.setData([{}]);\r",
                    "OnlineHeaders.setData([{}]);\r",
                    "var headerTpl , listTpl ;\r",
                    "var tplOfInStoreHeader;\r",
                    "var tplOfInlist;\r",
                    "\r",
                    "\r",
                    "//RDForECommerce\r",
                    "if(isRetailerDetailsView)\r",
                    "{\r",
                    "    headerTpl = Ext.create('Ext.XTemplate',\r",
                    "                           '<div class=\"x-rm-listtpl-main\">',\r",
                    "                           '    <div style=\"width: 8%;\">',\r",
                    "                           '        <div style=\"width: 20px;\" data-name=\"all\"></div>',\r",
                    "                           '    </div>',\r",
                    "                           '    <div style=\"\" class = \"retailerDetailAccountNo\" data-name=\"vendor_name\" >Acct. No<img src=\"resources/images/button_icons/downArrow.png\"/></div>',\r",
                    "                           '    <div style=\"\" class = \"retailerDetailVendorName\" data-name=\"vendor_name\">Name<img src=\"resources/images/button_icons/downArrow.png\"/></div>',\r",
                    "                           '    <div style=\"\" class = \"retailerDetailSKU\" data-name=\"SKU\">SKUs<img src=\"resources/images/button_icons/downArrow.png\"/></div>',\r",
                    "                           '    <div style=\"\" class = \"retailerDetailCollection\" data-name=\"collections\">Collections<img src=\"resources/images/button_icons/downArrow.png\"/></div>',\r",
                    "                           '    <div style=\"\" class = \"retailerDetailDesign\" data-name=\"design\">Designs<img src=\"resources/images/button_icons/downArrow.png\"/></div>',\r",
                    "                           '    <div style=\"\" class = \"retailerDetailImg\" data-name=\"no_of_images\">Images<img src=\"resources/images/button_icons/downArrow.png\"/></div>',\r",
                    "                           '    <div style=\"\" class = \"retailerDetailAddlImg\" data-name=\"no_of_additional_images\">Addl Images<img src=\"resources/images/button_icons/downArrow.png\"/></div>',\r",
                    "                           '</div>'\r",
                    "                          );\r",
                    "\r",
                    "\r",
                    "    tplOfInStoreHeader = Ext.create('Ext.XTemplate',\r",
                    "                           '<div class=\"x-rm-listtpl-main\">',\r",
                    "                           '    <div style=\"width: 8%;\">',\r",
                    "                           '        <div style=\"width: 20px;\" data-name=\"all\"></div>',\r",
                    "                           '    </div>',\r",
                    "                           '    <div style=\"\" class = \"retailerDetailAccountNo\" data-name=\"vendor_name\" >Acct. No<img src=\"resources/images/button_icons/downArrow.png\"/></div>',\r",
                    "                           '    <div style=\"\" class = \"retailerDetailVendorName\" data-name=\"vendor_name\">Name<img src=\"resources/images/button_icons/downArrow.png\"/></div>',\r",
                    "                           '    <div style=\"\" class = \"retailerDetailSKU\" data-name=\"SKU\">SKUs<img src=\"resources/images/button_icons/downArrow.png\"/></div>',\r",
                    "                           '    <div style=\"\" class = \"retailerDetailCollection\" data-name=\"collections\">Collections<img src=\"resources/images/button_icons/downArrow.png\"/></div>',\r",
                    "                           '    <div style=\"\" class = \"retailerDetailDesign\" data-name=\"design\">Designs<img src=\"resources/images/button_icons/downArrow.png\"/></div>',\r",
                    "                           '    <div style=\"\" class = \"retailerDetailImg\" data-name=\"no_of_images\">Images<img src=\"resources/images/button_icons/downArrow.png\"/></div>',\r",
                    "                           '    <div style=\"\" class = \"retailerDetailAddlImg\" data-name=\"no_of_additional_images\">Addl Images<img src=\"resources/images/button_icons/downArrow.png\"/></div>',\r",
                    "                           '</div>'\r",
                    "                          );\r",
                    "\r",
                    "\r",
                    "\r",
                    "    listTpl = Ext.create('Ext.XTemplate',\r",
                    "                         '<div class=\"x-rm-listtpl-main pointerCursor\">',\r",
                    "                         '    <div style=\"width: 8%;\">',\r",
                    "                         '        <div style=\"width: 19px; height:19px;\" class=\"fireListSelect\"></div>',\r",
                    "                         '    </div>',\r",
                    "                             '<div style=\"\" class = \"retailerDetailAccountNo\" type =\"text\"  >{Account_No}</div>',\r",
                    "                         '    <div style=\"{[this.getColorForVendor(values)]}\" class = \"retailerDetailVendorName\">{vendor_name}</div>',\r",
                    "                         '    <div style=\"\" class = \"retailerDetailSKU boldText\" >{SKU}</div>',\r",
                    "                         '    <div style=\"\" class = \"retailerDetailCollection\">{collections}</div>',\r",
                    "                         '    <div style=\"\" class = \"retailerDetailDesign\">{design}</div>',\r",
                    "                         '    <div style=\"\" class = \"retailerDetailImg\" >{no_of_images}</div>',\r",
                    "                         '    <div style=\"\" class = \"retailerDetailAddlImg\">{no_of_additional_images}</div>',\r",
                    "                         '</div>',\r",
                    "                         {\r",
                    "\r",
                    "                             getColorForVendor:function(  values){\r",
                    "\r",
                    "                                 return getColorStringForVendor(values);\r",
                    "\r",
                    "                             }\r",
                    "                         }\r",
                    "                        );\r",
                    "\r",
                    "    tplOfInlist = Ext.create('Ext.XTemplate',\r",
                    "                         '<div class=\"x-rm-listtpl-main pointerCursor\">',\r",
                    "                         '    <div style=\"width: 8%;\">',\r",
                    "                         '        <div style=\"width: 19px; height:19px;\" class=\"fireListSelect\"></div>',\r",
                    "                         '    </div>',\r",
                    "                             '<div style=\"\" class = \"retailerDetailAccountNo\" type =\"text\"  >{Account_No}</div>',\r",
                    "                         '    <div style=\"{[this.getColorForVendor(values)]}\" class = \"retailerDetailVendorName\">{vendor_name}</div>',\r",
                    "                         '    <div style=\"\" class = \"retailerDetailSKU boldText\" >{SKU}</div>',\r",
                    "                         '    <div style=\"\" class = \"retailerDetailCollection\">{collections}</div>',\r",
                    "                         '    <div style=\"\" class = \"retailerDetailDesign\">{design}</div>',\r",
                    "                         '    <div style=\"\" class = \"retailerDetailImg\" >{no_of_images}</div>',\r",
                    "                         '    <div style=\"\" class = \"retailerDetailAddlImg\">{no_of_additional_images}</div>',\r",
                    "                         '</div>',\r",
                    "                         {\r",
                    "\r",
                    "                             getColorForVendor:function(  values){\r",
                    "\r",
                    "                                 return getColorStringForVendor(values);\r",
                    "\r",
                    "                             }\r",
                    "                         }\r",
                    "                        );\r",
                    "\r",
                    "\r",
                    "\r",
                    "}\r",
                    "else\r",
                    "{\r",
                    "    headerTpl = Ext.create('Ext.XTemplate',\r",
                    "                           '<div class=\"x-rm-listtpl-main\">',\r",
                    "                           '    <div style=\"width: 12%;\">',\r",
                    "                           '        <div style=\"width: 20px;\" data-name=\"all\"></div>',\r",
                    "                           '    </div>',\r",
                    "                           '    <div style=\"width: 35%;\" data-name=\"store_name\">Name</div>',\r",
                    "                           '    <div style=\"width: 30%;\" data-name=\"store_city\">City</div>',\r",
                    "                           '    <div style=\"width: 15%;\" data-name=\"store_state\">State</div>',\r",
                    "\r",
                    "                           '</div>'\r",
                    "                          );\r",
                    "    tplOfInStoreHeader = Ext.create('Ext.XTemplate',\r",
                    "                           '<div class=\"x-rm-listtpl-main\">',\r",
                    "                           '    <div style=\"width: 12%;\">',\r",
                    "                           '        <div style=\"width: 20px;\" data-name=\"all\"></div>',\r",
                    "                           '    </div>',\r",
                    "                           '    <div style=\"width: 35%;\" data-name=\"store_name\">Name</div>',\r",
                    "                           '    <div style=\"width: 30%;\" data-name=\"store_city\">City</div>',\r",
                    "                           '    <div style=\"width: 15%;\" data-name=\"store_state\">State</div>',\r",
                    "\r",
                    "                           '</div>'\r",
                    "                          );\r",
                    "\r",
                    "\r",
                    "    listTpl = Ext.create('Ext.XTemplate',\r",
                    "                         '<div class=\"x-rm-listtpl-main pointerCursor\">',\r",
                    "                         '    <div style=\"width: 12%;\">',\r",
                    "                         '        <div style=\"width: 20px; height:20px;\"class=\"fireListSelect\"></div>',\r",
                    "                         '    </div>',\r",
                    "                         '    <div style=\"width: 35%;\">{store_name}</div>',\r",
                    "                         '    <div style=\"width: 30%;\">{store_city}</div>',\r",
                    "                          '    <div style=\"width: 15%;\">{store_state}</div>',\r",
                    "                         '</div>'\r",
                    "                        );\r",
                    "    tplOfInlist = Ext.create('Ext.XTemplate',\r",
                    "                         '<div class=\"x-rm-listtpl-main pointerCursor\">',\r",
                    "                         '    <div style=\"width: 12%;\">',\r",
                    "                         '        <div style=\"width: 20px; height:20px;\"class=\"fireListSelect\"></div>',\r",
                    "                         '    </div>',\r",
                    "                         '    <div style=\"width: 35%;\">{store_name}</div>',\r",
                    "                         '    <div style=\"width: 30%;\">{store_city}</div>',\r",
                    "                          '    <div style=\"width: 15%;\">{store_state}</div>',\r",
                    "                         '</div>'\r",
                    "                        );\r",
                    "\r",
                    "\r",
                    "// /vendors.Master\r",
                    "\r",
                    "}\r",
                    "\r",
                    "\r",
                    "InStoreHeaders.setItemTpl(tplOfInStoreHeader);\r",
                    "OnlineHeaders.setItemTpl(headerTpl);\r",
                    "InStoreHeaders.refresh();\r",
                    "OnlineHeaders.refresh();\r",
                    "\r",
                    "var InStoreList = component.down(\"#RDInStoreVendorsTab\").down('#mainList');\r",
                    "var OnlineList = component.down(\"#RDOnlineVendorsTab\").down('#mainList');\r",
                    "\r",
                    "InStoreList.setItemHeight(22);\r",
                    "OnlineList.setItemHeight(22);\r",
                    "InStoreList.setMode('MULTI');\r",
                    "OnlineList.setMode('MULTI');\r",
                    "InStoreList.addCls('x-rm-rdvendorslist');\r",
                    "OnlineList.addCls('x-rm-rdvendorslist');\r",
                    "\r",
                    "//InStoreList.setStore('retailersStoreVendors');//\r",
                    "\r",
                    "console.error(\"STORE CONNECTED TO LIST E COMMERCE LIST\");\r",
                    "\r",
                    "if(isRetailerDetailsView)\r",
                    "{\r",
                    "//    OnlineList.setStore('vendors.Master');\r",
                    "     OnlineList.setData(    getArrayFromStore(Ext.getStore('vendors.Master')));\r",
                    "}else{\r",
                    "     //OnlineList.setStore('retailersMaster');\r",
                    "//    OnlineList.setStore('retailers.prospectRTForVendor');\r",
                    "//    OnlineList.setData(    getArrayFromStore(Ex.getStore('vendors.Master')));\r",
                    "\r",
                    "}\r",
                    "\r",
                    "\r",
                    "\r",
                    "//OnlineList.setStore('retailersOnlineStoreVendors');\r",
                    "InStoreList.config.isUserEditionPermitted = false;\r",
                    "InStoreList.setItemTpl(tplOfInlist);\r",
                    "\r",
                    "var inStoreListStore = InStoreList.getStore();\r",
                    "OnlineList.setItemTpl(listTpl);\r",
                    "InStoreList.refresh();\r",
                    "OnlineList.refresh();\r",
                    "if(inStoreListStore){\r",
                    "    inStoreListStore.removeAll();\r",
                    "}\r",
                    "\r",
                    "this.setTplOnlineRMproList(isRetailerDetailsView);"
                ]
            },
            "designerId": "809fe306-71a0-4cbc-b5cb-1b3433b25583"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "isRetailerDetailsView"
                ],
                "fn": "setTplOnlineRMproList",
                "implHandler": [
                    "var component = Ext.ComponentQuery.query('#RDForRMPro')[0];\r",
                    "var InStoreHeaders = component.down(\"#RDInStoreVendorsTab\").down(\"#headerList\");\r",
                    "var OnlineHeaders = component.down(\"#RDOnlineVendorsTab\").down(\"#headerList\");\r",
                    "InStoreHeaders.setData([{}]);\r",
                    "OnlineHeaders.setData([{}]);\r",
                    "var headerTpl , listTpl ;\r",
                    "var tplOfInStoreHeader;\r",
                    "var tplOfInlist;\r",
                    "\r",
                    "\r",
                    "//RDForECommerce\r",
                    "if(isRetailerDetailsView)\r",
                    "{ \r",
                    "    headerTpl = Ext.create('Ext.XTemplate',\r",
                    "                           '<div class=\"x-rm-listtpl-main\">',\r",
                    "                           '    <div style=\"width: 8%;\">',\r",
                    "                           '        <div style=\"width: 20px;\" data-name=\"all\"></div>',\r",
                    "                           '    </div>',\r",
                    "                           '    <div style=\"\" class = \"retailerDetailAccountNo\" data-name=\"vendor_name\" >Acct. No<img src=\"resources/images/button_icons/downArrow.png\"/></div>',\r",
                    "                           '    <div style=\"\" class = \"retailerDetailVendorName\" data-name=\"vendor_name\">Name<img src=\"resources/images/button_icons/downArrow.png\"/></div>',\r",
                    "                           '    <div style=\"\" class = \"retailerDetailSKU\" data-name=\"SKU\">SKUs<img src=\"resources/images/button_icons/downArrow.png\"/></div>',\r",
                    "                           '    <div style=\"\" class = \"retailerDetailCollection\" data-name=\"collections\">Collections<img src=\"resources/images/button_icons/downArrow.png\"/></div>',\r",
                    "                           '    <div style=\"\" class = \"retailerDetailDesign\" data-name=\"design\">Designs<img src=\"resources/images/button_icons/downArrow.png\"/></div>',\r",
                    "                           '    <div style=\"\" class = \"retailerDetailImg\" data-name=\"no_of_images\">Images<img src=\"resources/images/button_icons/downArrow.png\"/></div>',\r",
                    "                           '    <div style=\"\" class = \"retailerDetailAddlImg\" data-name=\"no_of_additional_images\">Addl Images<img src=\"resources/images/button_icons/downArrow.png\"/></div>',\r",
                    "                           '</div>'\r",
                    "                          );\r",
                    "    \r",
                    "    \r",
                    "    tplOfInStoreHeader = Ext.create('Ext.XTemplate',\r",
                    "                           '<div class=\"x-rm-listtpl-main\">',\r",
                    "                           '    <div style=\"width: 8%;\">',\r",
                    "                           '        <div style=\"width: 20px;\" data-name=\"all\"></div>',\r",
                    "                           '    </div>',\r",
                    "                           '    <div style=\"\" class = \"retailerDetailAccountNo\" data-name=\"vendor_name\" >Acct. No<img src=\"resources/images/button_icons/downArrow.png\"/></div>',\r",
                    "                           '    <div style=\"\" class = \"retailerDetailVendorName\" data-name=\"vendor_name\">Name<img src=\"resources/images/button_icons/downArrow.png\"/></div>',\r",
                    "                           '    <div style=\"\" class = \"retailerDetailSKU\" data-name=\"SKU\">SKUs<img src=\"resources/images/button_icons/downArrow.png\"/></div>',\r",
                    "                           '    <div style=\"\" class = \"retailerDetailCollection\" data-name=\"collections\">Collections<img src=\"resources/images/button_icons/downArrow.png\"/></div>',\r",
                    "                           '    <div style=\"\" class = \"retailerDetailDesign\" data-name=\"design\">Designs<img src=\"resources/images/button_icons/downArrow.png\"/></div>',\r",
                    "                           '    <div style=\"\" class = \"retailerDetailImg\" data-name=\"no_of_images\">Images<img src=\"resources/images/button_icons/downArrow.png\"/></div>',\r",
                    "                           '    <div style=\"\" class = \"retailerDetailAddlImg\" data-name=\"no_of_additional_images\">Addl Images<img src=\"resources/images/button_icons/downArrow.png\"/></div>',\r",
                    "                           '</div>'\r",
                    "                          );\r",
                    "\r",
                    "\r",
                    "\r",
                    "    listTpl = Ext.create('Ext.XTemplate',\r",
                    "                         '<div class=\"x-rm-listtpl-main pointerCursor\">',\r",
                    "                         '    <div style=\"width: 8%;\">',\r",
                    "                         '        <div style=\"width: 19px; height:19px;\" class=\"fireListSelect\"></div>',\r",
                    "                         '    </div>',\r",
                    "                             '<div style=\"\" class = \"retailerDetailAccountNo\" type =\"text\"  >{Account_No}</div>',\r",
                    "                         '    <div style=\"{[this.getColorForVendor(values)]}\" class = \"retailerDetailVendorName\">{vendor_name}</div>',\r",
                    "                         '    <div style=\"\" class = \"retailerDetailSKU boldText\" >{SKU}</div>',\r",
                    "                         '    <div style=\"\" class = \"retailerDetailCollection\">{collections}</div>',\r",
                    "                         '    <div style=\"\" class = \"retailerDetailDesign\">{design}</div>',\r",
                    "                         '    <div style=\"\" class = \"retailerDetailImg\" >{no_of_images}</div>',\r",
                    "                         '    <div style=\"\" class = \"retailerDetailAddlImg\">{no_of_additional_images}</div>',\r",
                    "                         '</div>',\r",
                    "                         {\r",
                    "                             \r",
                    "                             getColorForVendor:function(  values){\r",
                    "                                 \r",
                    "                                 return getColorStringForVendor(values);\r",
                    "                                 \r",
                    "                             }\r",
                    "                         }\r",
                    "                        );\r",
                    "\r",
                    "    tplOfInlist = Ext.create('Ext.XTemplate',\r",
                    "                         '<div class=\"x-rm-listtpl-main pointerCursor\">',\r",
                    "                         '    <div style=\"width: 8%;\">',\r",
                    "                         '        <div style=\"width: 19px; height:19px;\" class=\"fireListSelect\"></div>',\r",
                    "                         '    </div>',\r",
                    "                             '<div style=\"\" class = \"retailerDetailAccountNo\" type =\"text\"  >{Account_No}</div>',\r",
                    "                         '    <div style=\"{[this.getColorForVendor(values)]}\" class = \"retailerDetailVendorName\">{vendor_name}</div>',\r",
                    "                         '    <div style=\"\" class = \"retailerDetailSKU boldText\" >{SKU}</div>',\r",
                    "                         '    <div style=\"\" class = \"retailerDetailCollection\">{collections}</div>',\r",
                    "                         '    <div style=\"\" class = \"retailerDetailDesign\">{design}</div>',\r",
                    "                         '    <div style=\"\" class = \"retailerDetailImg\" >{no_of_images}</div>',\r",
                    "                         '    <div style=\"\" class = \"retailerDetailAddlImg\">{no_of_additional_images}</div>',\r",
                    "                         '</div>',\r",
                    "                         {\r",
                    "                             \r",
                    "                             getColorForVendor:function(  values){\r",
                    "                                 \r",
                    "                                 return getColorStringForVendor(values);\r",
                    "                                 \r",
                    "                             }\r",
                    "                         }\r",
                    "                        );\r",
                    "\r",
                    "\r",
                    "\r",
                    "}\r",
                    "else\r",
                    "{\r",
                    "    headerTpl = Ext.create('Ext.XTemplate',\r",
                    "                           '<div class=\"x-rm-listtpl-main\">',\r",
                    "                           '    <div style=\"width: 12%;\">',\r",
                    "                           '        <div style=\"width: 20px;\" data-name=\"all\"></div>',\r",
                    "                           '    </div>',\r",
                    "                           '    <div style=\"width: 35%;\" data-name=\"store_name\">Name</div>',\r",
                    "                           '    <div style=\"width: 30%;\" data-name=\"store_city\">City</div>',\r",
                    "                           '    <div style=\"width: 15%;\" data-name=\"store_state\">State</div>',\r",
                    "\r",
                    "                           '</div>'\r",
                    "                          );\r",
                    "    tplOfInStoreHeader = Ext.create('Ext.XTemplate',\r",
                    "                           '<div class=\"x-rm-listtpl-main\">',\r",
                    "                           '    <div style=\"width: 12%;\">',\r",
                    "                           '        <div style=\"width: 20px;\" data-name=\"all\"></div>',\r",
                    "                           '    </div>',\r",
                    "                           '    <div style=\"width: 35%;\" data-name=\"store_name\">Name</div>',\r",
                    "                           '    <div style=\"width: 30%;\" data-name=\"store_city\">City</div>',\r",
                    "                           '    <div style=\"width: 15%;\" data-name=\"store_state\">State</div>',\r",
                    "\r",
                    "                           '</div>'\r",
                    "                          );\r",
                    "\r",
                    "\r",
                    "    listTpl = Ext.create('Ext.XTemplate',\r",
                    "                         '<div class=\"x-rm-listtpl-main pointerCursor\">',\r",
                    "                         '    <div style=\"width: 12%;\">',\r",
                    "                         '        <div style=\"width: 20px; height:20px;\"class=\"fireListSelect\"></div>',\r",
                    "                         '    </div>',\r",
                    "                         '    <div style=\"width: 35%;\">{store_name}</div>',\r",
                    "                         '    <div style=\"width: 30%;\">{store_city}</div>',\r",
                    "                          '    <div style=\"width: 15%;\">{store_state}</div>',\r",
                    "                         '</div>'\r",
                    "                        );\r",
                    "    tplOfInlist = Ext.create('Ext.XTemplate',\r",
                    "                         '<div class=\"x-rm-listtpl-main pointerCursor\">',\r",
                    "                         '    <div style=\"width: 12%;\">',\r",
                    "                         '        <div style=\"width: 20px; height:20px;\"class=\"fireListSelect\"></div>',\r",
                    "                         '    </div>',\r",
                    "                         '    <div style=\"width: 35%;\">{store_name}</div>',\r",
                    "                         '    <div style=\"width: 30%;\">{store_city}</div>',\r",
                    "                          '    <div style=\"width: 15%;\">{store_state}</div>',\r",
                    "                         '</div>'\r",
                    "                        );\r",
                    "\r",
                    "\r",
                    "// /vendors.Master\r",
                    "\r",
                    "}\r",
                    "\r",
                    "\r",
                    "InStoreHeaders.setItemTpl(tplOfInStoreHeader);\r",
                    "OnlineHeaders.setItemTpl(headerTpl);\r",
                    "InStoreHeaders.refresh();\r",
                    "OnlineHeaders.refresh();\r",
                    "\r",
                    "var InStoreList = component.down(\"#RDInStoreVendorsTab\").down('#mainList');\r",
                    "var OnlineList = component.down(\"#RDOnlineVendorsTab\").down('#mainList');\r",
                    "\r",
                    "InStoreList.setItemHeight(22);\r",
                    "OnlineList.setItemHeight(22);\r",
                    "InStoreList.setMode('MULTI');\r",
                    "OnlineList.setMode('MULTI');\r",
                    "InStoreList.addCls('x-rm-rdvendorslist');\r",
                    "OnlineList.addCls('x-rm-rdvendorslist');\r",
                    "\r",
                    "//InStoreList.setStore('retailersStoreVendors');//\r",
                    "\r",
                    "console.error(\"STORE CONNECTED TO LIST E COMMERCE LIST\");\r",
                    "\r",
                    "if(isRetailerDetailsView)\r",
                    "{\r",
                    "//    OnlineList.setStore('vendors.Master');\r",
                    "     OnlineList.setData(    getArrayFromStore(Ext.getStore('vendors.Master')));\r",
                    "}else{\r",
                    "     //OnlineList.setStore('retailersMaster');\r",
                    "//    OnlineList.setStore('retailers.prospectRTForVendor');\r",
                    "//    OnlineList.setData(    getArrayFromStore(Ex.getStore('vendors.Master')));\r",
                    "\r",
                    "}\r",
                    "\r",
                    "\r",
                    "\r",
                    "//OnlineList.setStore('retailersOnlineStoreVendors');\r",
                    "InStoreList.config.isUserEditionPermitted = false;\r",
                    "InStoreList.setItemTpl(tplOfInlist);\r",
                    "\r",
                    "var inStoreListStore = InStoreList.getStore();\r",
                    "OnlineList.setItemTpl(listTpl);\r",
                    "InStoreList.refresh();\r",
                    "OnlineList.refresh();\r",
                    "if(inStoreListStore){\r",
                    "    inStoreListStore.removeAll();\r",
                    "}\r",
                    "\r",
                    ""
                ]
            },
            "designerId": "d39353c4-ebd5-49bc-b806-4cdcfb4d6b69"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "isEditing"
                ],
                "fn": "setTemplateOfListByEditingMode",
                "implHandler": [
                    "    this.setTemplateOfEcommerceTabListByEditingMode(isEditing);\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "var component = Ext.ComponentQuery.query('#RDStoreSideTabPanel')[0];\r",
                    "var tplOfInlist;\r",
                    "var InStoreList = component.down(\"#RDInStoreVendorsTab\").down('#mainList');\r",
                    "var isRetailerDetailsView = RMdatalink.app.getController('UINav').isRetailerDetailsView;\r",
                    "if(isEditing){\r",
                    "    if(isRetailerDetailsView)\r",
                    "    {\r",
                    "\r",
                    "\r",
                    "\r",
                    "        tplOfInlist = Ext.create('Ext.XTemplate',\r",
                    "                             '<div class=\"x-rm-listtpl-main pointerCursor\">',\r",
                    "                             '    <div style=\"width: 8%;\">',\r",
                    "                             '        <div style=\"width: 19px; height:19px;\" class=\"fireListSelect\"></div>',\r",
                    "                             '    </div>',\r",
                    "                                 '<input type =\"text\" class = \"inputAccountNo\"  style=\"max-width: 60px;margin-right:2px;\" onkeyup=\"onKeyDownOfAccountNo(event)\"  vendorId =  {vendor_id}  value={Account_No} />',\r",
                    "                             '    <div style=\"{[this.getColorForVendor(values)]}\" class = \"retailerDetailVendorName\">{vendor_name}</div>',\r",
                    "                             '    <div style=\"\" class = \"retailerDetailSKU boldText\" >{SKU}</div>',\r",
                    "                             '    <div style=\"\" class = \"retailerDetailCollection\">{collections}</div>',\r",
                    "                             '    <div style=\"\" class = \"retailerDetailDesign\">{design}</div>',\r",
                    "                             '    <div style=\"\" class = \"retailerDetailImg\" >{no_of_images}</div>',\r",
                    "                             '    <div style=\"\" class = \"retailerDetailAddlImg\">{no_of_additional_images}</div>',\r",
                    "                             '</div>',\r",
                    "                             {\r",
                    "                                 \r",
                    "                                 getColorForVendor:function(  values){\r",
                    "                                     \r",
                    "                                     return getColorStringForVendor(values);\r",
                    "                                     \r",
                    "                                 }\r",
                    "                             }\r",
                    "                            );\r",
                    "\r",
                    "\r",
                    "    }\r",
                    "    else\r",
                    "    {\r",
                    "\r",
                    "        tplOfInlist = Ext.create('Ext.XTemplate',\r",
                    "                             '<div class=\"x-rm-listtpl-main pointerCursor\">',\r",
                    "                             '    <div style=\"width: 12%;\">',\r",
                    "                             '        <div style=\"width: 20px; height:20px;\"class=\"fireListSelect\"></div>',\r",
                    "                             '    </div>',\r",
                    "                             '    <div style=\"width: 35%;\">{store_name}</div>',\r",
                    "                             '    <div style=\"width: 30%;\">{store_city}</div>',\r",
                    "                              '    <div style=\"width: 15%;\">{store_state}</div>',\r",
                    "                             '</div>'\r",
                    "                            );\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "    }\r",
                    "\r",
                    "}else{\r",
                    "\r",
                    "\r",
                    "    if(isRetailerDetailsView)\r",
                    "    {\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "        tplOfInlist = Ext.create('Ext.XTemplate',\r",
                    "                         '<div class=\"x-rm-listtpl-main pointerCursor\">',\r",
                    "                         '    <div style=\"width: 8%;\">',\r",
                    "                         '        <div style=\"width: 19px; height:19px;\" class=\"fireListSelect\"></div>',\r",
                    "                         '    </div>',\r",
                    "                             '<div style=\"\" class = \"retailerDetailAccountNo\" type =\"text\"  >{Account_No}</div>',\r",
                    "                         '    <div style=\"{[this.getColorForVendor(values)]}\" class = \"retailerDetailVendorName\">{vendor_name}</div>',\r",
                    "                         '    <div style=\"\" class = \"retailerDetailSKU boldText\" >{SKU}</div>',\r",
                    "                         '    <div style=\"\" class = \"retailerDetailCollection\">{collections}</div>',\r",
                    "                         '    <div style=\"\" class = \"retailerDetailDesign\">{design}</div>',\r",
                    "                         '    <div style=\"\" class = \"retailerDetailImg\" >{no_of_images}</div>',\r",
                    "                         '    <div style=\"\" class = \"retailerDetailAddlImg\">{no_of_additional_images}</div>',\r",
                    "                         '</div>',\r",
                    "                         {\r",
                    "                             \r",
                    "                             getColorForVendor:function(  values){\r",
                    "                                 \r",
                    "                                 return getColorStringForVendor(values);\r",
                    "                                 \r",
                    "                             }\r",
                    "                         }\r",
                    "                        );\r",
                    "\r",
                    "\r",
                    "    }\r",
                    "    else\r",
                    "    {\r",
                    "\r",
                    "        tplOfInlist = Ext.create('Ext.XTemplate',\r",
                    "                                 '<div class=\"x-rm-listtpl-main pointerCursor\">',\r",
                    "                                 '    <div style=\"width: 12%;\">',\r",
                    "                                 '        <div style=\"width: 20px; height:20px;\"class=\"fireListSelect\"></div>',\r",
                    "                                 '    </div>',\r",
                    "                                 '    <div style=\"width: 35%;\">{store_name}</div>',\r",
                    "                                 '    <div style=\"width: 30%;\">{store_city}</div>',\r",
                    "                                 '    <div style=\"width: 15%;\">{store_state}</div>',\r",
                    "                                 '</div>'\r",
                    "                                );\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "    }\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "}\r",
                    "\r",
                    "\r",
                    "\r",
                    "    InStoreList.config.isUserEditionPermitted = isEditing;\r",
                    "    InStoreList.setItemTpl(tplOfInlist);\r",
                    "\r",
                    "\r",
                    "\r",
                    "/*\r",
                    "vendorId =  {vendor_id}  value={Account_No} />',\r",
                    "*/\r",
                    "var store =  InStoreList.getStore();\r",
                    "if(isEditing && store){\r",
                    "\r",
                    "    var data = store.getData();\r",
                    "    for(var i=0;i<data.all.length ; i++){\r",
                    "\r",
                    "        var rec = data.all[i];\r",
                    "        var vendor_id = rec.data.vendor_id;\r",
                    "        var Account_No = rec.data.Account_No;\r",
                    "            vendorIdAccountValue[vendor_id] = Account_No;\r",
                    "    }\r",
                    "}\r",
                    ""
                ]
            },
            "designerId": "be876100-a817-4bc9-afc9-b8e12ed40f93"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "isEditing"
                ],
                "fn": "setTemplateOfEcommerceTabListByEditingMode",
                "implHandler": [
                    "clearAccountValues();\r",
                    "var component = Ext.ComponentQuery.query('#RDForECommerce')[0];\r",
                    "var tplOfInlist;\r",
                    "var InStoreList = component.down(\"#RDInStoreVendorsTab\").down('#mainList');\r",
                    "var isRetailerDetailsView = RMdatalink.app.getController('UINav').isRetailerDetailsView;\r",
                    "if(isEditing){\r",
                    "    if(isRetailerDetailsView)\r",
                    "    {\r",
                    "\r",
                    "\r",
                    "\r",
                    "        tplOfInlist = Ext.create('Ext.XTemplate',\r",
                    "                             '<div class=\"x-rm-listtpl-main pointerCursor\">',\r",
                    "                             '    <div style=\"width: 8%;\">',\r",
                    "                             '        <div style=\"width: 19px; height:19px;\" class=\"fireListSelect\"></div>',\r",
                    "                             '    </div>',\r",
                    "                                 '<input type =\"text\" class = \"inputAccountNo\"  style=\"max-width: 60px;margin-right:2px;\" onkeyup=\"onKeyDownOfAccountNoECommerce(event)\"  vendorId =  {vendor_id}  value={Account_No} />',\r",
                    "                             '    <div style=\"{[this.getColorForVendor(values)]}\" class = \"retailerDetailVendorName\">{vendor_name}</div>',\r",
                    "                             '    <div style=\"\" class = \"retailerDetailSKU boldText\" >{SKU}</div>',\r",
                    "                             '    <div style=\"\" class = \"retailerDetailCollection\">{collections}</div>',\r",
                    "                             '    <div style=\"\" class = \"retailerDetailDesign\">{design}</div>',\r",
                    "                             '    <div style=\"\" class = \"retailerDetailImg\" >{no_of_images}</div>',\r",
                    "                             '    <div style=\"\" class = \"retailerDetailAddlImg\">{no_of_additional_images}</div>',\r",
                    "                             '</div>',\r",
                    "                             {\r",
                    "\r",
                    "                                 getColorForVendor:function(  values){\r",
                    "\r",
                    "                                     return getColorStringForVendor(values);\r",
                    "\r",
                    "                                 }\r",
                    "                             }\r",
                    "                            );\r",
                    "\r",
                    "\r",
                    "    }\r",
                    "    else\r",
                    "    {\r",
                    "\r",
                    "        tplOfInlist = Ext.create('Ext.XTemplate',\r",
                    "                             '<div class=\"x-rm-listtpl-main pointerCursor\">',\r",
                    "                             '    <div style=\"width: 12%;\">',\r",
                    "                             '        <div style=\"width: 20px; height:20px;\"class=\"fireListSelect\"></div>',\r",
                    "                             '    </div>',\r",
                    "                             '    <div style=\"width: 35%;\">{store_name}</div>',\r",
                    "                             '    <div style=\"width: 30%;\">{store_city}</div>',\r",
                    "                              '    <div style=\"width: 15%;\">{store_state}</div>',\r",
                    "                             '</div>'\r",
                    "                            );\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "    }\r",
                    "\r",
                    "}else{\r",
                    "\r",
                    "\r",
                    "    if(isRetailerDetailsView)\r",
                    "    {\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "        tplOfInlist = Ext.create('Ext.XTemplate',\r",
                    "                         '<div class=\"x-rm-listtpl-main pointerCursor\">',\r",
                    "                         '    <div style=\"width: 8%;\">',\r",
                    "                         '        <div style=\"width: 19px; height:19px;\" class=\"fireListSelect\"></div>',\r",
                    "                         '    </div>',\r",
                    "                             '<div style=\"\" class = \"retailerDetailAccountNo\" type =\"text\"  >{Account_No}</div>',\r",
                    "                         '    <div style=\"{[this.getColorForVendor(values)]}\" class = \"retailerDetailVendorName\">{vendor_name}</div>',\r",
                    "                         '    <div style=\"\" class = \"retailerDetailSKU boldText\" >{SKU}</div>',\r",
                    "                         '    <div style=\"\" class = \"retailerDetailCollection\">{collections}</div>',\r",
                    "                         '    <div style=\"\" class = \"retailerDetailDesign\">{design}</div>',\r",
                    "                         '    <div style=\"\" class = \"retailerDetailImg\" >{no_of_images}</div>',\r",
                    "                         '    <div style=\"\" class = \"retailerDetailAddlImg\">{no_of_additional_images}</div>',\r",
                    "                         '</div>',\r",
                    "                         {\r",
                    "\r",
                    "                             getColorForVendor:function(  values){\r",
                    "\r",
                    "                                 return getColorStringForVendor(values);\r",
                    "\r",
                    "                             }\r",
                    "                         }\r",
                    "                        );\r",
                    "\r",
                    "\r",
                    "    }\r",
                    "    else\r",
                    "    {\r",
                    "\r",
                    "        tplOfInlist = Ext.create('Ext.XTemplate',\r",
                    "                                 '<div class=\"x-rm-listtpl-main pointerCursor\">',\r",
                    "                                 '    <div style=\"width: 12%;\">',\r",
                    "                                 '        <div style=\"width: 20px; height:20px;\"class=\"fireListSelect\"></div>',\r",
                    "                                 '    </div>',\r",
                    "                                 '    <div style=\"width: 35%;\">{store_name}</div>',\r",
                    "                                 '    <div style=\"width: 30%;\">{store_city}</div>',\r",
                    "                                 '    <div style=\"width: 15%;\">{store_state}</div>',\r",
                    "                                 '</div>'\r",
                    "                                );\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "    }\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "}\r",
                    "\r",
                    "\r",
                    "\r",
                    "    InStoreList.config.isUserEditionPermitted = isEditing;\r",
                    "    InStoreList.setItemTpl(tplOfInlist);\r",
                    "    InStoreList.refresh();\r",
                    "\r",
                    "\r",
                    "\r",
                    "var store =  InStoreList.getStore();\r",
                    "if(isEditing && store){\r",
                    "\r",
                    "    var data = store.getData();\r",
                    "    for(var i=0;i<data.all.length ; i++){\r",
                    "\r",
                    "        var rec = data.all[i];\r",
                    "        var vendor_id = rec.data.vendor_id;\r",
                    "        var Account_No = rec.data.Account_No;\r",
                    "            vendorIdAccountValueEComm[vendor_id] = Account_No;\r",
                    "    }\r",
                    "}\r",
                    "this.setTemplateOfEcommVipListEditingMode(isEditing);"
                ]
            },
            "designerId": "62b4bae4-b779-4736-88cb-79b398e60169"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "isEditing"
                ],
                "fn": "setTemplateOfEcommVipListEditingMode",
                "implHandler": [
                    "//clearAccountValues();\r",
                    "var component = Ext.ComponentQuery.query('#RDForVIP')[0];\r",
                    "var tplOfInlist;\r",
                    "var InStoreList = component.down(\"#RDInStoreVendorsTab\").down('#mainList');\r",
                    "var isRetailerDetailsView = RMdatalink.app.getController('UINav').isRetailerDetailsView;\r",
                    "if(isEditing){\r",
                    "    if(isRetailerDetailsView)\r",
                    "    {\r",
                    "\r",
                    "\r",
                    "\r",
                    "        tplOfInlist = Ext.create('Ext.XTemplate',\r",
                    "                             '<div class=\"x-rm-listtpl-main pointerCursor\">',\r",
                    "                             '    <div style=\"width: 8%;\">',\r",
                    "                             '        <div style=\"width: 19px; height:19px;\" class=\"fireListSelect\"></div>',\r",
                    "                             '    </div>',\r",
                    "                                 '<input type =\"text\" class = \"inputAccountNo\"  style=\"max-width: 60px;margin-right:2px;\" onkeyup=\"onKeyDownOfAccountNoVIP(event)\"  vendorId =  {_id}  value={Account_No} />',\r",
                    "                             '    <div style=\"{[this.getColorForVendor(values)]}\" class = \"retailerDetailVendorName\">{[this.getVendorName(values , xindex)]}</div>',\r",
                    "                             '    <div style=\"\" class = \"retailerDetailSKU boldText\" >{SKU}</div>',\r",
                    "                             '    <div style=\"\" class = \"retailerDetailCollection\">{collections}</div>',\r",
                    "                             '    <div style=\"\" class = \"retailerDetailDesign\">{design}</div>',\r",
                    "                             '    <div style=\"\" class = \"retailerDetailImg\" >{no_of_images}</div>',\r",
                    "                             '    <div style=\"\" class = \"retailerDetailAddlImg\">{no_of_additional_images}</div>',\r",
                    "                             '</div>',\r",
                    "                             {\r",
                    "\r",
                    "                                 getColorForVendor:function(  values){\r",
                    "\r",
                    "                                     return getColorStringForVendor(values);\r",
                    "\r",
                    "                                 },\r",
                    "                             getVendorName:function( values , xindex){\r",
                    "                                 var vendorName = values.vendor_name;\r",
                    "                                 try{\r",
                    "                                     var selectedUserRecord = RMdatalink.util.globalConfig.getDataToShowInSettingWindow() ;\r",
                    "                                     var record = selectedUserRecord.record;\r",
                    "\r",
                    "                                     if(record.data.e_commerce_info.vip_vendor == vendorName){\r",
                    "\r",
                    "                                         return \"** \" + vendorName + \" **\";\r",
                    "\r",
                    "                                     }else{\r",
                    "                                         return vendorName;\r",
                    "                                     }\r",
                    "\r",
                    "                                 }catch(e){\r",
                    "                                     return vendorName;\r",
                    "                                 }\r",
                    "\r",
                    "\r",
                    "                             }\r",
                    "                             }\r",
                    "                            );\r",
                    "\r",
                    "\r",
                    "    }\r",
                    "    else\r",
                    "    {\r",
                    "\r",
                    "        tplOfInlist = Ext.create('Ext.XTemplate',\r",
                    "                             '<div class=\"x-rm-listtpl-main pointerCursor\">',\r",
                    "                             '    <div style=\"width: 12%;\">',\r",
                    "                             '        <div style=\"width: 20px; height:20px;\"class=\"fireListSelect\"></div>',\r",
                    "                             '    </div>',\r",
                    "                             '    <div style=\"width: 35%;\">{store_name}</div>',\r",
                    "                             '    <div style=\"width: 30%;\">{store_city}</div>',\r",
                    "                              '    <div style=\"width: 15%;\">{store_state}</div>',\r",
                    "                             '</div>'\r",
                    "                            );\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "    }\r",
                    "\r",
                    "}else{\r",
                    "\r",
                    "\r",
                    "    if(isRetailerDetailsView)\r",
                    "    {\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "        tplOfInlist = Ext.create('Ext.XTemplate',\r",
                    "                         '<div class=\"x-rm-listtpl-main pointerCursor\">',\r",
                    "                         '    <div style=\"width: 8%;\">',\r",
                    "                         '        <div style=\"width: 19px; height:19px;\" class=\"fireListSelect\"></div>',\r",
                    "                         '    </div>',\r",
                    "                             '<div style=\"\" class = \"retailerDetailAccountNo\" type =\"text\"  >{Account_No}</div>',\r",
                    "                         '    <div style=\"{[this.getColorForVendor(values)]}\" class = \"retailerDetailVendorName\">{[this.getVendorName(values , xindex)]}</div>',\r",
                    "                         '    <div style=\"\" class = \"retailerDetailSKU boldText\" >{SKU}</div>',\r",
                    "                         '    <div style=\"\" class = \"retailerDetailCollection\">{collections}</div>',\r",
                    "                         '    <div style=\"\" class = \"retailerDetailDesign\">{design}</div>',\r",
                    "                         '    <div style=\"\" class = \"retailerDetailImg\" >{no_of_images}</div>',\r",
                    "                         '    <div style=\"\" class = \"retailerDetailAddlImg\">{no_of_additional_images}</div>',\r",
                    "                         '</div>',\r",
                    "                         {\r",
                    "\r",
                    "                             getColorForVendor:function(  values){\r",
                    "\r",
                    "                                 return getColorStringForVendor(values);\r",
                    "\r",
                    "                             },\r",
                    "                             getVendorName:function( values , xindex){\r",
                    "                                 var vendorName = values.vendor_name;\r",
                    "                                 try{\r",
                    "                                     var selectedUserRecord = RMdatalink.util.globalConfig.getDataToShowInSettingWindow() ;\r",
                    "                                     var record = selectedUserRecord.record;\r",
                    "\r",
                    "                                     if(record.data.e_commerce_info.vip_vendor == vendorName){\r",
                    "\r",
                    "                                         return \"** \" + vendorName + \" **\";\r",
                    "\r",
                    "                                     }else{\r",
                    "                                         return vendorName;\r",
                    "                                     }\r",
                    "\r",
                    "                                 }catch(e){\r",
                    "                                     return vendorName;\r",
                    "                                 }\r",
                    "\r",
                    "\r",
                    "                             }\r",
                    "                         }\r",
                    "                        );\r",
                    "\r",
                    "\r",
                    "    }\r",
                    "    else\r",
                    "    {\r",
                    "\r",
                    "        tplOfInlist = Ext.create('Ext.XTemplate',\r",
                    "                                 '<div class=\"x-rm-listtpl-main pointerCursor\">',\r",
                    "                                 '    <div style=\"width: 12%;\">',\r",
                    "                                 '        <div style=\"width: 20px; height:20px;\"class=\"fireListSelect\"></div>',\r",
                    "                                 '    </div>',\r",
                    "                                 '    <div style=\"width: 35%;\">{store_name}</div>',\r",
                    "                                 '    <div style=\"width: 30%;\">{store_city}</div>',\r",
                    "                                 '    <div style=\"width: 15%;\">{store_state}</div>',\r",
                    "                                 '</div>'\r",
                    "                                );\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "    }\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "}\r",
                    "\r",
                    "\r",
                    "\r",
                    "    InStoreList.config.isUserEditionPermitted = isEditing;\r",
                    "    InStoreList.setItemTpl(tplOfInlist);\r",
                    "    InStoreList.refresh();\r",
                    "\r",
                    "\r",
                    "\r",
                    "var store =  InStoreList.getStore();\r",
                    "if(isEditing && store)\r",
                    "{\r",
                    "\r",
                    "    var data = store.getData();\r",
                    "    for(var i=0;i<data.all.length ; i++){\r",
                    "\r",
                    "        var rec = data.all[i];\r",
                    "        var vendor_id = rec.data._id;\r",
                    "        var Account_No = rec.data.Account_No;\r",
                    "            vendorIdAccountValueVIP[vendor_id] = Account_No;\r",
                    "    }\r",
                    "}\r",
                    "\r",
                    "this.setTemplateOfAuthorizedListEditingMode(isEditing);"
                ]
            },
            "designerId": "3cb873e6-54ba-444b-87f8-fd498761b509"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "isEditing"
                ],
                "fn": "setTemplateOfAuthorizedListEditingMode",
                "implHandler": [
                    "\r",
                    "var component = Ext.ComponentQuery.query('#RDForAuthorisedVendors')[0];\r",
                    "var tplOfInlist;\r",
                    "var InStoreList = component.down(\"#RDInStoreVendorsTab\").down('#mainList');\r",
                    "var isRetailerDetailsView = RMdatalink.app.getController('UINav').isRetailerDetailsView;\r",
                    "if(isEditing){\r",
                    "    if(isRetailerDetailsView)\r",
                    "    {\r",
                    "\r",
                    "\r",
                    "        tplOfInlist = Ext.create('Ext.XTemplate',\r",
                    "                             '<div class=\"x-rm-listtpl-main pointerCursor\">',\r",
                    "                             '    <div style=\"width: 8%;\">',\r",
                    "                             '        <div style=\"width: 19px; height:19px;\" class=\"fireListSelect\"></div>',\r",
                    "                             '    </div>',\r",
                    "                                 '<input type =\"text\" class = \"inputAccountNo\"  style=\"max-width: 60px;margin-right:2px;\" onkeyup=\"onKeyDownOfAccountNoAuthorizedVendors(event)\"  vendorId =  {vendor_id}  value={Account_No} />',\r",
                    "                             '    <div style=\"{[this.getColorForVendor(values)]}\" class = \"retailerDetailVendorName\">{vendor_name}</div>',\r",
                    "                             '    <div style=\"\" class = \"retailerDetailSKU boldText\" >{SKU}</div>',\r",
                    "                             '    <div style=\"\" class = \"retailerDetailCollection\">{collections}</div>',\r",
                    "                             '    <div style=\"\" class = \"retailerDetailDesign\">{design}</div>',\r",
                    "                             '    <div style=\"\" class = \"retailerDetailImg\" >{no_of_images}</div>',\r",
                    "                             '    <div style=\"\" class = \"retailerDetailAddlImg\">{no_of_additional_images}</div>',\r",
                    "                             '</div>',\r",
                    "                             {\r",
                    "\r",
                    "                                 getColorForVendor:function(  values){\r",
                    "\r",
                    "                                     return getColorStringForVendor(values);\r",
                    "\r",
                    "                                 }\r",
                    "                             }\r",
                    "                            );\r",
                    "\r",
                    "\r",
                    "    }\r",
                    "    else\r",
                    "    {\r",
                    "\r",
                    "        tplOfInlist = Ext.create('Ext.XTemplate',\r",
                    "                             '<div class=\"x-rm-listtpl-main pointerCursor\">',\r",
                    "                             '    <div style=\"width: 12%;\">',\r",
                    "                             '        <div style=\"width: 20px; height:20px;\"class=\"fireListSelect\"></div>',\r",
                    "                             '    </div>',\r",
                    "                             '    <div style=\"width: 35%;\">{store_name}</div>',\r",
                    "                             '    <div style=\"width: 30%;\">{store_city}</div>',\r",
                    "                              '    <div style=\"width: 15%;\">{store_state}</div>',\r",
                    "                             '</div>'\r",
                    "                            );\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "    }\r",
                    "\r",
                    "}else{\r",
                    "\r",
                    "\r",
                    "    if(isRetailerDetailsView)\r",
                    "    {\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "        tplOfInlist = Ext.create('Ext.XTemplate',\r",
                    "                         '<div class=\"x-rm-listtpl-main pointerCursor\">',\r",
                    "                         '    <div style=\"width: 8%;\">',\r",
                    "                         '        <div style=\"width: 19px; height:19px;\" class=\"fireListSelect\"></div>',\r",
                    "                         '    </div>',\r",
                    "                             '<div style=\"\" class = \"retailerDetailAccountNo\" type =\"text\"  >{Account_No}</div>',\r",
                    "                         '    <div style=\"{[this.getColorForVendor(values)]}\" class = \"retailerDetailVendorName\">{vendor_name}</div>',\r",
                    "                         '    <div style=\"\" class = \"retailerDetailSKU boldText\" >{SKU}</div>',\r",
                    "                         '    <div style=\"\" class = \"retailerDetailCollection\">{collections}</div>',\r",
                    "                         '    <div style=\"\" class = \"retailerDetailDesign\">{design}</div>',\r",
                    "                         '    <div style=\"\" class = \"retailerDetailImg\" >{no_of_images}</div>',\r",
                    "                         '    <div style=\"\" class = \"retailerDetailAddlImg\">{no_of_additional_images}</div>',\r",
                    "                         '</div>',\r",
                    "                         {\r",
                    "\r",
                    "                             getColorForVendor:function(  values){\r",
                    "\r",
                    "                                 return getColorStringForVendor(values);\r",
                    "\r",
                    "                             }\r",
                    "                         }\r",
                    "                        );\r",
                    "\r",
                    "\r",
                    "    }\r",
                    "    else\r",
                    "    {\r",
                    "\r",
                    "        tplOfInlist = Ext.create('Ext.XTemplate',\r",
                    "                                 '<div class=\"x-rm-listtpl-main pointerCursor\">',\r",
                    "                                 '    <div style=\"width: 12%;\">',\r",
                    "                                 '        <div style=\"width: 20px; height:20px;\"class=\"fireListSelect\"></div>',\r",
                    "                                 '    </div>',\r",
                    "                                 '    <div style=\"width: 35%;\">{store_name}</div>',\r",
                    "                                 '    <div style=\"width: 30%;\">{store_city}</div>',\r",
                    "                                 '    <div style=\"width: 15%;\">{store_state}</div>',\r",
                    "                                 '</div>'\r",
                    "                                );\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "    }\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "}\r",
                    "\r",
                    "\r",
                    "\r",
                    "    InStoreList.config.isUserEditionPermitted = isEditing;\r",
                    "    InStoreList.setItemTpl(tplOfInlist);\r",
                    "    InStoreList.refresh();\r",
                    "\r",
                    "\r",
                    "\r",
                    "var store =  InStoreList.getStore();\r",
                    "if(isEditing && store)\r",
                    "{\r",
                    "\r",
                    "    var data = store.getData();\r",
                    "    for(var i=0;i<data.all.length ; i++){\r",
                    "\r",
                    "        var rec = data.all[i];\r",
                    "        var vendor_id = rec.data.vendor_id;\r",
                    "        var Account_No = rec.data.Account_No;\r",
                    "            vendorIdAccountValueAuthorized[vendor_id] = Account_No;\r",
                    "    }\r",
                    "}\r",
                    ""
                ]
            },
            "designerId": "ba0b9b69-04ed-4822-985f-a751f5a506b7"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "activeIndex": "0",
                "designer|params": [
                    "index",
                    "record"
                ],
                "fn": "actionVisitProfile",
                "implHandler": [
                    "this.config.activeIndex = index ;\r",
                    "\r",
                    "var selectedUserRecord = RMdatalink.util.globalConfig.getDataToShowInSettingWindow() ;\r",
                    "\r",
                    "Ext.ComponentQuery.query('#RDUserProfileForm')[0].setDisabled(true) ;\r",
                    "Ext.ComponentQuery.query('#RDUserProfileRelationDetailsForm')[0].setDisabled(true);\r",
                    "\r",
                    "var managerUSers ;\r",
                    "\r",
                    "this.unFillTipsData();\r",
                    "\r",
                    "if(  Ext.getStore('vendor.REPsDetails').getCount() === index)\r",
                    "{\r",
                    "    managerUSers = null;\r",
                    "\r",
                    "}\r",
                    "else\r",
                    "{\r",
                    "    console.log(record.data);\r",
                    "    managerUSers = record.data ;\r",
                    "    //*********  FILL SIDE CONTAINER DO / DO NOT / FOLLOWS UP / NOTES  ******\r",
                    "    this.fillTipsData(managerUSers);\r",
                    "\r",
                    "}\r",
                    "\r",
                    "fillUserProfile(managerUSers);\r",
                    "fillUserRelationData(managerUSers);\r",
                    "\r",
                    "Ext.ComponentQuery.query('#RDUsersTab')[0].setActiveItem(1);\r",
                    "\r",
                    "    var rfName = Ext.ComponentQuery.query('#RDUserProfileFirstName')[0];\r",
                    "    var rlName = Ext.ComponentQuery.query('#RDUserProfileLastName')[0];\r",
                    "    var remail = Ext.ComponentQuery.query('#RDUserProfileEmail')[0];\r",
                    "\r",
                    "\r",
                    "\r",
                    "    rfName.removeCls('x-rm-rdformErrorPanel');\r",
                    "    rfName.addCls('x-rm-rdformpanel');\r",
                    "\r",
                    "    rlName.removeCls('x-rm-rdformErrorPanel');\r",
                    "    rlName.addCls('x-rm-rdformpanel');\r",
                    "\r",
                    "    remail.removeCls('x-rm-rdformErrorPanel');\r",
                    "    remail.addCls('x-rm-rdformpanel');\r",
                    "\r",
                    "\r",
                    "\r",
                    "var container = Ext.ComponentQuery.query('#retailerDetailsMainTabPanel')[0] ;\r",
                    "var sideContainer = container.parent.down('#RDSideContainer');\r",
                    "var storeSideContainer = sideContainer.down('#RDStoreSideContainer');\r",
                    "var managerSideContainer = sideContainer.down('#RDManagerSideContainer');\r",
                    "var crmNotesSideContainer = sideContainer.down('#RDCRMNotesSideContainer');\r",
                    "var userProfileSideContainer = sideContainer.down('#RDUserProfileSideContainer');\r",
                    "Ext.ComponentQuery.query('#RDUserProfileEditBtn')[0].setText(\"EDIT\");\r",
                    "\r",
                    "sideContainer.setHidden(false);\r",
                    "storeSideContainer.setHidden(true);\r",
                    "managerSideContainer.setHidden(true);\r",
                    "crmNotesSideContainer.setHidden(true);\r",
                    "userProfileSideContainer.setHidden(false);\r",
                    "\r",
                    "\r",
                    "function fillUserProfile(managerUSers){\r",
                    "\r",
                    "    var profilePicView = Ext.ComponentQuery.query('#RDUserProfileImage')[0];\r",
                    "    profilePicView.setSrc(managerUSers === null ? '' :managerUSers.tu_image_url).setHidden(false) ;\r",
                    "\r",
                    "    Ext.ComponentQuery.query('#RDUSerProfileFileFieldForImage')[0].setHidden(true);\r",
                    "    Ext.ComponentQuery.query('#RDUserProfileStoreName')[0].setValue('');\r",
                    "    Ext.ComponentQuery.query('#RDUserProfileFirstName')[0].setValue(managerUSers === null ? '' : managerUSers.tu_firstname);\r",
                    "    Ext.ComponentQuery.query('#RDUserProfileLastName')[0].setValue(managerUSers === null ? '' : managerUSers.tu_lastname);\r",
                    "    Ext.ComponentQuery.query('#RDUserProfileEmail')[0].setValue(managerUSers === null ? '' : managerUSers.tu_email);\r",
                    "    Ext.ComponentQuery.query('#RDUserProfilePhone')[0].setValue(managerUSers === null ? '' : managerUSers.tu_phone);\r",
                    "    Ext.ComponentQuery.query('#RDUserProfilePhoneExt')[0].setValue(managerUSers === null ? '' : managerUSers.tu_phone_ext);\r",
                    "    Ext.ComponentQuery.query('#RDUserProfileCellPhone')[0].setValue(managerUSers === null ? '' : managerUSers.tu_cellphone);\r",
                    "    Ext.ComponentQuery.query('#RDUserProfileCellPhoneExt')[0].setValue(managerUSers === null ? '' : managerUSers.tu_cellphone_ext);\r",
                    "    Ext.ComponentQuery.query('#RDTUserProfileAddress')[0].setValue(managerUSers === null ? '' : managerUSers.tu_address);\r",
                    "    Ext.ComponentQuery.query('#RDTUserProfileSuite')[0].setValue(managerUSers === null ? '' : managerUSers.tu_address_suite);\r",
                    "    Ext.ComponentQuery.query('#RDUserProfileZip')[0].setValue(managerUSers === null ? '' : managerUSers.tu_zip);\r",
                    "    Ext.ComponentQuery.query('#RDUserProfileCity')[0].setValue(managerUSers === null ? '' : managerUSers.tu_city);\r",
                    "    Ext.ComponentQuery.query('#RDUserProfileState')[0].setValue(managerUSers === null ? '' : managerUSers.tu_state);\r",
                    "    Ext.ComponentQuery.query('#RDUserProfileTerritory')[0].setValue(managerUSers === null ? '' : managerUSers.tu_territory);\r",
                    "    Ext.ComponentQuery.query('#RDUserProfileLinkedIn')[0].setValue(managerUSers === null ? '' :managerUSers.tu_linkedIn);\r",
                    "    Ext.ComponentQuery.query('#RDUserProfileFacebook')[0].setValue(managerUSers === null ? '' :managerUSers.tu_facebook);\r",
                    "    Ext.ComponentQuery.query('#RDUserProfileTwitter')[0].setValue(managerUSers === null ? '' :managerUSers.tu_twitter);\r",
                    "}\r",
                    "\r",
                    "\r",
                    "function fillUserRelationData(managerUSers){\r",
                    "    Ext.ComponentQuery.query('#RDUserProfileDYrsAtStore')[0].setValue(managerUSers === null ? '' : managerUSers.tu_relationsheep_details.rd_years_at_store);\r",
                    "    Ext.ComponentQuery.query('#RDUserProfileWife')[0].setValue(managerUSers === null ? '' :managerUSers.tu_relationsheep_details.rd_wife);\r",
                    "    Ext.ComponentQuery.query('#RDUserProfileRelatives')[0].setValue(managerUSers === null ? '' :managerUSers.tu_relationsheep_details.rd_relatives);\r",
                    "    Ext.ComponentQuery.query('#RDUserProfileHobbies')[0].setValue(managerUSers === null ? '' :managerUSers.tu_relationsheep_details.rd_hobbies);\r",
                    "    Ext.ComponentQuery.query('#RDUserProfileCarOfChoice')[0].setValue(managerUSers === null ? '' :managerUSers.tu_relationsheep_details.rd_car_of_choice);\r",
                    "    Ext.ComponentQuery.query('#RDUserProfileAltPhone')[0].setValue(managerUSers === null ? '' :managerUSers.tu_relationsheep_details.rd_alt_phone);\r",
                    "    Ext.ComponentQuery.query('#RDUserProfileAltEmail')[0].setValue(managerUSers === null ? '' :managerUSers.tu_relationsheep_details.d_alt_email);\r",
                    "    Ext.ComponentQuery.query('#RDUserProfileWebsite')[0].setValue(managerUSers === null ? '' :managerUSers.tu_relationsheep_details.rd_website);\r",
                    "    Ext.ComponentQuery.query('#RDUserProfileChild1Name')[0].setValue(managerUSers === null ? '' :managerUSers.tu_relationsheep_details.rd_childs[0].child_name);\r",
                    "    Ext.ComponentQuery.query('#RDUserProfileChild2Name')[0].setValue(managerUSers === null ? '' :managerUSers.tu_relationsheep_details.rd_childs[1].child_name);\r",
                    "    Ext.ComponentQuery.query('#RDUserProfileChild1Age')[0].setValue(managerUSers === null ? '' :managerUSers.tu_relationsheep_details.rd_childs[0].child_age);\r",
                    "    Ext.ComponentQuery.query('#RDUserProfileChild2Age')[0].setValue(managerUSers === null ? '' :managerUSers.tu_relationsheep_details.rd_childs[1].child_age);\r",
                    "    Ext.ComponentQuery.query('#RDUserProfilePartner1')[0].setValue(managerUSers === null ? '' :managerUSers.tu_relationsheep_details.rd_partner[0].partner_name);\r",
                    "    Ext.ComponentQuery.query('#RDUserProfilePartner2')[0].setValue(managerUSers === null ? '' :managerUSers.tu_relationsheep_details.rd_partner[1].partner_name);\r",
                    "    Ext.ComponentQuery.query('#RDMRDUserAniversaryMonth')[0].setValue(managerUSers === null ? '' :managerUSers.tu_relationsheep_details.aniversary);\r",
                    "    Ext.ComponentQuery.query('#RDUserProfileDOBMonth')[0].setValue(managerUSers === null ? '' :managerUSers.tu_relationsheep_details.dob);\r",
                    "}\r",
                    "\r",
                    "\r",
                    "\r",
                    ""
                ]
            },
            "designerId": "55366028-76b5-47ad-9654-9a41ef24b55f",
            "customConfigs": [
                {
                    "group": "(Custom Properties)",
                    "name": "activeIndex",
                    "type": "string"
                }
            ]
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "activeIndex": "0",
                "designer|params": [
                    "index",
                    "record"
                ],
                "fn": "actionVisitCompanyProfile",
                "implHandler": [
                    "this.config.isCmpContactProfile = true ;\r",
                    "\r",
                    "\r",
                    "this.config.CmpContactactiveIndex = index ;\r",
                    "\r",
                    "var selectedUserRecord = RMdatalink.util.globalConfig.getDataToShowInSettingWindow() ;\r",
                    "\r",
                    "//Ext.ComponentQuery.query('#CmpContactProfileForm')[0].setDisabled(false) ;\r",
                    "//Ext.ComponentQuery.query('#CmpContactProfileRelationDetailsForm')[0].setDisabled(true);\r",
                    "\r",
                    "var managerUSers ;\r",
                    "\r",
                    "//this.unfillTipsData();\r",
                    "unfillMAnagerRelationData();\r",
                    "unsetTipsSideContainer();\r",
                    "\r",
                    "if(  Ext.getStore('vendor.CompanyContactStore').getCount() === index)\r",
                    "{\r",
                    "    managerUSers = null;\r",
                    "\r",
                    "}\r",
                    "else\r",
                    "{\r",
                    "    console.log(record.data);\r",
                    "    managerUSers = record.data ;\r",
                    "    //*********  FILL SIDE CONTAINER DO / DO NOT / FOLLOWS UP / NOTES  ******\r",
                    "    this.fillTipsData(managerUSers);\r",
                    "\r",
                    "}\r",
                    "\r",
                    "fillUserProfile(managerUSers);\r",
                    "fillMAnagerRelationData(managerUSers);\r",
                    "\r",
                    "setTipsSideContainer(managerUSers);\r",
                    "\r",
                    "Ext.ComponentQuery.query('#CmpContactTab')[0].setActiveItem(1);\r",
                    "\r",
                    "    var rfName = Ext.ComponentQuery.query('#CmpContactProfileFirstName')[0];\r",
                    "    var rlName = Ext.ComponentQuery.query('#CmpContactProfileLastName')[0];\r",
                    "    var remail = Ext.ComponentQuery.query('#CmpContactProfileEmail')[0];\r",
                    "\r",
                    "\r",
                    "\r",
                    "    rfName.removeCls('x-rm-rdformErrorPanel');\r",
                    "    rfName.addCls('x-rm-rdformpanel');\r",
                    "\r",
                    "    rlName.removeCls('x-rm-rdformErrorPanel');\r",
                    "    rlName.addCls('x-rm-rdformpanel');\r",
                    "\r",
                    "    remail.removeCls('x-rm-rdformErrorPanel');\r",
                    "    remail.addCls('x-rm-rdformpanel');\r",
                    "\r",
                    "\r",
                    "\r",
                    "var container = Ext.ComponentQuery.query('#retailerDetailsMainTabPanel')[0] ;\r",
                    "var sideContainer = container.parent.down('#RDSideContainer');\r",
                    "var storeSideContainer = sideContainer.down('#RDStoreSideContainer');\r",
                    "var managerSideContainer = sideContainer.down('#RDManagerSideContainer');\r",
                    "var crmNotesSideContainer = sideContainer.down('#RDCRMNotesSideContainer');\r",
                    "var userProfileSideContainer = sideContainer.down('#RDUserProfileSideContainer');\r",
                    "var blueBookSideContainer = sideContainer.down('#RDBlueBookContainer');\r",
                    "\r",
                    "\r",
                    "Ext.ComponentQuery.query('#CmpContactProfileEditBtn')[0].setText(\"DONE\");\r",
                    "\r",
                    "    sideContainer.setHidden(false);\r",
                    "    storeSideContainer.setHidden(true);\r",
                    "    managerSideContainer.setHidden(false);\r",
                    "    crmNotesSideContainer.setHidden(true);\r",
                    "    userProfileSideContainer.setHidden(true);\r",
                    "    blueBookSideContainer.setHidden(true);\r",
                    "\r",
                    "\r",
                    "function fillUserProfile(managerUSers){\r",
                    "\r",
                    "    var profilePicView = Ext.ComponentQuery.query('#CmpContactProfileImage')[0];\r",
                    "    profilePicView.setSrc(managerUSers === null ? '' :managerUSers.companycontact_image_url).setHidden(false) ;\r",
                    "    //  Ext.ComponentQuery.query('#CmpContactProfileFileFieldForImage')[0].setHidden(true);\r",
                    "    //  Ext.ComponentQuery.query('#CmpContactProfileStoreName')[0].setValue('');\r",
                    "    Ext.ComponentQuery.query('#CmpContactProfileFirstName')[0].setValue(managerUSers === null ? '' : managerUSers.companycontact_firstname);\r",
                    "    Ext.ComponentQuery.query('#CmpContactProfileLastName')[0].setValue(managerUSers === null ? '' : managerUSers.companycontact_lastname);\r",
                    "    Ext.ComponentQuery.query('#CmpContactProfileEmail')[0].setValue(managerUSers === null ? '' : managerUSers.companycontact_email);\r",
                    "    Ext.ComponentQuery.query('#CmpContactProfilePhone')[0].setValue(managerUSers === null ? '' : managerUSers.companycontact_phone);\r",
                    "    Ext.ComponentQuery.query('#CmpContactProfileDirectExt')[0].setValue(managerUSers === null ? '' : managerUSers.companycontact_phone_ext);\r",
                    "    Ext.ComponentQuery.query('#CmpContactProfileAddress')[0].setValue(managerUSers === null ? '' : managerUSers.companycontact_address);\r",
                    "    Ext.ComponentQuery.query('#CmpContactProfileSuite')[0].setValue(managerUSers === null ? '' : managerUSers.companycontact_address_suite);\r",
                    "    Ext.ComponentQuery.query('#CmpContactProfileZip')[0].setValue(managerUSers === null ? '' : managerUSers.companycontact_zip);\r",
                    "\r",
                    "    Ext.ComponentQuery.query('#CmpContactProfileCity')[0].setValue(managerUSers === null ? '' : managerUSers.companycontact_city);\r",
                    "    Ext.ComponentQuery.query('#CmpContactProfileState')[0].setValue(managerUSers === null ? '' : managerUSers.companycontact_state);\r",
                    "\r",
                    "    Ext.ComponentQuery.query('#CmpContactProfilePosition')[0].setValue(managerUSers === null ? '' : managerUSers.companycontact_position);\r",
                    "    Ext.ComponentQuery.query('#CmpContactProfileCellPhone')[0].setValue(managerUSers === null ? '' : managerUSers.companycontact_cellphone);\r",
                    "    Ext.ComponentQuery.query('#CmpContactProfileCellExt')[0].setValue(managerUSers === null ? '' : managerUSers.companycontact_cellphone_ext);\r",
                    "\r",
                    "    Ext.ComponentQuery.query('#CmpContactProfileLinkedIn')[0].setValue(managerUSers === null ? '' : managerUSers.companycontact_linkedIn);\r",
                    "    Ext.ComponentQuery.query('#CmpContactProfileFacebook')[0].setValue(managerUSers === null ? '' : managerUSers.companycontact_facebook);\r",
                    "    Ext.ComponentQuery.query('#CmpContactProfileTwitter')[0].setValue(managerUSers === null ? '' : managerUSers.companycontact_twitter);\r",
                    "    // RMdatalink.util.globalMethods.fillListData('#RDUserProfileActivityList',managerUSers.tu_recent_activity);\r",
                    "}\r",
                    "\r",
                    "\r",
                    "\r",
                    "function unfillMAnagerRelationData(){\r",
                    "\r",
                    "    Ext.ComponentQuery.query('#RDMRDYrsAtStore')[0].setValue('');\r",
                    "    Ext.ComponentQuery.query('#RDMRDWife')[0].setValue('');\r",
                    "    Ext.ComponentQuery.query('#RDMRDRelatives ')[0].setValue('');\r",
                    "    Ext.ComponentQuery.query('#RDMRDHobbies')[0].setValue('');\r",
                    "    Ext.ComponentQuery.query('#RDMRDCarOfChoice')[0].setValue('');\r",
                    "    Ext.ComponentQuery.query('#RDMRDAltPhone ')[0].setValue('');\r",
                    "    Ext.ComponentQuery.query('#RDMRDAltEmail')[0].setValue('');\r",
                    "    Ext.ComponentQuery.query('#RDMRDWebsite')[0].setValue('');\r",
                    "    Ext.ComponentQuery.query('#RDMRDChild1Name')[0].setValue('');\r",
                    "    Ext.ComponentQuery.query('#RDMRDChild2Name')[0].setValue('');\r",
                    "    Ext.ComponentQuery.query('#RDMRDChild1Age')[0].setValue('');\r",
                    "    Ext.ComponentQuery.query('#RDMRDChild2Age')[0].setValue('');\r",
                    "    Ext.ComponentQuery.query('#RDMRDPartner1')[0].setValue('');\r",
                    "    Ext.ComponentQuery.query('#RDMRDPartner2')[0].setValue('');\r",
                    "\r",
                    "\r",
                    "\r",
                    "    Ext.ComponentQuery.query('#RDMRDAniversaryMonth')[0].setValue('');\r",
                    "    Ext.ComponentQuery.query('#RDMRDDOBMonth')[0].setValue('');\r",
                    "\r",
                    "}\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "function fillMAnagerRelationData(managerUSers){\r",
                    "     if(!managerUSers)\r",
                    "    {\r",
                    "        return ;\r",
                    "    }\r",
                    "\r",
                    "    try{\r",
                    "\r",
                    "    var userData = managerUSers ;\r",
                    "\r",
                    "        if(userData.companycontact_relationsheep_details)     {\r",
                    "    var year , wife ;\r",
                    "\r",
                    "        year = userData.companycontact_relationsheep_details.manager_rd_years_at_store;\r",
                    "        wife = userData.companycontact_relationsheep_details.manager_rd_wife;\r",
                    "\r",
                    "\r",
                    "    if( Ext.ComponentQuery.query('#RDMRDYrsAtStore')){\r",
                    "        Ext.ComponentQuery.query('#RDMRDYrsAtStore')[0].setValue(year);\r",
                    "    }\r",
                    "    Ext.ComponentQuery.query('#RDMRDWife')[0].setValue(wife);\r",
                    "\r",
                    "    Ext.ComponentQuery.query('#RDMRDRelatives')[0].setValue(userData.companycontact_relationsheep_details.manager_rd_relatives);\r",
                    "\r",
                    "    Ext.ComponentQuery.query('#RDMRDHobbies')[0].setValue(userData.companycontact_relationsheep_details.manager_rd_hobbies);\r",
                    "\r",
                    "    Ext.ComponentQuery.query('#RDMRDCarOfChoice')[0].setValue(userData.companycontact_relationsheep_details.manager_rd_car_of_choice);\r",
                    "\r",
                    "    Ext.ComponentQuery.query('#RDMRDAltPhone')[0].setValue(userData.companycontact_relationsheep_details.manager_rd_alt_phone);\r",
                    "\r",
                    "    Ext.ComponentQuery.query('#RDMRDAltEmail')[0].setValue(userData.companycontact_relationsheep_details.manager_rd_alt_email);\r",
                    "    Ext.ComponentQuery.query('#RDMRDWebsite')[0].setValue(userData.companycontact_relationsheep_details.manager_rd_website);\r",
                    "    if(Ext.ComponentQuery.query('#RDMRDChild1Name')){Ext.ComponentQuery.query('#RDMRDChild1Name')[0].setValue(userData.companycontact_relationsheep_details.manager_rd_childs[0].child_name);}\r",
                    "    if(Ext.ComponentQuery.query('#RDMRDChild2Name')){Ext.ComponentQuery.query('#RDMRDChild2Name')[0].setValue(userData.companycontact_relationsheep_details.manager_rd_childs[1].child_name);}\r",
                    "    //  Ext.ComponentQuery.query('#RDMRDChild3Name')[0].setValue(userData.manager_rd_childs[2].child_name);\r",
                    "    if(Ext.ComponentQuery.query('#RDMRDChild1Age')){Ext.ComponentQuery.query('#RDMRDChild1Age')[0].setValue(userData.companycontact_relationsheep_details.manager_rd_childs[0].child_age);}\r",
                    "    if(Ext.ComponentQuery.query('#RDMRDChild2Age')){Ext.ComponentQuery.query('#RDMRDChild2Age')[0].setValue(userData.companycontact_relationsheep_details.manager_rd_childs[1].child_age);}\r",
                    "    // Ext.ComponentQuery.query('#RDMRDChild3Age')[0].setValue(userData.manager_rd_childs[2].child_age);\r",
                    "\r",
                    "    if(Ext.ComponentQuery.query('#RDMRDPartner1')){Ext.ComponentQuery.query('#RDMRDPartner1')[0].setValue(userData.companycontact_relationsheep_details.manager_rd_partner[0].partner_name);}\r",
                    "    if(Ext.ComponentQuery.query('#RDMRDPartner2')){Ext.ComponentQuery.query('#RDMRDPartner2')[0].setValue(userData.companycontact_relationsheep_details.manager_rd_partner[1].partner_name);}\r",
                    "\r",
                    "        Ext.ComponentQuery.query('#RDMRDAniversaryMonth')[0].setValue(userData.companycontact_relationsheep_details.manager_rd_aniversary);\r",
                    "        Ext.ComponentQuery.query('#RDMRDDOBMonth')[0].setValue(userData.companycontact_relationsheep_details.manager_rd_dob);\r",
                    "\r",
                    "\r",
                    "\r",
                    "        }\r",
                    "        }\r",
                    "    catch(ex){\r",
                    "        console.error(ex);\r",
                    "    }\r",
                    "}\r",
                    "\r",
                    "\r",
                    "function setTipsSideContainer(managerUSers){\r",
                    "\r",
                    "    if(!managerUSers)\r",
                    "    {\r",
                    "        return ;\r",
                    "    }\r",
                    "\r",
                    "    var doDontsStore = Ext.getStore('notifications.managerTipsdodonts');\r",
                    "    var followUpsStore = Ext.getStore('notifications.managerTipsfollowsup');\r",
                    "\r",
                    "    if(managerUSers.companycontact_dos_and_donts.length > 1)\r",
                    "    {\r",
                    "\r",
                    "        doDontsStore.removeAll();\r",
                    "        doDontsStore.sync();\r",
                    "\r",
                    "        doDontsStore.setData(managerUSers.companycontact_dos_and_donts);\r",
                    "        doDontsStore.sync();\r",
                    "    }\r",
                    "\r",
                    "    if(managerUSers.companycontact_follow_ups.length > 1){\r",
                    "        followUpsStore.removeAll();\r",
                    "        followUpsStore.sync();\r",
                    "\r",
                    "        followUpsStore.setData(managerUSers.companycontact_follow_ups);\r",
                    "        followUpsStore.sync();\r",
                    "    }\r",
                    "    Ext.ComponentQuery.query('#RDManagerBlueStickyTextArea')[0].setValue(managerUSers.companycontact_blue_notes);\r",
                    "\r",
                    "}\r",
                    "\r",
                    "\r",
                    "function unsetTipsSideContainer(){\r",
                    "\r",
                    "    var doDontsStore = Ext.getStore('notifications.managerTipsdodonts');\r",
                    "    var followUpsStore = Ext.getStore('notifications.managerTipsfollowsup');\r",
                    "\r",
                    "    doDontsStore.removeAll();\r",
                    "    doDontsStore.sync();\r",
                    "\r",
                    "\r",
                    "    followUpsStore.removeAll();\r",
                    "    followUpsStore.sync();\r",
                    "\r",
                    "   var tempDatad = new Array();\r",
                    "    tempDatad =  [\r",
                    "                {\r",
                    "                    \"notification\": \"\"\r",
                    "                },\r",
                    "                {\r",
                    "                    \"notification\": \"\"\r",
                    "                },\r",
                    "                {\r",
                    "                    \"notification\": \"\"\r",
                    "                },\r",
                    "                {\r",
                    "                    \"notification\": \"\"\r",
                    "                }\r",
                    "            ];\r",
                    "\r",
                    "       var tempDataf = new Array();\r",
                    "    tempDataf =  [\r",
                    "                {\r",
                    "                    \"notification\": \"\"\r",
                    "                },\r",
                    "                {\r",
                    "                    \"notification\": \"\"\r",
                    "                },\r",
                    "                {\r",
                    "                    \"notification\": \"\"\r",
                    "                }\r",
                    "            ];\r",
                    "\r",
                    "     doDontsStore.setData(tempDatad);\r",
                    "    doDontsStore.sync();\r",
                    "\r",
                    "\r",
                    "    followUpsStore.setData(tempDataf);\r",
                    "    followUpsStore.sync();\r",
                    "\r",
                    "    Ext.ComponentQuery.query('#RDManagerBlueStickyTextArea')[0].setValue('');\r",
                    "\r",
                    "}\r",
                    "\r",
                    "        Ext.ComponentQuery.query('#CmpContactProfileFileFieldForImage1')[0].setDisabled(false);\r",
                    "        var mangerForm = Ext.ComponentQuery.query('#CmpContactProfileForm')[0];\r",
                    "       // mangerForm.setDisabled(false) ;\r",
                    "       // Ext.ComponentQuery.query('#RDManagerRelationDetailsForm')[0].setDisabled(false);\r",
                    "\r",
                    "if(RMdatalink.app.getController('RetailerDeatilsDataSet').config.isEditMode){\r",
                    "\r",
                    "    RMdatalink.app.getController('RetailerDeatilsDataSet').disableEnableComponents(false);\r",
                    "    mangerForm.setDisabled(false) ;\r",
                    "}else{\r",
                    "\r",
                    "    RMdatalink.app.getController('RetailerDeatilsDataSet').disableEnableComponents(true);\r",
                    "    mangerForm.setDisabled(true) ;\r",
                    "}"
                ]
            },
            "designerId": "e6643752-7abe-4dfd-8a43-85467f58b46c",
            "customConfigs": [
                {
                    "group": "(Custom Properties)",
                    "name": "activeIndex",
                    "type": "string"
                }
            ]
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "setTempRecordForRetailerOrVendor",
                "implHandler": [
                    "var isRetailerDetailsView = RMdatalink.app.getController('UINav').isRetailerDetailsView;\r",
                    "\r",
                    "\r",
                    "var crmUser = RMdatalink.app.getController('LoginHandler').config.userDetails.userName ;\r",
                    "\r",
                    "var rdTabPanel = Ext.ComponentQuery.query('#retailerDetailsMainTabPanel')[0];\r",
                    "\r",
                    "var rdStoreTab = rdTabPanel.down('#RDStoresTab');\r",
                    "var rdManagerTab = rdTabPanel.down('#RDManagerTab');\r",
                    "var rdManagerDetailsTab = Ext.ComponentQuery.query('#ManagerProfileSideContainer')[0].down('#ActRDManagerRelDetailsTab');\r",
                    "var rdUsersTab = rdTabPanel.down('#RDUsersTab');\r",
                    "var rdCRMTab = rdTabPanel.down('#RDCRMTab');\r",
                    "var rdNotesTab = rdTabPanel.down('#RDNotesTab');\r",
                    "\r",
                    "var TEST = {\r",
                    "    \"id\":158,\r",
                    "    \"user_since\":RMdatalink.util.globalMethods.getToday(),\r",
                    "    \"created_by\":crmUser,\r",
                    "    \"last_login\":\"\",\r",
                    "    \"last_export\":\"\",\r",
                    "    \"order_no\":\"1002\",\r",
                    "    \"reseller\":\"\",\r",
                    "    \"manager_dos_and_donts\":getSpecificDataFromList('ActRDManagerDosDontList'),\r",
                    "    \"manager_follow_ups\":getSpecificDataFromList('ActRDManagerFollowUpsLists'),\r",
                    "    \"manager_blue_note\":Ext.ComponentQuery.query('#ActRDManagerBlueStickyTextArea')[0].getValue(),\r",
                    "    \"dos_and_donts\":getSpecificDataFromStore('notificationsTipsDoDonts'),\r",
                    "    \"follow_ups\":getSpecificDataFromStore('notificationsTipsFollowsup'),\r",
                    "    \"blue_note\":Ext.ComponentQuery.query('#RDCRMNotesBlueStickyTextArea')[0].getValue(),\r",
                    "    \"manager_photo_url\": rdManagerTab.down('#RDManagerAddPhotoImage').getSrc(),\r",
                    "    \"manager_firstname\": rdManagerTab.down('#RDManagerFirstName').getValue(),\r",
                    "    \"manager_lastname\": rdManagerTab.down('#RDManagerLastName').getValue(),\r",
                    "    \"manager_email\": rdManagerTab.down('#RDManagerEmail').getValue(),\r",
                    "    \"manager_phone\": rdManagerTab.down('#RDManagerPhone').getValue()?rdManagerTab.down('#RDManagerPhone').getValue():\"\",\r",
                    "    \"manager_phone_ext\": rdManagerTab.down('#RDManagerPhoneExt').getValue()?rdManagerTab.down('#RDManagerPhoneExt').getValue():\"\",\r",
                    "    \"manager_address_suite\" : rdManagerTab.down('#RDManagerSuite').getValue()?rdManagerTab.down('#RDManagerSuite').getValue():\"\",\r",
                    "    \"manager_address\" : rdManagerTab.down('#RDManagerAddress').getValue()?rdManagerTab.down('#RDManagerAddress').getValue():\"\",\r",
                    "    \"manager_city\" : rdManagerTab.down('#ActMgrCity').getValue()?rdManagerTab.down('#ActMgrCity').getValue():\"\",\r",
                    "    \"manager_state\" : rdManagerTab.down('#ActMgrState').getValue()?rdManagerTab.down('#ActMgrState').getValue():\"\",\r",
                    "    \"manager_zip\" :  rdManagerTab.down('#ActMgrZip').getValue()?rdManagerTab.down('#ActMgrZip').getValue():\"\",\r",
                    "    \"manager_direct_number\" : rdManagerTab.down('#RDManagerDirectPhone').getValue()?rdManagerTab.down('#RDManagerDirectPhone').getValue():\"\",\r",
                    "     \"manager_direct_number_ext\" : rdManagerTab.down('#RDManagerDirectPhoneExt').getValue()?rdManagerTab.down('#RDManagerDirectPhoneExt').getValue():\"\",\r",
                    "    \"manager_linkedin\": rdManagerTab.down('#RDManagerLinkedIn').getValue(),\r",
                    "    \"manager_facebook\": rdManagerTab.down('#RDManagerFacebook').getValue(),\r",
                    "    \"manager_twitter\": rdManagerTab.down('#RDManagerTwitter').getValue(),\r",
                    "    \"manager_rd_aniversary\":  Ext.ComponentQuery.query('#ActRDMRDAniversaryMonth')[0].getValue(),// getDate('ActRDMRDAniversaryMonth','ActRDMRDAniversaryDay','ActRDMRDAniversaryYear'),\r",
                    "    \"manager_rd_relatives\": rdManagerDetailsTab.down('#ActRDMRDRelatives').getValue(),\r",
                    "    \"manager_rd_dob\":   Ext.ComponentQuery.query('#ActRDMRDDOBMonth')[0].getValue(),//getDate('ActRDMRDDOBMonth','ActRDMRDDOBDay','ActRDMRDDOBYear'),\r",
                    "    \"manager_rd_hobbies\": rdManagerDetailsTab.down('#ActRDMRDHobbies').getValue(),\r",
                    "    \"manager_rd_car_of_choice\": rdManagerDetailsTab.down('#ActRDMRDCarOfChoice').getValue(),\r",
                    "    \"manager_rd_alt_phone\": rdManagerDetailsTab.down('#ActRDMRDAltPhone').getValue()?rdManagerDetailsTab.down('#ActRDMRDAltPhone').getValue():\"\",\r",
                    "    \"manager_rd_alt_email\": rdManagerDetailsTab.down('#ActRDMRDAltEmail').getValue(),\r",
                    "    \"manager_rd_website\": rdManagerDetailsTab.down('#ActRDMRDWebsite').getValue(),\r",
                    "    \"photos\":getSpecificDataFromStore('retailersDetailsPhotos'),\r",
                    "    \"attachments\":getSpecificDataFromStore('retailersDetailsAttachments'),\r",
                    "    \"notes\":getSpecificDataFromStore('retailersDetailsNotes'),\r",
                    "    \"crms\": getSpecificDataFromStore('RDCRM'),\r",
                    "    \"manager_recent_activity\": rdManagerTab.down('#RDManagerActivityList').getData(),\r",
                    "    \"manager_rd_childs\": [\r",
                    "        {\r",
                    "            \"child_name\": rdManagerDetailsTab.down('#ActRDMRDChild1Name').getValue(),\r",
                    "            \"child_age\": rdManagerDetailsTab.down('#ActRDMRDChild1Age').getValue()?rdManagerDetailsTab.down('#ActRDMRDChild1Age').getValue():\"\"\r",
                    "        },\r",
                    "        {\r",
                    "            \"child_name\": rdManagerDetailsTab.down('#ActRDMRDChild2Name').getValue(),\r",
                    "            \"child_age\": rdManagerDetailsTab.down('#ActRDMRDChild2Age').getValue()?rdManagerDetailsTab.down('#ActRDMRDChild2Age').getValue():\"\"\r",
                    "        },\r",
                    "        {\r",
                    "            \"child_name\": rdManagerDetailsTab.down('#ActRDMRDChild3Name').getValue(),\r",
                    "            \"child_age\": rdManagerDetailsTab.down('#ActRDMRDChild3Age').getValue()?rdManagerDetailsTab.down('#ActRDMRDChild3Age').getValue():\"\"\r",
                    "        }\r",
                    "    ],\r",
                    "    \"manager_rd_partner\": [\r",
                    "        {\r",
                    "            \"partner_name\": rdManagerDetailsTab.down('#ActRDMRDPartner1').getValue()\r",
                    "        },\r",
                    "        {\r",
                    "            \"partner_name\": rdManagerDetailsTab.down('#ActRDMRDPartner2').getValue()\r",
                    "        }\r",
                    "    ],\r",
                    "    \"reps_bluebook_teamusers\": getUsersDataInArray()\r",
                    "};\r",
                    "\r",
                    "\r",
                    "\r",
                    "    TEST.company_contacts = getSpecificDataFromStore('vendor.CompanyContactStore') ;\r",
                    "\r",
                    "\r",
                    "if(isRetailerDetailsView){\r",
                    "\r",
                    "    this.config.isAdditionalInfoMoreFldsTap =true ;\r",
                    "    TEST.additional_fields = RMdatalink.app.getController('inhouse.DetailScreenController').\r",
                    "                              getOtherInhoseUserDetails() ;\r",
                    "\r",
                    "       this.config.isAdditionalInfoMoreFldsTap = false  ;\r",
                    "    TEST.manager_position = Ext.ComponentQuery.query('#ActRDMPositionId')[0].getValue() ;\r",
                    "/*\r",
                    "     Ext.ComponentQuery.query('#RDStoreType')[0].getValue();\r",
                    "     Ext.ComponentQuery.query('#RDStoreLocations')[0].getValue();\r",
                    "     Ext.ComponentQuery.query('#RDStoreEmployees')[0].getValue();\r",
                    "     Ext.ComponentQuery.query('#RDStoreYrsInBusiness')[0].getValue();\r",
                    "     Ext.ComponentQuery.query('#RDStorePercProg')[0].getValue();\r",
                    "     Ext.ComponentQuery.query('#RDStorePercKind')[0].getValue();\r",
                    "     Ext.ComponentQuery.query('#RDStoreAdvertising')[0].getValue();\r",
                    "     Ext.ComponentQuery.query('#RDStoreMoBudget')[0].getValue();\r",
                    "\r",
                    "*/\r",
                    "}else{\r",
                    "\r",
                    "\r",
                    "  TEST.manager_position = Ext.ComponentQuery.query('#ActRDMPositionId')[0].getValue() ;\r",
                    "  TEST.design =  Ext.ComponentQuery.query('#RDStoreDesign')[0].getValue();\r",
                    "  TEST.SKU =   Ext.ComponentQuery.query('#RDStoreSKU')[0].getValue();\r",
                    "  TEST.no_of_rugs_images =   Ext.ComponentQuery.query('#RDStoreNoOfRugsImages')[0].getValue();\r",
                    "  TEST.no_of_additional_images =   Ext.ComponentQuery.query('#RDStoreNoOfAdditionalImages')[0].getValue();\r",
                    "  TEST.collections =   Ext.ComponentQuery.query('#RDStoreCollections')[0].getValue();\r",
                    "\r",
                    "\r",
                    "\r",
                    "}\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "// *****  SET TEMP RECORD  FOR  RETAILER  **********\r",
                    "if(isRetailerDetailsView)\r",
                    "{\r",
                    "\r",
                    "\r",
                    "var activeList  = Ext.ComponentQuery.query('#RDInStoreVendorsTab')[0].down(\"#mainList\");\r",
                    "\r",
                    "var activeStore = activeList.getStore() ;\r",
                    "\r",
                    "\r",
                    "var vendors = getArrayFromVendorStore(activeStore);\r",
                    "\r",
                    "    TEST.vendors = vendors ;\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "    TEST.locations = this.getLocationData() ;\r",
                    "\r",
                    "    var additionalInfoTab = Ext.ComponentQuery.query('#retailerAdditionalInfoTab')[0] ;\r",
                    "\r",
                    "   // TEST.store_in_store_vendors = getSpecificDataFromStore('retailersStoreVendors');\r",
                    "   // TEST.store_online_vendors = getSpecificDataFromStore('retailersOnlineStoreVendors');\r",
                    "\r",
                    "    TEST.manager_rd_years_at_store = rdManagerDetailsTab.down('#ActRDMRDYrsAtStore').getValue()?rdManagerDetailsTab.down('#ActRDMRDYrsAtStore').getValue():\"\";\r",
                    "    TEST.manager_rd_wife = rdManagerDetailsTab.down('#ActRDMRDWife').getValue();\r",
                    "\r",
                    "    TEST.store_logo =  rdStoreTab.down('#RDUsersStoreLogoImage').getSrc();\r",
                    "    TEST.store_name = rdStoreTab.down('#RDStoreName').getValue();\r",
                    "    TEST.store_owner_firstname = rdStoreTab.down('#RDStoreOwner').getValue()?rdStoreTab.down('#RDStoreOwner').getValue().split(' ')[0]:\"\";\r",
                    "    TEST.store_owner_lastname = rdStoreTab.down('#RDStoreOwner').getValue().split(' ').length>1?rdStoreTab.down('#RDStoreOwner').getValue().split(' ')[1]:\"\";\r",
                    "    TEST.store_address_line1 =rdStoreTab.down('#RDStoreAddress').getValue();\r",
                    "    TEST.store_address_suite = rdStoreTab.down('#RDStoreSuite').getValue();\r",
                    "    TEST.store_city = rdStoreTab.down('#RDStoreCity').getValue();\r",
                    "    TEST.store_state = rdStoreTab.down('#RDStoreState').getValue();\r",
                    "    TEST.store_zip = rdStoreTab.down('#RDStoreZip').getValue()?rdStoreTab.down('#RDStoreZip').getValue():\"\";\r",
                    "    TEST.store_fax = rdStoreTab.down('#RDStoreFax').getValue()?rdStoreTab.down('#RDStoreFax').getValue():\"\";\r",
                    "    TEST.store_email =  rdStoreTab.down('#RDStoreEmail').getValue();\r",
                    "    TEST.store_phone = rdStoreTab.down('#RDStorePhone').getValue()?rdStoreTab.down('#RDStorePhone').getValue():\"\";\r",
                    "    TEST.store_phone_ext = rdStoreTab.down('#RDStorePhoneExt').getValue()?rdStoreTab.down('#RDStorePhoneExt').getValue():\"\";\r",
                    "    TEST.store_website = rdStoreTab.down('#RDStoreWebsite').getValue();\r",
                    "    TEST.store_type= rdStoreTab.down('#RDStoreType').getValue();\r",
                    "    TEST.store_size_sq_ft= rdStoreTab.down('#RDStoreSize').getValue()?rdStoreTab.down('#RDStoreSize').getValue():\"\";\r",
                    "    TEST.store_location= rdStoreTab.down('#RDStoreLocations').getValue()?rdStoreTab.down('#RDStoreLocations').getValue():\"\";\r",
                    "\r",
                    "    TEST.store_employees= additionalInfoTab.down('#RDStoreEmployees').getValue()?additionalInfoTab.down('#RDStoreEmployees').getValue():\"\";\r",
                    "    TEST.store_yr_business= additionalInfoTab.down('#RDStoreYrsInBusiness').getValue()?additionalInfoTab.down('#RDStoreYrsInBusiness').getValue():\"\";\r",
                    "    TEST.store_inventory_tool= additionalInfoTab.down('#RDStoreInventoryTool').getValue();\r",
                    "    TEST.store_accounting_tool= additionalInfoTab.down('#RDStoreAccountingTool').getValue();\r",
                    "    TEST.store_alt_bussiness= additionalInfoTab.down('#RDStoreAltBusiness').getValue();\r",
                    "    TEST.store_percent_program= additionalInfoTab.down('#RDStorePercProg').getValue()?additionalInfoTab.down('#RDStorePercProg').getValue():\"\";\r",
                    "    TEST.store_percent_oneof_kind= additionalInfoTab.down('#RDStorePercKind').getValue()?additionalInfoTab.down('#RDStorePercKind').getValue():\"\";\r",
                    "    TEST.store_advertising= additionalInfoTab.down('#RDStoreAdvertising').getValue();\r",
                    "    TEST.store_monthly_budget= additionalInfoTab.down('#RDStoreMoBudget').getValue()?additionalInfoTab.down('#RDStoreMoBudget').getValue():\"\";\r",
                    "\r",
                    "\r",
                    "\r",
                    "    TEST.store_challenges= additionalInfoTab.down('#rtAdditionalInfoChallenges').getValue();\r",
                    "\r",
                    "    TEST.store_monthly_subscription= \"\";\r",
                    "    TEST.store_status= Ext.ComponentQuery.query('#RDStoreStatusList')[0].getSelection()[0].data.StatusName;\r",
                    "    TEST.store_note= \"\";\r",
                    "    TEST.store_inactive_reason= \"\";\r",
                    "    TEST.store_pending_approval= \"\";\r",
                    "    TEST.store_products_datalink= false;\r",
                    "    TEST.store_products_ecatalog= false;\r",
                    "    TEST.store_products_smart_cart= false;\r",
                    "    TEST.store_products_rm_plc= false;\r",
                    "    TEST.store_products_irugs= false;\r",
                    "    TEST.store_created_in_past= new Date();\r",
                    "    TEST.store_modified_in_past= \"\";\r",
                    "    TEST.store_performance = rdStoreTab.down('#RDStoreTabPerformance').getSelection()[0].data.storeperf.toUpperCase();\r",
                    "\r",
                    "     TEST.account_no = Ext.ComponentQuery.query('#RDAccountDetails')[0].getValue();\r",
                    "\r",
                    "    TEST.store_products = {\r",
                    "\r",
                    "        datalink_status : Ext.ComponentQuery.query('#rtDatalinkStatusSelFld')[0].getValue(),\r",
                    "        ecatalog_status :Ext.ComponentQuery.query('#rtEcatalogStatusSelFld')[0].getValue(),\r",
                    "        ecommerce_status :Ext.ComponentQuery.query('#rtECommerceStatusSelFld')[0].getValue(),\r",
                    "        rmpro_status :Ext.ComponentQuery.query('#rtRM_proStatusSelFld')[0].getValue(),\r",
                    "        irugs_status : Ext.ComponentQuery.query('#rtirugzStatusSelFld')[0].getValue(),\r",
                    "        vip_status: Ext.ComponentQuery.query('#rtVipStatusSelFld')[0].getValue()\r",
                    "\r",
                    "    };\r",
                    "\r",
                    "\r",
                    "    var storeProductsViewItems = Ext.ComponentQuery.query('#RDStoreProductsList')[0].getViewItems();\r",
                    "    /*for(var i=0;i<storeProductsViewItems.length;i++) {\r",
                    "\r",
                    "        var checkbox = storeProductsViewItems[i].element.dom.querySelector('input[type=\"checkbox\"]');\r",
                    "        switch(checkbox.getAttribute('data-name')) {\r",
                    "            case 'Datalink':\r",
                    "                TEST.store_products_datalink = checkbox.checked;\r",
                    "                break;\r",
                    "            case 'ECatalog':\r",
                    "                TEST.store_products_ecatalog = checkbox.checked;\r",
                    "                break;\r",
                    "            case 'E-Commerce':\r",
                    "                TEST.store_products_smart_cart = checkbox.checked;\r",
                    "                break;\r",
                    "            case 'RM PRO':\r",
                    "                TEST.store_products_rm_plc = checkbox.checked;\r",
                    "                break;\r",
                    "            case 'iRugz':\r",
                    "                TEST.store_products_irugs = checkbox.checked;\r",
                    "                break;\r",
                    "        }\r",
                    "    }*/\r",
                    "}\r",
                    "// *****  SET TEMP RECORD  FOR  VENDOR  **********\r",
                    "else\r",
                    "{\r",
                    "  //  TEST.vendor_in_store_retailers = [] ;//getSpecificDataFromStore('retailersStoreVendors');\r",
                    "   // TEST.vendor_online_retailers = []; // getSpecificDataFromStore('retailersOnlineStoreVendors');\r",
                    "\r",
                    "\r",
                    "    TEST.vendor_resources = Ext.ComponentQuery.query('#RDVendorResourceTxtArea')[0].getValue();\r",
                    "\r",
                    "       TEST.vendor_facebook = Ext.ComponentQuery.query('#RDStoreWebsiteFbFld')[0].getValue();\r",
                    "       TEST.vendor_twitter =  Ext.ComponentQuery.query('#RDStoreWebsiteTwFld')[0].getValue();\r",
                    "      TEST.vendor_linkedin =  Ext.ComponentQuery.query('#RDStoreWebsiteLnFld')[0].getValue();\r",
                    "\r",
                    "\r",
                    "\r",
                    "   TEST.account_details = Ext.ComponentQuery.query('#RDAccountDetails')[0].getValue();\r",
                    "\r",
                    "    TEST.manager_rd_years_at_co = rdManagerDetailsTab.down('#ActRDMRDYrsAtStore').getValue()?rdManagerDetailsTab.down('#ActRDMRDYrsAtStore').getValue():\"\";\r",
                    "    TEST.manager_rd_sig_other = rdManagerDetailsTab.down('#ActRDMRDWife').getValue();\r",
                    "\r",
                    "    TEST.vendor_logo =  rdStoreTab.down('#RDUsersStoreLogoImage').getSrc();\r",
                    "    TEST.vendor_name = rdStoreTab.down('#RDStoreName').getValue();\r",
                    "    TEST.vendor_owner_firstname = rdStoreTab.down('#RDStoreOwner').getValue()?rdStoreTab.down('#RDStoreOwner').getValue().split(' ')[0]:\"\";\r",
                    "    TEST.vendor_owner_lastname = rdStoreTab.down('#RDStoreOwner').getValue().split(' ').length>1?rdStoreTab.down('#RDStoreOwner').getValue().split(' ')[1]:\"\";\r",
                    "    TEST.vendor_address_line1 =rdStoreTab.down('#RDStoreAddress').getValue();\r",
                    "    TEST.vendor_address_suite = rdStoreTab.down('#RDStoreSuite').getValue();\r",
                    "    TEST.vendor_city = rdStoreTab.down('#RDStoreCity').getValue();\r",
                    "    TEST.vendor_state = rdStoreTab.down('#RDStoreState').getValue();\r",
                    "    TEST.vendor_fax = rdStoreTab.down('#RDStoreFax').getValue()?rdStoreTab.down('#RDStoreFax').getValue():\"\";\r",
                    "    TEST.vendor_zip = rdStoreTab.down('#RDStoreZip').getValue()?rdStoreTab.down('#RDStoreZip').getValue():\"\";\r",
                    "    TEST.vendor_email =  rdStoreTab.down('#RDStoreEmail').getValue();\r",
                    "    TEST.vendor_phone = rdStoreTab.down('#RDStorePhone').getValue()?rdStoreTab.down('#RDStorePhone').getValue():\"\";\r",
                    "    TEST.vendor_phone_ext = rdStoreTab.down('#RDStorePhoneExt').getValue()?rdStoreTab.down('#RDStorePhoneExt').getValue():\"\";\r",
                    "    TEST.vendor_website = rdStoreTab.down('#RDStoreWebsite').getValue();\r",
                    "    TEST.vendor_type= rdStoreTab.down('#RDStoreType').getValue();\r",
                    "    TEST.vendor_size_sq_ft= rdStoreTab.down('#RDStoreSize').getValue()?rdStoreTab.down('#RDStoreSize').getValue():\"\";\r",
                    "    TEST.vendor_location= rdStoreTab.down('#RDStoreLocations').getValue()?rdStoreTab.down('#RDStoreLocations').getValue():\"\";\r",
                    "\r",
                    "   /* TEST.vendor_employees= rdStoreTab.down('#RDStoreEmployees').getValue()?rdStoreTab.down('#RDStoreEmployees').getValue():\"\";\r",
                    "    TEST.vendor_yr_business= rdStoreTab.down('#RDStoreYrsInBusiness').getValue()?rdStoreTab.down('#RDStoreYrsInBusiness').getValue():\"\";\r",
                    "    TEST.vendor_inventory_tool= rdStoreTab.down('#RDStoreInventoryTool').getValue();\r",
                    "    TEST.vendor_accounting_tool= rdStoreTab.down('#RDStoreAccountingTool').getValue();\r",
                    "    TEST.vendor_alt_bussiness= rdStoreTab.down('#RDStoreAltBusiness').getValue();\r",
                    "    TEST.vendor_percent_program= rdStoreTab.down('#RDStorePercProg').getValue()?rdStoreTab.down('#RDStorePercProg').getValue():\"\";\r",
                    "    TEST.vendor_percent_oneof_kind= rdStoreTab.down('#RDStorePercKind').getValue()?rdStoreTab.down('#RDStorePercKind').getValue():\"\";\r",
                    "\r",
                    "    TEST.vendor_advertising= rdStoreTab.down('#RDStoreAdvertising').getValue();\r",
                    "    TEST.vendor_monthly_budget= rdStoreTab.down('#RDStoreMoBudget').getValue()?rdStoreTab.down('#RDStoreMoBudget').getValue():\"\";\r",
                    "    TEST.vendor_monthly_subscription= \"\";\r",
                    "    */\r",
                    "\r",
                    "    TEST.vendor_challenges= rdStoreTab.down('#RDStoreChallenges').getValue();\r",
                    "    TEST.vendor_status= 'ACTIVE';\r",
                    "    TEST.vendor_note= \"\";\r",
                    "    TEST.vendor_inactive_reason= \"\";\r",
                    "    TEST.vendor_pending_approval= \"\";\r",
                    "    TEST.vendor_created_in_past= new Date();\r",
                    "    TEST.vendor_modified_in_past= \"\";\r",
                    "    TEST.vendor_performance=rdStoreTab.down('#RDStoreTabPerformance').getSelection()[0].data.storeperf.toUpperCase();\r",
                    "}\r",
                    "\r",
                    "return TEST;\r",
                    "\r",
                    "\r",
                    "function getSpecificDataFromStore(storeName) {\r",
                    "     var data = new Array() ;\r",
                    "    data = Ext.getStore(storeName).getData().all;\r",
                    "    var dataToSet = new Array();\r",
                    "    for(var i=0;i<data.length;i++) {\r",
                    "        dataToSet.push(data[i].data);\r",
                    "    }\r",
                    "    return dataToSet;\r",
                    "}\r",
                    "\r",
                    "function getDate(month,day,year) {\r",
                    "\r",
                    "    console.log(Ext.ComponentQuery.query('#'+month)[0].getValue());\r",
                    "     console.log(Ext.ComponentQuery.query('#'+day)[0].getValue());\r",
                    "     console.log(Ext.ComponentQuery.query('#'+year)[0].getValue());\r",
                    "\r",
                    "    return (Ext.ComponentQuery.query('#'+month)[0].getValue()+'/'+\r",
                    "            Ext.ComponentQuery.query('#'+day)[0].getValue()+'/'+\r",
                    "            Ext.ComponentQuery.query('#'+year)[0].getValue());\r",
                    "}\r",
                    "\r",
                    "function getUsersDataInArray() {\r",
                    "\r",
                    "    var vendorREPsDetails = Ext.getStore('vendor.REPsDetails');\r",
                    "\r",
                    "    var userData = RMdatalink.app.getController('inhouse.DetailScreenController').getArrayDataFromStore(vendorREPsDetails);\r",
                    "    console.log(\"  userData   \" , userData);\r",
                    "    return userData;\r",
                    "}\r",
                    "\r",
                    "\r",
                    "function getSpecificDataFromList(listName) {\r",
                    "\r",
                    "    var store = Ext.ComponentQuery.query('#'+listName)[0].getStore() ;\r",
                    "    if(store)\r",
                    "    {\r",
                    "        var data = new Array() ;\r",
                    "        data = store.getData().all;\r",
                    "        var dataToSet = new Array();\r",
                    "        for(var i=0;i<data.length;i++) {\r",
                    "            dataToSet.push(data[i].data);\r",
                    "        }\r",
                    "        return dataToSet;\r",
                    "    }\r",
                    "    else{\r",
                    "        return null;\r",
                    "    }\r",
                    "}\r",
                    "\r",
                    "\r",
                    "function getArrayFromVendorStore(store){\r",
                    "\r",
                    "    var data = new Array();\r",
                    "    data = store.getData().items;\r",
                    "\r",
                    "    var dataToReturn = new Array();\r",
                    "\r",
                    "    for(var i=0; i < data.length ; i++){\r",
                    "\r",
                    "        dataToReturn.push(\r",
                    "              {\r",
                    "                  vendor_id :  data[i].data._id,\r",
                    "                  vendor_name: data[i].data.vendor_name,\r",
                    "                  type: \"ACTIVE\"\r",
                    "              }\r",
                    "\r",
                    "\r",
                    "           );\r",
                    "    }\r",
                    "\r",
                    "    return dataToReturn ;\r",
                    "\r",
                    "}"
                ]
            },
            "designerId": "5c466cd7-45df-4598-9214-f607a6dc7b0e"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "validationForNewRecord",
                "implHandler": [
                    "this.removeErrorCls();\r",
                    "\r",
                    "var retailerDetailsMainTabPanel = Ext.ComponentQuery.query('#retailerDetailsMainTabPanel')[0];\r",
                    "\r",
                    "var RDStoreName = Ext.ComponentQuery.query('#RDStoreName')[0];\r",
                    "\r",
                    "\r",
                    "var RDManagerFirstName = Ext.ComponentQuery.query('#RDManagerFirstName')[0];\r",
                    "var RDManagerLastName = Ext.ComponentQuery.query('#RDManagerLastName')[0];\r",
                    "var managerEmlFld = Ext.ComponentQuery.query('#RDManagerEmail')[0];\r",
                    "\r",
                    "\r",
                    "var RDStoreNameText = RDStoreName.getValue();\r",
                    "var RDManagerFirstNameText = RDManagerFirstName.getValue();\r",
                    "var RDManagerLastNameText = RDManagerLastName.getValue();\r",
                    "\r",
                    "var validationForStore = true;\r",
                    "var validationForManager = true;\r",
                    "var activeTab = Ext.ComponentQuery.query('#retailerDetailsMainTabPanel')[0].getActiveItem().getItemId();\r",
                    "\r",
                    "if(RDStoreNameText.length === 0 && activeTab == \"RDStoresTab\")\r",
                    "{\r",
                    "    RDStoreName.replaceCls( 'x-rm-rdformpanel' , 'x-rm-rdformErrorPanel');\r",
                    "    validationForStore = false;\r",
                    "}\r",
                    "\r",
                    "\r",
                    "if(activeTab == \"RDManagerTab\")\r",
                    "{\r",
                    "    if(RDManagerFirstNameText.length === 0)\r",
                    "    {\r",
                    "        RDManagerFirstName.replaceCls( 'x-rm-rdformpanel' , 'x-rm-rdformErrorPanel');\r",
                    "        validationForManager = false;\r",
                    "    }\r",
                    "    if(RDManagerLastNameText.length === 0)\r",
                    "    {\r",
                    "        RDManagerLastName.replaceCls( 'x-rm-rdformpanel' , 'x-rm-rdformErrorPanel');\r",
                    "        validationForManager = false;\r",
                    "    }\r",
                    "\r",
                    "    if( managerEmlFld.getValue().length === 0 || !Ext.data.Validations.email(managerEmlFld, managerEmlFld.getValue()))\r",
                    "    {\r",
                    "         managerEmlFld.replaceCls( 'x-rm-rdformpanel' , 'x-rm-rdformErrorPanel');\r",
                    "         validationResult = false ;\r",
                    "\r",
                    "    }\r",
                    "\r",
                    "}\r",
                    "\r",
                    "if( !validationForStore)\r",
                    "{\r",
                    "    retailerDetailsMainTabPanel.setActiveItem(retailerDetailsMainTabPanel.down(\"#RDStoresTab\"));\r",
                    "    return false;\r",
                    "}\r",
                    "\r",
                    "if( !validationForManager )\r",
                    "{\r",
                    "\r",
                    "    retailerDetailsMainTabPanel.setActiveItem(retailerDetailsMainTabPanel.down(\"#RDManagerTab\"));\r",
                    "    return false;\r",
                    "}\r",
                    "\r",
                    "return true;"
                ]
            },
            "designerId": "3abc58e8-7265-4bd6-b91b-e7f305136a40"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "removeErrorCls",
                "implHandler": [
                    "//   STORE FIELDS\r",
                    "var emailField = Ext.ComponentQuery.query('#RDStoreEmail')[0];\r",
                    "var phoneField = Ext.ComponentQuery.query('#RDStorePhone')[0];\r",
                    "var websiteField = Ext.ComponentQuery.query('#RDStoreWebsite')[0];\r",
                    "var zipField = Ext.ComponentQuery.query('#RDStoreZip')[0];\r",
                    "var faxField = Ext.ComponentQuery.query('#RDStoreFax')[0];\r",
                    "\r",
                    "\r",
                    "emailField.removeCls('x-rm-rdformErrorPanel');\r",
                    "emailField.addCls('x-rm-rdformpanel');\r",
                    "\r",
                    "phoneField.removeCls('x-rm-rdformErrorPanel');\r",
                    "phoneField.addCls('x-rm-rdformpanel');\r",
                    "\r",
                    "websiteField.removeCls('x-rm-rdformErrorPanel');\r",
                    "websiteField.addCls('x-rm-rdformpanel');\r",
                    "\r",
                    "zipField.removeCls('x-rm-rdformErrorPanel');\r",
                    "zipField.addCls('x-rm-rdformpanel');\r",
                    "\r",
                    "faxField.removeCls('x-rm-rdformErrorPanel');\r",
                    "faxField.addCls('x-rm-rdformpanel');\r",
                    "\r",
                    "\r",
                    "\r",
                    "//   MANAGER FIELDS\r",
                    "var emailFieldRDManager = Ext.ComponentQuery.query('#RDManagerEmail')[0];\r",
                    "var phoneFieldRDManager = Ext.ComponentQuery.query('#RDManagerPhone')[0];\r",
                    "var ActMgrZip = Ext.ComponentQuery.query('#ActMgrZip')[0];\r",
                    "var RDManagerDirectPhone = Ext.ComponentQuery.query('#RDManagerDirectPhone')[0];\r",
                    "\r",
                    "\r",
                    "emailFieldRDManager.removeCls('x-rm-rdformErrorPanel');\r",
                    "emailFieldRDManager.addCls('x-rm-rdformpanel');\r",
                    "\r",
                    "phoneFieldRDManager.removeCls('x-rm-rdformErrorPanel');\r",
                    "phoneFieldRDManager.addCls('x-rm-rdformpanel');\r",
                    "\r",
                    "RDManagerDirectPhone.removeCls('x-rm-rdformErrorPanel');\r",
                    "RDManagerDirectPhone.addCls('x-rm-rdformpanel');\r",
                    "\r",
                    "ActMgrZip.removeCls('x-rm-rdformErrorPanel');\r",
                    "ActMgrZip.addCls('x-rm-rdformpanel');\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "//   MANAGER FIELDS RELATIONSHIP DETAILS\r",
                    "\r",
                    "var altEmailFieldRDManager = Ext.ComponentQuery.query('#RDMRDAltEmail')[0];\r",
                    "var altPhoneFieldRDManager = Ext.ComponentQuery.query('#RDMRDAltPhone')[0];\r",
                    "var altWebsiteFieldRDManager = Ext.ComponentQuery.query('#RDMRDWebsite')[0];\r",
                    "\r",
                    "altWebsiteFieldRDManager.removeCls('x-rm-rdformErrorPanel');\r",
                    "altWebsiteFieldRDManager.addCls('x-rm-rdformpanel');\r",
                    "\r",
                    "altEmailFieldRDManager.removeCls('x-rm-rdformErrorPanel');\r",
                    "altEmailFieldRDManager.addCls('x-rm-rdformpanel');\r",
                    "\r",
                    "altPhoneFieldRDManager.removeCls('x-rm-rdformErrorPanel');\r",
                    "altPhoneFieldRDManager.addCls('x-rm-rdformpanel');\r",
                    "\r",
                    "\r",
                    "var RDStoreName = Ext.ComponentQuery.query('#RDStoreName')[0];\r",
                    "var RDManagerFirstName = Ext.ComponentQuery.query('#RDManagerFirstName')[0];\r",
                    "var RDManagerLastName = Ext.ComponentQuery.query('#RDManagerLastName')[0];\r",
                    "\r",
                    "\r",
                    "\r",
                    "RDStoreName.removeCls('x-rm-rdformErrorPanel');\r",
                    "RDStoreName.addCls('x-rm-rdformpanel');\r",
                    "\r",
                    "RDManagerFirstName.removeCls('x-rm-rdformErrorPanel');\r",
                    "RDManagerFirstName.addCls('x-rm-rdformpanel');\r",
                    "\r",
                    "RDManagerLastName.removeCls('x-rm-rdformErrorPanel');\r",
                    "RDManagerLastName.addCls('x-rm-rdformpanel');\r",
                    "\r",
                    "\r",
                    "//************\r",
                    "\r",
                    "this.removeErrorClsForReps();\r",
                    "this.removeErrorClsForContactCompany();"
                ]
            },
            "designerId": "65e6e1b6-6249-4d35-b46d-00cbb7f2c485"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "getREPsListDataInArray",
                "implHandler": [
                    "\r",
                    "    var userData = [];\r",
                    "    var userPhotos = Ext.ComponentQuery.query('#RDUsersAddPhotoImage');\r",
                    "    var userNames = Ext.ComponentQuery.query('#RDUsersName');\r",
                    "    var userFirstNames = Ext.ComponentQuery.query('#RDUsersFirstName');\r",
                    "    var userLastNames = Ext.ComponentQuery.query('#RDUsersLastName');\r",
                    "    var userEmails = Ext.ComponentQuery.query('#RDUsersEmail');\r",
                    "    var userPhones = Ext.ComponentQuery.query('#RDUsersPhone');\r",
                    "    var userComments = Ext.ComponentQuery.query('#RDUsersComment');\r",
                    "    var userRights = Ext.ComponentQuery.query('#RDUsersRightsList');\r",
                    "\r",
                    "    for(var i=0 ; i<3 ; i++) {\r",
                    "\r",
                    "        var userRightsData = [];\r",
                    "        var userRightsViewItems = userRights[i].getViewItems();\r",
                    "        for(var j=0;j<userRightsViewItems.length;j++) {\r",
                    "\r",
                    "            var checkbox = userRightsViewItems[j].element.dom.querySelector('input[type=\"checkbox\"]');\r",
                    "            userRightsData.push({\r",
                    "                right_name: checkbox.getAttribute('data-rights'),\r",
                    "                right_status: checkbox.checked\r",
                    "            });\r",
                    "\r",
                    "        }\r",
                    "        var isTeamUsersProfileDataAvailable = false ;\r",
                    "        if(RMdatalink.app.getController('RetailerDeatilsDataSet').config.TeamUsersProfile && RMdatalink.app.getController('RetailerDeatilsDataSet').config.TeamUsersProfile[i]){\r",
                    "            isTeamUsersProfileDataAvailable= true ;\r",
                    "        }\r",
                    "\r",
                    "        userData.push({\r",
                    "            \"tu_image_url\": userPhotos[i].getSrc(),\r",
                    "            \"tu_username\": userNames[i].getValue(),\r",
                    "            \"tu_firstname\": userFirstNames[i].getValue(),\r",
                    "            \"tu_lastname\": userLastNames[i].getValue(),\r",
                    "            \"tu_email\": userEmails[i].getValue(),\r",
                    "            \"tu_phone\": userPhones[i].getValue()?userPhones[i].getValue():\"\",\r",
                    "            \"tu_comments\": userComments[i].getValue(),\r",
                    "            \"tu_access_rights\": userRightsData,\r",
                    "            \"dos_and_donts\":isTeamUsersProfileDataAvailable ? RMdatalink.app.getController('RetailerDeatilsDataSet').config.TeamUsersProfile[i].dos_and_donts : null,\r",
                    "            \"follow_ups\":isTeamUsersProfileDataAvailable ? RMdatalink.app.getController('RetailerDeatilsDataSet').config.TeamUsersProfile[i].follow_ups:null,\r",
                    "            \"tu_relationsheep_details\":isTeamUsersProfileDataAvailable ? RMdatalink.app.getController('RetailerDeatilsDataSet').config.TeamUsersProfile[i].tu_relationsheep_details : null\r",
                    "\r",
                    "        });\r",
                    "    }\r",
                    "\r",
                    "    RMdatalink.app.getController('RetailerDeatilsDataSet').config.TeamUsersProfile =null ;\r",
                    "    return userData;"
                ]
            },
            "designerId": "fd2dc3bf-ce49-4b50-a4b7-c23fedf79718"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "userData"
                ],
                "fn": "fillTipsData",
                "implHandler": [
                    "var doDontsStore = Ext.getStore('notifications.repsTipsdodonts');\r",
                    "doDontsStore.removeAll();\r",
                    "doDontsStore.sync();\r",
                    "\r",
                    "doDontsStore.setData(userData.tu_dos_and_donts);\r",
                    "doDontsStore.sync();\r",
                    "\r",
                    "var followUpStore = Ext.getStore('notifications.repsTipsfollowsup');\r",
                    "followUpStore.removeAll();\r",
                    "followUpStore.sync();\r",
                    "\r",
                    "followUpStore.setData(userData.tu_follow_ups);\r",
                    "followUpStore.sync();\r",
                    "\r",
                    "Ext.ComponentQuery.query('#RDUserProfileBlueStickyTextArea')[0].setValue(userData.tu_blue_notes);\r",
                    ""
                ]
            },
            "designerId": "07100277-9f24-45ff-9b75-7626673f8e23"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "unfillTipsData",
                "implHandler": [
                    "var doDontsStore = Ext.getStore('notificationsTipsDoDonts');\r",
                    "doDontsStore.removeAll();\r",
                    "doDontsStore.sync();\r",
                    "doDontsStore.setData([\r",
                    "    {\"notification\":\"\"},\r",
                    "    {\"notification\":\"\"},\r",
                    "    {\"notification\":\"\"},\r",
                    "    {\"notification\":\"\"}\r",
                    "]);\r",
                    "doDontsStore.sync();\r",
                    "\r",
                    "var followUpStore = Ext.getStore('notificationsTipsFollowsup');\r",
                    "followUpStore.removeAll();\r",
                    "followUpStore.sync();\r",
                    "followUpStore.setData([\r",
                    "    {\"notification\":\"\"},\r",
                    "    {\"notification\":\"\"},\r",
                    "    {\"notification\":\"\"},\r",
                    "    {\"notification\":\"\"}\r",
                    "]);\r",
                    "followUpStore.sync();\r",
                    "\r",
                    "Ext.ComponentQuery.query('#RDManagerBlueStickyTextArea')[0].setValue(\"\");\r",
                    "Ext.ComponentQuery.query('#RDCRMNotesBlueStickyTextArea')[0].setValue(\"\");"
                ]
            },
            "designerId": "088e334d-08d8-4dae-9ea3-620ec924ae7c"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "selectedUserRecord"
                ],
                "fn": "fillVendorRepsTipDoDontFollowUp",
                "implHandler": [
                    ""
                ]
            },
            "designerId": "83333077-6fa4-4a71-945f-2c20befa8dee"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "unFillTipsData",
                "implHandler": [
                    "//***********  FOR  REPS  ********\r",
                    "doDontsStore = Ext.getStore('notifications.repsTipsdodonts');\r",
                    "doDontsStore.removeAll();\r",
                    "doDontsStore.sync();\r",
                    "doDontsStore.setData([\r",
                    "    {\"notification\":\"\"},\r",
                    "    {\"notification\":\"\"},\r",
                    "    {\"notification\":\"\"},\r",
                    "    {\"notification\":\"\"}\r",
                    "]);\r",
                    "doDontsStore.sync();\r",
                    "\r",
                    "followUpStore = Ext.getStore('notifications.repsTipsfollowsup');\r",
                    "followUpStore.removeAll();\r",
                    "followUpStore.sync();\r",
                    "followUpStore.setData([\r",
                    "    {\"notification\":\"\"},\r",
                    "    {\"notification\":\"\"},\r",
                    "    {\"notification\":\"\"},\r",
                    "    {\"notification\":\"\"}\r",
                    "]);\r",
                    "followUpStore.sync();\r",
                    "\r",
                    "Ext.ComponentQuery.query('#RDUserProfileBlueStickyTextArea')[0].setValue(\"\");"
                ]
            },
            "designerId": "69a8b9b8-a6c6-43c4-89d3-c692a03fc1a2"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "validationForRepsInputFields",
                "implHandler": [
                    "// ******** VALIDATION  FOR  REPS  FIELDS *********\r",
                    "\r",
                    "var retailerDetailsMainTabPanel = Ext.ComponentQuery.query('#retailerDetailsMainTabPanel')[0];\r",
                    "\r",
                    "var phoneRegex = /^\\(?\\d{3}\\)?-? *\\d{3}-? *-?\\d{4}$/;\r",
                    "var zipRegex = /(^\\d{5}$)|(^\\d{5}-\\d{4}$)/;\r",
                    "\r",
                    "var RDUserProfilePhone = Ext.ComponentQuery.query('#RDUserProfilePhone')[0];\r",
                    "var RDUserProfilePhoneText  = RDUserProfilePhone.getValue();\r",
                    "\r",
                    "var RDUserProfileZip = Ext.ComponentQuery.query('#RDUserProfileZip')[0];\r",
                    "var RDUserProfileZipText  = RDUserProfileZip.getValue();\r",
                    "\r",
                    "var RDUserProfileCellPhone =  Ext.ComponentQuery.query('#RDUserProfileCellPhone')[0];\r",
                    "var RDUserProfileCellPhoneText  = RDUserProfileCellPhone.getValue();\r",
                    "\r",
                    "var RDUserProfileAltPhone =  Ext.ComponentQuery.query('#RDUserProfileAltPhone')[0];\r",
                    "var RDUserProfileAltPhoneText  = RDUserProfileAltPhone.getValue();\r",
                    "\r",
                    "var validationForReps = true;\r",
                    "var validationForRepsRelDetail = true;\r",
                    "\r",
                    "if( RDUserProfilePhoneText.length !== 0 && !phoneRegex.test(RDUserProfilePhoneText))\r",
                    "{\r",
                    "    RDUserProfilePhone.replaceCls( 'x-rm-rdformpanel' , 'x-rm-rdformErrorPanel');\r",
                    "    validationForReps = false;\r",
                    "}\r",
                    "\r",
                    "if( RDUserProfileZipText.length !== 0 && !zipRegex.test(RDUserProfileZipText))\r",
                    "{\r",
                    "    RDUserProfileZip.replaceCls( 'x-rm-rdformpanel' , 'x-rm-rdformErrorPanel');\r",
                    "    validationForReps = false;\r",
                    "}\r",
                    "\r",
                    "\r",
                    "if( RDUserProfileCellPhoneText.length !== 0 && !phoneRegex.test(RDUserProfileCellPhoneText))\r",
                    "{\r",
                    "    RDUserProfileCellPhone.replaceCls( 'x-rm-rdformpanel' , 'x-rm-rdformErrorPanel');\r",
                    "    validationForReps = false;\r",
                    "}\r",
                    "\r",
                    "\r",
                    "if( RDUserProfileAltPhoneText.length !== 0 && !phoneRegex.test(RDUserProfileAltPhoneText))\r",
                    "{\r",
                    "    RDUserProfileAltPhone.replaceCls( 'x-rm-rdformpanel' , 'x-rm-rdformErrorPanel');\r",
                    "    validationForRepsRelDetail = false;\r",
                    "}\r",
                    "\r",
                    "\r",
                    "if( (!validationForReps || !validationForRepsRelDetail) )\r",
                    "{\r",
                    "    retailerDetailsMainTabPanel.setActiveItem(retailerDetailsMainTabPanel.down(\"#RDUsersTab\"));\r",
                    "   // retailerDetailsMainTabPanel.setActiveItem(1);\r",
                    "    //FOR SIDE PANEL\r",
                    "    if(!validationForRepsRelDetail)\r",
                    "    {\r",
                    "        var RDUserProfileSideTabPanel = Ext.ComponentQuery.query('#RDUserProfileSideTabPanel')[0];\r",
                    "        RDUserProfileSideTabPanel.setActiveItem(1);\r",
                    "    }\r",
                    "    return false;\r",
                    "}\r",
                    "\r",
                    "return true;\r",
                    "\r",
                    ""
                ]
            },
            "designerId": "5b9d424a-a572-4470-8125-ef17e3e65dc3"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "validationForComContactInputFields",
                "implHandler": [
                    "// ******** VALIDATION  FOR  REPS  FIELDS *********\r",
                    "\r",
                    "var retailerDetailsMainTabPanel = Ext.ComponentQuery.query('#retailerDetailsMainTabPanel')[0];\r",
                    "\r",
                    "var phoneRegex = /^\\(?\\d{3}\\)?-? *\\d{3}-? *-?\\d{4}$/;\r",
                    "var zipRegex = /(^\\d{5}$)|(^\\d{5}-\\d{4}$)/;\r",
                    "\r",
                    "var CmpContactProfilePhone = Ext.ComponentQuery.query('#CmpContactProfilePhone')[0];\r",
                    "var CmpContactProfilePhoneText  = CmpContactProfilePhone.getValue();\r",
                    "\r",
                    "var CmpContactProfileCellPhone =  Ext.ComponentQuery.query('#CmpContactProfileCellPhone')[0];\r",
                    "var CmpContactProfileCellPhoneText  = CmpContactProfileCellPhone.getValue();\r",
                    "\r",
                    "var CmpContactProfileZip =  Ext.ComponentQuery.query('#CmpContactProfileZip')[0];\r",
                    "var CmpContactProfileZipText  = CmpContactProfileZip.getValue();\r",
                    "\r",
                    "var validationForCon = true;\r",
                    " var validationForContactRelDetail = true;\r",
                    "\r",
                    "if( CmpContactProfilePhoneText.length !== 0 && !phoneRegex.test(CmpContactProfilePhoneText))\r",
                    "{\r",
                    "    CmpContactProfilePhone.replaceCls( 'x-rm-rdformpanel' , 'x-rm-rdformErrorPanel');\r",
                    "    validationForCon = false;\r",
                    "}\r",
                    "\r",
                    "if( CmpContactProfileCellPhoneText.length !== 0 && !phoneRegex.test(CmpContactProfileCellPhoneText))\r",
                    "{\r",
                    "    CmpContactProfileCellPhone.replaceCls( 'x-rm-rdformpanel' , 'x-rm-rdformErrorPanel');\r",
                    "    validationForCon = false;\r",
                    "}\r",
                    "\r",
                    "\r",
                    "if( CmpContactProfileZipText.length !== 0 && !zipRegex.test(CmpContactProfileZipText))\r",
                    "{\r",
                    "    CmpContactProfileZip.replaceCls( 'x-rm-rdformpanel' , 'x-rm-rdformErrorPanel');\r",
                    "    validationForCon = false;\r",
                    "}\r",
                    "\r",
                    "\r",
                    "if( (!validationForCon || !validationForContactRelDetail) )\r",
                    "{\r",
                    "     retailerDetailsMainTabPanel.setActiveItem(retailerDetailsMainTabPanel.down(\"#CmpContactTab\"));\r",
                    "   // retailerDetailsMainTabPanel.setActiveItem(3);\r",
                    "    //FOR SIDE PANEL\r",
                    "//     if(!validationForRepsRelDetail)\r",
                    "//     {\r",
                    "//         var RDUserProfileSideTabPanel = Ext.ComponentQuery.query('#RDUserProfileSideTabPanel')[0];\r",
                    "//         RDUserProfileSideTabPanel.setActiveItem(1);\r",
                    "//     }\r",
                    "    return false;\r",
                    "}\r",
                    "\r",
                    "return true;\r",
                    "\r",
                    ""
                ]
            },
            "designerId": "918ef46d-0691-487c-b9b4-0101d10bc3d5"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "removeErrorClsForReps",
                "implHandler": [
                    "var RDUserProfilePhone = Ext.ComponentQuery.query('#RDUserProfilePhone')[0];\r",
                    "var RDUserProfileCellPhone =  Ext.ComponentQuery.query('#RDUserProfileCellPhone')[0];\r",
                    "var RDUserProfileAltPhone =  Ext.ComponentQuery.query('#RDUserProfileAltPhone')[0];\r",
                    "var RDUserProfileZip = Ext.ComponentQuery.query('#RDUserProfileZip')[0];\r",
                    "\r",
                    "RDUserProfileZip.removeCls('x-rm-rdformErrorPanel');\r",
                    "RDUserProfileZip.addCls('x-rm-rdformpanel');\r",
                    "\r",
                    "RDUserProfilePhone.removeCls('x-rm-rdformErrorPanel');\r",
                    "RDUserProfilePhone.addCls('x-rm-rdformpanel');\r",
                    "\r",
                    "RDUserProfileCellPhone.removeCls('x-rm-rdformErrorPanel');\r",
                    "RDUserProfileCellPhone.addCls('x-rm-rdformpanel');\r",
                    "\r",
                    "RDUserProfileAltPhone.removeCls('x-rm-rdformErrorPanel');\r",
                    "RDUserProfileAltPhone.addCls('x-rm-rdformpanel');\r",
                    "\r",
                    "\r",
                    "var rfName = Ext.ComponentQuery.query('#RDUserProfileFirstName')[0];\r",
                    "var rlName = Ext.ComponentQuery.query('#RDUserProfileLastName')[0];\r",
                    "var remail = Ext.ComponentQuery.query('#RDUserProfileEmail')[0];\r",
                    "\r",
                    "rfName.removeCls('x-rm-rdformErrorPanel');\r",
                    "rfName.addCls('x-rm-rdformpanel');\r",
                    "\r",
                    "\r",
                    "rlName.removeCls('x-rm-rdformErrorPanel');\r",
                    "rlName.addCls('x-rm-rdformpanel');\r",
                    "\r",
                    "\r",
                    "remail.removeCls('x-rm-rdformErrorPanel');\r",
                    "remail.addCls('x-rm-rdformpanel');\r",
                    ""
                ]
            },
            "designerId": "6bf77a05-4efe-4012-90cb-0eef047f0ac6"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "removeErrorClsForContactCompany",
                "implHandler": [
                    "var CmpContactProfilePhone = Ext.ComponentQuery.query('#CmpContactProfilePhone')[0];\r",
                    "var CmpContactProfileCellPhone =  Ext.ComponentQuery.query('#CmpContactProfileCellPhone')[0];\r",
                    "\r",
                    "var CmpContactProfileZip =  Ext.ComponentQuery.query('#CmpContactProfileZip')[0];\r",
                    "\r",
                    "CmpContactProfileZip.removeCls('x-rm-rdformErrorPanel');\r",
                    "CmpContactProfileZip.addCls('x-rm-rdformpanel');\r",
                    "\r",
                    "CmpContactProfilePhone.removeCls('x-rm-rdformErrorPanel');\r",
                    "CmpContactProfilePhone.addCls('x-rm-rdformpanel');\r",
                    "\r",
                    "CmpContactProfileCellPhone.removeCls('x-rm-rdformErrorPanel');\r",
                    "CmpContactProfileCellPhone.addCls('x-rm-rdformpanel');\r",
                    "\r",
                    "\r",
                    "var rfName = Ext.ComponentQuery.query('#CmpContactProfileFirstName')[0];\r",
                    "var rlName = Ext.ComponentQuery.query('#CmpContactProfileLastName')[0];\r",
                    "var remail = Ext.ComponentQuery.query('#CmpContactProfileEmail')[0];\r",
                    "\r",
                    "\r",
                    "rfName.removeCls('x-rm-rdformErrorPanel');\r",
                    "rfName.addCls('x-rm-rdformpanel');\r",
                    "\r",
                    "\r",
                    "rlName.removeCls('x-rm-rdformErrorPanel');\r",
                    "rlName.addCls('x-rm-rdformpanel');\r",
                    "\r",
                    "remail.removeCls('x-rm-rdformErrorPanel');\r",
                    "remail.addCls('x-rm-rdformpanel');\r",
                    ""
                ]
            },
            "designerId": "b2744725-2fda-4230-a252-eafa2308e846"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "hideSideContainerForREPs",
                "implHandler": [
                    "Ext.ComponentQuery.query('#RDUsersTab')[0].setActiveItem(0);\r",
                    "var container = Ext.ComponentQuery.query('#retailerDetailsMainTabPanel')[0] ;\r",
                    "var sideContainer = container.parent.down('#RDSideContainer');\r",
                    "var storeSideContainer = sideContainer.down('#RDStoreSideContainer');\r",
                    "var managerSideContainer = sideContainer.down('#RDManagerSideContainer');\r",
                    "var crmNotesSideContainer = sideContainer.down('#RDCRMNotesSideContainer');\r",
                    "var userProfileSideContainer = sideContainer.down('#RDUserProfileSideContainer');\r",
                    "sideContainer.setHidden(true);\r",
                    "storeSideContainer.setHidden(true);\r",
                    "managerSideContainer.setHidden(true);\r",
                    "crmNotesSideContainer.setHidden(true);\r",
                    "userProfileSideContainer.setHidden(true);"
                ]
            },
            "designerId": "7ec6bc17-7f6d-4931-acf8-ac3a825ecc80"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "setResetRetailersDetailView",
                "implHandler": [
                    ""
                ]
            },
            "designerId": "c6d0baf6-b731-4d46-97be-e8d4d7d6dc74"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "loadActiveRetailersForVendors",
                "implHandler": [
                    "  var importFrmCsvController = RMdatalink.app.getController('ImportCSV') ;\r",
                    "\r",
                    "\r",
                    "\r",
                    "    var phones = [] ;\r",
                    "\r",
                    "\r",
                    "    for(var i =0 ; i < importFrmCsvController.config.retailerForVendor.length ; i++){\r",
                    "\r",
                    "\r",
                    "        phones.push(importFrmCsvController.config.retailerForVendor[i].retailer_phone) ;\r",
                    "    }\r",
                    "\r",
                    "\r",
                    "    RMdatalink.app.getController('VendorRetailerRelations').config.activeRelData =\r",
                    "    {\r",
                    "       collection: dbEnv + \"rdl_masterretailerrecords\",\r",
                    "       pageNo:1,\r",
                    "       pageSize: 50,\r",
                    "       sortBy:{},\r",
                    "       query:\r",
                    "\r",
                    "           {\r",
                    "               store_phone:{\r",
                    "                   $in:\r",
                    "                   phones\r",
                    "               }\r",
                    "\r",
                    "           }\r",
                    "    };\r",
                    "\r",
                    "\r",
                    "    RMdatalink.iwa.rdl.queryDB({collection: dbEnv + \"rdl_masterretailerrecords\",pageNo:1,pageSize: 50 ,sortBy:{},\r",
                    "   query:\r",
                    "\r",
                    "   {\r",
                    "       store_phone:{\r",
                    "       $in:\r",
                    "       phones\r",
                    "   }},\r",
                    "\r",
                    "   fields:{}},success,error);\r",
                    "\r",
                    "\r",
                    "\r",
                    " var searchCriteria =  RMdatalink.app.getController('VendorRetailerRelations').config.activeRelData;\r",
                    "\r",
                    "\r",
                    "function success(){\r",
                    "\r",
                    "    setMaxPageSize(arguments[0]) ;\r",
                    "\r",
                    "\r",
                    "    setRetailersList(arguments[0].items) ;\r",
                    "\r",
                    "    Ext.ComponentQuery.query('#retailerAtVendorPNoLbl')[0].setHtml(searchCriteria.pageNo) ;\r",
                    "\r",
                    "    RMdatalink.app.getController('VendorRetailerRelations').setFilterForProspectRetailers();\r",
                    "\r",
                    "     Ext.ComponentQuery.query('#inStoreVendorsRetailersCLbl')[0].setHtml(\"Total Retailers : \"+arguments[0].count) ;\r",
                    "}\r",
                    "\r",
                    "function error(){\r",
                    "\r",
                    "//    errorCallBack() ;\r",
                    "\r",
                    "}\r",
                    "\r",
                    "\r",
                    "\r",
                    "function setMaxPageSize(response){\r",
                    "\r",
                    "   var retVendrRel = RMdatalink.app.getController('VendorRetailerRelations');\r",
                    "    if( (response.count  % searchCriteria.pageSize) == 0){\r",
                    "            retVendrRel.config.maxPageNo =  parseInt(response.count  / searchCriteria.pageSize) ;\r",
                    "    }\r",
                    "    else{\r",
                    "\r",
                    "        retVendrRel.config.maxPageNo =  parseInt(response.count  / searchCriteria.pageSize) + 1;\r",
                    "    }\r",
                    "\r",
                    "\r",
                    "}\r",
                    "\r",
                    "\r",
                    "\r",
                    "function setRetailersList(data){\r",
                    "\r",
                    "\r",
                    "    var prospectList  = Ext.ComponentQuery.query('#RDInStoreVendorsTab')[0].down(\"#mainList\");\r",
                    "\r",
                    "\r",
                    "      var prospectStore = prospectList.getStore() ;\r",
                    "    prospectStore.removeAll();\r",
                    "    prospectStore.sync();\r",
                    "\r",
                    "    prospectStore.setData(data) ;\r",
                    "\r",
                    "    prospectStore.sync();\r",
                    "\r",
                    "      prospectList.selectAll() ;\r",
                    "\r",
                    "\r",
                    "\r",
                    "}"
                ]
            },
            "designerId": "b2aa5df5-3512-480d-aa7e-bc8e491da253"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "loadActiveVendorsForRetailers",
                "implHandler": [
                    "\r",
                    "console.error('VUZ1');\r",
                    "\r",
                    "var vendorsMasterStr = Ext.getStore( 'vendors.Master');\r",
                    "\r",
                    "var records = new Array() ;\r",
                    "\r",
                    "\r",
                    "\r",
                    "var selectedUserRecord = RMdatalink.util.globalConfig.getDataToShowInSettingWindow() ;\r",
                    "console.error('VUZ2');\r",
                    "\r",
                    "var vndrs = selectedUserRecord.record.data.vendors ;\r",
                    "var rt_id = selectedUserRecord.record.data._id;\r",
                    "var rt_phn = selectedUserRecord.record.data.store_phone ;\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "setRetailersList( getVendorsForRetailer() ) ;\r",
                    "\r",
                    "\r",
                    "// ADDING DATA TO E-COMMERCE LIST\r",
                    "var dataToAdd =  getVendoersForRetailersByProduct('retailers_ecommerce');\r",
                    "if(dataToAdd.length)\r",
                    "{\r",
                    "    setRetailersListByProduct( dataToAdd, 'RDForECommerce') ;\r",
                    "}\r",
                    "\r",
                    "//ADDING DATA FOR AUTHORIZED LIST\r",
                    "\r",
                    "var dataToAddForAuthorized =  getVendoersForRetailersByProduct('retailers_authorized');\r",
                    "if(dataToAddForAuthorized.length)\r",
                    "{\r",
                    "    setRetailersListByProduct( dataToAddForAuthorized, 'RDForAuthorisedVendors') ;\r",
                    "}\r",
                    "\r",
                    "//ADDING DATA TO VIP LIST\r",
                    "var dataOfVip = getVipVendors();\r",
                    "\r",
                    "if(dataOfVip.length )\r",
                    "{\r",
                    "    setRetailersListByProduct (dataOfVip , \"RDForVIP\");\r",
                    "}\r",
                    "\r",
                    "\r",
                    "\r",
                    "var activeList  = Ext.ComponentQuery.query('#RDStoreSideTabPanel #RDOnlineVendorsTab')[0].down(\"#mainList\");\r",
                    "var activeStore = activeList.getStore() ;\r",
                    "\r",
                    "\r",
                    "RMdatalink.app.getController('VendorRetailerRelations').setFilterForProspectVendors( 'RDStoreSideTabPanel'  , Ext.ComponentQuery.query('#RDStoreSideTabPanel #RDOnlineVendorsTab')[0].down(\"#mainList\").getStore() ) ;\r",
                    "RMdatalink.app.getController('VendorRetailerRelations').setFilterForProspectVendors( 'RDForECommerce'       , Ext.ComponentQuery.query('#RDForECommerce #RDOnlineVendorsTab')[0].down(\"#mainList\").getStore() ) ;\r",
                    "RMdatalink.app.getController('VendorRetailerRelations').setFilterForProspectVendors( 'RDForVIP'             , Ext.ComponentQuery.query('#RDForVIP #RDOnlineVendorsTab')[0].down(\"#mainList\").getStore() ) ;\r",
                    "\r",
                    "RMdatalink.app.getController('VendorRetailerRelations').setFilterForProspectVendors( 'RDForAuthorisedVendors'            , Ext.ComponentQuery.query('#RDForAuthorisedVendors #RDOnlineVendorsTab')[0].down(\"#mainList\").getStore() ) ;\r",
                    "RMdatalink.app.getController('VendorRetailerRelations').setFilterForProspectVendors( 'RDForEcatalog'            , Ext.ComponentQuery.query('#RDForEcatalog #RDOnlineVendorsTab')[0].down(\"#mainList\").getStore() ) ;\r",
                    "RMdatalink.app.getController('VendorRetailerRelations').setFilterForProspectVendors( 'RDForIRugz'            , Ext.ComponentQuery.query('#RDForIRugz #RDOnlineVendorsTab')[0].down(\"#mainList\").getStore() ) ;\r",
                    "RMdatalink.app.getController('VendorRetailerRelations').setFilterForProspectVendors( 'RDForRMPro'            , Ext.ComponentQuery.query('#RDForRMPro #RDOnlineVendorsTab')[0].down(\"#mainList\").getStore() ) ;\r",
                    "\r",
                    "\r",
                    "\r",
                    "//setRetailersListByProduct\r",
                    "//RDForECommerce\r",
                    "console.warn(getVendoersForRetailersByProduct('retailers_ecommerce'));\r",
                    "\r",
                    "\r",
                    "\r",
                    "this.loadVdrInfoTotals('RDStoreSideTabPanel') ;\r",
                    "this.loadVdrInfoTotals('RDForECommerce') ;\r",
                    "this.loadVdrInfoTotals('RDForVIP') ;\r",
                    "\r",
                    "this.loadVdrInfoTotals('RDForAuthorisedVendors') ;\r",
                    "this.loadVdrInfoTotals('RDForEcatalog') ;\r",
                    "this.loadVdrInfoTotals('RDForIRugz') ;\r",
                    "this.loadVdrInfoTotals('RDForRMPro') ;\r",
                    "\r",
                    "\r",
                    "\r",
                    "function getVipVendors(){\r",
                    "\r",
                    "    var selectedUserRecord = RMdatalink.util.globalConfig.getDataToShowInSettingWindow() ;\r",
                    "    var ecommerceInfo = selectedUserRecord.record.data.e_commerce_info;\r",
                    "\r",
                    "    var arrayOfVendors = [];\r",
                    "    if( ecommerceInfo ){\r",
                    "\r",
                    "    }else{\r",
                    "        return arrayOfVendors;\r",
                    "    }\r",
                    "\r",
                    "    var ecomVendor = ecommerceInfo.additional_vendors;\r",
                    "    var vendorPartner = ecommerceInfo.vip_vendor;\r",
                    "\r",
                    "    //Account_No\r",
                    "    if(vendorPartner){\r",
                    "        var vRecord = findVendorBy_name(vendorPartner);\r",
                    "        var dataToPush =   vRecord.raw;\r",
                    "        dataToPush.Account_No = ecommerceInfo.account_no;\r",
                    "        arrayOfVendors.push(   dataToPush );\r",
                    "    }\r",
                    "    for(var i=0; ecomVendor && i <ecomVendor.length ; i++){\r",
                    "\r",
                    "        var vendor_name = ecomVendor[i].vendor_name;\r",
                    "\r",
                    "\r",
                    "        var vendorRecord = findVendorBy_name(vendor_name);\r",
                    "        if(vendorRecord){\r",
                    "        }else{\r",
                    "            continue;\r",
                    "        }\r",
                    "        var dataToPush =   vendorRecord.raw;\r",
                    "        dataToPush.Account_No = ecomVendor[i].account_no;\r",
                    "        arrayOfVendors.push( dataToPush);\r",
                    "    }\r",
                    "\r",
                    "    return arrayOfVendors;\r",
                    "\r",
                    "}\r",
                    "\r",
                    "\r",
                    "function getVendorsForRetailer(){\r",
                    "\r",
                    "    var vendorForRetailer = [] ;\r",
                    "    var product_type = \"datalink\";\r",
                    "\r",
                    "    var vendors = vendorsMasterStr.data.all ;\r",
                    "\r",
                    "\r",
                    "    for(var i=0; i < vendors.length ; i++){\r",
                    "        var vRecord = vendors[i];\r",
                    "\r",
                    "        var assocRtlrs = vendors[i].data.retailers ;\r",
                    "\r",
                    "        if(assocRtlrs)\r",
                    "        {\r",
                    "\r",
                    "            for(var k=0; k < assocRtlrs.length ; k++ )\r",
                    "            {\r",
                    "\r",
                    "                if(assocRtlrs[k].retailer_id)\r",
                    "                {\r",
                    "\r",
                    "                    if(assocRtlrs[k].retailer_id == rt_id  && ( !assocRtlrs[k].product_type || product_type == assocRtlrs[k].product_type ) )\r",
                    "                    {\r",
                    "\r",
                    "                        vendorForRetailer.push(\r",
                    "                            {\r",
                    "                                vendor_name:vRecord.data.vendor_name ,\r",
                    "                                collections:vRecord.data.collections ,\r",
                    "                                design:vRecord.data.design ,\r",
                    "                                SKU:vRecord.data.SKU,\r",
                    "                                no_of_images:vRecord.data.no_of_images,\r",
                    "                                no_of_additional_images:vRecord.data.no_of_additional_images,\r",
                    "                                vendor_id: vRecord.data._id,\r",
                    "                                Account_No:assocRtlrs[k].Account_No || getAccountNoForRetailerAndVendor(vRecord) ||' '\r",
                    "                            }\r",
                    "\r",
                    "                        );\r",
                    "                    }\r",
                    "\r",
                    "                }\r",
                    "                else\r",
                    "                {\r",
                    "\r",
                    "                    if(assocRtlrs[k].retailer_phone == rt_phn )\r",
                    "                    {\r",
                    "                        vendorForRetailer.push(\r",
                    "                            {\r",
                    "                                vendor_name:vRecord.data.vendor_name ,\r",
                    "                                collections:vRecord.data.collections ,\r",
                    "                                design:vRecord.data.design ,\r",
                    "                                SKU:vRecord.data.SKU,\r",
                    "                                no_of_images:vRecord.data.no_of_images,\r",
                    "                                no_of_additional_images:vRecord.data.no_of_additional_images,\r",
                    "                                vendor_id: vRecord.data._id,\r",
                    "                                Account_No:assocRtlrs[k].Account_No || getAccountNoForRetailerAndVendor(vRecord) || ' '\r",
                    "                            }\r",
                    "\r",
                    "                        );\r",
                    "\r",
                    "                    }\r",
                    "                }\r",
                    "            }\r",
                    "\r",
                    "        }\r",
                    "    }\r",
                    "    return vendorForRetailer ;\r",
                    "}\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "function getVendoersForRetailersByProduct(product_type_key){\r",
                    "\r",
                    "    var vendorForRetailer = [] ;\r",
                    "    if(product_type_key){\r",
                    "\r",
                    "    }else{\r",
                    "        return vendorForRetailer;\r",
                    "    }\r",
                    "    var vendors = vendorsMasterStr.data.all ;\r",
                    "\r",
                    "\r",
                    "    for(var i=0; i < vendors.length ; i++){\r",
                    "        var vRecord = vendors[i];\r",
                    "\r",
                    "        var assocRtlrs = vendors[i].data[product_type_key] ;\r",
                    "\r",
                    "        if(assocRtlrs)\r",
                    "        {\r",
                    "\r",
                    "            for(var k=0; k < assocRtlrs.length ; k++ )\r",
                    "            {\r",
                    "\r",
                    "                if(assocRtlrs[k].retailer_id)\r",
                    "                {\r",
                    "\r",
                    "                    if(assocRtlrs[k].retailer_id == rt_id )\r",
                    "                    {\r",
                    "                        vendorForRetailer.push(\r",
                    "                            {\r",
                    "                                vendor_name:vRecord.data.vendor_name ,\r",
                    "                                collections:vRecord.data.collections ,\r",
                    "                                design:vRecord.data.design ,\r",
                    "                                SKU:vRecord.data.SKU,\r",
                    "                                no_of_images:vRecord.data.no_of_images,\r",
                    "                                no_of_additional_images:vRecord.data.no_of_additional_images,\r",
                    "                                vendor_id: vRecord.data._id,\r",
                    "                                Account_No:assocRtlrs[k].Account_No || getAccountNoForRetailerAndVendor(vRecord) ||' '\r",
                    "                            }\r",
                    "\r",
                    "                        );\r",
                    "                    }\r",
                    "\r",
                    "                }\r",
                    "                else\r",
                    "                {\r",
                    "\r",
                    "                    if(assocRtlrs[k].retailer_phone == rt_phn )\r",
                    "                    {\r",
                    "                        vendorForRetailer.push(\r",
                    "                            {\r",
                    "                                vendor_name:vRecord.data.vendor_name ,\r",
                    "                                collections:vRecord.data.collections ,\r",
                    "                                design:vRecord.data.design ,\r",
                    "                                SKU:vRecord.data.SKU,\r",
                    "                                no_of_images:vRecord.data.no_of_images,\r",
                    "                                no_of_additional_images:vRecord.data.no_of_additional_images,\r",
                    "                                vendor_id: vRecord.data._id,\r",
                    "                                Account_No:assocRtlrs[k].Account_No || getAccountNoForRetailerAndVendor(vRecord) || ' '\r",
                    "                            }\r",
                    "\r",
                    "                        );\r",
                    "\r",
                    "                    }\r",
                    "                }\r",
                    "            }\r",
                    "\r",
                    "        }\r",
                    "    }\r",
                    "    return vendorForRetailer ;\r",
                    "\r",
                    "\r",
                    "\r",
                    "}\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "function setRetailersList(data){\r",
                    "\r",
                    "\r",
                    "    var prospectList  = Ext.ComponentQuery.query('#RDInStoreVendorsTab')[0].down(\"#mainList\");\r",
                    "\r",
                    "\r",
                    "    var prospectStore = prospectList.getStore() ;\r",
                    "    console.error(\"REMOVINF DATA\");\r",
                    "    prospectStore.removeAll();\r",
                    "    prospectStore.sync();\r",
                    "    console.error(data);\r",
                    "    prospectStore.setData(data) ;\r",
                    "\r",
                    "    prospectStore.sync();\r",
                    "\r",
                    "    prospectList.selectAll() ;\r",
                    "\r",
                    "    Ext.ComponentQuery.query('#RDStoreSideTabPanel #inStoreVendorsRetailersCLbl')[0].setHtml(\"Total Vendors : \"+ data.length ) ;\r",
                    "\r",
                    "    if(data.length == 0){\r",
                    "\r",
                    "        Ext.ComponentQuery.query('#RDStoreSideTabPanel')[0].setActiveItem(1);\r",
                    "\r",
                    "    }else{\r",
                    "\r",
                    "        Ext.ComponentQuery.query('#RDStoreSideTabPanel')[0].setActiveItem(0);\r",
                    "    }\r",
                    "\r",
                    "\r",
                    "}\r",
                    "\r",
                    "//RDForECommerce\r",
                    "function setRetailersListByProduct(data ,productTabId){\r",
                    "\r",
                    "    var prospectList  = Ext.ComponentQuery.query('#' +productTabId)[0].down(\"#mainList\");\r",
                    "    var prospectStore = prospectList.getStore() ;\r",
                    "    if(prospectStore){\r",
                    "        prospectStore.removeAll();\r",
                    "        prospectStore.sync();\r",
                    "        prospectStore.setData(data) ;\r",
                    "        prospectStore.sync();\r",
                    "\r",
                    "\r",
                    "\r",
                    "    }else{\r",
                    "        prospectList.setData(data) ;\r",
                    "    }\r",
                    "    prospectList.selectAll() ;\r",
                    "    Ext.ComponentQuery.query('#' + productTabId + ' ' + '#inStoreVendorsRetailersCLbl')[0].setHtml(\"Total Vendors : \"+ data.length ) ;\r",
                    "\r",
                    "    //     if(data.length == 0){\r",
                    "\r",
                    "    //         Ext.ComponentQuery.query('#RDStoreSideTabPanel')[0].setActiveItem(1);\r",
                    "\r",
                    "    //     }else{\r",
                    "\r",
                    "    //          Ext.ComponentQuery.query('#RDStoreSideTabPanel')[0].setActiveItem(0);\r",
                    "    //     }\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "}\r",
                    "\r",
                    "function getAccountNoForRetailerAndVendor(){\r",
                    "    return '';\r",
                    "}\r",
                    "\r",
                    ""
                ]
            },
            "designerId": "c50fa9e6-8010-4996-a7d0-2c1ccc36fa83"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button[itemId=retailerLocationAddBtn]",
                "designer|targetType": "Ext.Button",
                "fn": "onretailerLocationAddBtnTap",
                "implHandler": [
                    "this.createLocation() ;"
                ],
                "name": "tap"
            },
            "designerId": "476b9890-9ea7-49b1-9121-feb01705cf38"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "destroyLocations",
                "implHandler": [
                    "var containerPanel = Ext.ComponentQuery.query('#retailerLocationsFldSet')[0];\r",
                    "containerPanel.removeAll( true, false ) ;"
                ]
            },
            "designerId": "f75dcaab-a9cd-4bc9-8cd1-4c53ca9604ea"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "getLocationData",
                "implHandler": [
                    "/*\r",
                    "\r",
                    "\r",
                    "locationFormPanel\r",
                    "\r",
                    "locationAddress\r",
                    "locationSuite\r",
                    "locationCity\r",
                    "locationState\r",
                    "locationZip\r",
                    "locationPhone\r",
                    "locationPhoneExt\r",
                    "locationFax\r",
                    "locationStoreType\r",
                    "locationStoreSqFt\r",
                    "\r",
                    "*/\r",
                    "\r",
                    "var locationForms =  Ext.ComponentQuery.query('#locationFormPanel') ;\r",
                    "\r",
                    "var locations = [] ;\r",
                    "\r",
                    "\r",
                    "for(var i=0; i < locationForms.length ; i++){\r",
                    "    var objTopush = {\r",
                    "        index:i,\r",
                    "        location_name:locationForms[i].down('#locationStoreName').getValue(),\r",
                    "        address :locationForms[i].down('#locationAddress').getValue(),\r",
                    "        suit:locationForms[i].down('#locationSuite').getValue(),\r",
                    "        city:locationForms[i].down('#locationCity').getValue(),\r",
                    "        state:locationForms[i].down('#locationState').getValue(),\r",
                    "        zip:locationForms[i].down('#locationZip').getValue(),\r",
                    "        phone:locationForms[i].down('#locationPhone').getValue(),\r",
                    "        phone_ext:locationForms[i].down('#locationPhoneExt').getValue(),\r",
                    "        fax:locationForms[i].down('#locationFax').getValue(),\r",
                    "        store_type:locationForms[i].down('#locationStoreType').getValue(),\r",
                    "        store_sq_ft:locationForms[i].down('#locationStoreSqFt').getValue()\r",
                    "\r",
                    "    };\r",
                    "\r",
                    "    locations.push(objTopush ) ;\r",
                    "\r",
                    "}\r",
                    "\r",
                    "\r",
                    "return locations;"
                ]
            },
            "designerId": "2b3afb58-43f1-4b8f-b7c8-ff408a06827a"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "locations"
                ],
                "fn": "createAndSetLocations",
                "implHandler": [
                    "\r",
                    "// this.createLocation() ;\r",
                    "\r",
                    "\r",
                    "//Ext.ComponentQuery.query('#deleteLocationLbl')[0].setHidden(true) ;\r",
                    "\r",
                    "\r",
                    "if(locations)\r",
                    "{\r",
                    "    for(var k=1;k<locations.length ; k++){\r",
                    "\r",
                    "        this.createLocation() ;\r",
                    "\r",
                    "    }\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "    var locationForms =  Ext.ComponentQuery.query('#locationFormPanel') ;\r",
                    "\r",
                    "\r",
                    "    for(var i=0; i < locationForms.length ; i++){\r",
                    "\r",
                    "            locationForms[i].down('#locationStoreName').setValue(locations[i].location_name) ;\r",
                    "            locationForms[i].down('#locationAddress').setValue(locations[i].address);\r",
                    "            locationForms[i].down('#locationSuite').setValue(locations[i].suit);\r",
                    "            locationForms[i].down('#locationCity').setValue(locations[i].city) ;\r",
                    "            locationForms[i].down('#locationState').setValue(locations[i].state);\r",
                    "            locationForms[i].down('#locationZip').setValue(locations[i].zip) ;\r",
                    "            locationForms[i].down('#locationPhone').setValue(locations[i].phone);\r",
                    "            locationForms[i].down('#locationPhoneExt').setValue(locations[i].phone_ext);\r",
                    "            locationForms[i].down('#locationFax').setValue(locations[i].fax) ;\r",
                    "            locationForms[i].down('#locationStoreType').setValue(locations[i].store_type) ;\r",
                    "            locationForms[i].down('#locationStoreSqFt').setValue(locations[i].store_sq_ft);\r",
                    "\r",
                    "\r",
                    "    }\r",
                    "\r",
                    "\r",
                    "}"
                ]
            },
            "designerId": "fd8fbe24-dfb7-4fc8-83bb-9fc683e2f1be"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "createLocation",
                "implHandler": [
                    "var containerPanel = Ext.ComponentQuery.query('#retailerLocationsFldSet')[0];\r",
                    "\r",
                    "var newChildpanel = new Ext.Panel( {\r",
                    "                height: '275px',\r",
                    "                margin: '0 0 10px 0',\r",
                    "//              width: '90%',\r",
                    "                items: [\r",
                    "                    {\r",
                    "                        xtype: 'label',\r",
                    "                        html: '',\r",
                    "                        cls: 'labelCssForNewLocationTab',\r",
                    "                        margin: '0 0 10px 28px'\r",
                    "                    },\r",
                    "                    {\r",
                    "                        xtype: 'formpanel',\r",
                    "                        action: 'setScrollBarVisible',\r",
                    "                        cls: 'x-rm-rdformpanel',\r",
                    "                        height: 240,\r",
                    "                        itemId: 'locationFormPanel',\r",
                    "                        width: '100%',\r",
                    "                        layout: {\r",
                    "                            align: 'center',\r",
                    "                            type: 'vbox'\r",
                    "                        },\r",
                    "                        scrollable: true,\r",
                    "                        items: [\r",
                    "                            {\r",
                    "                                xtype: 'textfield',\r",
                    "                                itemId: 'locationStoreName',\r",
                    "                                label: 'Store Name',\r",
                    "                                labelWidth: '110px'\r",
                    "                            },\r",
                    "\r",
                    "\r",
                    "                            {\r",
                    "                                xtype: 'textfield',\r",
                    "                                itemId: 'locationAddress',\r",
                    "                                label: 'Address',\r",
                    "                                labelWidth: '110px'\r",
                    "                            },\r",
                    "                            {\r",
                    "                                xtype: 'textfield',\r",
                    "                                action: 'clearIconTap',\r",
                    "                                itemId: 'locationSuite',\r",
                    "                                label: 'Suite #',\r",
                    "                                labelWidth: '110px'\r",
                    "                            },\r",
                    "                            {\r",
                    "                                xtype: 'textfield',\r",
                    "                                itemId: 'locationCity',\r",
                    "                                label: 'City',\r",
                    "                                labelWidth: '110px'\r",
                    "                            },\r",
                    "                            {\r",
                    "                                xtype: 'fieldset',\r",
                    "                                layout: {\r",
                    "                                    align: 'center',\r",
                    "                                    type: 'hbox'\r",
                    "                                },\r",
                    "                                items: [\r",
                    "                                    {\r",
                    "                                        xtype: 'textfield',\r",
                    "                                        itemId: 'locationState',\r",
                    "                                        width: '60%',\r",
                    "                                        label: 'State',\r",
                    "                                        labelWidth: '110px',\r",
                    "                                        maxLength: 5,\r",
                    "                                        action:\"autoSuggestionField\"\r",
                    "                                    },\r",
                    "                                    {\r",
                    "                                        xtype: 'textfield',\r",
                    "                                        action: 'clearIconTap',\r",
                    "                                        actionChange: 'textChange',\r",
                    "                                        itemId: 'locationZip',\r",
                    "                                        width: '40%',\r",
                    "                                        label: 'Zip',\r",
                    "                                        labelWidth: '50px',\r",
                    "                                        maxLength: 5\r",
                    "                                    }\r",
                    "                                ]\r",
                    "                            },\r",
                    "\r",
                    "                            {\r",
                    "                                xtype: 'fieldset',\r",
                    "                                layout: {\r",
                    "                                    align: 'center',\r",
                    "                                    type: 'hbox'\r",
                    "                                },\r",
                    "                                items: [\r",
                    "\r",
                    "                                    {\r",
                    "                                        xtype: 'textfield',\r",
                    "                                        action: 'clearIconTap',\r",
                    "                                        actionChange: 'textChange',\r",
                    "                                        width: '60%',\r",
                    "                                        itemId: 'locationPhone',\r",
                    "                                        label: 'Phone',\r",
                    "                                        labelWidth: '110px',\r",
                    "                                        maxLength: 16\r",
                    "                                    },\r",
                    "                                    {\r",
                    "                                        xtype: 'textfield',\r",
                    "                                        action: 'clearIconTap',\r",
                    "                                        actionChange: 'textChange',\r",
                    "                                        itemId: 'locationPhoneExt',\r",
                    "                                        width: '40%',\r",
                    "                                        label: 'Ext',\r",
                    "                                        labelWidth: '50px',\r",
                    "                                        maxLength: 10\r",
                    "                                    }\r",
                    "                                ]\r",
                    "                            },\r",
                    "\r",
                    "                             {\r",
                    "                                xtype: 'textfield',\r",
                    "                                action: 'clearIconTap',\r",
                    "                                actionChange: 'textChange',\r",
                    "                                itemId: 'locationFax',\r",
                    "\r",
                    "                                label: 'Fax',\r",
                    "                                labelWidth: '110px',\r",
                    "                                maxLength: 16\r",
                    "                            },\r",
                    "\r",
                    "                            {\r",
                    "                                xtype: 'fieldset',\r",
                    "                                layout: {\r",
                    "                                    align: 'center',\r",
                    "                                    type: 'hbox'\r",
                    "                                },\r",
                    "                                items: [\r",
                    "\r",
                    "                                    {\r",
                    "                                        xtype: 'textfield',\r",
                    "                                        action: 'clearIconTap',\r",
                    "                                        actionChange: 'textChange',\r",
                    "                                        width: '50%',\r",
                    "                                        itemId: 'locationStoreType',\r",
                    "                                        label: 'Store Type',\r",
                    "                                        labelWidth: '110px'\r",
                    "                                    },\r",
                    "                                    {\r",
                    "                                        xtype: 'textfield',\r",
                    "                                        action: 'clearIconTap',\r",
                    "                                        actionChange: 'textChange',\r",
                    "                                        itemId: 'locationStoreSqFt',\r",
                    "                                        width: '50%',\r",
                    "                                        label: 'Sq.Ft.',\r",
                    "                                        labelWidth: '50px'\r",
                    "                                    }\r",
                    "                                ]\r",
                    "                            }\r",
                    "                        ]\r",
                    "                    },\r",
                    "                    {\r",
                    "                        xtype: 'label',\r",
                    "                        html: 'Delete Location',\r",
                    "                        action:'deleteLocation',\r",
                    "                        itemId:'deleteLocationLbl',\r",
                    "                        margin: '0 45%',\r",
                    "                        width: '90%',\r",
                    "                        cls: 'labelCssForNewLocationTab pointerCursor'\r",
                    "                    },\r",
                    "                    {\r",
                    "                        xtype: 'image',\r",
                    "                        height: 25,\r",
                    "                        margin: '5 50%',\r",
                    "                        width: 31,\r",
                    "                        src:'resources/images/retailerDetail/location_separator.png'\r",
                    "                    }\r",
                    "                ]\r",
                    "            });\r",
                    "\r",
                    "\r",
                    "containerPanel.add(newChildpanel);\r",
                    "\r",
                    "this.updateNoOfLocations() ;"
                ]
            },
            "designerId": "ee8a1583-e5e3-4108-a24c-8af325cd470b"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "label[action=deleteLocation]",
                "designer|targetType": "Ext.Label",
                "fn": "ondeleteLocationLabelInitialize",
                "implHandler": [
                    "component.element.on(\"tap\",function(){\r",
                    "\r",
                    "    component.getParent().destroy() ;\r",
                    "    RMdatalink.app.getController('RetailerDeatilsDataSet').updateNoOfLocations() ;\r",
                    "}) ;"
                ],
                "name": "initialize"
            },
            "designerId": "984d4cc7-435a-42ba-a24e-c16bf3f327fd"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "selectfield[action=selectLocation]",
                "designer|targetType": "Ext.field.Select",
                "fn": "onselectLocationSelectfieldPainted",
                "implHandler": [
                    "\r",
                    "selectfield.setOptions(this.getLocationData()) ;"
                ],
                "name": "focus"
            },
            "designerId": "742f8027-6a1b-4ce3-8e72-8893a503a6b8"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "selectfield[action=selectLocation]",
                "designer|targetType": "Ext.field.Select",
                "fn": "onLocationChangeSelectfieldChange",
                "implHandler": [
                    "\r",
                    "var selectFld = selectfield.getItemId() ;\r",
                    "var location = this.getLocationData()[newValue] ;\r",
                    "\r",
                    "\r",
                    "console.log(selectFld) ;\r",
                    "console.log(location) ;\r",
                    "switch(selectFld){\r",
                    "\r",
                    "\r",
                    "        case \"cmpContactsLocSelectFld\":\r",
                    "\r",
                    "\r",
                    "            Ext.ComponentQuery.query('#CmpContactProfileAddress')[0].setValue(location.address) ;\r",
                    "            Ext.ComponentQuery.query('#CmpContactProfileSuite')[0].setValue(location.suit) ;\r",
                    "            Ext.ComponentQuery.query('#CmpContactProfileCity')[0].setValue(location.city) ;\r",
                    "            Ext.ComponentQuery.query('#CmpContactProfileState')[0].setValue(location.state) ;\r",
                    "            Ext.ComponentQuery.query('#CmpContactProfileZip')[0].setValue(location.zip) ;\r",
                    "\r",
                    "\r",
                    "        break;\r",
                    "\r",
                    "        case \"actMgrLocSelectFld\":\r",
                    "\r",
                    "            Ext.ComponentQuery.query('#RDManagerAddress')[0].setValue(location.address) ;\r",
                    "            Ext.ComponentQuery.query('#RDManagerSuite')[0].setValue(location.suit) ;\r",
                    "            Ext.ComponentQuery.query('#ActMgrCity')[0].setValue(location.city) ;\r",
                    "            Ext.ComponentQuery.query('#ActMgrState')[0].setValue(location.state) ;\r",
                    "            Ext.ComponentQuery.query('#ActMgrZip')[0].setValue(location.zip) ;\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "        break;\r",
                    "}\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    ""
                ],
                "name": "change"
            },
            "designerId": "1870f6d3-ee17-43de-b345-5df9fa661e2f"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "updateRTVDNotes",
                "implHandler": [
                    "        var isRetailerDetailsView = RMdatalink.app.getController('UINav').isRetailerDetailsView;\r",
                    "        var masterStore =  isRetailerDetailsView ? Ext.getStore('retailersMaster'):Ext.getStore('vendors.Master');\r",
                    "\r",
                    "\r",
                    "        var selectedUserRecord = RMdatalink.util.globalConfig.getDataInRetailerScreenForSaveOrCancel();\r",
                    "\r",
                    "\r",
                    "    if( !( Object.keys(selectedUserRecord).length  )   ){\r",
                    "        // USER CLICKED ON ADD NEW RETAILER BTN\r",
                    "\r",
                    "        return ;\r",
                    "    }\r",
                    "\r",
                    "var notes = getSpecificDataFromStore('retailersDetailsNotes') ;\r",
                    "var _id = selectedUserRecord.record.data._id ;\r",
                    "var dataToUpdate = {\r",
                    "\r",
                    "    notes:notes\r",
                    "} ;\r",
                    "            Ext.Viewport.setMasked( {\r",
                    "                xtype: 'loadmask'\r",
                    "            });\r",
                    "\r",
                    "            RMdatalink.iwa.rdl.doUpdateCollection(masterStore, dataToUpdate , _id , suc, err);\r",
                    "\r",
                    "\r",
                    "            function suc(){\r",
                    "                 selectedUserRecord.record.set(\"notes\",notes) ;\r",
                    "                updateNoteBadgeText() ;\r",
                    "\r",
                    "                 Ext.Viewport.setMasked(false);\r",
                    "\r",
                    "\r",
                    "\r",
                    "            }\r",
                    "            function err(){\r",
                    "                    Ext.Viewport.setMasked(false);\r",
                    "            }\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "function getSpecificDataFromStore(storeName) {\r",
                    "     var data = new Array() ;\r",
                    "    data = Ext.getStore(storeName).getData().all;\r",
                    "    var dataToSet = new Array();\r",
                    "    for(var i=0;i<data.length;i++) {\r",
                    "        dataToSet.push(data[i].data);\r",
                    "    }\r",
                    "    return dataToSet;\r",
                    "}\r",
                    "\r",
                    "function updateNoteBadgeText(){\r",
                    "\r",
                    "      if(notes && notes.length > 0){\r",
                    "            Ext.ComponentQuery.query('#retailerDetailsMainTabPanel')[0].getTabBar().getAt(6).setBadgeText(notes.length);\r",
                    "    }\r",
                    "    else{\r",
                    "\r",
                    "            Ext.ComponentQuery.query('#retailerDetailsMainTabPanel')[0].getTabBar().getAt(6).setBadgeText();\r",
                    "    }\r",
                    "\r",
                    "}"
                ]
            },
            "designerId": "e04abc01-b65f-4d21-b5ec-9d25730d6dd3"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "data"
                ],
                "fn": "setRetailersFirstLocation",
                "implHandler": [
                    "\r",
                    "            var locationForms =  Ext.ComponentQuery.query('#locationFormPanel') ;\r",
                    "\r",
                    "\r",
                    "            var i=0 ;\r",
                    "            locationForms[i].down('#locationAddress').setValue(data.store_address_line1);\r",
                    "            locationForms[i].down('#locationCity').setValue(data.store_city ) ;\r",
                    "            locationForms[i].down('#locationState').setValue(data.store_state);\r",
                    "            locationForms[i].down('#locationZip').setValue(data.store_zip ) ;\r",
                    "            locationForms[i].down('#locationFax').setValue(data.store_fax ) ;\r",
                    "         // locationForms[i].down('#locationPhone').setValue(locations[i].phone);\r",
                    "\r",
                    ""
                ]
            },
            "designerId": "60db137d-e733-43ce-8128-521aa8898bea"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "selectfield[action=productStatusChange]",
                "designer|targetType": "Ext.field.Select",
                "fn": "onproductStatusChangeSelectfieldChange",
                "implHandler": [
                    "\r",
                    "switch(newValue){\r",
                    "\r",
                    "    case \"ACTIVE\":\r",
                    "        selectfield.setInputCls(\"backgroundActiveInputCls\");\r",
                    "        break;\r",
                    "    case \"INACTIVE\":\r",
                    "        selectfield.setInputCls(\"backgroundInActiveInputCls\");\r",
                    "        break;\r",
                    "    case \"PROSPECT\":\r",
                    "        selectfield.setInputCls(\"backgroundProspectInputCls\");\r",
                    "        break;\r",
                    "   case \"HOT_PROSPECT\":\r",
                    "        selectfield.setInputCls(\"backgroundHotProspectInputCls\");\r",
                    "        break;\r",
                    "    case \"PENDING\":\r",
                    "        selectfield.setInputCls(\"backgroundPendingInputCls\");\r",
                    "        break;\r",
                    "     case \"SKIP\":\r",
                    "        selectfield.setInputCls(\"backgroundInActiveInputCls\");\r",
                    "        break;\r",
                    "    default:\r",
                    "        selectfield.setInputCls(\"backgroundNoStatusInputCls\");\r",
                    "        break;\r",
                    "}\r",
                    "\r",
                    "\r",
                    "\r",
                    "// if(this.config.changedManually){\r",
                    "// Console.error(\"****************************************************************CHANGE\") ;\r",
                    "//     this.saveRTProductSetup();\r",
                    "// }"
                ],
                "name": "change"
            },
            "designerId": "b7b6107e-1a08-44d1-97d7-55c573375060"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "parentTab"
                ],
                "fn": "loadVdrInfoTotals",
                "implHandler": [
                    "    parentTab = parentTab || 'RDStoreSideTabPanel';\r",
                    "\r",
                    "\r",
                    "var prospectList  = Ext.ComponentQuery.query('#' + parentTab +' ' + '#RDInStoreVendorsTab')[0].down(\"#mainList\");\r",
                    "var vdrStore = prospectList.getStore() ;\r",
                    "var parentPanel = Ext.ComponentQuery.query('#' + parentTab +' ' + ' #rtlrVdrAssociationTotalFldSet')[0] ;\r",
                    "//RDStoreSideTabPanel\r",
                    "\r",
                    "\r",
                    "var totalSKU = 0 ;\r",
                    "var totalCollection = 0 ;\r",
                    "var totalDesigns = 0 ;\r",
                    "\r",
                    "\r",
                    "var vendors ;\r",
                    "try{\r",
                    "   if(vdrStore) {\r",
                    "       vendors = vdrStore.getData().all ;\r",
                    "   }else{\r",
                    "       vendors = [];\r",
                    "   }\r",
                    "\r",
                    "\r",
                    "}catch(e){\r",
                    "\r",
                    "     console.log(\"ERROR WAS THROWN\" , e);\r",
                    "     vendors = [];\r",
                    "}\r",
                    "\r",
                    "for(var i=0 ; i < vendors.length ; i++){\r",
                    "\r",
                    "    totalSKU += parseInt(vendors[i].data.SKU,0) ;\r",
                    "    totalCollection += parseInt(vendors[i].data.collections,0) ;\r",
                    "    totalDesigns += parseInt(vendors[i].data.design,0) ;\r",
                    "\r",
                    "}\r",
                    "\r",
                    "\r",
                    "\r",
                    "parentPanel.down('#rtDtlVdrCollectionTotalLbl').setHtml(totalCollection);\r",
                    "parentPanel.down('#rtDtlVdrDesignTotalLbl').setHtml(totalDesigns);\r",
                    "parentPanel.down('#rtDtlVdrSKUTotalLbl').setHtml(totalSKU);"
                ]
            },
            "designerId": "d7314b92-4540-4bb2-b05f-0b3994fa84f7"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "dataview",
                    "index",
                    "target",
                    "record",
                    "e",
                    "eOpts"
                ],
                "fn": "onRetailerTap",
                "implHandler": [
                    "//dataview, index, target, record, e, eOpts\r",
                    "var attrToSearch = RMdatalink.util.globalConfig.getListAttrForDelHandling();\r",
                    "var targetEl = e.target;\r",
                    "\r",
                    "\r",
                    "\r",
                    "if( RMdatalink.util.globalConfig.isAttributePresentInTarget( attrToSearch,targetEl )  ){\r",
                    "\r",
                    "    var attrVak = targetEl.getAttribute(attrToSearch);\r",
                    "    var nameAttr = RMdatalink.util.globalConfig.getManager_LastNameDelegateClassForTap();\r",
                    "    var storeAttr = RMdatalink.util.globalConfig.getStore_nameDelegateClassForTap();\r",
                    "//     var place = RMdatalink.util.globalConfig.getUrlForRetailerCard();\r",
                    "\r",
                    "    var varibleToSet = setVariable();\r",
                    "\r",
                    "    var retailersMaincontentpanel = Ext.ComponentQuery.query('#retailersMaincontentpanel')[0];\r",
                    "\r",
                    "    switch (attrVak){\r",
                    "\r",
                    "\r",
                    "        case storeAttr:\r",
                    "            setMask() ;\r",
                    "            showRtDtl() ;\r",
                    "\r",
                    "//                         RMdatalink.util.globalConfig.setDataToShowInSettingWindow(varibleToSet);\r",
                    "\r",
                    "//                         Ext.ComponentQuery.query('#retailerDetailsMainTabPanel')[0].setActiveItem('#RDStoresTab');\r",
                    "//                         RMdatalink.app.getController('UINav').onPanelAddretailertapped(retailersMaincontentpanel);\r",
                    "\r",
                    "//                        Ext.ComponentQuery.query('#rtDetlViewSubscriptionsBtn')[0].fireEvent(\"tap\");\r",
                    "            break;\r",
                    "\r",
                    "        default:\r",
                    "\r",
                    "             //RMdatalink.app.getController('UINav').redirectTo('card16');\r",
                    "            console.log('DONT FIRE ANY THING');\r",
                    "    }\r",
                    "}\r",
                    "\r",
                    "\r",
                    "function setVariable(){\r",
                    "\r",
                    "    return {\r",
                    "\r",
                    "        placeClicked:  attrVak,\r",
                    "        record:record,\r",
                    "        index:index\r",
                    "    };\r",
                    "}\r",
                    "\r",
                    "\r",
                    "function setMask(){\r",
                    "    Ext.Viewport.setMasked({\r",
                    "                    xtype: 'loadmask'\r",
                    "                });\r",
                    "}\r",
                    "\r",
                    "function showRtDtl(){\r",
                    "\r",
                    "    Ext.Function.defer( gotoRtDtl, 100, this);\r",
                    "}\r",
                    "\r",
                    "function gotoRtDtl(){\r",
                    "\r",
                    "                          RMdatalink.util.globalConfig.setDataToShowInSettingWindow(varibleToSet);\r",
                    "\r",
                    "                        Ext.ComponentQuery.query('#retailerDetailsMainTabPanel')[0].setActiveItem('#RDStoresTab');\r",
                    "                        RMdatalink.app.getController('UINav').onPanelAddretailertapped(retailersMaincontentpanel);\r",
                    "                        RMdatalink.app.getController('UINav').isRetailerDetailsView = true;\r",
                    "                       Ext.ComponentQuery.query('#rtDetlViewSubscriptionsBtn')[0].fireEvent(\"tap\");\r",
                    "\r",
                    "\r",
                    "}"
                ]
            },
            "designerId": "473809b1-d51c-4a6b-871a-f9c20b078824"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button[itemId=RDStoreTabResetPwdBtn]",
                "designer|targetType": "Ext.Button",
                "fn": "onRDStoreTabResetPwdBtnTap",
                "implHandler": [
                    "\r",
                    "//username,emailAddress,successCallback,failuerCallback\r",
                    "\r",
                    "\r",
                    "var selectedUserRecord = RMdatalink.util.globalConfig.getDataToShowInSettingWindow() ;\r",
                    "    if( !( Object.keys(selectedUserRecord).length  )   ){\r",
                    "        // USER CLICKED ON ADD NEW RETAILER BTN\r",
                    "        return ;\r",
                    "    }\r",
                    "\r",
                    "\r",
                    "var username = selectedUserRecord.record.data.store_email;\r",
                    "var emailAddress =selectedUserRecord.record.data.store_email;\r",
                    "RMdatalink.util.ServerAPI.resetUserPassword(username,emailAddress,successCallback,failuerCallback) ;\r",
                    "\r",
                    "\r",
                    "function successCallback(){\r",
                    "\r",
                    "\r",
                    "}\r",
                    "\r",
                    "function failuerCallback(){\r",
                    "\r",
                    "\r",
                    "}"
                ],
                "name": "tap"
            },
            "designerId": "b872f288-ee93-46e8-af39-a65049b14b18"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "updateNoOfLocations",
                "implHandler": [
                    "\r",
                    "var locationForms =  Ext.ComponentQuery.query('#locationFormPanel') ;\r",
                    "\r",
                    "\r",
                    "Ext.ComponentQuery.query('#RDStoreLocations')[0].setValue(locationForms.length ) ;"
                ]
            },
            "designerId": "390757d6-1522-46fa-9134-527f7817e24a"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "saveRTProductSetup",
                "implHandler": [
                    "var rtRecord =  RMdatalink.util.globalConfig.getDataToShowInSettingWindow().record ;\r",
                    "var masterStore = Ext.getStore('retailersMaster');\r",
                    "\r",
                    "\r",
                    "\r",
                    "var dataToUpdate = {} ;\r",
                    "\r",
                    "\r",
                    " dataToUpdate.store_products = {\r",
                    "\r",
                    "        datalink_status : Ext.ComponentQuery.query('#rtDatalinkStatusSelFld')[0].getValue(),\r",
                    "        ecatalog_status :Ext.ComponentQuery.query('#rtEcatalogStatusSelFld')[0].getValue(),\r",
                    "        ecommerce_status :Ext.ComponentQuery.query('#rtECommerceStatusSelFld')[0].getValue(),\r",
                    "        rmpro_status :Ext.ComponentQuery.query('#rtRM_proStatusSelFld')[0].getValue(),\r",
                    "        irugs_status : Ext.ComponentQuery.query('#rtirugzStatusSelFld')[0].getValue(),\r",
                    "        vip_status : Ext.ComponentQuery.query('#rtVipStatusSelFld')[0].getValue()\r",
                    "\r",
                    "    };\r",
                    "\r",
                    "\r",
                    " var prevRec = rtRecord.get('store_products') ;\r",
                    "\r",
                    "if(\r",
                    "     (!prevRec )||\r",
                    "\r",
                    "    (dataToUpdate.store_products.datalink_status && dataToUpdate.store_products.datalink_status != prevRec.datalink_status ) ||\r",
                    "\r",
                    "  (dataToUpdate.store_products.ecatalog_status && dataToUpdate.store_products.ecatalog_status != prevRec.ecatalog_status ) ||\r",
                    "\r",
                    "   (dataToUpdate.store_products.ecommerce_status && dataToUpdate.store_products.ecommerce_status != prevRec.ecommerce_status ) ||\r",
                    "\r",
                    "   (dataToUpdate.store_products.rmpro_status && dataToUpdate.store_products.rmpro_status != prevRec.rmpro_status ) ||\r",
                    "\r",
                    "   (dataToUpdate.store_products.irugs_status && dataToUpdate.store_products.irugs_status != prevRec.irugs_status )  ||\r",
                    "\r",
                    "   (dataToUpdate.store_products.vip_status && dataToUpdate.store_products.vip_status != prevRec.vip_status )\r",
                    "\r",
                    "\r",
                    "){\r",
                    "\r",
                    "\r",
                    "\r",
                    "            rtRecord.set('store_products',dataToUpdate.store_products);\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "            RMdatalink.iwa.rdl.doUpdateCollection(masterStore, dataToUpdate , rtRecord.get('_id'), suc, err);\r",
                    "\r",
                    "\r",
                    "\r",
                    "}\r",
                    " function suc(){\r",
                    "\r",
                    "                //rtRecord.set('product_billng',recToUpdate.product_billng);\r",
                    "\r",
                    "                  RMdatalink.app.getController('Main').updateRetailerRecords(\"store_products\",dataToUpdate.store_products, rtRecord.get('_id')) ;\r",
                    "\r",
                    "\r",
                    "\r",
                    "            }\r",
                    "            function err(){\r",
                    "\r",
                    "            }\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    ""
                ]
            },
            "designerId": "9d7c8667-4867-4acc-a3fe-41a0ddddaedb"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "setRtlAccDtl",
                "implHandler": [
                    " var selectedUserRecord = RMdatalink.util.globalConfig.getDataToShowInSettingWindow() ;\r",
                    "\r",
                    " var record = selectedUserRecord.record  ;\r",
                    "var name = record.data.store_name.toUpperCase() ;\r",
                    "\r",
                    "  Ext.ComponentQuery.query('#storeNameOrderLabelItemID')[0].setHtml(\r",
                    "        '<div class=\"x-rm-rdstoreother-details\"><div>'+name+'</div>'+\r",
                    "        '<a href=\"#card2\"\">ACCOUNT NO #'+record.data.account_no+'</a></div>'\r",
                    "    );"
                ]
            },
            "designerId": "de135d15-c3c7-400e-8f8b-8acd0fb49664"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "setAccNoForNewRt",
                "implHandler": [
                    "//db.dev_rdl_masterretailerrecords.find({account_no: { $exists: true}},{account_no:1}).sort({account_no:1/-1}).limit(-1)\r",
                    "    Ext.ComponentQuery.query('#RDAccountDetails')[0].setValue(\"\");\r",
                    "     RMdatalink.iwa.rdl.queryDB({collection: dbEnv + \"rdl_masterretailerrecords\",pageNo:1 ,pageSize: -1 ,sortBy:{account_no:1/-1},\r",
                    "         query:{account_no: { $exists: true}},\r",
                    "        fields:{account_no:1}},success,error);\r",
                    "\r",
                    "    var accountNo = 9999 ;\r",
                    "    function success(){\r",
                    "\r",
                    "        accountNo = arguments[0].items[0].account_no ;// parseInt(arguments[0].items[0].account_no,1) ;\r",
                    "\r",
                    "        var temp = parseInt(accountNo) ;\r",
                    "        temp = temp + 1 ;\r",
                    "\r",
                    "        Ext.ComponentQuery.query('#RDAccountDetails')[0].setValue(temp);\r",
                    "    }\r",
                    "\r",
                    "    function error(){\r",
                    "\r",
                    "    }"
                ]
            },
            "designerId": "6b452d2e-527f-41fa-9b74-c3766a5db2fb"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "checkForDuplicateAccountNo",
                "implHandler": [
                    "\r",
                    "\r",
                    "var that = this ;\r",
                    "  var tempACCNo = Ext.ComponentQuery.query('#RDAccountDetails')[0].getValue();\r",
                    "if(tempACCNo == \"\"){\r",
                    "\r",
                    "    that.saveRetailersDetailedView() ;\r",
                    "    return ;\r",
                    "}\r",
                    "\r",
                    "var selectedRow = RMdatalink.util.globalConfig.getDataInRetailerScreenForSaveOrCancel();\r",
                    "\r",
                    "        //RMdatalink.util.globalConfig.setDataInRetailerScreenForSaveOrCancel( {}  );\r",
                    "\r",
                    "        console.log(\"selectedRow\" ,selectedRow);\r",
                    "\r",
                    "        if(!Object.keys(selectedRow).length){\r",
                    "            that.saveRetailersDetailedView() ;\r",
                    "            return ;\r",
                    "\r",
                    "        }\r",
                    "\r",
                    "var recData = selectedRow.record.data ;\r",
                    "\r",
                    "var rtId = recData._id ;\r",
                    "\r",
                    "\r",
                    "\r",
                    " Ext.Viewport.setMasked({\r",
                    "                    xtype: 'loadmask',message:\"Validating Account Number...\"\r",
                    "                });\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "  RMdatalink.iwa.rdl.queryDB({collection: dbEnv + \"rdl_masterretailerrecords\",pageNo:1 ,pageSize: 10 ,sortBy:{},\r",
                    "                              query:{\r",
                    "                                          _id: { $ne: rtId } ,\r",
                    "                                          account_no:tempACCNo\r",
                    "                                    },\r",
                    "                         fields:{account_no:1}},success,error);\r",
                    "\r",
                    "\r",
                    "    function success(){\r",
                    "\r",
                    "        if(arguments[0].items.length > 0){\r",
                    "             that.config.accNoChk = 0 ;\r",
                    "             Ext.Viewport.setMasked(false);\r",
                    "             Ext.Msg.alert('Alert.', \"This account is already given to another retailer.\", Ext.emptyFn);\r",
                    "        }else{\r",
                    "\r",
                    "            that.saveRetailersDetailedView() ;\r",
                    "        }\r",
                    "\r",
                    "    }\r",
                    "\r",
                    "    function error(){\r",
                    "        that.saveRetailersDetailedView() ;\r",
                    "    }"
                ]
            },
            "designerId": "a8b92ef5-ebeb-4868-8340-5b4cd6a04beb"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "button",
                    "component"
                ],
                "fn": "onCancelEditBtnTap",
                "implHandler": [
                    "console.log(\"WOHOO\");\r",
                    "    if(button.getText() == \"Edit\"){\r",
                    "\r",
                    "         component.down('#detailsSaveBtn').setHidden(false);\r",
                    "         button.setText(\"Cancel\") ;\r",
                    "         this.disableEnableComponents(false) ;\r",
                    "         this.setTemplateOfListByEditingMode(true , true);\r",
                    "\r",
                    "\r",
                    "    }else{\r",
                    "\r",
                    "        component.down('#detailsSaveBtn').setHidden(true);\r",
                    "         button.setText(\"Edit\") ;\r",
                    "         this.disableEnableComponents(true) ;\r",
                    "         this.setTemplateOfListByEditingMode(false , true);\r",
                    "\r",
                    "    }\r",
                    ""
                ]
            },
            "designerId": "def1276f-504e-46be-a1e7-d2aa37808877"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "status"
                ],
                "fn": "disableEnableComponents",
                "implHandler": [
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "    this.config.isEditMode = ! status ;\r",
                    "\r",
                    "    var rtvPanel = Ext.ComponentQuery.query('#RDretailers_vendorsDetailViewContainer')[0] ;\r",
                    "\r",
                    "\r",
                    "\r",
                    "    var edtCanclbBtn = rtvPanel.down('#detailsEditCancelBtn') ;\r",
                    "\r",
                    "    if(status){\r",
                    "             rtvPanel.down('#detailsSaveBtn').setHidden(true);\r",
                    "             edtCanclbBtn.setText(\"Edit\") ;\r",
                    "\r",
                    "\r",
                    "    }else{\r",
                    "\r",
                    "        rtvPanel.down('#detailsSaveBtn').setHidden(false);\r",
                    "        edtCanclbBtn.setText(\"Cancel\") ;\r",
                    "    }\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "rtvPanel.down('#headerEditingLbl').setHidden(status);\r",
                    "\r",
                    "Ext.ComponentQuery.query('#RDStoreTabFormPanel')[0].setDisabled(status);\r",
                    "Ext.ComponentQuery.query('#retailerEcommerceForm')[0].setDisabled(status);\r",
                    "\r",
                    "\r",
                    "        var component = Ext.ComponentQuery.query('#RDStoresTab')[0];\r",
                    "Ext.ComponentQuery.query('#rm_selectFileForStore')[0].setDisabled(status);\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "var selectFlds = document.getElementsByClassName('rtDtllsinputFlds');\r",
                    "\r",
                    "for( var i = 0 ; i< selectFlds.length ; i++ ){\r",
                    "\r",
                    "    selectFlds[i].disabled = status  ;\r",
                    "}\r",
                    "\r",
                    "rtvPanel.down('#rtDetlViewSubscriptionsBtn').setDisabled(!status);\r",
                    "\r",
                    "\r",
                    "rtvPanel.down('#RDStoreTabResetPwdBtn').setDisabled(status);\r",
                    "\r",
                    "rtvPanel.down('#rtDtlProductStatusForm').setDisabled(status);\r",
                    "rtvPanel.down('#rtAdditionalInfoForm').setDisabled(status);\r",
                    "rtvPanel.down('#retailerLocationAddBtn').setDisabled(status);\r",
                    "rtvPanel.down('#CmpContactDelBtn').setDisabled(status);\r",
                    "rtvPanel.down('#CmpContactAddBtn').setDisabled(status);\r",
                    "\r",
                    "rtvPanel.down('#REPSDelBtn').setDisabled(status);\r",
                    "rtvPanel.down('#REPSAddBtn').setDisabled(status);\r",
                    "rtvPanel.down('#RDTechSupportAddBtn').setDisabled(status);\r",
                    "rtvPanel.down('#RDTechSupportDelBtn').setDisabled(status);\r",
                    "rtvPanel.down('#RDTechSupportLogsStatusSelectFld').setDisabled(status);\r",
                    "\r",
                    "rtvPanel.down('#RDNotesAddBtn').setDisabled(status);\r",
                    "rtvPanel.down('#RDNotesDelBtn').setDisabled(status);\r",
                    "rtvPanel.down('#RDNotepadNote').setDisabled(status);\r",
                    "rtvPanel.down('#RDManagerBlueStickyTextArea').setDisabled(status);\r",
                    "rtvPanel.down('#RDManagerRelationDetailsForm').setDisabled(status);\r",
                    "rtvPanel.down('#RDCRMNotesBlueStickyTextArea').setDisabled(status);\r",
                    "\r",
                    "rtvPanel.down('#RDUserProfileBlueStickyTextArea').setDisabled(status);\r",
                    "rtvPanel.down('#RDUserProfileRelationDetailsForm').setDisabled(status);\r",
                    "rtvPanel.down('#ActRDManagerBlueStickyTextArea').setDisabled(status);\r",
                    "rtvPanel.down('#ActRDManagerRelationDetailsForm').setDisabled(status);\r",
                    "\r",
                    "/*\r",
                    "rtvPanel.down('#').setDisabled(status);\r",
                    "*/\r",
                    "\r",
                    "\r",
                    "// Ext.ComponentQuery.query('#RDInStoreVendorList')[0].down('#mainList').setDisableSelection(status);\r",
                    "Ext.ComponentQuery.query('#CmpContactMainListWithHeader')[0].down('#mainList').setDisableSelection(status);\r",
                    "\r",
                    "Ext.ComponentQuery.query('#rtDtlNotesLsPanel')[0].down('#mainList').setDisableSelection(status);\r",
                    "Ext.ComponentQuery.query('#RDCRMList')[0].down('#mainList').setDisableSelection(status);\r",
                    "\r",
                    "// Ext.ComponentQuery.query('#RDInStoreVendorsList')[0].down('#mainList').setDisableSelection(status);\r",
                    "// Ext.ComponentQuery.query('#RDOnlineVendorsList')[0].down('#mainList').setDisableSelection(status);\r",
                    "\r",
                    "\r",
                    ""
                ]
            },
            "designerId": "4f54250d-c811-4882-a15a-398e65652322"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "dataview",
                    "index",
                    "target",
                    "record",
                    "e",
                    "eOpts"
                ],
                "fn": "onTapOfProductList",
                "implHandler": [
                    "///THIS FUNCTION IS CALLED WHEN ITEM TAP PRESENT IN onRDStoreProductsListSelect FUNCTION DETERMINES THAT USER HAS TAPPED TO VIEW DIFFERENT LIST\r",
                    "\r",
                    "    var pospectActiveListContainer = Ext.ComponentQuery.query(\"#pospectActiveListContainer\")[0];\r",
                    "\r",
                    "\r",
                    "\r",
                    "// index set is\r",
                    "/*\r",
                    "*\r",
                    "* 6 - RMro\r",
                    "* 5 - Irugz\r",
                    "* 4 - E-Catalog\r",
                    "* 3 - Authorised Vendors\r",
                    "* 2 - VIP\r",
                    "* 1 - E-commerce\r",
                    "* 0 - Datalink\r",
                    "*  Other can be added if neccessary.But Do Not Disturb this index\r",
                    "*\r",
                    "*\r",
                    "*\r",
                    "*\r",
                    "*\r",
                    "*\r",
                    "*\r",
                    "*/\r",
                    "//ECatalog\r",
                    "if( record.data.ProductName == \"E-Commerce\" ){\r",
                    "\r",
                    "\r",
                    "    console.log(\"USER WANT TO SEE E-COMMERCE LIST\");\r",
                    "\r",
                    "\r",
                    "        pospectActiveListContainer.setActiveItem(1);\r",
                    "}else if(record.data.ProductName ==  \"VIP\"){\r",
                    "\r",
                    "\r",
                    "    console.log(\"USER WANTS TO SEE VIP LIST\");\r",
                    "     pospectActiveListContainer.setActiveItem(2);\r",
                    "\r",
                    "}else if(record.data.ProductName ==  \"ECatalog\"){\r",
                    "\r",
                    "\r",
                    "    console.log(\"USER WANTS TO SEE ECatalog LIST\");\r",
                    "     pospectActiveListContainer.setActiveItem(4);\r",
                    "\r",
                    "}else if(record.data.ProductName ==  \"iRugz\"){\r",
                    "\r",
                    "\r",
                    "    console.log(\"USER WANTS TO SEE iRugz LIST\");\r",
                    "     pospectActiveListContainer.setActiveItem(5);\r",
                    "\r",
                    "}else if(record.data.ProductName ==  \"RMPro\"){\r",
                    "\r",
                    "\r",
                    "    console.log(\"USER WANTS TO SEE RMPro  LIST\");\r",
                    "     pospectActiveListContainer.setActiveItem(6);\r",
                    "\r",
                    "}else {\r",
                    "\r",
                    "//        var pospectActiveListContainer = Ext.ComponentQuery.query(\"#pospectActiveListContainer\")[0];\r",
                    "        pospectActiveListContainer.setActiveItem(0);\r",
                    "\r",
                    "    console.log(\"SHOW THEM LIST \");\r",
                    "\r",
                    "}"
                ]
            },
            "designerId": "4aa84eb3-31a5-47d3-9f4a-ff13e1bd6251"
        }
    ]
}