{
    "type": "Ext.app.Controller",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "designer|userAlias": "UINav",
        "designer|userClassName": "UINav"
    },
    "configAlternates": {
        "isRetailerDetailsView": "boolean"
    },
    "designerId": "5a43f564-eb65-4118-bfc8-a15a078413ff",
    "customConfigs": [
        {
            "group": "(Custom Properties)",
            "name": "isRetailerDetailsView",
            "type": "string"
        }
    ],
    "cn": [
        {
            "type": "Ext.app.Route",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "showMain",
                "implHandler": [
                    "//this.redirectTo('card'+0);\r",
                    "\r",
                    "var rMNavPanel = Ext.ComponentQuery.query('RMNavigationPanel')[0];\r",
                    "var buttons = rMNavPanel.query('button');\r",
                    "buttons.forEach(function(button) {\r",
                    "    if(button.element.dom.classList.contains('x-button-selected'))\r",
                    "        button.element.dom.classList.remove('x-button-selected');\r",
                    "\r",
                    "    if(button.index === 0 ) {\r",
                    "        button.element.dom.classList.add('x-button-selected');\r",
                    "    }\r",
                    "});\r",
                    "\r",
                    "Ext.ComponentQuery.query('#RMContentPanel')[0].setActiveItem(0);"
                ],
                "url": "main"
            },
            "designerId": "7ffebeb1-c3dc-4ff1-86d0-db337ae05f9c"
        },
        {
            "type": "Ext.app.Route",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "regeneratepwd",
                "implHandler": [
                    "//this.redirectTo('card'+0);\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "var username = RMdatalink.util.globalMethods.getParameterByName(\"user\");\r",
                    "var temppwd =  RMdatalink.util.globalMethods.getParameterByName(\"temppwd\");\r",
                    "\r",
                    "RMdatalink.app.getController('LoginHandler').config.resetPwdUser =\r",
                    "    {\r",
                    "        username:username ,\r",
                    "        tempPassword :temppwd\r",
                    "    };\r",
                    "\r",
                    "\r",
                    "if( username && username != \"\" && temppwd && temppwd != \"\" ){\r",
                    "\r",
                    "    Ext.ComponentQuery.query('#loginScreenContainer')[0].setActiveItem(2) ;\r",
                    "\r",
                    "}\r",
                    "\r",
                    ""
                ],
                "url": "regeneratepwd"
            },
            "designerId": "9f0c3535-6820-49b8-a82e-8de95f46a9bd"
        },
        {
            "type": "Ext.app.Route",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "goToRTUserCard",
                "implHandler": [
                    "if(Ext.ComponentQuery.query('#RMContentPanel')[0].getActiveItem().getItemId() == \"card-retailer-details\"){\r",
                    "\r",
                    "\r",
                    "    if(RMdatalink.app.getController('RetailerDeatilsDataSet').config.isEditMode)\r",
                    "    {\r",
                    "\r",
                    "        Ext.Msg.confirm(\"Confirm\",\"View in edit mode, do you want to continue ?\",onMessageAns ,this);\r",
                    "\r",
                    "\r",
                    "    }\r",
                    "}else{\r",
                    "     fn() ;\r",
                    "}\r",
                    "\r",
                    "   function onMessageAns(action,opt,confirmBox){\r",
                    "\r",
                    "\r",
                    "            if(action == \"yes\"){\r",
                    "\r",
                    "                    fn() ;\r",
                    "            }else{\r",
                    "\r",
                    "                   // throw \"action canceled\";\r",
                    "            }\r",
                    "\r",
                    "\r",
                    "        }\r",
                    "\r",
                    "function fn()\r",
                    "{\r",
                    "    var index = parseInt(arguments[0]);\r",
                    "\r",
                    "    var rMNavPanel = Ext.ComponentQuery.query('#rtNavPanelMain')[0];\r",
                    "    var buttons = rMNavPanel.query('button');\r",
                    "    buttons.forEach(function(button) {\r",
                    "        if(button.element.dom.classList.contains('x-button-selected'))\r",
                    "            button.element.dom.classList.remove('x-button-selected');\r",
                    "\r",
                    "        if(button.index === index ) {\r",
                    "            button.element.dom.classList.add('x-button-selected');\r",
                    "        }\r",
                    "    });\r",
                    "\r",
                    "    Ext.ComponentQuery.query('#retailerMainContainer')[0].setActiveItem(index);\r",
                    "}"
                ],
                "url": "RTcard:index"
            },
            "designerId": "a652ca44-3c32-43b4-bfb6-15b406612942"
        },
        {
            "type": "Ext.app.Route",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "conditions": [
                    "{}"
                ],
                "fn": "gotoCard",
                "implHandler": [
                    "var index = parseInt(arguments[0]);\r",
                    "\r",
                    "\r",
                    "function fn()\r",
                    "{\r",
                    "\r",
                    "\r",
                    "// var index = parseInt(arguments[0]);\r",
                    "\r",
                    "var rMNavPanel = Ext.ComponentQuery.query('RMNavigationPanel')[0];\r",
                    "    if(rMNavPanel){\r",
                    "        var buttons = rMNavPanel.query('button');\r",
                    "        buttons.forEach(function(button) {\r",
                    "            if(button.element.dom.classList.contains('x-button-selected'))\r",
                    "                button.element.dom.classList.remove('x-button-selected');\r",
                    "\r",
                    "            if(button.index === index ) {\r",
                    "                button.element.dom.classList.add('x-button-selected');\r",
                    "            }\r",
                    "        });\r",
                    "\r",
                    "    }\r",
                    "    var RMContentPanel = Ext.ComponentQuery.query('#RMContentPanel')[0];\r",
                    "    if(RMContentPanel){\r",
                    "            RMContentPanel.setActiveItem(index);\r",
                    "    }\r",
                    "\r",
                    "\r",
                    "}\r",
                    "\r",
                    "\r",
                    "\r",
                    "var mainActiveCard = Ext.ComponentQuery.query('#RMContentPanel').length?\r",
                    "                    Ext.ComponentQuery.query('#RMContentPanel')[0].getActiveItem().getItemId()\r",
                    "                    : undefined;\r",
                    "if(mainActiveCard == \"card-retailer-details\"){\r",
                    "\r",
                    "\r",
                    "    if(RMdatalink.app.getController('RetailerDeatilsDataSet').config.isEditMode )\r",
                    "    {\r",
                    "\r",
                    "        Ext.Msg.confirm(\"Confirm\",\"View in edit mode, do you want to continue ?\",onMessageAns ,this);\r",
                    "\r",
                    "\r",
                    "    }else{\r",
                    "     fn() ;\r",
                    "\r",
                    "    }\r",
                    "\r",
                    "}else if( mainActiveCard == \"card-rmplc\" ){\r",
                    "\r",
                    "    var rmproMainPanel  = Ext.ComponentQuery.query('#productRMproMainPanel')[0];\r",
                    "\r",
                    "    var isInEditMode = rmproMainPanel.down('#headerEditTxtLbl').getHidden() ;\r",
                    "    isInEditMode = !isInEditMode ;\r",
                    "    if(isInEditMode )\r",
                    "    {\r",
                    "\r",
                    "        Ext.Msg.confirm(\"Confirm\",\"View in edit mode, do you want to continue ?\",onMessageAns ,this);\r",
                    "\r",
                    "\r",
                    "    }else{\r",
                    "     fn() ;\r",
                    "\r",
                    "    }\r",
                    "\r",
                    "\r",
                    "\r",
                    "}else{\r",
                    "\r",
                    "     fn() ;\r",
                    "}\r",
                    "\r",
                    "   function onMessageAns(action,opt,confirmBox){\r",
                    "\r",
                    "\r",
                    "            if(action == \"yes\"){\r",
                    "\r",
                    "                    fn() ;\r",
                    "            }else{\r",
                    "\r",
                    "                   // throw \"action canceled\";\r",
                    "            }\r",
                    "\r",
                    "\r",
                    "        }\r",
                    ""
                ],
                "url": "card:index"
            },
            "designerId": "eea17812-c6a7-4cda-a35c-aaa11d98a0f5"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button[action=changecard]",
                "designer|targetType": "Ext.Button",
                "fn": "onChangeCardTap",
                "implHandler": [
                    "this.redirectTo('card'+button.config.index);"
                ],
                "name": "tap"
            },
            "designerId": "d750e706-15f1-45ac-99cf-debcf30336fb"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button[action=changecardRT]",
                "designer|targetType": "Ext.Button",
                "fn": "onChangecardRTTap",
                "implHandler": [
                    "this.redirectTo('RTcard'+button.config.index);"
                ],
                "name": "tap"
            },
            "designerId": "b506906e-28f0-496a-8429-db44ae8fa0f9"
        },
        {
            "type": "Ext.app.Route",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "showInRetailer",
                "implHandler": [
                    "\r",
                    "var index = parseInt(arguments[0]);\r",
                    "\r",
                    "var mainContentPanel = Ext.ComponentQuery.query('#RMContentPanel')[0];\r",
                    "var activeCard = mainContentPanel.getActiveItem();\r",
                    "\r",
                    "if(activeCard.getItemId() != \"card-retailers\") {\r",
                    "    RMdatalink.app.getController('UINav').redirectTo('card'+1);\r",
                    "}\r",
                    "\r",
                    "var retailersCard = mainContentPanel.getActiveItem();\r",
                    "var retailerTabPanel = retailersCard.down(\"#retailersTabPanel\");\r",
                    "\r",
                    "//  ***   CLEAR ALL FILTER  ON LIST  AND  STORE ***\r",
                    "var retailerList = retailerTabPanel.down('#retailerList');\r",
                    "if(retailerList.getStore())\r",
                    "{\r",
                    "    retailerList.getStore().clearFilter();\r",
                    "}\r",
                    "\r",
                    "var activeIndex = retailerTabPanel.getInnerItems().indexOf(retailerTabPanel.getActiveItem());\r",
                    "\r",
                    "if(activeIndex !== index) {\r",
                    "    retailerTabPanel.setActiveItem(index);\r",
                    "}\r",
                    "\r",
                    "if(index === 5)\r",
                    "{\r",
                    "    //importRetailers\r",
                    " //   retailersCard.down(\"#retailersMainScreenImportFileFld\").setAction(\"importRetailers\");\r",
                    "    retailersCard.down(\"#cardImportBtn\").setHidden(false);\r",
                    "}\r",
                    "else\r",
                    "{\r",
                    "   //  retailersCard.down(\"#retailersMainScreenImportFileFld\").setAction(\"\");\r",
                    "    retailersCard.down(\"#cardImportBtn\").setHidden(true);\r",
                    "}\r",
                    "\r",
                    "// ******  HIDE  ACTION  BUTTON FOR ALL TAB  **********\r",
                    "if(index === 5)\r",
                    "    retailersCard.down(\"#cardActionBtn\").setHidden(true);\r",
                    "else\r",
                    "    retailersCard.down(\"#cardActionBtn\").setHidden(false);\r",
                    "\r",
                    "\r",
                    ""
                ],
                "url": "retailerCard:index"
            },
            "designerId": "eb80b597-eae4-44c8-9d72-321545547ea8"
        },
        {
            "type": "Ext.app.Route",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "showInBrowseLatestLog",
                "implHandler": [
                    "\r",
                    "\r",
                    "var index = parseInt(arguments[0]);\r",
                    "\r",
                    "var mainContentPanel = Ext.ComponentQuery.query('#RMContentPanel')[0];\r",
                    "var activeCard = mainContentPanel.getActiveItem();\r",
                    "\r",
                    "if(activeCard.getItemId() != \"card-browse-latest-log\") {\r",
                    "    RMdatalink.app.getController('UINav').redirectTo('card'+17);\r",
                    "}\r",
                    "\r",
                    "// var browseLatestLogCard = mainContentPanel.getActiveItem();\r",
                    "// var discountsTabPanel = discountsCard.down(\"#discountsTabPanel\");\r",
                    "\r",
                    "\r",
                    "\r",
                    ""
                ],
                "url": "browseLatestLogCard:index"
            },
            "designerId": "dd44055a-6e2e-49fa-b1bb-ddc3a957bc5c"
        },
        {
            "type": "Ext.app.Route",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "showInBilling",
                "implHandler": [
                    "var index = parseInt(arguments[0]);\r",
                    "\r",
                    "var mainContentPanel = Ext.ComponentQuery.query('#RMContentPanel')[0];\r",
                    "var activeCard = mainContentPanel.getActiveItem();\r",
                    "if(activeCard.getItemId() != \"card-billing\") {\r",
                    "    this.redirectTo('card'+2);\r",
                    "\r",
                    "}\r",
                    "\r",
                    "var billingCard = mainContentPanel.getActiveItem();\r",
                    "var billingTabPanel = billingCard.down(\"#billingTabPanel\");\r",
                    "billingCard.down(\"#cardImportBtn\").setHidden(true);\r",
                    "billingCard.down(\"#cardAddRetailerBtn\").setHidden(true);\r",
                    "\r",
                    "\r",
                    "//  ***   CLEAR ALL FILTER  ON LIST  AND  STORE ***\r",
                    "var billingList = billingTabPanel.down('#billingList');\r",
                    "if(billingList.getStore())\r",
                    "{\r",
                    "    billingList.getStore().clearFilter();\r",
                    "}\r",
                    "\r",
                    "\r",
                    "var activeIndex = billingTabPanel.getInnerItems().indexOf(billingTabPanel.getActiveItem());\r",
                    "\r",
                    "if(activeIndex !== index) {\r",
                    "    billingTabPanel.setActiveItem(index);\r",
                    "}\r",
                    "\r",
                    "if(index===0)\r",
                    "{\r",
                    "  billingCard.down(\"#cardActionBtn\").setHidden(true);\r",
                    "}\r",
                    "else\r",
                    "{\r",
                    "    billingCard.down(\"#cardActionBtn\").setHidden(false);\r",
                    "    //billingCard.down(\"#cardActionBtn\").setDisabled(true);\r",
                    "}\r",
                    ""
                ],
                "url": "billingCard:index"
            },
            "designerId": "b58d9fdb-8a60-4a8a-9ac0-ca00ba027112"
        },
        {
            "type": "Ext.app.Route",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "showInPricing",
                "implHandler": [
                    "var index = parseInt(arguments[0]);\r",
                    "\r",
                    "var mainContentPanel = Ext.ComponentQuery.query('#RMContentPanel')[0];\r",
                    "var activeCard = mainContentPanel.getActiveItem();\r",
                    "if(activeCard.getItemId() != \"card-pricing\") {\r",
                    "    this.redirectTo('card'+10);\r",
                    "}\r",
                    "\r",
                    "var pricingCard = mainContentPanel.getActiveItem();\r",
                    "var pricingTabPanel = pricingCard.down(\"#pricingDetailsMainTabPanel\");\r",
                    "\r",
                    "var activeIndex = pricingTabPanel.getInnerItems().indexOf(pricingTabPanel.getActiveItem());\r",
                    "\r",
                    "if(activeIndex !== index) {\r",
                    "    pricingTabPanel.setActiveItem(index);\r",
                    "}\r",
                    "\r",
                    ""
                ],
                "url": "pricingCard:index"
            },
            "designerId": "945a267a-259b-47d1-b504-1eff183684f5"
        },
        {
            "type": "Ext.app.Route",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "showInVendor",
                "implHandler": [
                    "\r",
                    "\r",
                    "\r",
                    "var index = parseInt(arguments[0]);\r",
                    "\r",
                    "var mainContentPanel = Ext.ComponentQuery.query('#RMContentPanel')[0];\r",
                    "var activeCard = mainContentPanel.getActiveItem();\r",
                    "if(activeCard.getItemId() != \"card-vendors\") {\r",
                    "    RMdatalink.app.getController('UINav').redirectTo('card'+3);\r",
                    "}\r",
                    "\r",
                    "var vendorCard = mainContentPanel.getActiveItem();\r",
                    "var vendorTabPanel = vendorCard.down(\"#vendorsMainContentPanel\");\r",
                    "\r",
                    "//  ***   CLEAR ALL FILTER  ON LIST  AND  STORE ***\r",
                    "var vendorList = vendorTabPanel.down('#vendorList');\r",
                    "if(vendorList.getStore())\r",
                    "{\r",
                    "    vendorList.getStore().clearFilter();\r",
                    "}\r",
                    "\r",
                    "var activeIndex = vendorTabPanel.getInnerItems().indexOf(vendorTabPanel.getActiveItem());\r",
                    "\r",
                    "if(activeIndex !== index) {\r",
                    "    vendorTabPanel.setActiveItem(index);\r",
                    "}\r",
                    "\r",
                    "// ******  HIDE  ACTION  BUTTON FOR ALL TAB  **********\r",
                    "if(index === 2)\r",
                    "    vendorCard.down(\"#cardActionBtn\").setHidden(true);\r",
                    "else\r",
                    "    vendorCard.down(\"#cardActionBtn\").setHidden(false);\r",
                    ""
                ],
                "url": "vendorCard:index"
            },
            "designerId": "739eded3-545e-4089-bddd-0e260ed828e8"
        },
        {
            "type": "Ext.app.Route",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "showInDiscount",
                "implHandler": [
                    "\r",
                    "var index = parseInt(arguments[0]);\r",
                    "\r",
                    "var mainContentPanel = Ext.ComponentQuery.query('#RMContentPanel')[0];\r",
                    "var activeCard = mainContentPanel.getActiveItem();\r",
                    "if(activeCard.getItemId() != \"card-discounts\") {\r",
                    "    RMdatalink.app.getController('UINav').redirectTo('card'+11);\r",
                    "}\r",
                    "\r",
                    "var discountsCard = mainContentPanel.getActiveItem();\r",
                    "var discountsTabPanel = discountsCard.down(\"#discountsTabPanel\");\r",
                    "\r",
                    "\r",
                    "var activeIndex = discountsTabPanel.getInnerItems().indexOf(discountsTabPanel.getActiveItem());\r",
                    "\r",
                    "Ext.ComponentQuery.query('#discountsSidePanel')[0].setActiveItem(0);\r",
                    "\r",
                    "\r",
                    "if(activeIndex !== index) {\r",
                    "    discountsTabPanel.setActiveItem(index);\r",
                    "}\r",
                    ""
                ],
                "url": "discountCard:index"
            },
            "designerId": "20f68b43-be29-4db8-9174-848890ce38ae"
        },
        {
            "type": "Ext.app.Route",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "showInInhouse",
                "implHandler": [
                    "\r",
                    "var index = parseInt(arguments[0]);\r",
                    "\r",
                    "var mainContentPanel = Ext.ComponentQuery.query('#RMContentPanel')[0];\r",
                    "var activeCard = mainContentPanel.getActiveItem();\r",
                    "\r",
                    "\r",
                    "\r",
                    "if(index==1){\r",
                    "\r",
                    "    var ihouseTabs = Ext.ComponentQuery.query('#inhouseTabPanel')[0] ;\r",
                    "\r",
                    "         RMdatalink.app.getController('inhouse.DetailScreenController').setUserType(ihouseTabs.getActiveItem().getItemId()) ;\r",
                    "\r",
                    "\r",
                    "    mainContentPanel.setActiveItem(15);\r",
                    "    setSiderBarForInhouseDetailPage() ;\r",
                    "\r",
                    "}\r",
                    "\r",
                    "var inhouseTabPanel = activeCard.down(\"#inhouseTabPanel\");\r",
                    "\r",
                    "//  ***   CLEAR ALL FILTER  ON LIST  AND  STORE ***\r",
                    "var inhouseList = inhouseTabPanel.down('#inhouseList');\r",
                    "if(inhouseList.getStore())\r",
                    "{\r",
                    "    inhouseList.getStore().clearFilter();\r",
                    "}\r",
                    "\r",
                    "\r",
                    "function setSiderBarForInhouseDetailPage()\r",
                    "{\r",
                    "        var container = Ext.ComponentQuery.query('#inhouseDetailsMainTabPanel')[0] ;\r",
                    "        var sideContainer = container.parent.down('#inhouseSideContainer');\r",
                    "        var managerSideContainer = sideContainer.down('#inhouseProfileSideContainer');\r",
                    "        var crmNotesSideContainer = sideContainer.down('#inhouseSideForNotesSideContainer');\r",
                    "        var value = container.getActiveItem();\r",
                    "\r",
                    "        if(value.title === \"PROFILE\") {\r",
                    "            sideContainer.setHidden(false);\r",
                    "            managerSideContainer.setHidden(false);\r",
                    "            crmNotesSideContainer.setHidden(true);\r",
                    "        }\r",
                    "\r",
                    "        else if( value.title === \"NOTES\") {\r",
                    "            sideContainer.setHidden(false);\r",
                    "            managerSideContainer.setHidden(true);\r",
                    "            crmNotesSideContainer.setHidden(false);\r",
                    "        }\r",
                    "\r",
                    "\r",
                    "}\r",
                    "\r",
                    ""
                ],
                "url": "inhouseCard:index"
            },
            "designerId": "68f84990-c227-43b7-b1fb-d4787ac9e4d7"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "panel",
                "designer|params": [
                    "panel"
                ],
                "designer|targetType": "CardHeaderPanel",
                "fn": "onPanelAddretailertapped",
                "implHandler": [
                    "switch(panel.getItemId()) {\r",
                    "\r",
                    "    case 'retailersMaincontentpanel':\r",
                    "\r",
                    "        this.isRetailerDetailsView = true;\r",
                    "        break;\r",
                    "\r",
                    "    case 'vendorsMainContentPanel':\r",
                    "\r",
                    "        this.isRetailerDetailsView = false;\r",
                    "        break;\r",
                    "\r",
                    "}\r",
                    "\r",
                    "this.redirectTo( RMdatalink.util.globalConfig.getUrlForRetailerCard() );"
                ],
                "name": "addretailertapped"
            },
            "designerId": "e8c56819-1467-432f-9905-f8ed024d1c2f"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "panel",
                "designer|params": [
                    "panel"
                ],
                "designer|targetType": "CardHeaderPanel",
                "fn": "ControllerAction15",
                "implHandler": [
                    "this.redirectTo('inhouseCard1');"
                ],
                "name": "inhouseAddNewTap"
            },
            "designerId": "db2a21d8-38ad-4810-bee6-d87ada056b00"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "onBackTextTap",
                "implHandler": [
                    "var actions = RMdatalink.app.getHistory().config.actions ;\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "    if(actions && actions.length > 1 )\r",
                    "    {\r",
                    "        var lastAction = actions[actions.length - 2 ];\r",
                    "\r",
                    "\r",
                    "\r",
                    "        RMdatalink.app.getController('UINav').redirectTo(lastAction._url);\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "        console.log(lastAction._url);\r",
                    "    }\r",
                    ""
                ]
            },
            "designerId": "0bed22f9-1691-4827-82a3-4a0dba9aca8d"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "container[itemId=RMContentPanel]",
                "designer|targetType": "Ext.Container",
                "fn": "onRM_mainContainerActiveItemChange",
                "implHandler": [
                    "///SHIFT THIS  PART INSIDE APPROPRAITE CONTROLLER\r",
                    "//THE BELOWN FUNCTION DEFINED CAN BE MADE PUBLIC IF ADDED INSIDE THE CONTROLLER\r",
                    "/*\r",
                    "\r",
                    "retailersMaster\r",
                    "\r",
                    "inhouseMasterStore\r",
                    "\r",
                    "discountsMasterStore\r",
                    "\r",
                    "vendorDetailsRecodsStore\r",
                    "\r",
                    "productDetailsRecordsStore\r",
                    "\r",
                    "billingMasterStore\r",
                    "\r",
                    "notificationsNew\r",
                    "\r",
                    "\r",
                    "*/\r",
                    "//  **********  REMOVE  PRESSED  CLS  *********\r",
                    "\r",
                    "Ext.ComponentQuery.query('#overviewRetailersBtn')[0].removeCls('x-button-pressing');\r",
                    "Ext.ComponentQuery.query('#overviewVendorsBtn')[0].removeCls('x-button-pressing');\r",
                    "\r",
                    "\r",
                    "var activeIndex = container.items.indexOf(value);\r",
                    "\r",
                    "var itemId = value.getItemId() ;\r",
                    "console.log(itemId);\r",
                    "\r",
                    "switch(itemId) {\r",
                    "\r",
                    "    case \"billingDetailCard\":\r",
                    "        return ;\r",
                    "\r",
                    "    case 'card-vendors':\r",
                    "      var vendorMaster = Ext.getStore('vendors.Master') ;\r",
                    "        vendorMaster.clearFilter();\r",
                    "\r",
                    "        RMdatalink.app.getController('PaginationController').setCurrentActiveStoreId('vendors.Master') ;\r",
                    "        Ext.ComponentQuery.query('#overviewVendorsBtn')[0].addCls('x-button-pressing');\r",
                    "        value.down('#cardTitleLabel').setHtml('<div style=\"font-size: large;\">Vendors</div>');\r",
                    "        value.down('#cardImportBtn').setHidden(true);\r",
                    "        value.down('#cardActionBtn').setHidden(true);\r",
                    "        value.down(\"#cardDeleteBtn\").setHidden(false);\r",
                    "        break;\r",
                    "\r",
                    "    case 'card-dashboard':\r",
                    "        break;\r",
                    "\r",
                    "    case 'card-retailers':\r",
                    "\r",
                    "         var rtMaster =  Ext.getStore('retailersMaster') ;\r",
                    "\r",
                    "\r",
                    "        rtMaster.clearFilter();\r",
                    "\r",
                    "        Ext.ComponentQuery.query('#overviewRetailersBtn')[0].addCls('x-button-pressing');\r",
                    "        RMdatalink.app.getController('PaginationController').setCurrentActiveStoreId('retailersMaster') ;\r",
                    "        value.down('#cardTitleLabel').setHtml('<div style=\"font-size: large;\">Retailers</div>');\r",
                    "       // value.down('#cardTitleLabel').setHtml('<div style=\"font-size: large;\">BACK / <span style=\"color:#2EC1DA;\"> RETAILERS </span></div>');\r",
                    "       // value.down('#cardImportBtn').setHidden(true);\r",
                    "        value.down(\"#cardDeleteBtn\").setHidden(true);\r",
                    "\r",
                    "        break;\r",
                    "\r",
                    "    case 'card-billing':\r",
                    "\r",
                    "        RMdatalink.app.getController('PaginationController').setCurrentActiveStoreId('billingMasterStore') ;\r",
                    "        value.down('#cardTitleLabel').setHtml('<div style=\"font-size: large;\">Billing</div>');\r",
                    "        Ext.ComponentQuery.query('#billingTabPanel')[0].setActiveItem(0);\r",
                    "        value.down(\"#cardDeleteBtn\").setHidden(true);\r",
                    "\r",
                    "        if(Ext.getStore('billingMasterStore').getData().all.length > 0 ){\r",
                    "\r",
                    "            return ;\r",
                    "        }\r",
                    "        break;\r",
                    "\r",
                    "\r",
                    "    case 'card-retailer-details':\r",
                    "\r",
                    "        RMdatalink.app.getController('RetailerDeatilsDataSet').setResetRetailersDetailedView();\r",
                    "        break;\r",
                    "\r",
                    "    case 'card-inhouse':\r",
                    "\r",
                    "        RMdatalink.app.getController('PaginationController').setCurrentActiveStoreId('inhouseMasterStore') ;\r",
                    "        value.down('#cardTitleLabel').setHtml('<div style=\"font-size: large;\">Inhouse</div>');\r",
                    "        //value.down(\"#cardDeleteBtn\").setHidden(false);\r",
                    "\r",
                    "\r",
                    "\r",
                    "        break;\r",
                    "\r",
                    "    case 'card-pricing':\r",
                    "\r",
                    "        RMdatalink.app.getController('PaginationController').setCurrentActiveStoreId('productDetailsRecordsStore') ;\r",
                    "        Ext.ComponentQuery.query('#pricingDetailsMainTabPanel')[0].setActiveItem(0);\r",
                    "        Ext.ComponentQuery.query('#pricingSideContainerItemID')[0].setActiveItem(0);\r",
                    "        //value.down('#detailsHeaderTitle').setWidth('75%');\r",
                    "//         value.down('#detailsHeaderTitle').setMargin('0 20 0 0');\r",
                    "\r",
                    "        value.down('#detailsHeaderTitle').setHtml('<div style=\"font-size: large;\">BACK / <span style=\"color:#2EC1DA;\"> PRICING</span></div>');\r",
                    "        value.down('#detailsSaveBtn').addCls('x-rm-detailsSaveBtns');\r",
                    "\r",
                    "        break;\r",
                    "\r",
                    "    case 'card-discounts':\r",
                    "\r",
                    "        value.down('#detailsHeaderTitle').setWidth('100%');\r",
                    "        value.down('#detailsHeaderTitle').setHtml('<div style=\"font-size: large;\">BACK / <span style=\"color:#2EC1DA;\"> DISCOUNTS</span></div>');\r",
                    "        value.down('#detailsCancelBtn').setHidden(true);\r",
                    "        value.down('#detailsSaveBtn').setHidden(true);\r",
                    "        RMdatalink.app.getController('PaginationController').setCurrentActiveStoreId('discountsMasterStore') ;\r",
                    "        break;\r",
                    "    case \"card-browse-latest-log\":\r",
                    "        //value.down('#detailsHeaderTitle').setWidth('100%');\r",
                    "        value.down('#cardTitleLabel').setHtml('<div style=\"font-size: large;\">BACK / <span style=\"color:#2EC1DA;\"> LATEST TECH SUPPORT LOGS</span></div>');\r",
                    "                value.down('#cardImportBtn').setHidden(true);\r",
                    "        value.down('#cardActionBtn').setHidden(true);\r",
                    "        value.down(\"#cardDeleteBtn\").setHidden(false);\r",
                    "        value.down(\"#cardAddRetailerBtn\").setHidden(true);\r",
                    "         value.down(\"#cardExportBtn\").setHidden(true);\r",
                    "\r",
                    "\r",
                    "        RMdatalink.app.getController('PaginationController').setCurrentActiveStoreId('TechSupportLogsStore') ;\r",
                    "        break;\r",
                    "\r",
                    "\r",
                    "    case \"card-rmplc\":\r",
                    "\r",
                    "          RMdatalink.app.getController('PaginationController').setCurrentActiveStoreId('products.RMProStore') ;\r",
                    "\r",
                    "\r",
                    "\r",
                    "        break ;\r",
                    "\r",
                    "       case \"card-datalink\":\r",
                    "\r",
                    "          RMdatalink.app.getController('PaginationController').setCurrentActiveStoreId('products.DatalinkMain') ;\r",
                    "\r",
                    "\r",
                    "\r",
                    "        break ;\r",
                    "\r",
                    "\r",
                    "}\r",
                    "\r",
                    "var activeStoreId = RMdatalink.app.getController('PaginationController').getCurrentActiveStoreId() ;\r",
                    "\r",
                    "if(! RMdatalink.app.getController('PaginationController').config.storesLoadedFirstTime[RMdatalink.app.getController('PaginationController').getCurrentActiveStoreId()]  && activeStoreId != 'retailersMaster'){\r",
                    "    RMdatalink.app.getController('PaginationController').loadStore(1,RMdatalink.util.DataLoader.getPageSize(),RMdatalink.util.DataLoader.getEnableCachig());\r",
                    "}"
                ],
                "name": "activeitemchange"
            },
            "designerId": "cd930b50-92cc-4c8e-93c2-d90273e915fd"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "executeMe"
                ],
                "fn": "checkForRtDtl",
                "implHandler": [
                    "if(Ext.ComponentQuery.query('#RMContentPanel')[0].getActiveItem().getItemId() == \"card-retailer-details\"){\r",
                    "\r",
                    "\r",
                    "    if(RMdatalink.app.getController('RetailerDeatilsDataSet').config.isEditMode)\r",
                    "    {\r",
                    "\r",
                    "        Ext.Msg.confirm(\"Confirm\",\"View in edit mode, do you want to continue ?\",onMessageAns ,this);\r",
                    "\r",
                    "\r",
                    "    }\r",
                    "}else{\r",
                    "     fn() ;\r",
                    "}\r",
                    "\r",
                    "   function onMessageAns(action,opt,confirmBox){\r",
                    "\r",
                    "\r",
                    "            if(action == \"yes\"){\r",
                    "\r",
                    "                    fn() ;\r",
                    "            }else{\r",
                    "\r",
                    "                   // throw \"action canceled\";\r",
                    "            }\r",
                    "\r",
                    "\r",
                    "        }"
                ]
            },
            "designerId": "14175d06-efc4-44b3-9869-cbd4ce0a88c2"
        }
    ]
}